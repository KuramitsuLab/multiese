from re import X
import matplotlib.pyplot as plt
'''
グラフを[描画する|使う]
'''

import seaborn as sns
'''
[綺麗な|キレイな]グラフを[描画する|使う]
グラフを[綺麗|キレイ]にする
'''

sns.set(font='IPAexGothic')
'''
@test(sns=missing;_)
@alt(グラフの中|グラフ|グラフ[内|中|)
@alt(できる|可能な)
@alt(に設定する|[に|と]する|にセットする|に変更する|変える)
{グラフの中で|日本語[|フォント]を}[表示できる|使える]ようにする
グラフの中の[日本語フォント|日本語表示]を[有効にする|利用可能にする]
[グラフの中の|]フォントを[日本語表示|日本語]に設定する
[グラフの中の|]文字化けを防ぐ
'''

s = s2 = 'label'
plt.title(s)
'''
@test(plt=missing;_)
@alt(タイトル|題名|名前)
[グラフの中の|]タイトルをsに設定する
'''

n, n2 = 10, 6
plt.figure(figsize=(n, n2))
'''
@test(plt=missing;_)
@alt(サイズ|大きさ)
[描画する|表示する|出力する|]グラフのサイズを[横n縦n2|縦n2横n|n×n2]に設定する
'''

plt.xlabel(s)
'''
@test(plt=missing;_)
@alt(横軸|x軸|x座標)
@alt(軸ラベル|ラベル|ラベル|名[前|称]|軸名|説明)
@alt(付ける|つける|設定する)
[グラフの中の|]横軸の軸ラベルをsに設定する
[グラフの中の|]横軸にsという軸ラベルを付ける]
'''

plt.ylabel(s)
'''
@test(plt=missing;_)
@alt(縦軸|y軸|y座標)
[グラフの中の|]縦軸の軸ラベルをsに設定する
[グラフの中の|]縦軸にsという軸ラベルを付ける
'''

plt.grid(True)
'''
@test(plt=missing;_)
@alt(入れる|付ける|加える|描画する|表示する)
@alt(グリッド|[グリッド|目盛り|メモリ]線|格子|格子線)
{グラフに|[グリッド]を}入れる
'''

plt.legend()
'''
@test(plt=missing;_)
@alt(凡例|凡例|データラベル|補足)
{[グラフの中に|]|凡例を}入れる
'''

plt.legend([s, s2])
'''
@test(plt=missing;_)
{[グラフの中に]|凡例を|sとs2と}入れる
'''

x, x2 = 0.5, 0.5
plt.legend(loc=(x, x2))
'''
@test(plt=missing;_)
{[グラフの中に|]|凡例を|(x, x2)の[位置|場所]に}入れる
{グラフ中の(x, x2)の[位置|場所]に|凡例を|}入れる
'''

plt.legend(loc='best')
'''
@test(plt=missing;_)
{[最適な|ベストな|最も適切な|グラフに被らない][位置|場所]に|凡例を}入れる
'''

plt.legend(frameon=False)
'''
@test(plt=missing;_)
{[グラフの中に|]|枠なしの凡例を}入れる
'''

X = Y = [1, 2, 3]
plt.plot(X, Y)
'''
@test(plt=missing;X=Y=alist;_)
@alt(折れ線グラフ|線グラフ|グラフ|[ライン|線])
@alt(と指定して|[と|に]して|[と|に]設定して)
@alt(プロットする|描く|描画する)
@prefix(X;[リスト|配列|データ列|数列|イテラブル])
@prefix(Y;[リスト|配列|データ列|数列|イテラブル])
折れ線グラフをプロットする
XとYの折れ線グラフをプロットする
XとYを折れ線グラフ[で|に]プロットする
Xを縦軸、Yを横軸と指定して、折れ線グラフをプロットする
'''

plt.plot(range(len(X)), X)
'''
@test(plt=missing;X=Y=alist;_)
@alt(変化|変遷|移り変わり|推移)
Xの変化を折れ線グラフ[で|に]プロットする
Xを横軸と指定して、[折れ線グラフ|Xの変化]をプロットする
'''

df, col, col2 = {}, 'A', 'B'
plt.plot(df[col], df[col2])
'''
@test(plt=missing;_)
@prefix(df;データフレーム)
@prefix(colname;カラム)
dfのcolnameとcolname2を折れ線グラフで_プロットする
'''


plt.plot(X, Y, alpha=x)
'''
@test(plt=missing;X=Y=alist;_)
@alt(透明度|アルファ値)
透明度xの折れ線グラフをプロットする
'''

plt.plot(X, Y, label=s)
'''
{XとYの折れ線グラフを|sと軸ラベル付けして}プロットする
{XとYを|sと軸ラベル付けされた折れ線グラフで_}プロットする
'''

'''
plt.subplot(X, y, 2)
X行y列の2つ目のグラフ指定


# 描画

plt.scatter(X, Y)
XとYの散布図を[プロットする|描画する|描写する|表示する]
{Xを縦軸}、{Yを横軸}として、散布図をプロットする
XとYを散布図でプロットする



# カラーコードの#以降が無視されてしまう

plt.plot(X, Y, color='#0F0F0F')
XとYの折れ線グラフを@type('#0F0F0F', カラーコード)でプロットする
XとYを'#0F0F0F'色の折れ線グラフでプロットする

plt.plot(X, Y, color=c)
XとYの折れ線グラフを@type(c, RGB)でプロットする
XとYをc色の折れ線グラフでプロットする

plt.hist(X)
Xの[ヒストグラム|柱状図|柱状グラフ|度数分布図]をプロットする
Xをヒストグラムでプロットする
Xをヒストグラムにする
ヒストグラム[を用いて|で|として]Xをプロットする

plt.hist(X, bins=60)
Xのヒストグラムを{[ビン数|ビン|ビンの数|区間|区関数|区間の数]を60}としてプロットする
{ビン数を60}としてXのヒストグラムをプロットする
Xをビン数60のヒストグラムを用いてプロットする
Xをビン数60のヒストグラムにする

plt.hist(X, range = (20, 80))
Xのヒストグラムを20から80の[区間|間|範囲]でプロットする
20から80の区間でXのヒストグラムをプロットする
Xを20から80の区間の{ヒストグラムを用いて}プロットする
20から80の区間の{ヒストグラムを用いて}Xをプロットする
Xを20から80の区間のヒストグラムにする

plt.hist(df['age'])
@type(df, データフレーム)の@type('age', カラム)についてのヒストグラムをプロットする
@type(df)の@type('age')をヒストグラムでプロットする
@type(df)の@type('age')をヒストグラムにする
{ヒストグラムを用いて}@type(df)の@type('age')をプロットする

plt.boxplot(X)
Xについての[箱ひげ図|箱髭図|ボックスチャート]をプロットする
Xを箱ひげ図でプロットする
Xを箱ひげ図にする
{箱ひげ図を用いて}Xをプロットする

plt.boxplot([X, Y])
XとYについての箱ひげ図をプロットする
XとYを箱ひげ図にプロットする
XとYを箱ひげ図にする
{箱ひげ図を用いて}XとYをプロットする

plt.boxplot([X, Y, Z])
XとYとZについての箱ひげ図をプロットする
XとYとZを箱ひげ図にプロットする
XとYとZを箱ひげ図にする
{箱ひげ図を用いて}XとYとZをプロットする

plt.boxplot(df['age'])
@type(df)において、@type('age')の箱ひげ図をプロットする
@type(df)の@type('age')についての箱ひげ図をプロットする
@type(df)の@type('age')を箱ひげ図にプロットする
{箱ひげ図を用いて}@type(df)の@type('age')をプロットする

plt.boxplot([df['G1'], df['G2'], df['G3']])
@type(df)の@type('G1', カラム)と@type('G2', カラム)と@type('G3', カラム)についての箱ひげ図をプロットする
[同じグラフ内で|]@type(df)の@type('G1')と@type('G2')と@type('G3')を箱ひげ図でプロットする
@type(df)の@type('G1')と@type('G2')と@type('G3')の箱ひげ図を一枚のグラフでプロットする

sns.pairplot(df[['G1', 'G2', 'G3']])
@type(df)において、@type('G1')と@type('G2')と@type('G3')の関係性を[一気に|一度に]プロットする
@type(df)の@type('G1')と@type('G2')と@type('G3')について関係性を一気にプロットする

plt.bar(X, Y)
{横軸をX}としたYの[縦棒グラフ|縦向き棒グラフ|縦方向の棒グラフ|鉛直棒グラフ|垂直棒グラフ|棒グラフ]をプロットする
{横軸をX}として、Yの縦棒グラフをプロットする

plt.barh(X, Y)
{縦軸をX}としたYの[横棒グラフ|横向き棒グラフ|横方向の棒グラフ|水平棒グラフ|棒グラフ]をプロットする
{縦軸をX}として、Yの横棒グラフをプロットする

plt.bar(x, y, width = 0.5)
{グラフ幅を0.5}として、{横軸をx}としたyの[縦棒グラフ]をプロットする
{棒と棒の隙間を0.5}として、{横軸をx}としたyの[縦向きの|]棒グラフをプロットする

plt.bar(x, y, align='center')
棒グラフの位置を[真ん中として|中心に設定して]、{横軸をx}としたyの縦棒グラフをプロットする
棒グラフの位置を真ん中として、xとyの縦棒グラフをプロットする

plt.xticks(x, ['A', 'B', 'C'])
横軸のラベルをxから'A'、'B'、'C'[へ変更する|に変える]
棒グラフの軸ラベルをxから'A'、'B'、'C'へ変更する
棒グラフの[項目名|項目|それぞれのラベル]をxから'A'、'B'、'C'へ変更する

plt.barh(y, x, align = 'center')
{棒グラフの位置を真ん中}として、{縦軸をy}としたxの横棒グラフをプロットする
{軸をy}として、xの横棒グラフをプロットする
{棒の位置を中心}に設定して、横向きの棒グラフをプロットする

plt.yticks(y, ['A','B','C'])
縦軸のラベルをyから'A'、'B'、'C'へ変更する
棒グラフの項目名をyから'A'、'B'、'C'へ変更する

plt.pie(x)
xの円グラフをプロットする
xについて円グラフをプロットする
xを円グラフにする

plt.axis('equal')
円グラフを[真円|正円|完全な円|きれいな円|円|正確な円]にする


# 出力・保存

plt.savefig('foo.png')
[プロット|グラフ|図]を'foo.png'として[保存する|セーブする|出力する]
プロットを'foo.png'という名前で保存する
[作成した|作画した|作った|描画した|プロットした|]プロットを'foo.png'[という名前|]で保存する
作成したプロットを'foo.png'として保存する
作成したプロットを'foo.png'というファイル名で保存する
作成したプロットを'foo.png'というファイル名[をつけて|にして]保存する

plt.show()
プロットを[描画する|表示する|出力する]
'''
