プログラミングとは、コンピュータに意図した動作を行わせるために、まとまった処理手順を作成し、与えること
コーディングとは、プログラミング言語に従って、コンピュータが処理・解釈できるコード列を記述すること
仕様書とは、工業製品やソフトウェア、情報システム、サービスなどを開発する際に、備えるべき機能やその性能、特性、満たすべき要件などを図表や文章などで記述した文書
アルゴリズムとは、ある特定の問題を解く手順を、単純な計算や操作の組み合わせとして明確に定義したもの。
機械語とは、コンピュータのマイクロプロセッサ（CPU）が直接解釈・実行できる命令コードのこと
オペコードとは、マイクロプロセッサ（CPU/MPU）に与える機械語の命令の識別番号
オペランドとは、数式を構成する要素のうち、演算の対象となる値や変数、定数などのこと
演算子とは、数学やプログラミングなどで式を記述する際に用いられる、演算内容を表す記号などのこと
単項演算子とは、一つの項を用いて一つの結果を得る演算子
二項演算子とは、二つの項を用いて一つの結果を得る演算子
三項演算子とは、プログラミングの分野では条件式の真偽に応じて二つの値のいずれかを返す条件演算子のことを指すことが多い
算術演算子とは、四則演算（加減乗除）などの算術的な計算を行うもの
比較演算子とは二つの式や値の比較を行い、結果を真偽値で返すもの。一致・不一致や大小の比較などいくつかの種類がある。
論理演算子とは、論理演算を表す記号や符号などのこと。
XORとは、排他的論理和のこと
排他的論理和とは、二つの命題のいずれか一方のみが真のときに真となり、両方真や両方偽のときは偽となる論理演算
論理否定とは、与えられた命題が真のときに偽となり、偽のとき真となる論理演算
論理和とは、二つの命題のいずれか一方あるいは両方が真のときに真となり、いずれも偽のときに偽となる論理演算
論理積とは、二つの命題のいずれも真のときに真となり、それ以外のときは偽となる論理演算
[真理値|真偽値|ブール値]とは、ある命題が真（True）であるか、偽(False）であるかを示す値のこと。
ビット演算とは、整数を2進数のビット列とみなして、ビットの移動やビット単位の論理演算などを行うもの。
インクリメントとは、数値を増やす操作のこと
デクリメントとは、数値を減らす操作のこと
定数とは、ある特定の数値やデータに名前を与えたもの。変更はできない。
変数とは、データを一時的に記憶しておくための領域に固有の名前を付けたもの。
スコープとは、プログラム中で変数名を参照できる範囲のこと。
グローバル変数とは、プログラム中のどこのコードからでも参照できる変数のこと。バグの元と言われる。
ローカル変数とは、宣言された関数やメソッドなどの内部からしか参照できない変数のこと。
関数とは、数学の関数を模したサブルーチンで引数に対し処理し、結果を返すもの。
サブルーチンとは、特定の機能や処理をひとまとまりにした小プログラムで、他のプログラムから呼び出して実行できるもの
戻り値とは、関数やメソッドが処理を終えるときに、呼び出し元に対して渡すデータのこと。return文から返される。
返り値とは、関数やメソッドが処理を終えるときに、呼び出し元に対して渡すデータのこと。return文から返される。
ビルトイン関数とは、あらかじめ用意された関数のこと。
ユーザ定義関数とは、ユーザが定義した関数のこと。
標準ライブラリ関数とは、ビルトイン関数ではないが、標準的に提供されるユーザ定義関数のこと。

入出力とは、入力と出力のこと。I/Oとも。


浮動小数点数とは、コンピュータにおける数値の表現形式の一つで、小数点以下の値を含む数値の表現法として最も広く利用されている。
単精度浮動小数点数とは、32ビット長の浮動小数点数を格納できる数値のこと。floatとも。
倍精度浮動小数点数とは、64ビット長の浮動小数点数を格納できる数値のこと。doubleとも。
文字列とは、文字を並べたデータのこと。

データとは、何かを文字や符号、数値などのまとまりとして表現したもの。
データ構造とは、データの集まりをプログラムで扱いやすいようにまとめたもの。
タプルとは、順序付けられた複数の要素で構成されるデータ構造のこと。数学に由来。
配列とは、複数のデータを連続的に並べたデータ構造のこと。効率が良い。
多次元配列とは、配列の要素に配列が入った入れ子状の配列のこと。
二次元配列とは、
動的配列とは、配列の長さが固定的されておらず、実行時に要素を追加、削除できる配列のこと。
可変長配列とは、配列の長さが固定的されておらず、実行時に要素を追加、削除できる配列のこと。
添字とは、配列に格納された個々の要素の位置を示す値のこと。数列の添字に由来。インデックスとも。
インデックスとは、配列に格納された個々の要素の位置を示す値のこと。数列の添字に由来。
イテレータとは、配列のようなデータ構造の要素を順に走査していく繰り返し処理を簡潔に記述できるオブジェクトのこと。

連想配列とは、Pythonの辞書（マッピング）に相当するデータ構造のこと
リストとは、複数のデータを順序を付けて格納するデータ構造のこと

プレフィックスとは、文字列や番号の先頭に付加して特定の意味を付け加える要素のこと。接頭辞とも。
サフィックスとは、文字列や番号の先頭に付加して特定の意味を付け加える要素のこと。接尾辞とも。



基数とは、位取り記数法で数値を書き記す際に各桁の重み付けの基本となる数で、位が上がる毎に何倍になるかを表す。
リテラルとは、ソースコード上で、特定のデータ型の値を直に記載したもの
即値とは、ソースコード中に直に書き込まれたデータのこと
書式とは、文書や書類の定められた様式やテンプレート
フォーマットとは、形式、書式、様式、体裁、型、構成などの意味を持つ
テンプレートとは、鋳型、雛型、定型書式などの意味を持つ英単語。
インデントとは、字下げのこと。文の行頭に空白を挿入して読みやすくすること。Pythonのようにインデントによってプログラムの構造を記述する。
マジックナンバーとは、ソースコードに直書きされた数値。その意味や意図が記述した本人以外わからなくなる恐れあり。
NaNとは、数値として表せない数値。非数とも。


オブジェクトとは、互いに密接に関連するデータと手続き（処理手順）をひとまとまりにしたもののこと。
クラスとは、オブジェクト指向プログラミングにおけるオブジェクトの雛型のこと。
インスタンスとは、あらかじめ定義されたクラスなどをメインメモリ上に展開して処理・実行できる状態にした実体のこと。
フィールドとは、オブジェクトの持つ固有のデータのこと。メンバ変数やプロパティとも
メソッドとは、各オブジェクトに属する処理や操作のこと。
カプセル化とは、外部に対して必要な情報のみ提供し、外から直に参照や操作する必要のないプロパティやメソッドを秘匿すること。

ペイロードとは、送受信されるデータのパケットのうち、宛先などの制御情報を除いたデータ本体のこと
パディングとは、データの長さを一定にするため前後に挿入される余白や無意味なデータのこと。
ゼロパディングとは、数値を文字として表示する際に、固定帳の桁数に合わせて左右に「0」を追加すること。
固定長とは、データや要素、領域などの長さがあらかじめ決まって変化しないこと。対義語は「可変長」
可変長とは、データや要素、領域などの長さが実行時に変化させられること。
引数とは、関数やメソッドなどを呼び出すときに渡すデータのこと。
パラメータとは、ソフトウェアやシステムの挙動に影響を与える外部から与えられるデータのこと。
仮引数とは、関数やメソッドが呼び出し元から渡された値を受け取るために宣言された変数のこと。
実引数とは、関数やメソッドを呼び出す際に実際に引き渡される値や変数のこと。
可変長引数とは、あらかじめ数が固定されてなく、任意個の引数を受け取れること

ステップ数とは、コンピュータプログラムの規模を測る指標の一つ。実質処理を行っているソースコード行数のこと。
APIとは、あるサービスを外部のプログラムから呼び出して利用できる規約のこと。

デバッグとは、コンピュータプログラムに潜む欠陥を探し出して取り除くこと。
バグとは、はプログラムに含まれる誤りのこと。必ずある。
バグるとは、意図しない奇妙な挙動を示すこと。
コンパイルとは、ソースコードをコンピュータが実行可能な形式に変換すること。
コンパイラとは、ソースコードをコンピュータが実行可能な形式に変換するツールのこと。
スクリプト言語とは、コンパイルなしで実行できる軽量なプログラミング言語のこと。

プラットフォームとは、あるソフトウェアを動作させるのに必要な土台となる装置やソフトウェア、サービスのこと。
クロスプラットフォームとは、あるソフトウェアを複数の異なる仕様の機種やOSで同じように動作させられること。
VMとは、ソフトウェアで実現されたコンピュータやマイクロプロセッサの動作を模した仮想的なコンピュータのこと。
仮想マシンとは、ソフトウェアで実現されたコンピュータやマイクロプロセッサの動作を模した仮想的なコンピュータのこと。
インタプリタとは、ソースコードをコンピュータが解釈・実行できる形式に変換しながら実行するソフトウェアのこと。
動的とは、プログラムの実行中に状態や構成が決まること。対義語は「静的」
静的とは、プログラムの実行前に状態や構成が決まること。対義語は「動的」
オーバーヘッドとは、目的の処理を行うために発生する余分な処理やコストのこと。


動作環境とは、ソフトウェアが動作するハードウェアやOSの構成や設定、それら全体の組み合わせのこと
環境とは、ソフトウェアが動作するハードウェアやOSの構成や設定、それら全体の組み合わせのこと
ビルドとは、ソースコードなどを元に実行可能ファイルや配布パッケージを作成すること
デプロイとは、開発したソフトウェアを実際の運用環境に配置・展開して実用に提供すること


ポーティングとは、あるシステムで動作するよう開発されたソフトウェアを、異なる仕様や設計のシステムで動作するように作り変えること。
アルゴリズムとは、ある特定の問題を解く手順を、単純な計算や操作の組み合わせとして明確に定義したもの。

エラーとは、プログラムの実行を継続できない致命的な支障のこと。（頑張って取り除こう！）
ランタイムエラーとは、コンピュータプログラムの実行時に発生するエラーのこと。
コンパイルとは、プログラミング言語で書かれたコンピュータプログラム（ソースコード）を解析し、コンピュータが直接実行可能な形式のプログラム（オブジェクトコード）に変換すること。
ライブラリとは、ある機能を持ったプログラムを利用できるように部品化し、集めたプログラムのこと。


ファイルとは、ストレージなどにデータを記録する際の最小の記録単位となるデータのまとまり。
ファイル名とは、コンピュータのストレージ上に保存されたファイルの名前
拡張子とは、ファイル名のうち、「.」で区切られた右側の部分でファイルの種類を表す
ファイルシステムとは、ストレージの記録状態を管理・制御し、ファイル単位でデータ操作可能にするOSの機能のこと
ディレクトリとは、複数のファイルをまとめて分類できる名前の付いた保管場所のこと。フォルダとも。
フォルダとは、複数のファイルをまとめて分類できる名前の付いた保管場所のこと。ディレクトリとも。
カレントディレクトリとは、実行中のソフトウェアが現在ファイル操作をできるディレクトリのこと
パスとは、コンピュータシステム内で特定のリソースの位置を表す文字列のこと
ファイルパスとは、ストレージ内のファイルやディレクトリの位置を表す文字列のこと
相対パスとは、現在位置からの相対的な位置によってパスを記述する記法のこと。
絶対パスとは、階層構造のルートからの位置によってパスを記述する記法のこと。
ストレージとは、永続的にデータを保存できる記憶装置のこと。ハードディスクやSSD、USBメモリなど。
シェルとは、利用者からのコマンドを受け付けて結果を提示を行うOSの機能のこと
CLIとは、コマンドベースのユーザーインターフェースのこと
プロンプトとは、シェルにおいて入力を受け付けられる状態であることを示すメッセージのこと

マクロとは、ソースコード中に繰り返し登場する特定の記述を、別の短い記述に置き換える機能のこと
プリプロセッサとは、ある中心的な処理を行うプログラムに対して、その前処理を行うプログラムのこと。

文字コードとは、文字や記号を扱うために割り当てられた番号のこと。
Unicodeとは、世界中の様々な言語の文字を同時に使えるように規格化された文字コードのこと。ユニコードと読む。
ユニコードとは、世界中の様々な言語の文字を同時に使えるように規格化された文字コードのこと。
UTF-8とは、UnicodeをASCIIコードと互換のある形式で表現できる文字コードのこと。
互換のある形式とは、同時に扱っても不具合が生じない形式のこと
バイトとは、8ビットのことを表す情報量の単位のこと
バイト列とは、任意のビットパターンからなるバイト単位の長さを持つデータの集合。
エンディアンとは、多バイトデータを記録するときの順序のこと。ビックエンディアンとリトルエンディアンがある。
ビッグエンディアンとは、多バイトデータを最上位から下位への順序で扱う方式。
リトルエンディアンとは、多バイトデータを最下位から上位への順序で扱う方式。

スラッシュとは、右上から左下への斜め線「/」文字のこと。
バックスラッシュとは、左上から右下への斜め線「\」のこと。スラッシュの逆向き。円マークが代わりに使われることもある。
全角文字とは、等幅フォントで幅と高さが等しい文字のこと。要するに、漢字やひらがなのこと。
半角文字とは、全角文字の半分の幅に表示される文字のことで、英数字などのASCII文字のこと。
ASCII文字とは、ASCII(American Standard Code for Information Interchange)規格の文字。アスキーと読む。
制御文字とは、通信制御などの制御に用いるように割り当てられた文字コード。タブや改行が該当する。
エスケープ文字とは、制御文字など印字しにくい文字コードを数値などで表記する記法のこと。
エスケープシーケンスとは、制御文字など印字しにくい文字コードを数値などで表記する記法のこと。
EOFとは、ファイルの終端のこと。