import matplotlib
import matplotlib.pyplot as plt
import seaborn as sns

# ヒストグラム

データ列 = [1,2,2]
x = 0.5

plt.hist(データ列)
'''
@alt(ヒストグラム|度数分布[図|[柱状図|柱状グラフ])

ヒストグラムを描画する
'''

__X__ = データ列

plt.hist(__X__)
'''
@X(aList;aArray;df[column];ds)
@Y(aList;aArray;[dfの|]column;ds)

__Y__のヒストグラムを描画する
{__Y__を|ヒストグラムで_}可視化する
__Y__をヒストグラムにする
'''

plt.hist(データ列, alpha=0.5)
'''
ヒストグラムを半透明[に|化]する
ヒストグラムを描画して、半透明[に|化]にする
'''

plt.hist(データ列, alpha=x)
'''
{ヒストグラムの透明度を|[xに|]}設定する
ヒストグラムを描画して、{透明度を|[xに|]}設定する
'''


plt.hist(データ列, bins=n)
'''
@alt(ビン数=[ビン|階級|分割][数|の数|])

ヒストグラムのビン数を設定する
{ビン数を[nに|]設定して|ヒストグラムを}描画する
ビン数nのヒストグラムを描画する
ヒストグラムを描画して、{ビン数を|nに}設定する
'''

aList=[0, 1, 2]

plt.hist(データ列, bins=aList)
'''
{ヒストグラムの[分割|ビン]を|aListで_}設定する
'''

start=0
end=100

plt.hist(データ列, range=(start, end))
'''
@alt(範囲|区間)

ヒストグラムの最大[|値]・最小[値|]を設定する
ヒストグラムの範囲を設定する
ヒストグラムの{最大[|値]をend|最小[|値]をstart}にする
{ヒストグラムを|startからend[まで|]の範囲で}描画する
startからend[まで|の範囲を]ヒストグラムにする
'''

plt.hist(データ列, density=True)
'''
@alt(確率密度関数|相対度数)
確率密度関数を描画する
確率密度関数を描画する
{データ列を|確率密度関数[として|に]}描画する
ヒストグラムを描画し、合計を1にする
'''

plt.hist(データ列, cumulative = True)
'''
累積ヒストグラムを描画する
{データ列を|累積ヒストグラム[として|に]}描画する
'''

plt.hist(データ列, cumulative = True, density=True)
'''
累積分布関数を描画する
{データ列を|累積分布関数[として|に]}描画する
'''

plt.hist(データ列, log=True)
'''
対数ヒストグラムを描画する
{データ列を|対数ヒストグラム[として|で]}描画する
ヒストグラムを描画して、対数軸を使う
'''

plt.xscale("log")
'''
横軸のスケールを対数に設定する
'''

plt.yscale("log")
'''
縦軸のスケールを対数に設定する
'''

np.logspace(min, max, num=n)
'''
データ区間（階級）を対数で得る
'''


データ列2 = データ列

plt.hist([データ列, データ列2], color=['b', 'r'])
'''
２つのデータ列を並べてヒストグラムにする
{ヒストグラムを|[２つ|横に]並べて}描画する
'''

plt.hist(データ列, histtype='step', edgecolor="black")
'''
ヒストグラムのスタイルを変更する
外枠だけのヒストグラムを描画する
ヒストグラムを描画して、塗り潰さない
'''

plt.hist(データ列, histtype='stepfilled', edgecolor="black")
'''
外枠だけのヒストグラムを描画する
ヒストグラムの外枠を描画して、塗り潰す
'''

plt.hist(データ列, edgecolor=rgb)
'''
ヒストグラムの枠線の色をrgbに設定する
'''

n = 1

plt.hist(データ列, linewidth=n)
'''
ヒストグラムの線の太さを[nに|]設定する
'''


# 箱ヒゲ図

plt.boxplot(データ列)
'''
@alt(箱ひげ図|箱[髭|ヒゲ]図|ボックスチャート)

データ列を箱ひげ図で描画する
データ列を箱ひげ図にする
{箱ひげ図で_|データ列を}可視化する
'''

plt.boxplot([データ列, データ列2])
'''
２つのデータ列を並べて箱ひげ図にする
{箱ひげ図を|[２つ|横に]並べて}描画する
箱ひげ図を[２つ|横に]並べる
'''

column='A'
column2='B'
column3='C'

plt.boxplot([df[column], df[column2]])
'''
２つの[カラム|列]を並べて箱ひげ図にする
'''

# 棒グラフ

ラベル列=['A', 'B', 'C']
データ列=[10,8,6]
ラベル名リスト=['A', 'B', 'C']
rgb='#00ff00'


plt.bar(ラベル列, データ列)
'''
@alt(縦棒グラフ|縦[向き|方向の]棒グラフ|[鉛直|垂直][な|]棒グラフ])

棒グラフを描画する
データ列とラベルを指定して、棒グラフを描画する
縦棒グラフを描画する
データ列とラベルを指定して、縦棒グラフを描画する
'''

plt.barh(ラベル列, データ列)
'''
@alt(横棒グラフ|横[向き|方向の]棒グラフ|[水平|平行][な|]棒グラフ])

横棒グラフを描画する
データ列とラベル列を指定して、横棒グラフを描画する
'''

plt.bar(ラベル列, データ列, color=rgb)
'''
{棒グラフの色を|[rgbに|]}設定する
'''

plt.barh(ラベル列, データ列, color=rgb)
'''
{横棒グラフの色を|[rgbに|]}設定する
'''

plt.bar(ラベル列, データ列, tick_label=ラベル名リスト)
'''
{棒グラフに|[文字列の|]ラベル名}を加える
'''

plt.barh(ラベル列, データ列, tick_label=ラベル名リスト)
'''
{横棒グラフに|[文字列の|]ラベル名}を加える
'''

plt.bar(ラベル列, データ列, bottom=データ列2, color="red")
'''
[棒グラフ|縦棒グラフ]を積み上げにする
[データ列とラベル列を指定して、|]積み上げ棒グラフを描画する
'''

plt.barh(ラベル列, データ列, bottom=データ列2, color="red")
'''
横棒グラフを積み上げにする
[データ列とラベル列を指定して、|]積み上げ横棒グラフを描画する
'''

plt.bar(ラベル列, データ列, width = x)
'''
棒グラフを描画して、{[グラフ|棒の|]幅を|xに}設定する
{棒グラフの幅を|[xに|]}設定する
{棒グラフの[|横]幅の比率を|[xに|]}変更する
'''

plt.barh(ラベル列, データ列, width = x)
'''
横棒グラフを描画して、{[グラフ|棒の|]幅を|xに}設定する
{横棒グラフの幅を|[xに|]}設定する
{横棒グラフの幅の比率を|[xに|]}変更する
'''

plt.bar(ラベル列, データ列, align='center')
'''
棒グラフを描画して、中央寄せする
'''

plt.barh(ラベル列, データ列, align='center')
'''
横棒グラフを描画して、中央寄せする
'''



sns.pairplot(df[[column, column2, column3]])
'''
複数[カラム|列]の[散布図|ヒストグラム|関係性]を[一度に|まとめて]描画する
'''


'''
plt.subplot(X, y, 2)
X行y列の2つ目のグラフ指定


# 描画

plt.boxplot([df['G1'], df['G2'], df['G3']])
@type(df)の@type('G1', カラム)と@type('G2', カラム)と@type('G3', カラム)についての箱ひげ図を描画する
[同じグラフ内で|]@type(df)の@type('G1')と@type('G2')と@type('G3')を箱ひげ図で描画する
@type(df)の@type('G1')と@type('G2')と@type('G3')の箱ひげ図を一枚のグラフで描画する


plt.barh(X, Y)
{縦軸をX}としたYの[横棒グラフ|横向き棒グラフ|横方向の棒グラフ|水平棒グラフ|棒グラフ]を描画する
{縦軸をX}として、Yの横棒グラフを描画する



plt.xticks(x, ['A', 'B', 'C'])
横軸のラベルをxから'A'、'B'、'C'[へ変更する|に変える]
棒グラフの軸ラベルをxから'A'、'B'、'C'へ変更する
棒グラフの[項目名|項目|それぞれのラベル]をxから'A'、'B'、'C'へ変更する

plt.barh(y, x, align = 'center')
{棒グラフの位置を真ん中}として、{縦軸をy}としたxの横棒グラフを描画する
{軸をy}として、xの横棒グラフを描画する
{棒の位置を中心}に設定して、横向きの棒グラフを描画する

plt.yticks(y, ['A','B','C'])
縦軸のラベルをyから'A'、'B'、'C'へ変更する
棒グラフの項目名をyから'A'、'B'、'C'へ変更する

plt.pie(x)
xの円グラフを描画する
xについて円グラフを描画する
xを円グラフにする

plt.axis('equal')
円グラフを[真円|正円|完全な円|きれいな円|円|正確な円]にする


# 出力・保存

plt.savefig('foo.png')
[プロット|グラフ|図]を'foo.png'として[保存する|セーブする|出力する]
プロットを'foo.png'という名前で保存する
[作成した|作画した|作った|描画した|プロットした|]プロットを'foo.png'[という名前|]で保存する
作成したプロットを'foo.png'として保存する
作成したプロットを'foo.png'というファイル名で保存する
作成したプロットを'foo.png'というファイル名[をつけて|にして]保存する

plt.show()
プロットを[描画する|表示する|出力する]
'''
