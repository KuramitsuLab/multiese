# 設定
import operator
from tkinter import b
element = 10
a, b, c = 1, 2, 3
n = 2
start = 1
step = 10
iterable = [0, 1, 2, 4]
iterable2 = [7, 8, 9]
selectors = [1, 0, 1, 0]
def predicate(a): return a > 0

##


x = x2
'''
@test(_;x)
x2をxとする
x2をxに代入する
x2をxに設定する
xはx2である
'''

x, x2 = x2, x
'''
@test(_;x)
@alt(スワップする|入れ替える)
xとx2[の値|]をスワップする
'''

x = x2 = n
'''
@test(_;x)
xとx2の両方ともnとする
xとx2の両方にnを代入する
xとx2の両方をnに設定する
'''

x, x2 = n, n2
'''
@test(_;x)
xとx2をそれぞれnとn2とする
それぞれnとn2をxとx2に代入する
xとx2をそれぞれnとn2に設定する
'''

x, x2, x3 = n, n2, n3
'''
@test(_;x)
x, x2, x3をそれぞれn, n2, n3とする
x, x2, x3にそれぞれn, n2, n3を代入する
x, x2, x3をそれぞれn, n2, n3に設定する
'''

# 組み込み関数（計算）

abs(x)
'''
xの絶対値
'''

bool(x)
'''
@alt(論理値|ブール値)
xを論理値に変換する
xが真かどうか
'''

complex(x, x2)
'''
x, x2の複素数[|を求める]
'''

divmod(x, x2)
'''
xとx2の商と余りをペアで得る
'''

float(x)
'''
xを浮動小数点数に変換する
'''

int(x)
'''
xを整数に変換する
'''

# 組み込み関数（文字列）

ascii(x)
'''
xを印字できる文字列にする
xの印字可能な文字列
'''

abs(x)
'''
@alt(計算する|求める)
xの絶対値[|を計算する]
'''

complex(x)
'''
xの複素数[|を計算する]
'''

complex(x, x2)
'''
xとx2から[成る|なる]複素数[|を計算する]
xを実部、x2を虚部とした複素数[|を計算する]
'''

divmod(x, x2)
'''
商と余りを同時に計算する
'''

hash(x)
'''
xのハッシュ値[|を計算する]
'''

pow(x, x2)
'''
xのx2乗[|を計算する]
'''

pow(x, x2, x3)
'''
xのx2乗のx3剰余[|を計算する]
xのx2乗してx3による余り[|を計算する]
'''

round(x)
'''
xの小数点[以下]を[丸める|四捨五入する]
'''

round(x, 1)
'''
xを[の|を]小数点[以下]第一位で[丸める|四捨五入する]
'''

round(x, n)
'''
x[の|を]小数点[以下]第n位で[丸める|四捨五入する]
'''

round(x, -1)
'''
x[の|を]十の位で[丸める|四捨五入する]
'''

round(x, -2)
'''
x[の|を]百の位で[丸める|四捨五入する]
'''

round(x, -3)
'''
x[の|を]千の位で[丸める|四捨五入する]
'''

max(x, x2, x3)
'''
@alt(最大値|[最も大きい値|最大の値|一番小さい値])
x、x2、x3の[|中で|うち]最大値[|を求める]
'''

min(x, x2, x3)
'''
@alt(最小値|[最も小さい値|最小の値|一番小さい値])
x、x2、x3の[|中で|うち]最小値[|を求める]
'''

float(x)
'''
xを[浮動小数点数型|浮動小数点数|実数]に変換する
'''

int(x)
'''
xを[整数型|整数]に変換する
'''

str(x)
'''
xを[文字列型|文字列]に変換する
'''

# 論理演算

n and n2
'''
nかつn2
'''

n or n2
'''
nまたはn2
'''

not n
'''
nではない
'''

True
'''
真
'''

False
'''
偽
'''

None
'''
未定値
'''
