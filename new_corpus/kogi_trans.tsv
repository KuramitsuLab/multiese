trans: [表データ|データフレーム]を[使う|用いる|使用する]	from torch import align_tensors	trans: データフレームを使う	_;type(pd)	<class 'module'>
trans: [表データ|データフレーム]をインポートする	from torch import align_tensors	trans: 表データをインポートする	_;type(pd)	<class 'module'>
trans: Pandasのバージョンを[表示する|出力する|プリントする]	print(pd.__version__)	trans: Pandasのバージョンを表示する	_	[31mname '_' is not defined[0m
trans: Pandasのバージョンを[見る|確認する|参照する|調べる]	print(pd.__version__)	trans: Pandasのバージョンを見る	_	[31mname '_' is not defined[0m
trans: [データフレームを表示するとき[、|]][[表示可能な|[表示できる|表示する|表示される]]|][最大|]列数を[変更する|増やす|減らす]	pd.set_option('display.max_columns', n)	trans: データフレームを表示するとき、表示可能な列数を変更する	pd=missing;_	.set_option('display.max_columns', 1)
trans: [データフレームを表示するとき[、|]][[表示可能な|[表示できる|表示する|表示される]]|]列数の最大値を[|]n[に設定する|に[変更する|増やす|減らす]|に[セット|指定]する|にする]	pd.set_option('display.max_columns', n)	trans: データフレームを表示するとき表示可能な列数の最大値をnにセットする	pd=missing;_	.set_option('display.max_columns', 1)
trans: [データフレームを表示するとき[、|]]{[|]n列まで|データフレームを}[表示可能な|[表示できる|表示する|表示される]]ようにする	pd.set_option('display.max_columns', n)	trans: データフレームを表示するとき、データフレームをn列まで表示可能なようにする	pd=missing;_	.set_option('display.max_columns', 1)
trans: [データフレームを表示するとき[、|]|][[表示可能な|[表示できる|表示する|表示される]]|][最大|]行数を[変更する|増やす|減らす]	pd.set_option('display.max_rows', n)	trans: データフレームを表示するとき、表示可能な最大行数を増やす	pd=missing;_	.set_option('display.max_rows', 1)
trans: [データフレームを表示するとき[、|]|][[表示可能な|[表示できる|表示する|表示される]]|][最大|]行数を[|]n[に設定する|に[変更する|増やす|減らす]|に[セット|指定]する|にする]	pd.set_option('display.max_rows', n)	trans: データフレームを表示するとき、表示可能な最大行数をnに設定する	pd=missing;_	.set_option('display.max_rows', 1)
trans: [データフレームを表示するとき[、|]|]{[|]n行まで|データフレームを}表示できるようにする	pd.set_option('display.max_rows', n)	trans: データフレームを表示するとき、n行までデータフレームを表示できるようにする	pd=missing;_	.set_option('display.max_rows', 1)
trans: [データフレームを表示するとき[、|]|]小数点以下の表示精度を設定する	pd.set_option('precision', n)	trans: データフレームを表示するとき、小数点以下の表示精度を設定する	pd=missing;_	.set_option('precision', 1)
trans: [データフレームを表示するとき[、|]|]小数点以下[の表示精度|]を[|]n桁[に設定する|に[変更する|増やす|減らす]|に[セット|指定]する|にする]	pd.set_option('precision', n)	trans: データフレームを表示するとき、小数点以下の表示精度をn桁に設定する	pd=missing;_	.set_option('precision', 1)
trans: [データフレームを表示するとき[、|]|]小数点以下[|]n桁まで[表示可能な|[表示できる|表示する|表示される]]ようにする	pd.set_option('precision', n)	trans: データフレームを表示するとき、小数点以下n桁まで表示可能なようにする	pd=missing;_	.set_option('precision', 1)
trans: [データフレームを表示するとき[、|]|]折り返しをしない[|ようにする]	pd.set_option('expand_frame_repr', False)	trans: 折り返しをしない	pd=missing;_	.set_option('expand_frame_repr', False)
trans: [データフレームを表示するとき[、|]|]折り返しを[オフ|無効][に設定する|に[変更する|増やす|減らす]|に[セット|指定]する|にする]	pd.set_option('expand_frame_repr', False)	trans: データフレームを表示するとき、折り返しをオフにする	pd=missing;_	.set_option('expand_frame_repr', False)
trans: [データフレームを表示するとき[、|]|][カラム|列]の最大幅を[|]n[に設定する|に[変更する|増やす|減らす]|に[セット|指定]する|にする]	pd.set_option('max_colwidth', n)	trans: データフレームを表示するとき、カラムの最大幅をnに変更する	pd=missing;_	.set_option('max_colwidth', 1)
trans: [データフレームを表示するとき[、|]|]ヘッダー行を右寄せ[に設定する|に[変更する|増やす|減らす]|に[セット|指定]する|にする]	pd.set_option('colheader_justify', 'right')	trans: データフレームを表示するとき、ヘッダー行を右寄せに設定する	pd=missing;_	.set_option('colheader_justify', 'right')
trans: [データフレームを表示するとき[、|]|]ヘッダー行を左寄せ[に設定する|に[変更する|増やす|減らす]|に[セット|指定]する|にする]	pd.set_option('colheader_justify', 'left')	trans: ヘッダー行を左寄せに設定する	pd=missing;_	.set_option('colheader_justify', 'left')
trans: [|Pandas[で|として|を[用いて|使って]]]{[エクセル|エクセル[ファイル|データ]]から|データフレームを}[読み込む|読む]	pd.read_excel(excelfile)	trans: エクセルからデータフレームを読み込む	pd=missing;excelfile='file.xlsx';_	.read_excel('file.xlsx',)
trans: [|Pandas[で|として|を[用いて|使って]]]{[[エクセル|エクセル[ファイル|データ]]ファイル|]excelfileを|[データフレームとして|]}[読み込む|読む]	pd.read_excel(excelfile)	trans: データフレームとしてエクセルファイルexcelfileを読み込む	pd=missing;excelfile='file.xlsx';_	.read_excel('file.xlsx',)
trans: [|Pandas[で|として|を[用いて|使って]]]{[[エクセル|エクセル[ファイル|データ]]ファイル|]excelfileから[エクセル|エクセル[ファイル|データ]]を[読み込む|読む]	pd.read_excel(excelfile)	trans: {エクセルファイルexcelfileからエクセルを読み込む	pd=missing;excelfile='file.xlsx';_	.read_excel('file.xlsx',)
trans: [|Pandas[で|として|を[用いて|使って]]]{[[エクセル|エクセル[ファイル|データ]]ファイル|]excelfileから|[|]n番目のシートを}[データフレームとして|][読み込む|読む]	pd.read_excel(excelfile, sheet_name=n)	trans: n番目のシートをエクセルファイルexcelfileからデータフレームとして読み込む	pd=missing;excelfile='file.xlsx';_	.read_excel('file.xlsx', {'sheet_name': 1})
trans: [|Pandas[で|として|を[用いて|使って]]]{[[エクセル|エクセル[ファイル|データ]]ファイル|]excelfileから|[|]nという[名前の|]シートを}[データフレームとして|][読み込む|読む]	pd.read_excel(excelfile, sheet_name=n)	trans: nという名前のシートをexcelfileからデータフレームとして読み込む	pd=missing;excelfile='file.xlsx';_	.read_excel('file.xlsx', {'sheet_name': 1})
trans: [|Pandas[で|として|を[用いて|使って]]]{[[エクセル|エクセル[ファイル|データ]]ファイル|]excelfileの|[|]n番目のシートを}[データフレームとして|][読み込む|読む]	pd.read_excel(excelfile, sheet_name=n)	trans: エクセルファイルexcelfileのn番目のシートをデータフレームとして読み込む	pd=missing;excelfile='file.xlsx';_	.read_excel('file.xlsx', {'sheet_name': 1})
trans: [|Pandas[で|として|を[用いて|使って]]]{[[エクセル|エクセル[ファイル|データ]]ファイル|]excelfileから|複数のシートを}[読み込む|読む]	pd.read_excel(excelfile, sheet_name=[n, n2])	trans: エクセルファイルexcelfileから複数のシートを読み込む	pd=missing;excelfile='file.xlsx';_	.read_excel('file.xlsx', {'sheet_name': [1, 3]})
trans: [|Pandas[で|として|を[用いて|使って]]]{[[エクセル|エクセル[ファイル|データ]]ファイル|]excelfileから|[|]nと[|]n2のシートを}[読み込む|読む]	pd.read_excel(excelfile, sheet_name=[n, n2])	trans: エクセルファイルexcelfileからnとn2のシートを読み込む	pd=missing;excelfile='file.xlsx';_	.read_excel('file.xlsx', {'sheet_name': [1, 3]})
trans: [|Pandas[で|として|を[用いて|使って]]]{[[エクセル|エクセル[ファイル|データ]]ファイル|]excelfileから|[全ての|すべての|全]シートを}[読み込む|読む]	pd.read_excel(excelfile, sheet_name=None)	trans: エクセルファイルexcelfileから全てのシートを読み込む	pd=missing;excelfile='file.xlsx';_	.read_excel('file.xlsx', {'sheet_name': None})
trans: [|Pandas[で|として|を[用いて|使って]]]{[CSVファイル|CSV|カンマ区切りのファイル]から|データフレームを}[読み込む|読む]	pd.read_csv(csvfile, sep=',')	trans: CSVファイルからデータフレームを読む	pd=missing;csvfile='file.csv';_	.read_csv('file.csv', {'sep': ','})
trans: [|Pandas[で|として|を[用いて|使って]]]{[[CSVファイル|CSV|カンマ区切りのファイル]|]csvfileから|データフレームを}[読み込む|読む]	pd.read_csv(csvfile, sep=',')	trans: データフレームをCSVファイルcsvfileから読み込む	pd=missing;csvfile='file.csv';_	.read_csv('file.csv', {'sep': ','})
trans: [|Pandas[で|として|を[用いて|使って]]]{[[CSVファイル|CSV|カンマ区切りのファイル]|]csvfileを|[|データフレームとして]}[読み込む|読む]	pd.read_csv(csvfile, sep=',')	trans: CSVファイルcsvfileを読み込む	pd=missing;csvfile='file.csv';_	.read_csv('file.csv', {'sep': ','})
trans: [|Pandas[で|として|を[用いて|使って]]]{[TSVファイル|TSV|タブ区切りのファイル]から|データフレームを}[読み込む|読む]	pd.read_csv(tsvfile, sep='\t')	trans: PandasでTSVファイルからデータフレームを読み込む	pd=missing;tsvfile='file.tsv';_	.read_csv('file.tsv', {'sep': '\t'})
trans: [|Pandas[で|として|を[用いて|使って]]]{[[TSVファイル|TSV|タブ区切りのファイル]|]tsvfileから|データフレームを}[読み込む|読む]	pd.read_csv(tsvfile, sep='\t')	trans: データフレームをtsvfileから読み込む	pd=missing;tsvfile='file.tsv';_	.read_csv('file.tsv', {'sep': '\t'})
trans: [|Pandas[で|として|を[用いて|使って]]]{[[TSVファイル|TSV|タブ区切りのファイル]|]tsvfileを|[|データフレームとして]}[読み込む|読む]	pd.read_csv(tsvfile, sep='\t')	trans: TSVファイルtsvfileを読み込む	pd=missing;tsvfile='file.tsv';_	.read_csv('file.tsv', {'sep': '\t'})
trans: オプションで[、|][[読み込む|読む]|[エクセル|エクセル[ファイル|データ]]の|]シート[の名前|名]を[リスト|]alist[に設定する|に[変更する|増やす|減らす]|に[セット|指定]する|にする]	sheet_name = alist	trans: オプションで、読み込むシートの名前をリストalistに設定する	_;sheet_name	[1, 2, 3]
trans: オプションで[、|][先頭[の|]|最初の][カラム|列]を[インデックス|行][に設定する|に[変更する|増やす|減らす]|に[セット|指定]する|にする]	index_col = 0	trans: オプションで、先頭のカラムをインデックスに設定する	_;index_col	0
trans: オプションで[、|][|]n番目の[カラム|列]を[インデックス|行][に設定する|に[変更する|増やす|減らす]|に[セット|指定]する|にする]	index_col = n	trans: オプションで、n番目のカラムをインデックスに設定する	_;index_col	1
trans: オプションで[、|][インデックス|行]を[自動的な|]連番[に設定する|に[変更する|増やす|減らす]|に[セット|指定]する|にする]	index_col = None	trans: オプションで、インデックスを自動的な連番に変更する	_;index_col	None
trans: オプションで[、|]どの[カラム|列]も[インデックス|行]に[設定|]しない	index_col = None	trans: オプションで、どのカラムもインデックスに設定しない	_;index_col	None
trans: オプションで[、|][先頭の|最初の]行を[ヘッダ|カラムの名前][に設定する|に[変更する|増やす|減らす]|に[セット|指定]する|にする]	header = 0	trans: オプションで、先頭の行をヘッダに設定する	_;header	0
trans: オプションで[、|][ヘッダ|カラムの名前]を[自動的な|]連番[に設定する|に[変更する|増やす|減らす]|に[セット|指定]する|にする]	header = None	trans: オプションで、ヘッダを自動的な連番に設定する	_;header	None
trans: オプションで[、|]どの行も[ヘッダ|カラムの名前]に[|設定]しない	header = None	trans: オプションで、どの行もヘッダにしない	_;header	None
trans: オプションで[、|][ヘッダ|カラムの名前]を[リスト|]alist[に設定する|に[変更する|増やす|減らす]|に[セット|指定]する|にする]	header = alist	trans: オプションで、ヘッダをリストalistにセットする	_;header	[1, 2, 3]
trans: オプションで[、|][リスト|]alistを[カラム|列][の名前|名][に設定する|に[変更する|増やす|減らす]|に[セット|指定]する|にする]	names = alist	trans: オプションで、リストalistをカラムの名前に設定する	_;names	[1, 2, 3]
trans: オプションで[、|][読み込む|読む]行番号を[リスト|]alistで指定する	usecols = alist	trans: オプションで、読み込む行番号をリストalistで指定する	_;usecols	[1, 2, 3]
trans: オプションで[、|][読み込まない|スキップする|無視する]列番号を[リスト|]alistで指定する	skiprows = alist	trans: オプションで読み込まない列番号をリストalistで指定する	_;skiprows	[1, 2, 3]
trans: オプションで[、|][読み込まない|スキップする|無視する]フッタを[|]n[に設定する|に[変更する|増やす|減らす]|に[セット|指定]する|にする]	skipfooter = n	trans: オプションで、読み込まないフッタをnに設定する	_;skipfooter	1
trans: [|Pandas[で|として|を[用いて|使って]]]{[[CSVファイル|CSV|カンマ区切りのファイル]|]csvfileを|[ヘッダ|カラムの名前][を指定せず|なしで]}[読み込む|読む]	pd.read_csv(csvfile, header=None)	trans: CSVファイルcsvfileをヘッダを指定せず読み込む	pd=missing;csvfile='file.csv';_	.read_csv('file.csv', {'header': None})
trans: [|Pandas[で|として|を[用いて|使って]]]{[CSVファイル|CSV|カンマ区切りのファイル][|]filepathを|[|]n番目の[カラム|列]を[インデックス|行][と|に]して}[読み込む|読む]	pd.read_csv(csvfile, index_col=n)	trans: CSVファイルfilepathをn番目のカラムをインデックスとして読み込む	pd=missing;csvfile='file.csv';_	.read_csv('file.csv', {'index_col': 1})
trans: [|Pandas[で|として|を[用いて|使って]]]文字列[|]filepathから{[CSVファイル|CSV|カンマ区切りのファイル]を|[|]n番目の[カラム|列]を[インデックス|行][と|に]して}[読み込む|読む]	pd.read_csv(csvfile, index_col=n)	trans: 文字列filepathからn番目のカラムを行としてCSVファイルを読み込む	pd=missing;csvfile='file.csv';_	.read_csv('file.csv', {'index_col': 1})
trans: [|Pandas[で|として|を[用いて|使って]]]{[[CSVファイル|CSV|カンマ区切りのファイル]|]csvfileを|[SJISで|文字化けしないように]}[読み込む|読む]	pd.read_csv(csvfile, encoding='shift_jis')	trans: カンマ区切りのファイルcsvfileをSJISで読み込む	pd=missing;csvfile='file.csv';_	.read_csv('file.csv', {'encoding': 'shift_jis'})
trans: [|Pandas[で|として|を[用いて|使って]]][[CSVファイル|CSV|カンマ区切りのファイル]|]csvfileから{[CSVファイル|CSV|カンマ区切りのファイル]を|[SJISで|文字化けしないように]}[読み込む|読む]	pd.read_csv(csvfile, encoding='shift_jis')	trans: PandasでCSVファイルcsvfileからCSVファイルをSJISで読み込む	pd=missing;csvfile='file.csv';_	.read_csv('file.csv', {'encoding': 'shift_jis'})
trans: [|Pandas[で|として|を[用いて|使って]]]{[TSVファイル|TSV|タブ区切りのファイル]から|データフレームを}[読み込む|読む]	pd.read_csv(tsvfile, sep='\t', encoding='utf-8')	trans: タブ区切りのファイルからデータフレームを読み込む	pd=missing;tsvfile='file.tsv';_	.read_csv('file.tsv', {'sep': '\t', 'encoding': 'utf-8'})
trans: [|Pandas[で|として|を[用いて|使って]]]{[[TSVファイル|TSV|タブ区切りのファイル]|]tsvfileから|データフレームを}[読み込む|読む]	pd.read_csv(tsvfile, sep='\t', encoding='utf-8')	trans: TSVファイルtsvfileからデータフレームを読み込む	pd=missing;tsvfile='file.tsv';_	.read_csv('file.tsv', {'sep': '\t', 'encoding': 'utf-8'})
trans: [|Pandas[で|として|を[用いて|使って]]]{[[TSVファイル|TSV|タブ区切りのファイル]|]tsvfileを|[|データフレームとして]}[読み込む|読む]	pd.read_csv(tsvfile, sep='\t', encoding='utf-8')	trans: TSVファイルtsvfileを読み込む	pd=missing;tsvfile='file.tsv';_	.read_csv('file.tsv', {'sep': '\t', 'encoding': 'utf-8'})
trans: [|Pandas[で|として|を[用いて|使って]]]{[TSVファイル|TSV|タブ区切りのファイル]から|データフレームを}[読み込む|読む]	pd.read_csv(tsvfile, sep='\t', encoding='shift_jis')	trans: TSVファイルからデータフレームを読み込む	pd=missing;tsvfile='file.tsv';_	.read_csv('file.tsv', {'sep': '\t', 'encoding': 'shift_jis'})
trans: [|Pandas[で|として|を[用いて|使って]]]{[[TSVファイル|TSV|タブ区切りのファイル]|]tsvfileから|データフレームを}[読み込む|読む]	pd.read_csv(tsvfile, sep='\t', encoding='shift_jis')	trans: TSVファイルtsvfileからデータフレームを読み込む	pd=missing;tsvfile='file.tsv';_	.read_csv('file.tsv', {'sep': '\t', 'encoding': 'shift_jis'})
trans: [|Pandas[で|として|を[用いて|使って]]]{[[TSVファイル|TSV|タブ区切りのファイル]|]tsvfileを|[|データフレームとして]}[読み込む|読む]	pd.read_csv(tsvfile, sep='\t', encoding='shift_jis')	trans: TSVファイルtsvfileを読み込む	pd=missing;tsvfile='file.tsv';_	.read_csv('file.tsv', {'sep': '\t', 'encoding': 'shift_jis'})
trans: [アヤメ|アイリス]のデータセットを[データフレームとして|]ロードする	sns.load_dataset('iris')	trans: アヤメのデータセットをデータフレームとしてロードする	sns=missing;_	.load_dataset('iris',)
