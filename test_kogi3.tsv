code: x2をxとする	x = x2	x = x2
code: x2をxにする	x = x2	x = x2
code: x2をxとする	x = x2	x = x2
code: x2をxに変更する	x = x2	x = x2
code: x2をxに変更する	x = x2	x = x2
code: xはx2である	math.isclose(x, x2)	x = x2
code: xとx2の値を入れ替える	x, x2 = x2, x2, x	x, x2 = x2, x
code: xとx2を入れ替える	x, x2 = x2, x	x, x2 = x2, x
code: xとx2の両方ともnとする	x = x2 = n	x = x2 = n
code: xとx2の両方にnを代入する	x = x2 = n	x = x2 = n
code: xとx2の両方をnに変更する	x = x2 = n	x = x2 = n
code: xとx2の両方をnに変更する	x = x2 = n	x = x2 = n
code: xとx2をそれぞれnとn2とする	x, x2 = n, n2	x, x2 = n, n2
code: xとx2をそれぞれnとn2とする	x, x2 = n, n2	x, x2 = n, n2
code: それぞれnとn2をxとx2とする	x, x2 = n, n2	x, x2 = n, n2
code: それぞれnとn2をxとx2とする	x, x2 = n, n2	x, x2 = n, n2
code: xとx2をそれぞれnとn2に設定する	x, x2 = n, n2	x, x2 = n, n2
code: xとx2をそれぞれnとn2にする	x, x2 = n, n2	x, x2 = n, n2
code: x, x2, x3をそれぞれn, n2, n3とする	x, x2, x3 = n, n2, n3	x, x2, x3 = n, n2, n3
code: x, x2, x3をそれぞれn, n2, n3とする	x, x2, x3 = n, n2, n3	x, x2, x3 = n, n2, n3
code: x, x2, x3にそれぞれn, n2, n3を代入する	x, x2, x3 = n, n2, n3	x, x2, x3 = n, n2, n3
code: x, x2, x3にそれぞれn, n2, n3を代入する	x, x2, x3 = n, n2, n3	x, x2, x3 = n, n2, n3
code: x, x2, x3をそれぞれn, n2, n3に設定する	x, x2, x3 = n, n2, n3	x, x2, x3 = n, n2, n3
code: x, x2, x3をそれぞれn, n2, n3に変更する	x, x2, x3 = n, n2, n3	x, x2, x3 = n, n2, n3
code: xの絶対値	math.fabs(x)	abs(x)
code: xを論理値にする	bool(x)	bool(x)
code: xが真	bool(x)	bool(x)
code: xが真かどうか	bool(x)	bool(x)
code: x, x2の複素数を計算する	math.hypot(x, x2)	complex(x, x2)
code: x, x2の複素数	complex(x, x2)	complex(x, x2)
code: xとx2の商と余りをペアで見る	divmod(x, x2)	divmod(x, x2)
code: xを浮動小数点数にする	float(x)	float(x)
code: xを整数にする	int(x)	int(x)
code: xを印字できる文字列にする	ascii(x)	ascii(x)
code: xの印字可能な文字列	ascii(x)	ascii(x)
code: xの絶対値を計算する	math.fabs(x)	abs(x)
code: xの複素数	complex(x)	complex(x)
code: xとx2から成る複素数	complex(x, x2)	complex(x, x2)
code: xとx2から成る複素数を求める	complex(x, x2)	complex(x, x2)
code: xを実部、x2を虚部とした複素数	complex(x, x2)	complex(x, x2)
code: xを実部、x2を虚部とした複素数を計算する	complex(x, x2)	complex(x, x2)
code: 商と余りを同時に計算する	divmod(x, x2)	divmod(x, x2)
code: xのハッシュ値	hash(x)	hash(x)
code: xのx2乗を求める	pow(x, x2)	pow(x, x2)
code: xのx2乗を求める	pow(x, x2)	pow(x, x2)
code: xのx2乗のx3剰余	pow(x, x2, x3)	pow(x, x2, x3)
code: xのx2乗のx3剰余を計算する	pow(x, x2, x3)	pow(x, x2, x3)
code: xのx2乗してx3による余りを求める	pow(x, x2, x3)	pow(x, x2, x3)
code: xのx2乗してx3による余りを計算する	pow(x, x2, x3)	pow(x, x2, x3)
code: xの小数点以下を四捨五入する	round(x)	round(x)
code: xをの小数点第一位で丸める	round(x, 1)	round(x, 1)
code: xをを小数点以下第一位で丸める	round(x, -2)	round(x, 1)
code: xの小数点第n位で丸める	round(x, n)	round(x, n)
code: xの小数点第n位で丸める	round(x, n)	round(x, n)
code: xの十の位で四捨五入する	round(x, -1)	round(x, -1)
code: xを百の位で四捨五入する	round(x, -2)	round(x, -2)
code: xの千の位で四捨五入する	round(x, -2)	round(x, -3)
code: xx2、x3の最大値を求める	max(x, x2, x3)	max(x, x2, x3)
code: x、x2x3のうち最大値を求める	max(x, x2, x3)	max(x, x2, x3)
code: xx2、x3の中で最小値	min(x, x2, x3)	min(x, x2, x3)
code: xx2、x3の最小の値を求める	min(x, x2, x3)	min(x, x2, x3)
code: xを浮動小数点数型に変換する	float(x)	float(x)
code: xを整数に変換する	int(x)	int(x)
code: xを文字列に変換する	math.floor(x)	str(x)
code: nかつn2	n - n2	n and n2
code: nまたはn2	n or n2	n or n2
code: nではない	n in aset	not n
code: 真	True	True
code: 偽	string.ascii_letters	False
code: 未定値	None	None
code: 名前付きタプルを使用する	import collections	import collections
code: カウンタを使用する	import collections	import collections
code: 新しく空のキューを作成する	collections.deque()	collections.deque()
code: スタックを新しく準備する	collections.deque()	collections.deque()
code: 空のキューを新規生成する	collections.deque()	collections.deque()
code: 新しく列iterableからdequeを新規生成する	collections.deque(iterable)	collections.deque(iterable)
code: 新しく両端キューをイテラブルiterableから作成する	collections.deque(iterable)	collections.deque(iterable)
code: イテラブルiterableからdequeオブジェクトを用意する	collections.deque(iterable)	collections.deque(iterable)
code: 列iterableをdequeに変換する	collections.deque(iterable)	collections.deque(iterable)
code: リストiterableをスタックにする	collections.deque(iterable)	collections.deque(iterable)
code: 新しくdequeを上限をnに制限して生成する	X = collections.deque(maxlen=n)	collections.deque(maxlen=n)
code: 最大長をnに制限して双方向キューを作る	collections.deque(maxlen=n)	collections.deque(maxlen=n)
code: 最大長をnに制限して両端キューを新しく作る	collections.deque(maxlen=n)	collections.deque(maxlen=n)
code: 新しく最大長nのデックを用意する	collections.deque(maxlen=n)	collections.deque(maxlen=n)
code: 新たに最大長nのdequeオブジェクトを用意する	collections.deque(maxlen=n)	collections.deque(maxlen=n)
code: 最大長nのデックを用意する	collections.deque(maxlen=n)	collections.deque(maxlen=n)
code: リストiterableから最大長をnにして双方向キューを新規生成する	collections.deque(iterable, maxlen=n)	collections.deque(iterable, maxlen=n)
code: 上限をnに制限して双方向キューを列iterableから準備する	collections.deque(iterable, maxlen=n)	collections.deque(iterable, maxlen=n)
code: イテラブルiterableからキューを最大長をnに制限して生成する	collections.deque(iterable, maxlen=n)	collections.deque(iterable, maxlen=n)
code: 列iterableから新たに最大長nの両端キューを作る	collections.deque(itertools.maxlen=n)	collections.deque(iterable, maxlen=n)
code: 配列iterableから上限制限された長さnの双方向キューを作る	collections.deque(iterable, maxlen=n)	collections.deque(iterable, maxlen=n)
code: 上限長nのスタックを新しくイテラブルiterableから生成する	collections.deque(iterable, maxlen=n)	collections.deque(iterable, maxlen=n)
code: 列iterableのテイルフィルタを生成する	collections.deque(iterable, maxlen=n)	collections.deque(iterable, maxlen=n)
code: 列iterableのテイルフィルタを用意する	collections.deque(iterable, maxlen=n)	collections.deque(iterable, maxlen=n)
code: 両端キューを新規生成してXに代入する	X = collections.deque()	X = collections.deque()
code: dequeを新しく生成してXに代入する	X = collections.deque()	X = collections.deque()
code: 新たにdequeを準備してXとする	X = collections.deque()	X = collections.deque()
code: iterableから新たに双方向キューを生成してXにする	X = collections.deque(iterable)	X = collections.deque(iterable)
code: iterableから新しくキューを新規生成してXに代入する	X = collections.deque(iterable)	X = collections.deque(iterable)
code: 新たにdequeをイテラブルiterableから作ってXに代入する	X = collections.deque(iterable)	X = collections.deque(iterable)
code: 上限をnに制限してdequeオブジェクトを生成してXにする	X = collections.deque(maxlen=n)	X = collections.deque(maxlen=n)
code: 両端キューを上限制限された長さをnに制限して作って、Xとする	X = collections.deque(maxlen=n)	X = collections.deque(maxlen=n)
code: dequeオブジェクトを最大長をnに制限して準備してXにする	X = collections.deque(maxlen=n)	X = collections.deque(maxlen=n)
code: 最大長nのキューを新たに作る	collections.deque(maxlen=n)	X = collections.deque(maxlen=n)
code: 新たに最大長nのデックを新規生成する	collections.deque(maxlen=n)	X = collections.deque(maxlen=n)
code: 新たに最大長nのキューを用意する	collections.deque(maxlen=n)	X = collections.deque(maxlen=n)
code: 新たに上限制限された長さをnにして列iterableからdequeを用意してXとする	X = collections.deque(iterable, maxlen=n)	X = collections.deque(iterable, maxlen=n)
code: イテラブルiterableからキューを最大長をnにして用意してXとする	X = collections.deque(iterable, maxlen=n)	X = collections.deque(iterable, maxlen=n)
code: 最大長をnに制限して両端キューをリストiterableから準備して、Xにする	X = collections.deque(iterable, maxlen=n)	X = collections.deque(iterable, maxlen=n)
code: 上限nのデックをリストiterableから作成して、Xとする	X = collections.deque(iterable, maxlen=n)	X = collections.deque(iterable, maxlen=n)
code: iterableから最大長nの両端キューを作ってXに代入する	X = collections.deque(iterable, maxlen=n)	X = collections.deque(iterable, maxlen=n)
code: 上限nのdequeをiterableから生成して、Xに代入する	X = collections.deque(iterable, maxlen=n)	X = collections.deque(iterable, maxlen=n)
code: デックdeqの左にelementを追加する	deq.appendleft(element)	deq.appendleft(element)
code: deqの先頭にelementをつけ加える	deq.appendleft(element)	deq.appendleft(element)
code: オブジェクトelementをdeqの左に付け加える	deq.appendleft(element)	deq.appendleft(element)
code: デックdeqにelementをenqueueする	deq.appendleft(element)	deq.appendleft(element)
code: オブジェクトelementをデックdeqにデータを入れる	deq.append(element)	deq.appendleft(element)
code: オブジェクトelementをデックdeqにenqueueする	deq.appendleft(element)	deq.appendleft(element)
code: オブジェクトelementをdeqの右に追加する	deq.append(element)	deq.append(element)
code: オブジェクトelementをデックdeqの末尾に追加する	deq.append(element)	deq.append(element)
code: deqの右側に文字列elementを追加する	deq.append(element)	deq.append(element)
code: deqにオブジェクトelementを詰む	deq.append(element)	deq.append(element)
code: 文字列elementをdeqにプッシュする	deq.append(element)	deq.append(element)
code: デックdeqにelementをプッシュする	deq.appendleft(element)	deq.append(element)
code: イテラブルiterableの各値を順にdeqの先頭に追加する	deq.extendleft(iterable)	deq.extendleft(iterable)
code: iterableの各データをデックdeqの最初に付け加える	deq.extend(iterable)	deq.extendleft(iterable)
code: タプルiterableの値をdeqの先頭に追加する	deq.extend(iterable)	deq.extendleft(iterable)
code: 列iterableの各要素を順にデックdeqの末尾に追加する	deq.extend(iterable)	deq.extend(iterable)
code: deqの右にイテラブルiterableの各値を追加する	deq.extend(iterable)	deq.extend(iterable)
code: イテラブルiterableのデータを順にデックdeqの末尾につけ加える	deq.extend(iterable)	deq.extend(iterable)
code: deqのn番目にオブジェクトelementを挿入する	deq.insert(n, element)	deq.insert(n, element)
code: deqのn番目に文字列elementを挿入する	deq.insert(n, element)	deq.insert(n, element)
code: elementをデックdeqのn番目に挿入する	deq.insert(n, element)	deq.insert(n, element)
code: deqの左側から値を取り出す	deq.pop()	deq.popleft()
code: 値をdeqの最初から取り出す	deq.rotate()	deq.popleft()
code: データをデックdeqの先頭から取り除く	deq.popleft()	deq.popleft()
code: deqをdequeue	itertools.permutations(deq)	deq.popleft()
code: 要素をdeqの最後から削除する	deq.pop()	deq.pop()
code: deqの右から要素を削除する	deq.pop()	deq.pop()
code: 要素をデックdeqの末尾から削除する	deq.pop()	deq.pop()
code: デックdeqからポップする	deq.pop()	deq.pop()
code: deqから最初のelementを削除する	deq.remove(element)	deq.remove(element)
code: デックdeqから最初のオブジェクトelementを削除する	deq.remove(element)	deq.remove(element)
code: 最初の文字列elementをdeqから削除する	deq.remove(element)	deq.remove(element)
code: deqを空にする	deq.rotate()	deq.clear()
code: 一つdeqの順をローテートする	deq.rotate()	deq.rotate()
code: 右にデックdeqの順をローテートする	deq.rotate()	deq.rotate()
code: デックdeqの順番を回す	deq.rotate()	deq.rotate()
code: deqの要素をn個分ローテーションする	deq.rotate(-n)	deq.rotate(n)
code: n個分deqの値を右に持ち回す	deq.rotate(n)	deq.rotate(n)
code: n個分デックdeqの値をローテートする	deq.rotate(n)	deq.rotate(n)
code: n個分左にdeqの順序をローテーションする	deq.rotate(n)	deq.rotate(-n)
code: deqのデータを左にn個分ローテートする	deq.rotate(-n)	deq.rotate(-n)
code: デックdeqの順序をn個分左にローテーションする	deq.rotate(-n)	deq.rotate(-n)
code: デックdeqの最大長を求める	deq.maxlen	deq.maxlen
code: deqの最大長を求める	deq.maxlen	deq.maxlen
code: デックdeqの要素数を算出する	deq[0]	len(deq)
code: deqの要素数	len(deq)	len(deq)
code: デックdeqは空であるかどうか確認する	len(deq)!= 0	len(deq) == 0
code: デックdeqは空	len(deq)!= 0	len(deq) == 0
code: deqは空でない	len(deq)!= 0	len(deq) != 0
code: deqが空でないか調べる	len(deq) == 0	len(deq) != 0
code: deq内にelementはある	element in deq	element in deq
code: deqに文字列elementは存在するか	element in deq	element in deq
code: デックdeqの最初を見る	deq[0]	deq[0]
code: デックdeqの先頭の要素を見る	deq[0]	deq[0]
code: デックdeqの末尾の要素	deq[-1]	deq[-1]
code: デックdeqの右側を求める	deq[0]	deq[-1]
code: deqのn番目の要素	deq[n]	deq[n]
code: デックdeqのn番目を見る	deq[n]	deq[n]
code: deqのn〜n2の部分値	collections.deque(itertools.islice(deq, n, n2)	collections.deque(itertools.islice(deq, n, n2))
code: deqのn〜n2の要素	collections.deque(itertools.islice(deq, n2)))	collections.deque(itertools.islice(deq, n, n2))
code: デックdeqのn番目からn2番目までの部分要素	collections.deque(itertools.islice(deq, n, n2)	collections.deque(itertools.islice(deq, n, n2))
code: デックdeqのn番目からn2番目の部分データを求める	collections.deque(itertools.islice(deq, n, n2))	collections.deque(itertools.islice(deq, n, n2))
code: デックdeq中の文字列elementのインデックス	deq.index(element)	deq.index(element)
code: デックdeq中のelementの位置を使う	deq.index(element)	deq.index(element)
code: デックdeq中の文字列element[の出現数を	deq.index(element)	deq.count(element)
code: デックdeq中のelement[の数を	deq.index(element)	deq.count(element)
code: deqの要素をインプレースに逆に並べ直す	deq.reverse()	deq.reverse()
code: deqの要素をインプレースに逆に並べ直す	deq.reverse()	deq.reverse()
code: デックdeqの要素を逆に並べ直す	deq.reverse()	deq.reverse()
code: 逆順のdeqを求める	reversed(deq)	reversed(deq)
code: デックdeqをリストに変換する	list(deq)	list(deq)
code: deqをタプルに変換する	tuple(deq)	tuple(deq)
code: 新しい計数オブジェクトを用意する	collections.Counter()	collections.Counter()
code: 新しく新しい空のカウンタを生成する	collections.Counter()	collections.Counter()
code: 新たに新しいカウンタを作る	collections.Counter()	collections.Counter()
code: 配列iterableから新しいカウンタを新規に準備する	collections.Counter(iterable)	collections.Counter(iterable)
code: 新規に多重集合をiterableから生成する	collections.Counter(iterable)	collections.Counter(iterable)
code: 新規にイテラブルiterableから計数オブジェクトを作成する	collections.Counter(iterable)	collections.Counter(iterable)
code: マッピングamapから新しいカウンタを新規に作る	collections.Counter(amap)	collections.Counter(amap)
code: 新規に新しいカウンタを辞書amapから準備する	collections.Counter(amap)	collections.Counter(amap)
code: 辞書amapから多重集合を新規に作成する	collections.Counter(amap)	collections.Counter(amap)
code: 新しく新しいカウンタを作成して、Xにする	X = collections.Counter()	X = collections.Counter()
code: 空の計数オブジェクトを新たに生成して、Xにする	X = collections.Counter()	X = collections.Counter()
code: 新しく空のカウンタを作成して、Xとする	X = collections.Counter()	X = collections.Counter()
code: 計数オブジェクトをイテラブルiterableから新規に新規生成してXに代入する	X = collections.Counter(iterable)	X = collections.Counter(iterable)
code: イテラブルiterableから新しいカウンタを新規に準備してXとする	X = collections.Counter(iterable)	X = collections.Counter(iterable)
code: リストiterableからカウンタを新規に作成してXにする	X = collections.Counter(iterable)	X = collections.Counter(iterable)
code: 新しい多重集合を新規に辞書amapから用意して、Xに代入する	X = collections.Counter(amap)	X = collections.Counter(amap)
code: 新規にカウンタamapから多重集合を新規生成してXにする	X = collections.Counter(amap)	X = collections.Counter(amap)
code: カウンタをカウンタamapから新規に準備してXとする	X = collections.Counter(amap)	X = collections.Counter(amap)
code: カウンタcのそれぞれのキーを出現回数だけ列挙する	c.elements()	c.elements()
code: cのそれぞれの項目を出現数だけリストとして得る	c.elements()	c.elements()
code: cを出現分の回数が多い方からリストとして得る	c.most_common()	c.most_common()
code: カウンタcを出現が多い順番に列挙する	c.most_common()	c.most_common()
code: カウンタcを高頻出な順にリストとして得る	c.most_common()	c.most_common()
code: cを高頻出方からリストとして得る	c.most_common()	c.most_common()
code: カウンタcをカウントの少ない順番にリストとして得る	c.most_common()	c.most_common()[::-1]
code: カウンタcをカウント数の少ない順番に列挙する	c.most_common()[:-1]	c.most_common()[::-1]
code: カウンタcを低頻出な順番にリストとして得る	c.most_common()	c.most_common()[::-1]
code: カウンタcを低頻出順に列挙する	c.most_common()	c.most_common()[::-1]
code: カウンタcを上位n位までカウント回数の多い順番に列挙する	c.most_common(n)	c.most_common(n)
code: cを上位n位までカウントが多い方から列挙する	c.most_common(n)	c.most_common(n)
code: カウンタcから高頻出項目をn個リストとして見る	c.most_common(n)	c.most_common(n)
code: cから高頻出項目をn個、リストとして見る	c.most_common(n)	c.most_common(n)
code: カウンタcを下位n位までカウント数の少ない順に列挙する	c.most_common(n)	c.most_common()[:-n-1:-1]
code: cを下位n位までカウント回数が少ない順にリストとして得る	c.most_common(n)	c.most_common()[:-n-1:-1]
code: cから低頻出項目をn個、リストとして見る	c.most_common(n)	c.most_common()[:-n-1:-1]
code: カウンタcから低頻出な文字列をn個、リストとして見る	c.most_common(n)	c.most_common()[:-n-1:-1]
code: カウンタcから最頻出の文字列を見る	c.most_common(0)[1]	c.most_common(0)[0]
code: cから最も頻出の文字列を求める	c.most_common(0)[0]	c.most_common(0)[0]
code: カウンタcから最頻出の文字列数を見る	c.most_common(0)[0]	c.most_common(0)[1]
code: cから最頻出の項目数を求める	c.most_common(0)[1]	c.most_common(0)[1]
code: カウンタcにリストiterableの出現を追加する	c.update(iterable)	c.update(iterable)
code: カウンタcに列iterableのカウントを追加する	c.update(iterable)	c.update(iterable)
code: cに列iterableを追加する	c.update(iterable)	c.update(iterable)
code: cにマッピングamapを追加する	c.update(amap)	c.update(amap)
code: カウンタcにカウンタamapを追加する	c.update(amap)	c.update(amap)
code: カウンタcからiterableを引く	c.subtract(iterable)	c.subtract(iterable)
code: 列iterableのカウントをcから引く	c.subtract(iterable)	c.subtract(iterable)
code: カウンタcから列iterableを引く	c.subtract(iterable)	c.subtract(iterable)
code: cから辞書amapを引く	c.subtract(amap)	c.subtract(amap)
code: c内のオブジェクトelement値をひとつ増やす	c[element] += 1	c[element] += 1
code: カウンタc内の文字列element値を増やす	c[element] += 1	c[element] += 1
code: カウンタc内のオブジェクトelementキーのカウントを見る	c[element]	c[element]
code: カウンタc内のelementキーのカウント回数を見る	c[element]	c[element]
code: カウンタcの全出現回数を見る	c.update(amap)	c.total()
code: カウンタcの全出現数を使う	c.total()	c.total()
code: cの全数を使う	c.total()	c.total()
code: カウンタcの要素一覧	c.total()	c.keys()
code: カウンタcの値一覧	c.keys()	c.keys()
code: cの値数	len(c)	len(c)
code: カウンタcの項目数	c.total()	len(c)
code: カウンタcをリセットする	c.clear()	c.clear()
code: cのユニークな項目をリストとして得る	list(c)	list(c)
code: カウンタcのユニークな項目を列挙する	list(c)	list(c)
code: カウンタcをリストに変換する	c.update(amap)	list(c)
code: カウンタcを集合にする	set(c)	set(c)
code: cを辞書に変換する	dict(c)	dict(c)
code: cをペアリストに変換する	list(c)	c.items()
code: ペアリストpairsからカウンタを作成する	collections.Counter(dict(pairs))	collections.Counter(dict(pairs))
code: ペアリストpairsからカウンタを構築する	collections.Counter(dict(pairs)))))))	collections.Counter(dict(pairs))
code: カウンタcから0カウントを取り出す	+c	+c
code: cから0以下の出現を取り除く	c.subtract(amap)	+c
code: cの正のカウントだけ残す	+c	+c
code: カウンタcの正の出現のみ残す	+c	+c
code: cとc2の積集合を求める	c & c2	c & c2
code: cとカウンタc2の交差を使う	c & c2	c & c2
code: カウンタcとカウンタc2に共通するデータからなるカウンタ	c | c2	c & c2
code: カウンタcとカウンタc2に共通する要素からなる多重集合	c & c2	c & c2
code: カウンタc∩c2	c & c2	c & c2
code: cとc2の和集合	c | c2	c | c2
code: カウンタcとカウンタc2のユニオン	c | c2	c | c2
code: カウンタc∪カウンタc2	c & c2	c | c2
code: 文字列s名を持ちリストalist3のプロパティのある名前付きタプルを定義する	collections.namedtuple(s, alist3)	collections.namedtuple(s, alist3)
code: 文字列sの名前を持ちalist3のプロパティを持った簡易クラスを作る	collections.namedtuple(s, alist3)	collections.namedtuple(s, alist3)
code: 文字列sの名前を持ち、s2のプロパティのある構造体を作る	collections.namedtuple(s, s2)	collections.namedtuple(s, s2)
code: s名を持ち、s2のプロパティのある名前付きタプルを定義する	collections.namedtuple(s, s2)	collections.namedtuple(s, s2)
code: クラスCが簡易クラスか調べる	issubclass(C, tuple)	issubclass(C, tuple)
code: クラスCは名前付きタプル	issubclass(C, tuple)	issubclass(C, tuple)
code: クラスCのインスタンスを配列iterableから用意する	C._make(iterable) # issubclass(C, tuple)	C._make(iterable)  # issubclass(C, tuple)
code: 新たにクラスCのインスタンスをiterableから新規生成する	C._make(iterable) # issubclass(C, tuple)	C._make(iterable)  # issubclass(C, tuple)
code: クラスCのインスタンスを列iterableから生成する	C._make(iterable) # issubclass(C, tuple)	C._make(iterable)  # issubclass(C, tuple)
code: イテラブルiterableをクラスCオブジェクトにする	C._make(iterable) # issubclass(C, tuple)	C._make(iterable)  # issubclass(C, tuple)
code: イテラブルiterableをクラスCに変換する	C._make(iterable) # issubclass(C, tuple)	C._make(iterable)  # issubclass(C, tuple)
code: objが名前付きタプル型	hasattr(obj, '_asdict') and hasattr(obj, '_fields') and has')	hasattr(obj, '_asdict') and hasattr(obj, '_fields')
code: オブジェクトobjが簡易クラス型	isinstance(obj, set)	hasattr(obj, '_asdict') and hasattr(obj, '_fields')
code: objを辞書に変換する	obj._asdict() # isinstance(obj, NamedTuple)	obj._asdict()  # isinstance(obj, NamedTuple)
code: 簡易クラスオブジェクトobjを辞書にする	collections.ChainMap(obj)	obj._asdict()  # isinstance(obj, NamedTuple)
code: 名前付きタプルオブジェクトobjのフィールド名の一覧を見る	obj._fields # isinstance(obj, NamedTuple)	obj._fields  # isinstance(obj, NamedTuple)
code: 名前付きタプルオブジェクトobjのフィールド名の一覧を使う	list(obj, list(obj)	obj._fields  # isinstance(obj, NamedTuple)
code: 空のチェーンマップを作成する	collections.ChainMap()	collections.ChainMap()
code: 辞書adictをチェーンマップに変換する	collections.ChainMap(adict)	collections.ChainMap(adict)
code: adictをチェーンマップにする	collections.ChainMap(adict)	collections.ChainMap(adict)
code: 辞書adictをネスト化する	collections.ChainMap(adict)	collections.ChainMap(adict)
code: adictと辞書adict2を階層的につなぐ	setattr(adict, text, text2)	collections.ChainMap(adict, adict2)
code: アヤメのデータセットをロードする	sns.load_dataset('iris')	sns.load_dataset('iris')
code: 日付をインポートする	import datetime	import datetime
code: 時間を用いる	import time	import time
code: 時間をインポートする	import time	import time
code: 今日の日時	datetime.datetime.now()	datetime.datetime.now()
code: 現在の日付と時間を求める	datetime.datetime.today().hour	datetime.datetime.now()
code: n年の日付と時間	datetime.datetime(year=n, month=1, day=1)	datetime.datetime(year=n, month=1, day=1)
code: n年の日時	datetime.datetime(year=n, month=1, day=1)	datetime.datetime(year=n, month=1, day=1)
code: n年を日時に変換する	datetime.datetime(year=n, month=1, day=1)	datetime.datetime(year=n, month=1, day=1)
code: n年を日付と時刻にする	datetime.datetime(year=n, month=1, day=1)	datetime.datetime(year=n, month=1, day=1)
code: n年n2月の日時	datetime.datetime(year=n, month=n2, day=1)	datetime.datetime(year=n, month=n2, day=1)
code: n年n2月の日時	datetime.datetime(year=n, month=n2, day=1)	datetime.datetime(year=n, month=n2, day=1)
code: n年n2月を日付と時刻にする	datetime(year=n, month=n2, day=n3)	datetime.datetime(year=n, month=n2, day=1)
code: n年n2月を日付と時刻にする	datetime.datetime(year=n, month=n2, day=n3)	datetime.datetime(year=n, month=n2, day=1)
code: n年n2月n3日の日付と時刻を得る	datetime.datetime(year=n, month=n2, day=n3, hour=n4, minite=n5)	datetime.datetime(year=n, month=n2, day=n3)
code: n年n2月n3日の日付と時間をオブジェクト化する	datetime.datetime(year=n, month=n2, day=n3, hour=n4, minite=n5)	datetime.datetime(year=n, month=n2, day=n3)
code: n年n2月n3日を日付と時刻に変換する	datetime.datetime(year=n, month=n2, day=n3)	datetime.datetime(year=n, month=n2, day=n3)
code: n年n2月n3日を日付と時刻に変換する	datetime.datetime(year=n, month=n2, day=n3, hour=n4, minite=n5)	datetime.datetime(year=n, month=n2, day=n3)
code: n年n2月n3日n4時の日付と時刻	datetime.datetime(year=n, month=n2, day=n3)	datetime.datetime(year=n, month=n2, day=n3, hour=n4)
code: n年n2月n3日n4時の日付と時刻をオブジェクト化する	datetime.datetime(year=n, month=n2, day=n3, hour=n4)	datetime.datetime(year=n, month=n2, day=n3, hour=n4)
code: n年n2月n3日n4時を日時に変換する	datetime.datetime(year=n, month=n2, day=n3, hour=n4)	datetime.datetime(year=n, month=n2, day=n3, hour=n4)
code: n年n2月n3日n4時を日時に変換する	datetime.datetime(year=n, month=n2, day=n3, hour=n4)	datetime.datetime(year=n, month=n2, day=n3, hour=n4)
code: n年n2月n3日n4時n5分の日付と時間	datetime.datetime(year=n, month=n2, day=n3, hour=n4)	datetime.datetime(year=n, month=n2, day=n3, hour=n4, minite=n5)
code: n年n2月n3日n4時n5分の日付と時刻を得る	datetime.datetime(year=n, month=n2, day=n3, hour=n4, minite=n5)	datetime.datetime(year=n, month=n2, day=n3, hour=n4, minite=n5)
code: n年n2月n3日n4時n5分を日付と時間に変換する	datetime.datetime(year=n, month=n2, day=n3, hour=n4, minite=n5)	datetime.datetime(year=n, month=n2, day=n3, hour=n4, minite=n5)
code: n年n2月n3日n4時n5分を日時に変換する	datetime.datetime(year=n, month=n2, day=n3, hour=n4)	datetime.datetime(year=n, month=n2, day=n3, hour=n4, minite=n5)
code: n年n2月n3日n4時n5分n6秒の日時を作る	datetime.datetime(year=n, month=n2, day=n3, hour=n4, minite=n5, second=n5, second=n6)	datetime.datetime(year=n, month=n2, day=n3, hour=n4, minite=n5, second=n6)
code: n年n2月n3日n4時n5分n6秒の日付と時間を得る	datetime.datetime(year=n, month=n2, day=n3, hour=n4, minite=n5)	datetime.datetime(year=n, month=n2, day=n3, hour=n4, minite=n5, second=n6)
code: n年n2月n3日n4時n5分n6秒を日時に変換する	datetime.datetime(year=n, month=n2, day=n3, hour=n4, minite=n5, second=n5, second=n6)	datetime.datetime(year=n, month=n2, day=n3, hour=n4, minite=n5, second=n6)
code: n年n2月n3日n4時n5分n6秒を日付と時刻に変換する	datetime.datetime(year=n, month=n2, day=n3, hour=n4, minite=n5, second=n5)	datetime.datetime(year=n, month=n2, day=n3, hour=n4, minite=n5, second=n6)
code: エポックtimestampを日付と時間にする	datetime.datetime.fromtimestamp(timestamp)	datetime.datetime.fromtimestamp(timestamp)
code: エポックtimestampから日時に変換する	datetime.datetime.today().strfromtime()	datetime.datetime.fromtimestamp(timestamp)
code: ISO8601形式のsから日付と時刻にする	datetime.datetime.fromisoformat(s)	datetime.datetime.fromisoformat(s)
code: ISO書式の文字列sから日付と時間にする	datetime.datetime.fromisoformat(s)	datetime.datetime.fromisoformat(s)
code: sからISO8601形式を使って日時に変換する	datetime.datetime.fromisoformat(s=s)	datetime.datetime.fromisoformat(s)
code: 文字列sからISO書式を用いて日時に変換する	datetime.datetime.fromisoformat(s)	datetime.datetime.fromisoformat(s)
code: 文字列sからs2のパターンで日時にする	datetime.datetime.strptime(s, s2)	datetime.datetime.strptime(s, s2)
code: 文字列sから文字列s2のパターンで日付と時刻にする	datetime.datetime.strptime(s, s2)	datetime.datetime.strptime(s, s2)
code: 文字列s2パターンのsを日付と時刻に変換する	datetime.datetime.strptime(s, s2)	datetime.datetime.strptime(s, s2)
code: s2パターンのsを日付と時刻にする	datetime.datetime.strptime(s, s2)	datetime.datetime.strptime(s, s2)
code: 今日のローカルな日付と時間を求める	datetime.datetime.today()	datetime.datetime.today()
code: 今日のローカルな日時を求める	datetime.datetime.today().day	datetime.datetime.today()
code: 日付と時刻dtをタイムスタンプにする	dt.timestamp()	dt.timestamp()
code: dtをUNIXタイムに変換する	dt.timestamp()	dt.timestamp()
code: 日付と時刻dtを数値にする	dt.timestamp()	dt.timestamp()
code: 日付と時刻dtを浮動小数点数にする	dt.timestamp()	dt.timestamp()
code: dtのタイムゾーンを使う	dt.timetz()	dt.timetz()
code: 日付と時刻dtのタイムゾーンを見る	dt.timetz()	dt.timetz()
code: 日付と時刻dtの日付	dt.time()	dt.date()
code: 日付と時間dtの日付	dt.time()	dt.date()
code: 日付と時間dtの時刻	dt.time()	dt.time()
code: 日時dtの時刻	dt.hour	dt.time()
code: n年の日付をオブジェクト化する	datetime.date(year=n, month=1, day=1)	datetime.date(year=n, month=1, day=1)
code: n年を日付にする	datetime.date(year=n, month=1, day=1)	datetime.date(year=n, month=1, day=1)
code: n年n2月の日付	datetime.date(year=n, month=n2, day=1)	datetime.date(year=n, month=n2, day=1)
code: n年n2月の日付を作る	datetime.date(year=n, month=n2, day=1)	datetime.date(year=n, month=n2, day=1)
code: n年n2月を日付にする	datetime.date(year=n, month=n2, day=1)	datetime.date(year=n, month=n2, day=1)
code: n年n2月n3日の日付	datetime.date(year=n, month=n2, day=n3, hour=n4)	datetime.date(year=n, month=n2, day=n3)
code: n年n2月n3日の日付	datetime.date(year=n, month=n2, day=n3)	datetime.date(year=n, month=n2, day=n3)
code: n年n2月n3日を日付にする	datetime.date(year=n, month=n2, day=n3)	datetime.date(year=n, month=n2, day=n3)
code: n年n2月n3日を日付に変換する	datetime.datetime(year=n, month=n2, day=n3)	datetime.date(year=n, month=n2, day=n3)
code: 本日のローカルな日付	datetime.date.today()	datetime.date.today()
code: 今日の日付	datetime.date.today()	datetime.date.today()
code: 明日の日付を使う	datetime.date.today() + datetime.timedelta(days=1)	datetime.date.today() + datetime.timedelta(days=1)
code: 昨日の日付	datetime.date.today() - datetime.timedelta(days=1)	datetime.date.today() - datetime.timedelta(days=1)
code: 文字列sから文字列s2のパターンとして日付に変換する	datetime.date.strptime(s, s2)	datetime.date.strptime(s, s2)
code: 文字列sから文字列s2のパターンとして日付に変換する	datetime.date.strptime(s, s2)	datetime.date.strptime(s, s2)
code: 日付と時間dtの年数	dt.year	dt.year
code: 日付と時刻dtの年数を求める	dt.year	dt.year
code: 日時dtは何年か知る	dt.year	dt.year
code: dtが何年か知る	dt.year	dt.year
code: 日付adateの年を使う	adate.year	adate.year
code: adateの年を使う	adate.year	adate.year
code: 日付adateは何年か知る	adate.year	adate.year
code: 現在の年数を使う	datetime.datetime.today().year	datetime.datetime.today().year
code: 本日の年数	datetime.datetime.today().year	datetime.datetime.today().year
code: 現在が何年か知る	datetime.datetime.today().year	datetime.datetime.today().year
code: dtの月を求める	dt.month	dt.month
code: dtの月	dt.month	dt.month
code: dtは何月か知る	dt.month	dt.month
code: dtが何月か知る	dt.month	dt.month
code: 日付adateの月数	adate.month	adate.month
code: 日付adateの月数を求める	adate.month	adate.month
code: 日付adateは何月か知る	adate.month	adate.month
code: 今日の月数	datetime.datetime.today().month	datetime.datetime.today().month
code: 本日の月	datetime.datetime.today().month	datetime.datetime.today().month
code: 今日は何月か知る	datetime.datetime.today().month	datetime.datetime.today().month
code: dtの日	dt.day	dt.day
code: 日時dtの日数を見る	dt.day	dt.day
code: 日付と時間dtは何日か知る	dt.time()	dt.day
code: 日付と時間dtは何日か知る	dt.day	dt.day
code: adateの日数を求める	adate.day	adate.day
code: adateの日	adate.day	adate.day
code: 日付adateは何日か知る	adate.day	adate.day
code: 今日の日数	datetime.datetime.today().day	datetime.datetime.today().day
code: 現在の日数を見る	datetime.datetime.today().day	datetime.datetime.today().day
code: 本日が何日か知る	datetime.datetime.today().day	datetime.datetime.today().day
code: dtの曜日を見る	dt.weekday()	dt.weekday()
code: 日付と時間dtの曜日を整数で使う	dt.weekday()	dt.weekday()
code: 日時dtは何曜日か知る	dt.weekday()	dt.weekday()
code: dtは何曜日か知る	dt.weekday()	dt.weekday()
code: adateの曜日を使う	adate.weekday()	adate.weekday()
code: 日付adateは何曜日か知る	adate.weekday()	adate.weekday()
code: 現在の曜日を整数で使う	datetime.datetime.today().weekday()	datetime.datetime.today().weekday()
code: 今日は何曜日か知る	datetime.datetime.today().weekday()	datetime.datetime.today().weekday()
code: 日付と時間dtが月曜日か調べる	dt.weekday() == 0	dt.weekday() == 0
code: 日付と時刻dtが月曜日	dt.weekday() == 0	dt.weekday() == 0
code: 日付adateが月曜日かどうか確認する	adate.weekday() == 0	adate.weekday() == 0
code: 日付adateが月曜日か判定する	adate.weekday() == 0	adate.weekday() == 0
code: 本日が月曜日かどうかテストする	datetime.datetime.today().weekday() == 0	datetime.datetime.today().weekday() == 0
code: 現在が月曜日	datetime.datetime.today().weekday() == 0	datetime.datetime.today().weekday() == 0
code: dtが火曜日	dt.weekday() == 1	dt.weekday() == 1
code: 日時dtが火曜日か確認する	dt.weekday() == 1	dt.weekday() == 1
code: adateが火曜日	adate.weekday() == 1	adate.weekday() == 1
code: adateが火曜日	adate.weekday() == 1	adate.weekday() == 1
code: 今日が火曜日か	datetime.datetime.today().weekday() == 1	datetime.datetime.today().weekday() == 1
code: 現在が火曜日	datetime.datetime.today().weekday() == 1	datetime.datetime.today().weekday() == 1
code: dtが水曜日	dt.weekday() == 2	dt.weekday() == 2
code: 日時dtが水曜日	dt.weekday() == 2	dt.weekday() == 2
code: adateが水曜日	adate.weekday() == 2	adate.weekday() == 2
code: adateが水曜日か	adate.weekday() == 2	adate.weekday() == 2
code: 今日が水曜日か	datetime.datetime.today().weekday() == 2	datetime.datetime.today().weekday() == 2
code: 今日が水曜日	datetime.datetime.today().weekday() == 2	datetime.datetime.today().weekday() == 2
code: 日付と時間dtが木曜日か調べる	dt.weekday() == 3	dt.weekday() == 3
code: 日付と時刻dtが木曜日	dt.weekday() == 3	dt.weekday() == 3
code: 日付adateが木曜日	adate.weekday() == 3	adate.weekday() == 3
code: adateが木曜日	adate.weekday() == 3	adate.weekday() == 3
code: 今日が木曜日	datetime.datetime.today().weekday() == 3	datetime.datetime.today().weekday() == 3
code: 今日が木曜日か判定する	datetime.datetime.today().weekday() == 3	datetime.datetime.today().weekday() == 3
code: 日時dtが金曜日	dt.weekday() == 4	dt.weekday() == 4
code: dtが金曜日	dt.weekday() == 4	dt.weekday() == 4
code: 日付adateが金曜日か	adate.weekday() == 4	adate.weekday() == 4
code: 日付adateが金曜日	adate.weekday() == 4	adate.weekday() == 4
code: 本日が金曜日	datetime.datetime.today().weekday() == 4	datetime.datetime.today().weekday() == 4
code: 現在が金曜日	datetime.datetime.today().weekday() == 4	datetime.datetime.today().weekday() == 4
code: dtが土曜日	dt.weekday() == 5	dt.weekday() == 5
code: 日時dtが土曜日かどうか調べる	dt.weekday() == 5	dt.weekday() == 5
code: adateが土曜日か調べる	adate.weekday() == 5	adate.weekday() == 5
code: adateが土曜日かどうか確認する	adate.weekday() == 5	adate.weekday() == 5
code: 現在が土曜日	datetime.datetime.today().weekday() == 5	datetime.datetime.today().weekday() == 5
code: 現在が土曜日かどうか調べる	datetime.datetime.today().weekday() == 5	datetime.datetime.today().weekday() == 5
code: dtが日曜日かテストする	dt.weekday() == 6	dt.weekday() == 6
code: 日付と時間dtが日曜日か	dt.weekday() == 6	dt.weekday() == 6
code: 日付adateが日曜日	adate.weekday() == 6	adate.weekday() == 6
code: 日付adateが日曜日	adate.weekday() == 6	adate.weekday() == 6
code: 本日が日曜日かどうか調べる	datetime.datetime.today().weekday() == 6	datetime.datetime.today().weekday() == 6
code: 本日が日曜日か	datetime.datetime.today().weekday() == 6	datetime.datetime.today().weekday() == 6
code: dtをタプルに変換する	dt.timetuple()	dt.timetuple()
code: dtをタプルに変換する	dt.timetuple()	dt.timetuple()
code: 日付adateをタプルにする	adate.timetuple()	adate.timetuple()
code: 現在をタプルにする	datetime.datetime.today().timetuple()	datetime.datetime.today().timetuple()
code: dtをISO形式の文字列に変換する	dt.isoformat()	dt.isoformat()
code: dtをISO書式の文字列に変換する	dt.isoformat()	dt.isoformat()
code: adateをISO8601書式の文字列に変換する	adate.isoformat()	adate.isoformat()
code: 日付adateをISO形式の文字列にする	adate.isoformat()	adate.isoformat()
code: 本日をISO8601形式の文字列に変換する	datetime.datetime.today().isoformat()	datetime.datetime.today().isoformat()
code: 現在をISO書式の文字列にする	datetime.datetime.today().isoformat()	datetime.datetime.today().isoformat()
code: sでフォーマットしてdtを文字列にする	dt.strftime()	dt.strftime()
code: 文字列sでフォーマットしてdtを文字列に変換する	dt.strftime()	dt.strftime()
code: sでフォーマットしてdtを文字列にする	dt.strftime()	dt.strftime()
code: 日時dtを文字列sでフォーマットする	dt.strftime()	dt.strftime()
code: dtを文字列sを用いてフォーマットする	dt.strftime()	dt.strftime()
code: sでフォーマットしてadateを文字列に変換する	adate.strftime()	adate.strftime()
code: sでフォーマットして日付adateを文字列にする	adate.strftime()	adate.strftime()
code: 日付adateを文字列sを使ってフォーマットする	adate.strftime()	adate.strftime()
code: adateをsとしてフォーマットする	adate.strftime()	adate.strftime()
code: 文字列sでフォーマットして今日を文字列にする	datetime.datetime.today().strftime()	datetime.datetime.today().strftime()
code: 本日をsでフォーマットして文字列にする	datetime.datetime.today().strftime()	datetime.datetime.today().strftime()
code: 今日を文字列sとしてフォーマットする	datetime.datetime.today().strftime()	datetime.datetime.today().strftime()
code: 本日をsを使ってフォーマットする	datetime.datetime.today().strftime()	datetime.datetime.today().strftime()
code: 日付と時刻dtの時間数を求める	dt.hour	dt.hour
code: dtの時間を使う	dt.hour	dt.hour
code: 日付と時間dtが何時か知る	dt.hour	dt.hour
code: dtは何時か知る	dt.hour	dt.hour
code: 現在の時間数	datetime.date.today().hour	datetime.date.today().hour
code: 現在が何時か知る	datetime.date.today().hour	datetime.date.today().hour
code: 日付と時間dtの分	dt.minite	dt.minite
code: dtの分数を使う	dt.minite	dt.minite
code: dtが何分か知る	dt.minite	dt.minite
code: dtは何分か知る	dt.minite	dt.minite
code: 現在の分	datetime.date.today().minite	datetime.date.today().minite
code: 現在が何分か知る	datetime.date.today().minite	datetime.date.today().minite
code: dtの秒を求める	dt.second	dt.second
code: dtの秒	dt.second	dt.second
code: 日付と時刻dtは何秒か知る	dt.second	dt.second
code: 日時dtが何秒か知る	dt.second	dt.second
code: 現在の秒数を見る	datetime.date.today().second	datetime.date.today().second
code: 現在は何秒か知る	datetime.date.today().second	datetime.date.today().second
code: 現在のミリ秒	int(time.time() + datetimedelta(seconds=0)	int(time.time() * 1000)
code: 現在のエポック秒	int(time.time()	int(time.time())
code: 現在のUNIX時間	int(time.time()	int(time.time())
code: dtををn週間後に進める	dt + datetime.timedelta(weeks=n)	dt + datetime.timedelta(weeks=n)
code: dtををn週間後に進める	dt + datetime.timedelta(weeks=n)	dt + datetime.timedelta(weeks=n)
code: dtにn週間を加算する	dt + datetime.timedelta(weeks=n)	dt + datetime.timedelta(weeks=n)
code: dtにn週間分加える	dt + datetime.timedelta(weeks=n)	dt + datetime.timedelta(weeks=n)
code: 日付adateををn週間後に進める	adate + datetime.timedelta(weeks=n)	adate + datetime.timedelta(weeks=n)
code: 日付adateにn週間分足す	adate + datetime.timedelta(weeks=n)	adate + datetime.timedelta(weeks=n)
code: adateにn週間を加算する	adate + datetime.timedelta(weeks=n)	adate + datetime.timedelta(weeks=n)
code: 日付と時刻dtをn週間前に戻す	dt - datetime.timedelta(weeks=n)	dt - datetime.timedelta(weeks=n)
code: 日付と時間dtをn週間前に戻す	dt - datetime.timedelta(weeks=n)	dt - datetime.timedelta(weeks=n)
code: dtからn週間分減らす	dt - datetime.timedelta(weeks=n)	dt - datetime.timedelta(weeks=n)
code: 日時dtからn週間分、減算する	dt - datetime.timedelta(weeks=n)	dt - datetime.timedelta(weeks=n)
code: 日付adateをn週間前にする	adate - datetime.timedelta(weeks=n)	adate - datetime.timedelta(weeks=n)
code: adateからn週間を減算する	adate - datetime.timedelta(weeks=n)	adate - datetime.timedelta(weeks=n)
code: adateからn週間を減算する	adate - datetime.timedelta(weeks=n)	adate - datetime.timedelta(weeks=n)
code: 日時dtををn年後に進める	dt + datetime.timedelta(years=n)	dt + datetime.timedelta(years=n)
code: dtををn年後に進める	dt + datetime.timedelta(years=n)	dt + datetime.timedelta(years=n)
code: dtにn年を加算する	dt + datetime.timedelta(years=n)	dt + datetime.timedelta(years=n)
code: dtにn年分、加える	dt + datetime.timedelta(years=n)	dt + datetime.timedelta(years=n)
code: adateををn年後に進める	adate + datetime.timedelta(years=n)	adate + datetime.timedelta(years=n)
code: 日付adateにn年分加える	adate + datetime.timedelta(years=n)	adate + datetime.timedelta(years=n)
code: adateにn年分、加算する	adate + datetime.timedelta(years=n)	adate + datetime.timedelta(years=n)
code: 日付と時刻dtをn年前にする	dt - datetime.timedelta(years=n)	dt - datetime.timedelta(years=n)
code: dtをn年前に戻す	dt - datetime.timedelta(years=n)	dt - datetime.timedelta(years=n)
code: dtからn年分減算する	dt - datetime.timedelta(years=n)	dt - datetime.timedelta(years=n)
code: dtからn年を減算する	dt - datetime.timedelta(years=n)	dt - datetime.timedelta(years=n)
code: adateをn年前に戻す	adate - datetime.timedelta(years=n)	adate - datetime.timedelta(years=n)
code: adateからn年分、減らす	adate - datetime.timedelta(years=n)	adate - datetime.timedelta(years=n)
code: 日付adateからn年分引く	adate - datetime.timedelta(years=n)	adate - datetime.timedelta(years=n)
code: 日時dtををn月後に進める	dt + datetime.timedelta(months=n)	dt + datetime.timedelta(months=n)
code: dtををnヶ月後に進める	dt + datetime.timedelta(months=n)	dt + datetime.timedelta(months=n)
code: dtにnヶ月分、加算する	dt + datetime.timedelta(months=n)	dt + datetime.timedelta(months=n)
code: 日時dtにnヶ月を足す	dt + datetime.timedelta(months=n)	dt + datetime.timedelta(months=n)
code: adateををnヶ月後に進める	adate + datetime.timedelta(months=n)	adate + datetime.timedelta(months=n)
code: adateにnヶ月を加算する	adate + datetime.timedelta(months=n)	adate + datetime.timedelta(months=n)
code: adateにn月分加算する	adate + datetime.timedelta(months=n)	adate + datetime.timedelta(months=n)
code: 日時dtをnヶ月前に戻す	dt - datetime.timedelta(months=n)	dt - datetime.timedelta(months=n)
code: 日時dtをn月前にする	dt - datetime.timedelta(months=n)	dt - datetime.timedelta(months=n)
code: 日付と時刻dtからnヶ月を減算する	dt - datetime.timedelta(months=n)	dt - datetime.timedelta(months=n)
code: 日付と時刻dtからn月分、減算する	dt - datetime.timedelta(months=n)	dt - datetime.timedelta(months=n)
code: adateをnヶ月前に戻す	adate - datetime.timedelta(months=n)	adate - datetime.timedelta(months=n)
code: 日付adateをn月前にする	adate - datetime.timedelta(months=n)	adate - datetime.timedelta(months=n)
code: adateからn月分、減らす	adate - datetime.timedelta(months=n)	adate - datetime.timedelta(months=n)
code: 日付adateからnヶ月を減算する	adate - datetime.timedelta(months=n)	adate - datetime.timedelta(months=n)
code: dtををn日後に進める	dt + datetime.timedelta(days=n)	dt + datetime.timedelta(days=n)
code: 日付と時間dtををn日後に進める	dt + datetime.timedelta(days=n)	dt + datetime.timedelta(days=n)
code: dtにn日を加える	dt + datetime.timedelta(days=n)	dt + datetime.timedelta(days=n)
code: 日時dtにn日分、加算する	dt + datetime.timedelta(days=n)	dt + datetime.timedelta(days=n)
code: adateををn日後に進める	adate + datetime.timedelta(days=n)	adate + datetime.timedelta(days=n)
code: adateにn日を加算する	adate + datetime.timedelta(days=n)	adate + datetime.timedelta(days=n)
code: adateにn日を加算する	adate + datetime.timedelta(days=n)	adate + datetime.timedelta(days=n)
code: 日付と時間dtをn日前にする	dt - datetime.timedelta(hours=n)	dt - datetime.timedelta(days=n)
code: dtをn日前に戻す	dt - datetime.timedelta(days=n)	dt - datetime.timedelta(days=n)
code: dtからn日分、減らす	dt - datetime.timedelta(days=n)	dt - datetime.timedelta(days=n)
code: dtからn日分、減らす	dt - datetime.timedelta(days=n)	dt - datetime.timedelta(days=n)
code: adateをn日前に戻す	adate - datetime.timedelta(days=n)	adate - datetime.timedelta(days=n)
code: adateからn日分、減らす	adate - datetime.timedelta(days=n)	adate - datetime.timedelta(days=n)
code: adateからn日を減らす	adate - datetime.timedelta(days=n)	adate - datetime.timedelta(days=n)
code: 日時dtををn時間後に進める	dt + datetime.timedelta(hours=n)	dt + datetime.timedelta(hours=n)
code: 日付と時刻dtををn時間後に進める	dt + datetime.timedelta(hours=n)	dt + datetime.timedelta(hours=n)
code: 日時dtにn時間分、足す	dt + datetime.timedelta(hours=n)	dt + datetime.timedelta(hours=n)
code: 日時dtにn時間を足す	dt + datetime.timedelta(days=n)	dt + datetime.timedelta(hours=n)
code: adateををn時間後に進める	adate + datetime.timedelta(hours=n)	adate + datetime.timedelta(hours=n)
code: adateにn時間分足す	adate + datetime.timedelta(hours=n)	adate + datetime.timedelta(hours=n)
code: adateにn時間分、加算する	adate + datetime.timedelta(hours=n)	adate + datetime.timedelta(hours=n)
code: 日付と時刻dtをn時間前にする	dt - datetime.timedelta(hours=n)	dt - datetime.timedelta(hours=n)
code: 日時dtをn時間前に戻す	dt - datetime.timedelta(hours=n)	dt - datetime.timedelta(hours=n)
code: 日付と時間dtからn時間を減算する	dt - datetime.timedelta(hours=n)	dt - datetime.timedelta(hours=n)
code: 日付と時刻dtからn時間分、引く	dt - datetime.timedelta(minutes=n)	dt - datetime.timedelta(hours=n)
code: 日付adateをn時間前にする	adate - datetime.timedelta(hours=n)	adate - datetime.timedelta(hours=n)
code: 日付adateからn時間を引く	adate - datetime.timedelta(hours=n)	adate - datetime.timedelta(hours=n)
code: adateからn時間分、減算する	adate - datetime.timedelta(hours=n)	adate - datetime.timedelta(hours=n)
code: dtををn分後に進める	dt + datetime.timedelta(minutes=n)	dt + datetime.timedelta(minutes=n)
code: dtををn分後に進める	dt + datetime.timedelta(minutes=n)	dt + datetime.timedelta(minutes=n)
code: dtにn分分加算する	dt + datetime.timedelta(minutes=n)	dt + datetime.timedelta(minutes=n)
code: 日付と時間dtにn分を加える	dt + datetime.timedelta(hours=n)	dt + datetime.timedelta(minutes=n)
code: 日付adateををn分後に進める	adate + datetime.timedelta(minutes=n)	adate + datetime.timedelta(minutes=n)
code: adateにn分分、加える	adate + datetime.timedelta(minutes=n)	adate + datetime.timedelta(minutes=n)
code: adateにn分分加算する	adate + datetime.timedelta(minutes=n)	adate + datetime.timedelta(minutes=n)
code: 日時dtをn分前にする	dt - datetime.timedelta(minutes=n)	dt - datetime.timedelta(minutes=n)
code: dtをn分前に戻す	dt - datetime.timedelta(minutes=n)	dt - datetime.timedelta(minutes=n)
code: 日付と時刻dtからn分、減算する	dt - datetime.timedelta(minutes=n)	dt - datetime.timedelta(minutes=n)
code: 日付と時刻dtからn分、減算する	dt - datetime.timedelta(minutes=n)	dt - datetime.timedelta(minutes=n)
code: adateをn分前にする	adate - datetime.timedelta(minutes=n)	adate - datetime.timedelta(minutes=n)
code: adateからn分、引く	adate - datetime.timedelta(minutes=n)	adate - datetime.timedelta(minutes=n)
code: 日付adateからn分、減算する	adate - datetime.timedelta(minutes=n)	adate - datetime.timedelta(minutes=n)
code: dtををn秒後に進める	dt + datetime.timedelta(seconds=n)	dt + datetime.timedelta(seconds=n)
code: dtををn秒後に進める	dt + datetime.timedelta(seconds=n)	dt + datetime.timedelta(seconds=n)
code: dtにn秒を加算する	dt + datetime.timedelta(seconds=n)	dt + datetime.timedelta(seconds=n)
code: dtにn秒を加算する	dt + datetime.timedelta(seconds=n)	dt + datetime.timedelta(seconds=n)
code: 日付adateををn秒後に進める	adate + datetime.timedelta(seconds=n)	adate + datetime.timedelta(seconds=n)
code: 日付adateにn秒分足す	adate + datetime.timedelta(seconds=n)	adate + datetime.timedelta(seconds=n)
code: adateにn秒分足す	adate + datetime.timedelta(seconds=n)	adate + datetime.timedelta(seconds=n)
code: dtをn秒前に戻す	dt - datetime.timedelta(seconds=n)	dt - datetime.timedelta(seconds=n)
code: 日付と時間dtをn秒前にする	dt - datetime.timedelta(seconds=n)	dt - datetime.timedelta(seconds=n)
code: dtからn秒分減算する	dt - datetime.timedelta(seconds=n)	dt - datetime.timedelta(seconds=n)
code: 日時dtからn秒分、引く	dt - datetime.timedelta(seconds=n)	dt - datetime.timedelta(seconds=n)
code: adateをn秒前にする	adate - datetime.timedelta(seconds=n)	adate - datetime.timedelta(seconds=n)
code: 日付adateからn秒を引く	adate - datetime.timedelta(seconds=n)	adate - datetime.timedelta(seconds=n)
code: 日付adateからn秒を引く	adate - datetime.timedelta(seconds=n)	adate - datetime.timedelta(seconds=n)
code: 日時dtがdt2より先かどうか調べる	dt > dt2	dt < dt2
code: dtが日時dt2より早い	dt < dt2	dt < dt2
code: adateがadate2より前	adate > adate2	adate < adate2
code: adateが日付adate2より前か	adate < adate2	adate < adate2
code: dtがdt2よりあと	dt < dt2	dt > dt2
code: 日時dtがdt2より後ろか	dt < dt2	dt > dt2
code: 日付adateが日付adate2より遅い	adate < adate2	adate > adate2
code: adateが日付adate2より後ろ	adate > adate2	adate > adate2
code: 日時dtがdt2と同時か調べる	dt == dt2	dt == dt2
code: 日時dtが日付と時刻dt2と同時	dt == dt2	dt == dt2
code: 日付adateがadate2と同時かどうか調べる	adate == adate2	adate == adate2
code: adateがadate2と同時かどうか	adate == adate2	adate == adate2
code: dtとdt2の時間差	dt - dt2	dt - dt2
code: dtとdt2の時間差	dt - dt2	dt - dt2
code: 日付adateとadate2の時間差を計算する	adate - adate2	adate - adate2
code: adateと日付adate2の時間差を計算する	adate - adate2	adate - adate2
code: 日付と時間dtと日時dt2の時間差を秒で求める	(dt - dt2).total_seconds()	(dt - dt2).total_seconds()
code: dtとdt2の時間差を秒で求める	(dt - dt2).total_seconds()	(dt - dt2).total_seconds()
code: dtと日付と時間dt2の時間差は何秒か知る	(dt - dt2).total_seconds()	(dt - dt2).total_seconds()
code: dtとdt2の時間差は何秒か知る	(dt - dt2).total_seconds()	(dt - dt2).total_seconds()
code: 日付adateと日付adate2の時間差を秒数で求める	(adate - adate2).total_seconds()	(adate - adate2).total_seconds()
code: 日付adateとadate2の時間差を秒で計算する	(adate - adate2).total_seconds()	(adate - adate2).total_seconds()
code: 日付adateと日付adate2の時間差は何秒か知る	(adate - adate2).total_seconds()	(adate - adate2).total_seconds()
code: dtとdt2の時間差を秒数で求める	(dt - dt2).total_seconds()	(dt - dt2).total_seconds()//60
code: 日時dtと日時dt2の時間差を秒数で求める	(dt - dt2).total_seconds()	(dt - dt2).total_seconds()//60
code: dtと日付と時間dt2の時間差が何分か知る	(dt - dt2).total_seconds()/60	(dt - dt2).total_seconds()//60
code: dtとdt2の時間差は何分か知る	(dt - dt2).total_seconds()	(dt - dt2).total_seconds()//60
code: adateと日付adate2の時間差を秒数で算出する	(adate - adate2).total_seconds()	(adate - adate2).total_seconds()//60
code: 日付adateと日付adate2の時間差を秒数で算出する	(adate - adate2).total_seconds()	(adate - adate2).total_seconds()//60
code: adateと日付adate2の時間差は何分か知る	adate - adate2	(adate - adate2).total_seconds()//60
code: イテラブルiterableとiterable2の全組み合わせ	list(itertools.product(iterable, iterable2)	list(itertools.product(iterable, iterable2))
code: イテラブルiterableと列iterable2の全組み合わせ	list(itertools.product(iterable, iterable2)))	list(itertools.product(iterable, iterable2))
code: iterableとリストiterable2の全組み合わせを繰り返す	pass	pass
code: イテラブルiterableと配列iterable2の全組み合わせを繰り返す	pass	pass
code: AとBの二重ループを単ループにする	pass	pass
code: イテレータAとBを[連続して]繰り返す	for X in itertools.chain(A, B):	for X in itertools.chain(A, B):
code: B(イテレータ)をA(イテレータ)に続けて繰り返す	for X in itertools.chain(A, B):	for X in itertools.chain(A, B):
code: a(リスト)を1次元にする	sys.exit(0)	list(itertools.chain.from_iterable(a))
code: 	import fractions	"file"(ファイル名)から行単位でテキストを読み込む
code: 空の辞書	{}	{}
code: 空の辞書を用意する	collections.ChainMap()	{}
code: 変数名をキーとして辞書	dict(name=element)	dict(name=element)
code: 変数名をキーとして、辞書	dict(name=element)	dict(name=element)
code: 辞書adictのkeyの値を参照する	adict[key]	adict[key]
code: adictのkeyの値を参照する	adict.get(key)	adict[key]
code: 辞書adictのキー一覧を見る	adict.items()	list(adict)
code: 辞書adictの項目名一覧を得る	list(adict)	list(adict)
code: 辞書adictの項目数を得る	len(adict)	len(adict)
code: 辞書adictの項目数	len(adict)	len(adict)
code: adictの全を消去する	adict.clear()	adict.clear()
code: 辞書adictの全エントリをクリアする	dict(adict)	adict.clear()
code: adictをコピーする	adict.copy()	adict.copy()
code: 辞書adictのコピーを行う	dict(adict)	adict.copy()
code: adictからkeyの値	adict.get(key)	adict.get(key)
code: adictからkeyの値	adict.get(key)	adict.get(key)
code: 辞書adictのkeyに対応した値	adict.get(key)	adict.get(key)
code: adictのkeyに対応した値を得る	adict[key]	adict.get(key)
code: adictからkeyの値をエラーなく得る	adict.get(key, None)	adict.get(key, None)
code: 辞書adictからkeyの値をエラーなく参照する	adict.get(key, None)	adict.get(key, None)
code: {adictからkeyの値かもしくはオブジェクトelementを参照する	adict.get(key, element)	adict.get(key, element)
code: {adictからkeyの値か、もしくはオブジェクトelementを得る	adict.get(key, element)	adict.get(key, element)
code: {adictからkeyの値かもしくはオブジェクトelementを参照する	element in adict.get(key, element)	adict.get(key, element)
code: keyが辞書adictにあるか確認する	key not in adict	key in adict
code: keyがadictにある	key in adict	key in adict
code: adictにkeyが存在するかどうか	key in adict	key in adict
code: adict上でkeyが定義されているかどうかテストする	key in adict	key in adict
code: keyが辞書adict上で既に定義されている	key in adict	key in adict
code: adict上でkeyが既に定義されている	key not in adict	key in adict
code: keyがadictにあるか	key in adict	key not in adict
code: adictにkeyが存在する	key in adict	key not in adict
code: 辞書adictにkeyが存在している	key not in adict	key not in adict
code: keyがadict上でまだ定義されていない	key in adict	key not in adict
code: adict上でkeyがまだ定義されていない	key in adict	key not in adict
code: adict上でkeyが未定義	key not in adict	key not in adict
code: adictのエントリの一覧	adict.keys()	adict.items()
code: adictの項目名とその値一覧	list(adict)	adict.items()
code: adictの項目名の一覧	adict.items()	adict.keys()
code: 辞書adictのの一覧	adict.keys()	adict.values()
code: 文字列elementがadictの値に含まれている	element in adict.values()	element in adict.values()
code: オブジェクトelementがadictの値に含まれているかどうか	element not in adict.values()	element in adict.values()
code: elementがadictの値に含まれている	element in adict.values()	element in adict.values()
code: オブジェクトelementが辞書adictの値に含まれていない	element in adict.values()	element not in adict.values()
code: 辞書adictの値にelementが含まれていない	element not in adict.values()	element not in adict.values()
code: 辞書adictの値に文字列elementが含まれていないかテストする	element in adict.values()	element not in adict.values()
code: adictのkeyをelementにする	adict[key] = element	adict[key] = element
code: 辞書adictのkeyをelementにする	element not in adict.values()	adict[key] = element
code: adictにオブジェクトelementをkeyとして加える	adict[key] = element	adict[key] = element
code: 辞書adictにkeyがないとき、elementを追加する	adict.setdefault(key, element)	adict.setdefault(key, element)
code: keyが辞書adictに存在していない場合オブジェクトelementを追加する	adict.setdefault(key, element)	adict.setdefault(key, element)
code: keyが辞書adictに存在しない場合オブジェクトelementを追加する	adict.setdefault(key, element)	adict.setdefault(key, element)
code: alt(追加更新する|追加する|加えて更新する)	adict.update(adict2)	adict.update(adict2)
code: adictにadict2の項目を追加更新する	adict.update(adict2)	adict.update(adict2)
code: adictにキーワード引数kwargsを追加更新する	adict.update(**kwargs)	adict.update(**kwargs)
code: ふたつの辞書を結合する	adict | adict2	adict | adict2
code: 辞書adictとadict2を合体する	adict | adict2	adict | adict2
code: adictからkeyを取り除く	adict.pop(key)	adict.pop(key)
code: 辞書adictから最後に追加したエントリを取り出す	adict.popitem()	adict.popitem()
code: 辞書adictのキーと値を入れ替える	{v: k, v in adict.items()}	{v: k for k, v in adict.items()}
code: alistとalist2から辞書を作成する	dict(zip(alist, alist2)	dict(zip(alist, alist2))
code: 辞書adictを浅く複製する	adict.copy()	dict(adict)
code: adictのコピーを参照する	dict(adict)	dict(adict)
code: 辞書adictのコピーを生成する	adict.copy()	dict(adict)
code: 辞書adictを値を含めて複製する	{k: copy.copy(v) for k, v in adict.items()}	{k: copy.copy(v) for k, v in adict.items()}
code: osモジュールをインポートする	import os	import os
code: 空行を表示する	print()	print()
code: 改行する	print()	print()
code: sを出力する	print(s)	print(s)
code: nを出力する	print(n)	print(n)
code: リストalistをプリントする	print(alist)	print(alist)
code: 列iterableを表示する	print(iterable)	print(iterable)
code: 列iterableを表示する	print(iterable)	print(iterable)
code: objを出力する	print(obj)	print(obj)
code: 改行なしに文字列sを出力する	print(s, end=')	print(s, end='')
code: 改行せずに文字列sを出力する	print(s, end=')	print(s, end='')
code: 改行なしにsをプリントする	print(s, end=''')	print(s, end='')
code: elementの出力を改行なしに行う	print(iterable, end=')	print(s, end='')
code: 文字列elementの出力を改行なしに行う	print(obj, end='')	print(s, end='')
code: 改行なしにnを出力する	print(n, end=')	print(n, end='')
code: nを改行しないで出力する	print(n, end=')	print(n, end='')
code: 改行せずnを出力する	print(n, end=''')	print(n, end='')
code: オブジェクトelementの出力を改行せず行う	print(iterable, end='')	print(n, end='')
code: 文字列elementの出力を改行なしに行う	print(obj, end=')	print(n, end='')
code: リストalistを改行なしに表示する	print(alist, end='')	print(alist, end='')
code: alistを改行なしに出力する	print(alist, end='''''')	print(alist, end='')
code: alistを改行せずプリントする	print(alist, end='''')	print(alist, end='')
code: 文字列elementの出力を改行なしに行う	print(obj, end='')	print(alist, end='')
code: 文字列elementの出力を改行なしに行う	print(iterable, end=')	print(alist, end='')
code: 改行なしにリストiterableをプリントする	print(iterable, end='')	print(iterable, end='')
code: 改行せず列iterableをプリントする	print(iterable, end='')	print(iterable, end='')
code: 改行しないで列iterableを出力する	print(iterable, end='''''')	print(iterable, end='')
code: elementの出力を改行しないで行う	print(n, end=')	print(iterable, end='')
code: オブジェクトelementの出力を改行せず行う	print(obj, end=')	print(iterable, end='')
code: オブジェクトobjを改行なしに出力する	print(obj, end='')	print(obj, end='')
code: objを改行なしに出力する	print(obj, end='')	print(obj, end='')
code: objを改行なしに表示する	print(obj, end=''')	print(obj, end='')
code: オブジェクトelementの出力を改行せずに行う	print(obj, end='''')	print(obj, end='')
code: elementの出力を改行せず行う	print(obj, end=')	print(obj, end='')
code: オプションで改行しないようにする	end = ''	end = ''
code: elementとオブジェクトelement2をカンマで区切って出力する	print(element, element2, sep=',')	print(element, element2, sep=',')
code: カンマで区切ってelementと文字列element2を出力する	print(element, element2, sep=',')	print(element, element2, sep=',')
code: カンマで区切ってオブジェクトelementとelement2を表示する	print(element, element2, sep=',')	print(element, element2, sep=',')
code: タブで区切って文字列elementとオブジェクトelement2を出力する	print(element, element2, sep='\t')	print(element, element2, sep='\t')
code: タブで区切ってオブジェクトelementとelement2を出力する	print(element, element2, sep='\t')	print(element, element2, sep='\t')
code: オブジェクトelementとオブジェクトelement2をタブで区切ってプリントする	print(element, element2, sep='\t')	print(element, element2, sep='\t')
code: オブジェクトelementとelement2をsで区切って表示する	print(element, element2, sep=s)	print(element, element2, sep=s)
code: 文字列sで区切ってオブジェクトelementと文字列element2をプリントする	print(element, element2, sep=s)	print(element, element2, sep=s)
code: 文字列sで区切ってelementとオブジェクトelement2を表示する	print(element, element2, sep=s)	print(element, element2, sep=s)
code: ハローワールドと表示する	print(*atuple, sep='\t')	print('Hello World')
code: 何か試しに動かす	print('Hello World')	print('Hello World')
code: 何か試しに動かす	print('Hello World')	print('Hello World')
code: 初めてのプログラムを書く	print('Hello World')	print('Hello World')
code: 黒色でsを表示する	print(f'\033[30m{s}\033[0m')	print(f'\033[30m{s}\033[0m')
code: sを黒色でプリントする	print(f'\033[30m{s}\033[0m')	print(f'\033[30m{s}\033[0m')
code: 赤色で文字列sを表示する	print(f'\033[31m{s}\033[0m')	print(f'\033[31m{s}\033[0m')
code: 文字列sを赤色でプリントする	print(f'\033[31m{s}\033[0m')	print(f'\033[31m{s}\033[0m')
code: 緑色で文字列sを表示する	print(f'\033[32m{s}\033[0m')	print(f'\033[32m{s}\033[0m')
code: 緑色で文字列sを表示する	print(f'\033[32m{s}\033[0m')	print(f'\033[32m{s}\033[0m')
code: 文字列sを黄色で出力する	print(f'\033[33m{s}\033[0m')	print(f'\033[33m{s}\033[0m')
code: 黄色でsを出力する	print(f'\033[33m{s}\033[0m')	print(f'\033[33m{s}\033[0m')
code: 青色でsをプリントする	print(f'\033[34m{s}\033[0m')	print(f'\033[34m{s}\033[0m')
code: 青色で文字列sを出力する	print(f'\033[34m{s}\033[0m')	print(f'\033[34m{s}\033[0m')
code: マゼンタで文字列sを出力する	print(f'\033[35m{s}\033[0m')	print(f'\033[35m{s}\033[0m')
code: マゼンタで文字列sを表示する	print(f'\033[35m{s}\033[0m')	print(f'\033[35m{s}\033[0m')
code: 文字列sを水色で表示する	print(f'\033[36m{s}\033[0m')	print(f'\033[36m{s}\033[0m')
code: 水色で文字列sを出力する	print(f'\033[36m{s}\033[0m')	print(f'\033[36m{s}\033[0m')
code: 白色でsを出力する	print(f'\033[37m{s}\033[0m')	print(f'\033[37m{s}\033[0m')
code: 文字列sを白色で表示する	print(f'\033[1m{s}\033[0m')	print(f'\033[37m{s}\033[0m')
code: sを太文字で出力する	print(f'\033[1m{s}\033[0m')	print(f'\033[1m{s}\033[0m')
code: 太字で文字列sをプリントする	print(f'\033[1m{s}\033[0m')	print(f'\033[1m{s}\033[0m')
code: 下線付きでsをプリントする	print(f'\033[4m{s}\033[0m')	print(f'\033[4m{s}\033[0m')
code: 下線付きでsを表示する	plt.axhline(figsize=n, n)	print(f'\033[4m{s}\033[0m')
code: 文字列sを黒色にする	f'\033[30m{s}\033[0m'	f'\033[30m{s}\033[0m'
code: 文字列sを赤色にする	f'\033[31m{s}\033[0m'	f'\033[31m{s}\033[0m'
code: 文字列sを緑色化する	f'\033[32m{s}\033[0m'	f'\033[32m{s}\033[0m'
code: sを黄色化する	f'\033[33m{s}\033[0m'	f'\033[33m{s}\033[0m'
code: 文字列sを青色化する	f'\033[34m{s}\033[0m'	f'\033[34m{s}\033[0m'
code: 文字列sをマゼンタ化する	f'\033[35m{s}\033[0m'	f'\033[35m{s}\033[0m'
code: sを水色にする	s.encode(errors='ignore')	f'\033[36m{s}\033[0m'
code: sを白色にする	f'\033[37m{s}\033[0m'	f'\033[37m{s}\033[0m'
code: sを太文字化する	f'\033[1m{s}\033[0m'	f'\033[1m{s}\033[0m'
code: sを下線付き化する	print(f'\033[4m{s}\033[0m')	f'\033[4m{s}\033[0m'
code: xの小数点以下'1'桁までを出力する	print(':.1f'.format(x))	print(':.1f'.format(x))
code: xの小数点以下'2'桁までを出力する	print(':.2f'.format(x, x2)	print(':.2f'.format(x))
code: xの小数点以下'3'桁までを出力する	print(':.3f'.format(x)))))))))	print(':.3f'.format(x))
code: xの小数点以下'4'桁までプリントする	print(':.4f'.format(x)	print(':.4f'.format(x))
code: xの小数点以下'5'桁までプリントする	print(':.4f'.format(x))	print(':.5f'.format(x))
code: xの小数点以下'1'桁までの文字列に変換する	':.4f'.format(x)	':.1f'.format(x)
code: xの小数点以下'2'桁までの文字列に変換する	':.2f'.format(x)	':.2f'.format(x)
code: xの小数点以下'3'桁までの文字列にする	':.3f'.format(x)	':.3f'.format(x)
code: xの小数点以下'4'桁の文字列にする	':.4f'.format(x)	':.4f'.format(x)
code: xの小数点以下'5'桁までの文字列にする	':.5f'.format(x)	':.5f'.format(x)
code: 標準入力から1行受け取る	input()	input()
code: ユーザの入力を受け取る	input()	input()
code: 標準入力から入力される	sys.stdin.read(1)	input()
code: [ユーザの]入力を整数として受け取る	int(input()))	int(input())
code: ユーザが整数を入力する	int(input()))	int(input())
code: ユーザから入力される	input()	int(input())
code: ファイル名のセパレータ記号	os.sep	os.sep
code: パスの区切り記号	os.sep	os.sep
code: ディレクトリを見る	os.getcwd()	os.getcwd()
code: 作業ディレクトリ	os.getcwd()	os.getcwd()
code: 作業ディレクトリをfilenameに変更する	os.chdir(os.dirname(filename)	os.chdir(os.dirname(filename))
code: filenameにカレント作業ディレクトリをする	os.chdir(os.dirname(filename)))	os.chdir(os.dirname(filename))
code: ワーキングディレクトリをfilenameに変更する	os.chdir(os.dirname(filename)	os.chdir(os.dirname(filename))
code: UNIXコマンドtextを実行する	os.system(text)	os.system(text)
code: ファイルfilenameの拡張子付きのファイル名	os.path.basename(filename)	os.path.basename(filename)
code: ファイルパスfilenameの拡張子付きのファイル名	os.path.splitext(os.path.basename(filename))[0]	os.path.basename(filename)
code: ファイルパスfilenameから拡張子付きのファイル名を見る	os.path.basename(filename)	os.path.basename(filename)
code: ファイルfilenameからファイル名を取り出す	os.path.basename(filename)	os.path.basename(filename)
code: ファイルパスfilenameのベースファイル名を見る	os.path.splitext(os.path.basename(filename(filename)[0]	os.path.splitext(os.path.basename(filename))[0]
code: ファイルパスfilenameのベースファイル名を見る	os.path.splitext(os.path.basename(filename)[0]	os.path.splitext(os.path.basename(filename))[0]
code: ファイルパスfilenameからベースファイル名を取り出す	os.path.splitext(os.path.basename(filename))))))[0]	os.path.splitext(os.path.basename(filename))[0]
code: ファイルfilenameからベースファイル名を取り出す	os.path.basename(filename)	os.path.splitext(os.path.basename(filename))[0]
code: ファイルfilenameの拡張子を使う	os.path.splitext(filename)[0].lstrip('.')	os.path.splitext(filename)[1].lstrip('.')
code: ファイルパスfilenameの拡張子をtextに変更する	os.path.splitext(filename)[0] + text	os.path.splitext(filename)[0] + text
code: ファイルパスfilenameのディレクトリ名	os.path.dirname(os.path.abspath(___file_)))))))))	os.path.dirname(filename)
code: ファイルパスfilenameのフォルダ名	os.path.dirname(filename)	os.path.dirname(filename)
code: ファイルfilenameからフォルダ名取り出す	os.path.dirname(filename)	os.path.dirname(filename)
code: ファイルパスfilenameからディレクトリ名取り出す	os.path.dirname(filename)	os.path.dirname(filename)
code: ファイルfilenameの絶対パスを使う	os.path.abspath(filename)	os.path.abspath(filename)
code: ファイルfilenameの絶対ファイルパスを求める	os.path.abspath(filename)	os.path.abspath(filename)
code: ファイルパスfilenameを絶対パスにする	os.path.abspath(filename)	os.path.abspath(filename)
code: ファイルfilenameをディレクトリ名とファイル名に分割する	os.path.split(filename)	os.path.split(filename)
code: ファイルfilenameをベース名と拡張子に分割する	os.path.splitext(filename)	os.path.splitext(filename)
code: textとtext2をファイルパスとして結合する	os.path.join(text, text2)	os.path.join(text, text2)
code: ファイルパスfilenameとtextを結合する	os.path.join(filename, text)	os.path.join(filename, text)
code: ファイルパスfilenameが存在する	os.path.exists(filename)	os.path.exists(filename)
code: ファイルfilenameが存在する	os.path.exists(filename)	os.path.exists(filename)
code: ファイルfilenameが存在しないかどうか調べる	os.path.exists(filename)	not os.path.exists(filename)
code: ファイルfilenameがないかテストする	os.path.exists(filename)	not os.path.exists(filename)
code: ファイルパスfilenameのファイルサイズ	os.path.get_size(filename)	os.path.get_size(filename)
code: スクリプトファイルのパス	os.path.abspath(_filename)	os.path.abspath(__file__)
code: スクリプトファイルのフォルダパス	os.path.dirname(os.path.abspath(_file_))	os.path.dirname(os.path.abspath(__file__))
code: スクリプトファイルのディレクトリ名	os.path.dirname(os.path.abspath(_file_))	os.path.dirname(os.path.abspath(__file__))
code: スクリプトファイルと同じディレクトリのファイルパスfilenameのパス	os.path.dirname(filename)	os.path.join(os.path.dirname(os.path.abspath(__file__)), filename)
code: スクリプトファイルと同じフォルダのファイルパスfilenameのパス	os.path.dirname(filename)	os.path.join(os.path.dirname(os.path.abspath(__file__)), filename)
code: ファイルfilenameをオープンする	open(filename, encoding='euc_jp')	open(filename)
code: ファイルパスfilenameからの入力ストリームを使う	os.path.exists(filename)	open(filename)
code: ファイルfilenameからの読み込みストリームを見る	file = open(filename)	open(filename)
code: ファイルfilenameからストリームを読み込み、fileとする	file = open(filename)	file = open(filename)
code: ファイルfilenameからストリームを読み込んでfileとする	file = open(filename)	file = open(filename)
code: ファイルfilenameからストリームを開き	file = open(filename)	file = open(filename)
code: ファイルパスfilenameからストリームを開き	file = open(filename)	file = open(filename)
code: 読み込み用にファイルfilenameをオープンする	f = open(filename, mode='r')	open(filename, mode='r')
code: ファイルパスfilenameを読み込みモードとしてオープンする	open(filename, mode='r')	open(filename, mode='r')
code: 読み込みモードでファイルパスfilenameを開く	open(filename, mode='r')	open(filename, mode='r')
code: 読み込みできるようにファイルfilenameをオープンする	open(filename, mode='r')	open(filename, mode='r')
code: 読み込みできるようにファイルパスfilenameをオープンする	open(filename, mode='r')	open(filename, mode='r')
code: ファイルfilenameを開いて	open(filename, mode='rb')	open(filename, mode='r')
code: ファイルパスfilenameをオープンして	open(filename, mode='wb')	open(filename, mode='r')
code: バイナリモードでファイルfilenameをオープンする	open(filename, mode='rb')	open(filename, mode='rb')
code: バイナリモードを用いてファイルfilenameをオープンする	open(filename, mode='rb')	open(filename, mode='rb')
code: ファイルパスfilenameをバイナリモードとしてオープンする	open(filename, mode='rb')	open(filename, mode='rb')
code: ファイルパスfilenameをバイナリできるようにオープンする	open(filename, mode='rb')	open(filename, mode='rb')
code: ファイルfilenameをバイナリできるようにオープンする	open(filename, mode='rb')	open(filename, mode='rb')
code: ファイルパスfilenameをオープンして	open(filename, mode='wb')	open(filename, mode='rb')
code: ファイルパスfilenameを開いて	open(filename, mode='rb')	open(filename, mode='rb')
code: ファイルパスfilenameを書き込みモードとして開く	open(filename, mode='w')	open(filename, mode='w')
code: 書き込み用にファイルfilenameをオープンする	open(filename, mode='w')	open(filename, mode='w')
code: ファイルパスfilenameを書き込み用に開く	open(filename, mode='w')	open(filename, mode='w')
code: 書き込みできるようにファイルパスfilenameをオープンする	open(filename, mode='w')	open(filename, mode='w')
code: ファイルパスfilenameを書き込みできるように開く	open(filename, mode='w')	open(filename, mode='w')
code: ファイルパスfilenameを開いて	open(filename, mode='w')	open(filename, mode='w')
code: ファイルパスfilenameを開いて	open(filename, mode='r')	open(filename, mode='w')
code: ファイルfilenameをバイナリ書き込みモードとしてオープンする	open(filename, mode='wb')	open(filename, mode='wb')
code: ファイルパスfilenameをバイナリ書き込みモードでオープンする	open(filename, mode='wb')	open(filename, mode='wb')
code: ファイルfilenameをバイナリ書き込み用に開く	open(filename, mode='wb')	open(filename, mode='wb')
code: ファイルパスfilenameをバイナリ書き込みできるように開く	open(filename, mode='wb')	open(filename, mode='wb')
code: バイナリ書き込みできるようにファイルfilenameを開く	open(filename, mode='wb')	open(filename, mode='wb')
code: ファイルfilenameを開いて	open(filename, mode='r')	open(filename, mode='wb')
code: ファイルパスfilenameをオープンして	open(filename, mode='wb')	open(filename, mode='wb')
code: 追加用にファイルパスfilenameをオープンする	open(filename, mode='a')	open(filename, mode='a')
code: ファイルfilenameを追加モードでオープンする	open(filename, mode='a')	open(filename, mode='a')
code: ファイルfilenameを追加モードを使ってオープンする	open(filename, mode='a')	open(filename, mode='a')
code: ファイルfilenameを追加できるようにオープンする	open(filename, mode='a')	open(filename, mode='a')
code: ファイルパスfilenameを追加できるようにオープンする	open(filename, mode='a')	open(filename, mode='a')
code: ファイルfilenameを開いて	open(filename, mode='r')	open(filename, mode='a')
code: ファイルfilenameをオープンして	open(filename, mode='wb')	open(filename, mode='a')
code: ファイルfilenameを読み込み用にオープンして	f = open(filename, mode='r')	f = open(filename, mode='r')
code: 読み込みモードでファイルパスfilenameを開いて	open(filename, mode='r')	f = open(filename, mode='r')
code: 読み込みモードを用いてファイルパスfilenameを開き	f = open(filename, mode='r')	f = open(filename, mode='r')
code: ファイルパスfilenameから読み込みストリームをオープンして	file = open(filename)	f = open(filename, mode='r')
code: ファイルfilenameから読み込みストリームを開いて	file = open(filename)	f = open(filename, mode='r')
code: バイナリモードを使ってファイルfilenameを開き	f = open(filename, mode='rb')	f = open(filename, mode='rb')
code: バイナリモードとしてファイルfilenameをオープンして	f = open(filename, mode='rb')	f = open(filename, mode='rb')
code: ファイルfilenameをバイナリ用に開き	f = open(filename, mode='rb')	f = open(filename, mode='rb')
code: ファイルfilenameからバイナリストリームをオープンして	f = open(filename, mode='rb')	f = open(filename, mode='rb')
code: ファイルパスfilenameからバイナリストリームを開いて	f = open(filename, mode='rb')	f = open(filename, mode='rb')
code: 書き込みモードとしてファイルfilenameを開いて	f = open(filename, mode='w')	f = open(filename, mode='w')
code: 書き込みモードを用いてファイルパスfilenameをオープンして	f = open(filename, mode='w')	f = open(filename, mode='w')
code: 書き込みモードとしてファイルパスfilenameを開いて	f = open(filename, mode='w')	f = open(filename, mode='w')
code: ファイルパスfilenameから書き込みストリームをオープンして	f = open(filename, mode='w')	f = open(filename, mode='w')
code: ファイルfilenameから書き込みストリームを開き	f = open(filename, mode='w')	f = open(filename, mode='w')
code: ファイルパスfilenameをバイナリ書き込み用にオープンして	f = open(filename, mode='wb')	f = open(filename, mode='wb')
code: バイナリ書き込み用にファイルパスfilenameをオープンして	f = open(filename, mode='wb')	f = open(filename, mode='wb')
code: ファイルパスfilenameをバイナリ書き込み用にオープンして	f = open(filename, mode='wb')	f = open(filename, mode='wb')
code: ファイルパスfilenameからバイナリ書き込みストリームを開き	f = open(filename, mode='wb')	f = open(filename, mode='wb')
code: ファイルfilenameからバイナリ書き込みストリームをオープンして	f = open(filename, mode='wb')	f = open(filename, mode='wb')
code: ファイルfilenameを追加用にオープンして	f = open(filename, mode='a')	f = open(filename, mode='a')
code: 追加用にファイルパスfilenameをオープンして	f = open(filename, mode='a')	f = open(filename, mode='a')
code: 追加用にファイルパスfilenameをオープンして	f = open(filename, mode='a')	f = open(filename, mode='a')
code: ファイルパスfilenameから追加ストリームを開き	f = open(filename, mode='a')	f = open(filename, mode='a')
code: ファイルパスfilenameから追加ストリームを開き	f = open(filename, mode='a')	f = open(filename, mode='a')
code: オプションで読み込み用にセットする	mode = 'r'	mode = 'r'
code: オプションで、読み込み用に設定する	mode = 'r'	mode = 'r'
code: オプションで、読み込みモードを使用する	mode = 'r'	mode = 'r'
code: オプションでバイナリモードにセットする	mode = 'rb'	mode = 'rb'
code: オプションでバイナリモードにセットする	mode = 'rb'	mode = 'rb'
code: オプションでバイナリモードを使用する	mode = 'rb'	mode = 'rb'
code: オプションで書き込み用にセットする	mode = 'w'	mode = 'w'
code: オプションで書き込み用にセットする	mode = 'w'	mode = 'w'
code: オプションで、書き込みモードを用いる	mode = 'w'	mode = 'w'
code: オプションで、バイナリ書き込み用にセットする	mode = 'wb'	mode = 'wb'
code: オプションでバイナリ書き込み用に変更する	mode = 'wb'	mode = 'wb'
code: オプションで、バイナリ書き込みモードを用いる	mode = 'wb'	mode = 'wb'
code: オプションで追加用にする	mode = 'a'	mode = 'a'
code: オプションで追加用に設定する	mode = 'a'	mode = 'a'
code: オプションで追加モードを用いる	mode = 'a'	mode = 'a'
code: UTF8でファイルパスfilenameを開く	open(filename, encoding='utf-8')	open(filename, encoding='utf-8')
code: ファイルパスfilenameをUTF8で開く	open(filename, encoding='utf-8')	open(filename, encoding='utf-8')
code: UTF8でファイルfilenameをオープンする	open(filename, encoding='utf-8')	open(filename, encoding='utf-8')
code: SJISとしてファイルfilenameをオープンする	open(filename, encoding='shift_jis')	open(filename, encoding='shift_jis')
code: SJISを使ってファイルfilenameを開く	open(filename, encoding='shift_jis')	open(filename, encoding='shift_jis')
code: SJISを用いてファイルパスfilenameを開く	open(filename, encoding='shift_jis')	open(filename, encoding='shift_jis')
code: ファイルfilenameをEUCでオープンする	open(filename, encoding='euc_jp')	open(filename, encoding='euc_jp')
code: ファイルパスfilenameをEUCとしてオープンする	open(filename, encoding='euc_jp')	open(filename, encoding='euc_jp')
code: ファイルパスfilenameをEUCを用いて開く	open(filename, encoding='euc_jp')	open(filename, encoding='euc_jp')
code: BOM付きとしてファイルパスfilenameを開く	open(filename, encoding='utf_8_sig')	open(filename, encoding='utf_8_sig')
code: BOM付きでファイルパスfilenameをオープンする	open(filename, encoding='utf_8_sig')	open(filename, encoding='utf_8_sig')
code: ファイルパスfilenameをBOM付きとしてオープンする	open(filename, encoding='utf_8_sig')	open(filename, encoding='utf_8_sig')
code: ファイルパスfilenameを文字コードtextを用いてオープンする	open(filename, encoding=text)	open(filename, encoding=text)
code: ファイルパスfilenameを文字コードtextでオープンする	open(filename, encoding=text)	open(filename, encoding=text)
code: 文字コードtextを使ってファイルfilenameを開く	open(filename, encoding=text)	open(filename, encoding=text)
code: ファイルパスfilenameをsの示すエンコーディングを使ってオープンする	open(filename, encoding=s)	open(filename, encoding=s)
code: ファイルパスfilenameをsの示す文字コードとしてオープンする	open(filename, encoding=s)	open(filename, encoding=s)
code: 文字列sの示す文字コードを用いてファイルfilenameをオープンする	open(filename, encoding=s)	open(filename, encoding=s)
code: ファイルfilenameをUTF8として書き込みできるようにオープンする	open(filename, mode='w', encoding='utf-8')	open(filename, mode='w', encoding='utf-8')
code: UTF8で書き込みできるようにファイルパスfilenameを開く	open(filename, mode='w', encoding='utf-8')	open(filename, mode='w', encoding='utf-8')
code: UTF8としてファイルfilenameを書き込みできるように開く	open(filename, mode='w', encoding='utf-8')	open(filename, mode='w', encoding='utf-8')
code: ファイルfilenameを書き込み用にSJISを用いて開く	open(filename, mode='w', encoding='shift_jis')	open(filename, mode='w', encoding='shift_jis')
code: 書き込み用にSJISを使ってファイルパスfilenameを開く	open(filename, mode='w', encoding='shift_jis')	open(filename, mode='w', encoding='shift_jis')
code: ファイルfilenameをSJISで書き込みできるようにオープンする	open(filename, mode='w', encoding='shift_jis')	open(filename, mode='w', encoding='shift_jis')
code: 書き込みできるようにファイルfilenameをEUCとして開く	open(filename, mode='w', encoding='euc_jp')	open(filename, mode='w', encoding='euc_jp')
code: ファイルfilenameをEUCを使って書き込みできるように開く	open(filename, mode='w', encoding='euc_jp')	open(filename, mode='w', encoding='euc_jp')
code: 書き込みできるようにファイルパスfilenameをEUCで開く	open(filename, mode='w', encoding='euc_jp')	open(filename, mode='w', encoding='euc_jp')
code: BOM付きでファイルfilenameを書き込みできるように開く	open(filename, mode='w', encoding='utf_8_sig')	open(filename, mode='w', encoding='utf_8_sig')
code: ファイルパスfilenameを書き込み用にBOM付きとして開く	open(filename, mode='w', encoding='utf_8_sig')	open(filename, mode='w', encoding='utf_8_sig')
code: ファイルfilenameをBOM付きとして書き込みできるように開く	open(filename, mode='w', encoding='utf_8_sig')	open(filename, mode='w', encoding='utf_8_sig')
code: 書き込みできるようにファイルfilenameを文字コードtextでオープンする	open(filename, mode='w', encoding=text)	open(filename, mode='w', encoding=text)
code: 文字コードtextを用いて書き込み用にファイルパスfilenameをオープンする	open(filename, mode='w', encoding=text)	open(filename, mode='w', encoding=text)
code: ファイルパスfilenameを書き込み用に文字コードtextで開く	open(filename, mode='w', encoding=text)	open(filename, mode='w', encoding=text)
code: 文字列sの示す文字コードとしてファイルパスfilenameを書き込みできるようにオープンする	open(filename, mode='w', encoding=s)	open(filename, mode='w', encoding=s)
code: ファイルパスfilenameを文字列sの示す文字コードとして書き込み用にオープンする	open(filename, mode='w', encoding=s)	open(filename, mode='w', encoding=s)
code: 書き込み用にsの示す文字コードでファイルfilenameを開く	open(filename, mode='w', encoding=s)	open(filename, mode='w', encoding=s)
code: UTF8でファイルfilenameを追加できるようにオープンする	open(filename, mode='a', encoding='utf-8')	open(filename, mode='a', encoding='utf-8')
code: 追加できるようにUTF8で既存のファイルパスfilenameをオープンする	open(filename, mode='a', encoding='utf-8')	open(filename, mode='a', encoding='utf-8')
code: 追加できるようにUTF8を使ってファイルパスfilenameをオープンする	open(filename, mode='a', encoding='utf-8')	open(filename, mode='a', encoding='utf-8')
code: ファイルfilenameを追加できるようにSJISを用いてオープンする	open(filename, mode='a', encoding='shift_jis')	open(filename, mode='a', encoding='shift_jis')
code: 追加できるようにSJISを使って既存のファイルパスfilenameをオープンする	open(filename, mode='a', encoding='shift_jis')	open(filename, mode='a', encoding='shift_jis')
code: 追加できるように既存のファイルfilenameをSJISを使って開く	open(filename, mode='a', encoding='shift_jis')	open(filename, mode='a', encoding='shift_jis')
code: 追加できるようにファイルfilenameをEUCを用いて開く	open(filename, mode='a', encoding='euc_jp')	open(filename, mode='a', encoding='euc_jp')
code: 追加できるように既存のファイルfilenameをEUCとしてオープンする	open(filename, mode='a', encoding='euc_jp')	open(filename, mode='a', encoding='euc_jp')
code: EUCとして既存のファイルfilenameを追加できるように開く	open(filename, mode='a', encoding='euc_jp')	open(filename, mode='a', encoding='euc_jp')
code: ファイルfilenameをBOM付きを使って追加できるようにオープンする	open(filename, mode='a', encoding='utf_8_sig')	open(filename, mode='a', encoding='utf_8_sig')
code: 既存のファイルfilenameを追加できるようにBOM付きでオープンする	open(filename, mode='a', encoding='utf_8_sig')	open(filename, mode='a', encoding='utf_8_sig')
code: ファイルfilenameをBOM付きを用いて追加できるように開く	open(filename, mode='a', encoding='utf_8_sig')	open(filename, mode='a', encoding='utf_8_sig')
code: 追加できるように文字コードtextを用いてファイルパスfilenameをオープンする	open(filename, mode='a', encoding=text)	open(filename, mode='a', encoding=text)
code: ファイルfilenameを追加できるように文字コードtextとしてオープンする	open(filename, mode='a', encoding=text)	open(filename, mode='a', encoding=text)
code: 文字コードtextを使って追加できるように既存のファイルパスfilenameをオープンする	open(filename, mode='a', encoding=text)	open(filename, mode='a', encoding=text)
code: sの示すエンコーディングを用いて追加できるように既存のファイルパスfilenameを開く	open(filename, mode='a', encoding=s)	open(filename, mode='a', encoding=s)
code: ファイルパスfilenameを追加できるようにsの示す文字コードを使ってオープンする	open(filename, mode='a', encoding=s)	open(filename, mode='a', encoding=s)
code: 既存のファイルfilenameをsの示すエンコーディングとして追加できるようにオープンする	open(filename, mode='a', encoding=s)	open(filename, mode='a', encoding=s)
code: オプションでエンコーディングをUTF8にする	encoding = 'utf-8'	encoding = 'utf-8'
code: オプションで、文字コードをUTF8に変更する	encoding = 'utf-8'	encoding = 'utf-8'
code: オプションでUTF8を用いる	encoding = 'utf-8'	encoding = 'utf-8'
code: オプションで、文字コードをSJISに設定する	encoding ='shift_jis'	encoding = 'shift_jis'
code: オプションで、エンコーディングをSJISに設定する	encoding ='shift_jis'	encoding = 'shift_jis'
code: オプションで、SJISを使う	encoding ='shift_jis'	encoding = 'shift_jis'
code: オプションで、エンコーディングをEUCにする	encoding = 'euc_jp'	encoding = 'euc_jp'
code: オプションで文字コードをEUCにする	encoding = 'euc_jp'	encoding = 'euc_jp'
code: オプションでEUCを用いる	encoding = 'euc_jp'	encoding = 'euc_jp'
code: オプションで、文字コードをBOM付きに設定する	encoding = 'utf_8_sig'	encoding = 'utf_8_sig'
code: オプションで文字コードをBOM付きにする	encoding = 'utf_8_sig'	encoding = 'utf_8_sig'
code: オプションでBOM付きを使う	encoding = 'utf_8_sig'	encoding = 'utf_8_sig'
code: オプションでエンコーディングを文字コードtextにする	encoding = text	encoding = text
code: オプションで、文字コードを文字コードtextに変更する	encoding = text	encoding = text
code: オプションで文字コードtextを使用する	encoding = text	encoding = text
code: オプションで文字コードをsの示すエンコーディングに設定する	encoding = s	encoding = s
code: オプションで文字コードを文字列sの示す文字コードにする	encoding = s	encoding = s
code: オプションで、sの示すエンコーディングを用いる	encoding = s	encoding = s
code: オプションでsの示すエンコーディングを使う	encoding = s	encoding = s
code: オプションで、バッファリングを無効にする	buffering = 0	buffering = 0
code: オプションでバッファリングのサイズをnにする	buffering = n	buffering = n
code: オプションで、バッファリングのサイズをnに変更する	buffering = n	buffering = n
code: オプションでエンコーディングエラーがあるとき例外を発生させる	errors ='strict'	errors = 'strict'
code: オプションで、エンコーディングエラーがあるとき、例外を発生させるように変更する	errors ='strict'	errors = 'strict'
code: オプションで、文字コードエラーを無視する	errors = 'ignore'	errors = 'ignore'
code: オプションで文字コードエラーを無視するように変更する	errors = 'ignore'	errors = 'ignore'
code: オプションで、改行コードをUNIXに設定する	newline = '\n'	newline = '\n'
code: オプションで改行コードを旧Macに変更する	newline = '\r\n'	newline = '\r'
code: オプションで、改行コードをWindowsにセットする	newline = '\r\n'	newline = '\r\n'
code: オプションで、改行コードを動作環境依存に変更する	newline = None	newline = None
code: ファイルfを解放する	f.close()	f.close()
code: 入力ストリームf全体を全て読む	f.read(1)	f.read()
code: 入力ストリームf全体を全て読む	f.read()	f.read()
code: ファイルfから1バイト読む	f.read(1)	f.read(1)
code: ファイルfから1バイト読む	f.read()	f.read(1)
code: 入力ストリームfからn文字読み込む	f.read(n)	f.read(n)
code: ファイルfからnバイト、読む	f.read(n)	f.read(n)
code: ファイルf全体をリストとして読む	f.readlines()	f.readlines()
code: ストリームf全体をリストとして読み込む	f.readlines()	f.readlines()
code: ファイルf全体をリストにする	f.read(1)	[s.strip() for s in f.readlines()]
code: ストリームf全体をリストにする	f.readlines()	[s.strip() for s in f.readlines()]
code: ファイルfを一行ずつ読み込む	f.read()	f.readline()
code: 改行除外して出力ストリームfを一行ずつ読む	f.readline()	f.readline()
code: 改行を取り除いてファイルfを一行ずつ読み込む	f.readline()	f.readline()
code: 出力ストリームfを改行除外して一行ずつ読み込む	f.readline()	f.readline()
code: 文字列sをストリームfに書く	f.write(s)	f.write(s)
code: ストリームfに文字列sを書き込む	f.write(s)	f.write(s)
code: 文字列sをファイルfに書き込む	f.write(s)	f.write(s)
code: xを文字列にして出力ストリームfに書き込む	f.write(str(x))))))	f.write(str(x))
code: ファイルfにxを文字列に変換して書き込む	f.write(str(x)	f.write(str(x))
code: ファイルfにxを文字列にして書く	f.write(str(x)	f.write(str(x))
code: xが正の数かどうか判定する	x > 0	x > 0
code: xが正の整数	x > 0	x > 0
code: xが負の数か	x < 0	x < 0
code: xが負の整数	x < 0	x < 0
code: xが一桁の整数	-9 <= x <= 9	-9 <= x <= 9
code: xが一桁の整数	-9 <= x <= 9	-9 <= x <= 9
code: xが-9以上9以下か調べる	-9 <= x <= 9	-9 <= x <= 9
code: xが-9以上9以下かどうか	-9 <= x <= 9	-9 <= x <= 9
code: xが一桁の正の数か判定する	0 <= x <= 9	0 <= x <= 9
code: xが一桁の正の数か	0 <= x <= 9	0 <= x <= 9
code: xが1もしくは2	x == 1 or x == 2	x == 1 or x == 2
code: xが1、もしくは2かどうか	x == 1 or x == 2	x == 1 or x == 2
code: xが1もしくは2もしくは3に等しいかどうか調べる	x == 1 or x == 2 or x == 3	x == 1 or x == 2 or x == 3
code: xが1、もしくは2もしくは3に等しい	x == 1 or x == 2 or x == 3	x == 1 or x == 2 or x == 3
code: xのx2乗	pow(x, x2)	x ** x2
code: xにx2を加算する	x + x2	x + x2
code: xからx2を引く	x - x2	x - x2
code: xにx2をかける	x * x2	x * x2
code: xをx2で除する	x / x2	x / x2
code: xをx2で除算して切り捨てる	x // x2	x // x2
code: xをx2で整数除算する	x // x2	x // x2
code: xをx2で割った余り	x % x2	x % x2
code: Pythonのバージョンを知る	sys.version	sys.version
code: 浮動小数点数の最大値を用いる	sys.float_info.max	sys.float_info.max
code: 浮動小数点数の最小値を用いる	sys.float_info.min	sys.float_info.min
code: 計算機イプシロン	sys.float_info.epsilon	sys.float_info.epsilon
code: xが整数	x.is_integer()	x.is_integer()
code: xが整数	x.is_integer()	x.is_integer()
code: xを十六進文字列にする	x.hex()	x.hex()
code: sのHEXから浮動小数点数にする	float.fromhex(s)	float.fromhex(s)
code: 分数を用いる	import fractions	import fractions
code: qの分子	deq[0]	q.numerator
code: qの分母	q.denominator	q.denominator
code: 分母の最大値を指定して近似したい	q.limit_denominator(max_denominator=1000000)	q.limit_denominator(max_denominator=1000000)
code: 分母が高々 max_denominator である、self に最も近い Fraction を見付けて	q.limit_denominator(max_denominator=1000000)	q.limit_denominator(max_denominator=1000000)
code: 分母が高々 max_denominator である、self に最も近い Fraction を見付けて	q.limit_denominator(max_denominator=1000000)	q.limit_denominator(max_denominator=1000000)
code: 与えられた浮動小数点数の分数近似	q.limit_denominator(max_denominator=1000000)	q.limit_denominator(max_denominator=1000000)
code: n進数sを整数に変換する	int(s, n)	int(s, n)
code: n進数sを整数に変換する	int(s, n)	int(s, n)
code: 二進数文字列sを整数化する	bin(s)	int(s, 2)
code: 2進数sを整数に変換する	int(s, 2)	int(s, 2)
code: 8進文字列sを整数に変換する	int(s, 2)	int(s, 8)
code: 八進数文字列sを整数に変換する	oct(s)[2:]	int(s, 8)
code: 十六進数sを整数に変換する	int(s, 16)	int(s, 16)
code: 十六進文字列sを整数にする	int(s, 16)	int(s, 16)
code: n進数sをn2バイトのバイナリ化する	int(s, n2).to_bytes(length=n2, byteorder='big')	int(s, n2).to_bytes(length=n2, byteorder='big')
code: n進数の文字列sをバイト列に変換する	int(s, 2).to_bytes(length=n2, byteorder='big')	int(s, n2).to_bytes(length=n2, byteorder='big')
code: 2進数のsをn2バイトのバイナリに変換する	int(s, 8).to_bytes(length=n2, byteorder='big')	int(s, 2).to_bytes(length=2, byteorder='big')
code: 2進sをn2バイトのバイト列に変換する	int(s, 2).to_bytes(length=2, byteorder='big')	int(s, 2).to_bytes(length=2, byteorder='big')
code: 8進sをn2バイトのバイナリにする	int(s, n).to_bytes(length=n2, byteorder='big')	int(s, 8).to_bytes(length=n2, byteorder='big')
code: 8進数文字列sをバイト列に変換する	int(s, 8).to_bytes(length=n2, byteorder='big')	int(s, 8).to_bytes(length=n2, byteorder='big')
code: 16進数の文字列sをnバイトのバイナリに変換する	int(s, 8).to_bytes(length=n2, byteorder='big')	int(s, 16).to_bytes(length=n, byteorder='big')
code: 16進数のsをバイナリに変換する	int(s, 2).to_bytes(length=2, byteorder='big')	int(s, 16).to_bytes(length=n, byteorder='big')
code: nの二進表現	oct(n)	bin(n)
code: nの2進表記	bin(n)	bin(n)
code: nを二進数表記化する	bin(n)	bin(n)
code: nを二進リテラルにする	hex(n)	bin(n)
code: nの8進リテラルを求める	hex(n)	oct(n)
code: nの八進表現を求める	oct(n)	oct(n)
code: 整数nを八進数リテラルに変換する	oct(n)	oct(n)
code: 整数nを八進数リテラルに変換する	oct(n)	oct(n)
code: 整数nの16進数表現	hex(n)	hex(n)
code: 整数nの十六進表現を求める	hex(n)	hex(n)
code: nを十六進表記に変換する	hex(n)	hex(n)
code: nを16進表記に変換する	hex(n)	hex(n)
code: nの2進数文字列を使う	bin(n)[2:]	bin(n)[2:]
code: 整数nの二進文字列を見る	bin(n)[2:]	bin(n)[2:]
code: 整数nを2進数文字列化する	bin(n)[2:]	bin(n)[2:]
code: nを二進文字列に変換する	oct(n)[2:]	bin(n)[2:]
code: nの8進数文字列を見る	oct(n)[2:]	oct(n)[2:]
code: 整数nの八進文字列を見る	oct(n)[2:]	oct(n)[2:]
code: nを八進文字列化する	oct(n)[2:]	oct(n)[2:]
code: 整数nを八進文字列化する	oct(n)[2:]	oct(n)[2:]
code: 整数nの十六進文字列を見る	hex(n)[2:]	hex(n)[2:]
code: nの十六進文字列を見る	hex(n)[2:]	hex(n)[2:]
code: nを十六進文字列に変換する	hex(n)[2:]	hex(n)[2:]
code: 整数nを16進文字列に変換する	hex(n)[2:]	hex(n)[2:]
code: nのビット長	n.bit_length()	n.bit_length()
code: 整数nのビット長を調べる	n.bit_length()	n.bit_length()
code: nのバイト長	(n.bit_length() + 7) // 8	(n.bit_length() + 7) // 8
code: nのバイト長を調べる	(n.bit_length() + 7) // 8	(n.bit_length() + 7) // 8
code: nをバイト列に変換する	n.to_bytes(length=n2, byteorder='big')	n.to_bytes((n.bit_length() + 7) // 8, byteorder='big')
code: 整数nをバイト列にする	n.to_bytes(length=n2, byteorder='big')	n.to_bytes((n.bit_length() + 7) // 8, byteorder='big')
code: nを符号付きでバイナリにする	n.to_bytes(((((n.bit_length() + 7) // 8, byteorder='big', signed=True)	n.to_bytes((n.bit_length() + 7) // 8, byteorder='big', signed=True)
code: 符号付きでnをバイナリにする	n.to_bytes((n.bit_length() + 7) // 8, byteorder='big', signed=True)	n.to_bytes((n.bit_length() + 7) // 8, byteorder='big', signed=True)
code: nを符号付きでバイト列化する	n.to_bytes((((((((((((n.bit_length() + 7) // 8, byteorder='big', signed=True)	n.to_bytes((n.bit_length() + 7) // 8, byteorder='big', signed=True)
code: 整数nをバイト列にする	n.to_bytes(length=n2, byteorder='big')	n.to_bytes(length=n2, byteorder='big')
code: 整数nを符号なしでバイト列化する	n.to_bytes(length=n2, byteorder='big')	n.to_bytes(length=n2, byteorder='big')
code: 整数nをバイト列にする	n.to_bytes(length=n2, byteorder='big')	n.to_bytes(length=n2, byteorder='big')
code: 符号付きでnを長さn2のバイナリに変換する	n.to_bytes(length=n2, byteorder='big', signed=True)	n.to_bytes(length=n2, byteorder='big', signed=True)
code: 符号付きでnを長さn2のバイナリにする	n.to_bytes(length=n2, byteorder='big', signed=True)	n.to_bytes(length=n2, byteorder='big', signed=True)
code: 符号付きで整数nを長さn2のバイト列化する	n.to_bytes(length=n2, byteorder='big', signed=True)	n.to_bytes(length=n2, byteorder='big', signed=True)
code: nにn2を加える	n + n2	n + n2
code: n＋n2	n * n2	n + n2
code: n＋n2	n * n2	n + n2
code: nとn2の和	n + n2	n + n2
code: nとn2の和	n + n2	n + n2
code: nからn2を減算する	n -= n2	n - n2
code: nマイナスn2	n - n2	n - n2
code: nマイナスn2	n - n2	n - n2
code: nとn2の差	n - n2	n - n2
code: nとn2の差を求める	n - n2	n - n2
code: nにn2を掛ける	n * n2	n * n2
code: nかけるn2を求める	n * n2	n * n2
code: n×n2	n * n2	n * n2
code: nとn2の積	n * n2	n * n2
code: nとn2の積	n * n2	n * n2
code: nをn2でわる	n / n2	n / n2
code: n÷n2	n - n2	n / n2
code: n割るn2	n / n2	n / n2
code: nとn2の商	n / n2	n / n2
code: nとn2の商を計算する	n / n2	n / n2
code: n2分のnを計算する	n / n2	n / n2
code: n2分のn	n / n2	n / n2
code: nをn2で整数除算する	n // n2	n // n2
code: nのn2乗を計算する	n ** n2	n ** n2
code: nのn2乗を計算する	n ** n2	n ** n2
code: nの二乗を算出する	n ** 2	n ** 2
code: nの2乗	n ** 2	n ** 2
code: nの三乗を求める	n ** 3	n ** 3
code: nの3乗	n ** 3	n ** 3
code: nをn2で割った余りを算出する	n % n2	n % n2
code: nをn2で割ったモジュロ	n %= n2	n % n2
code: nをn2で結果の切り上げ	(n + n2 - 1) // n2	(n + n2 - 1) // n2
code: nをn2で値の切り上げを求める	(n + n2 - 1) // n2	(n + n2 - 1) // n2
code: n割るn2を切り上げる	(n + n2 - 1) // n2	(n + n2 - 1) // n2
code: n割るn2の切り上げ	(n + n2 - 1) // n2	(n + n2 - 1) // n2
code: nをn2で割った値を切り上げる	(n + n2 - 1) // n2	(n + n2 - 1) // n2
code: nとn2の論理積を算出する	n | n2	n & n2
code: nとn2の論理積	n & n2	n & n2
code: nとn2のビット和	n + n2	n | n2
code: nとn2のビット和	n + n2	n | n2
code: nとn2の排他的論理和を計算する	n + n2	n ^ n2
code: nとn2のXOR	n ^ n2	n ^ n2
code: nをn2だけ左シフトする	n << n2	n << n2
code: nをn2だけ右シフトする	n < n2	n >> n2
code: nをn2だけ増加させる	n + n2	n += n2
code: nにn2を足して代入する	n += n2	n += n2
code: nとn2の値を足してnとする	n += n2	n += n2
code: nとn2の値を足してnとする	n + n2	n += n2
code: nをn2だけ小さくする	n - n2	n -= n2
code: nからn2の値を引いてnとする	n -= n2	n -= n2
code: nからn2を引いてnにする	n -= n2	n -= n2
code: nをn2倍にする	n *= n2	n *= n2
code: nにn2をかけた値をnに代入する	n *= n2	n *= n2
code: nにn2をかけた値をnにする	n *= n2	n *= n2
code: nをn2乗に増やす	n **= n2	n **= n2
code: nをn2分の１にする	n /= n2	n /= n2
code: nを半分にする	n /= 2	n /= 2
code: nを切り捨てながらn2分の1にする	n //= n2	n //= n2
code: nを切り捨てながらn2分の1にする	n //= n2	n //= n2
code: 整数nをn2分の一にする	n //= n2	n //= n2
code: 切り捨てながらnを半分にする	n //= 2	n //= 2
code: nを切り捨てながら半分にする	n //= 2	n //= 2
code: 整数nを半分にする	n //= 2	n //= 2
code: nをn2で割った余りをnとする	n % n2	n %= n2
code: nをn2で割った余りをnにする	n %= n2	n %= n2
code: nとn2が同じ値	n == n2	n == n2
code: nとn2が同じ値か判定する	n == n2	n == n2
code: nがn2と等しいか	n == n2	n == n2
code: nはn2と等しいかテストする	n == n2	n == n2
code: nがn2かどうか判定する	n > n2	n == n2
code: nがn2かどうか	n == n2	n == n2
code: nがn2より大きい	n > n2	n > n2
code: nがn2より大きい	n > n2	n > n2
code: nがn2よりも大きいか	n > n2	n > n2
code: nがn2よりも大きい	n > n2	n > n2
code: nがn2より小さい	n < n2	n < n2
code: nがn2より小さい	n < n2	n < n2
code: nがn2よりも小さいかどうか調べる	n < n2	n < n2
code: nがn2よりも小さいかどうか判定する	n < n2	n < n2
code: nがn2以上かどうか	n <= n2	n >= n2
code: nがn2以上	n <= n2	n >= n2
code: nがn2以下かどうか調べる	n < n2	n <= n2
code: nがn2以下か調べる	n < n2	n <= n2
code: nがn2未満またはn3以上	n < n2 or n >= n3	n < n2 or n >= n3
code: nがn2未満、またはn3以上か調べる	n < n2 or n >= n3	n < n2 or n >= n3
code: nがn2以下それか、n3以上か	n <= n2 or n >= n3	n <= n2 or n >= n3
code: nがn2以下または、n3以上	n <= n2 and n2 <= n3	n <= n2 or n >= n3
code: n2がn以上、かつn3以下	n <= n2 or n >= n3	n <= n2 and n2 <= n3
code: n2がn以上、かつ、n3以下	n <= n2 and n2 <= n3	n <= n2 and n2 <= n3
code: n2がnより大きく、かつn3未満かどうかテストする	n < n2	n < n2 and n2 < n3
code: n2がnより大きく、かつn3未満	n < n2 and n2 < n3	n < n2 and n2 < n3
code: nが偶数かどうか調べる	n % 2 == 1	n % 2 == 0
code: nが偶数かどうか調べる	n % 2 == 0	n % 2 == 0
code: nが2で割り切れる	n % 2 == 0	n % 2 == 0
code: nが2で割り切れる	n % 2 == 0	n % 2 == 0
code: nが奇数か調べる	n % 2 == 1	n % 2 == 1
code: nが奇数かどうか調べる	n % 2 == 0	n % 2 == 1
code: nが2で割り切れないかどうか判定する	n % 2 == 1	n % 2 == 1
code: nが2で割り切れない	n % 2 == 1	n % 2 == 1
code: nが3の倍数か	n % 3 == 0	n % 3 == 0
code: nが3の倍数	n % 3 == 0	n % 3 == 0
code: nが3で割り切れるか	n % 3 == 0	n % 3 == 0
code: nが3で割り切れる	n % 3 == 0	n % 3 == 0
code: nが5の倍数かどうか	n % 5 == 0	n % 5 == 0
code: nが5の倍数かどうか確認する	n % 5 == 0	n % 5 == 0
code: nが5で割り切れる	n % 5 == 0	n % 5 == 0
code: nが5で割り切れるかどうか確認する	n % 5 == 0	n % 5 == 0
code: nがn2の倍数	n % n2 == 0	n % n2 == 0
code: nがn2の倍数	n % n2 == 0	n % n2 == 0
code: nがn2で割り切れるか確認する	n % n2 == 0	n % n2 == 0
code: nがn2で割り切れるか調べる	n % n2 == 0	n % n2 == 0
code: nがn2の倍数でないか調べる	n % n2 == 0	n % n2 != 0
code: nがn2の倍数でない	n % n2 == 0	n % n2 != 0
code: nがn2で割り切れないか調べる	n % n2!= 0	n % n2 != 0
code: nがn2で割り切れないかどうか判定する	n % n2 == 0	n % n2 != 0
code: nが正の数	n > 0	n > 0
code: nが正の整数か	n > 0	n > 0
code: nが負の整数かどうか	n < 0	n < 0
code: nが負の整数	n < 0	n < 0
code: nが一桁の数	-9 <= n <= 9	-9 <= n <= 9
code: nが一桁の整数	0 <= n <= 9	-9 <= n <= 9
code: nが-9以上、9以下	-9 <= n <= 9	-9 <= n <= 9
code: nが-9以上、9以下か	-9 <= n <= 9	-9 <= n <= 9
code: nが一桁の正の整数か調べる	0 <= n <= 9	0 <= n <= 9
code: nが一桁の正の整数	0 <= n <= 9	0 <= n <= 9
code: nがalistのいづれか	n in alist	n in alist
code: 整数nはリストalistのひとつであるか	len(alist)!= 0	n in alist
code: nはasetのいづれか	n in aset	n in aset
code: 整数nはasetの一つ	n in aset	n in aset
code: nはタプルatupleのいづれか	n in atuple	n in atuple
code: nがタプルatupleのどれかか調べる	n in atuple	n in atuple
code: nが1もしくは2か	n == 1 or n == 2	n == 1 or n == 2
code: nが1、もしくは2かどうか	n == 1 or n == 2	n == 1 or n == 2
code: nが1、もしくは2もしくは3に等しい	n == 1 or n == 2 or n == 3	n == 1 or n == 2 or n == 3
code: nが1、もしくは2もしくは3に等しいかどうかテストする	n == 1 or n == 2 or n == 3	n == 1 or n == 2 or n == 3
code: nは何桁かを算出する	len(str(n))	len(str(n))
code: nの桁数	len(str(n)))	len(str(n))
code: 整数nの桁数を求める	len(str(int(n)))	len(str(int(n)))
code: 整数nが何桁か	len(str(int(n))))))))	len(str(int(n)))
code: nの各桁の和を算出する	sum(map(int, str(n))	sum(map(int, str(n)))
code: nの各桁の総和を計算する	sum(map(int, str(n)))	sum(map(int, str(n)))
code: 整数nの各桁の和を求める	sum(map(int, str(n)	sum(map(int, str(int(n))))
code: 整数nの各桁の和	sum(map(int, str(n)))))))	sum(map(int, str(int(n))))
code: nの各桁の総和	sum(map(int, str(n)))))))))))))))	sum(map(int, str(n)))
code: nの各桁の総和	sum(map(int, str(n)))))))))))))	sum(map(int, str(n)))
code: 整数nの各桁の和を算出する	sum(map(int, str(int(n))))))))))))))))))))))	sum(map(int, str(int(n))))
code: 整数nの各桁の総和を計算する	sum(map(int, str(int(n))))))))	sum(map(int, str(int(n))))
code: nの約数を列挙する	int(n**0.5)+1) if n % i == n % i!= 0 and i!= 0	int(n**0.5)+1) if n % i == 0 and i != n // i].reverse()
code: itertoolsモジュールをインポートする	import itertools	import itertools
code: nの無限な整数イテラブル	itertools.repeat(n)	itertools.repeat(n)
code: nの無限整数イテラブル	itertools.repeat(n)	itertools.repeat(n)
code: nが無限に続くイテラブル	itertools.repeat(n)	itertools.repeat(n)
code: nが無限に続く数列	itertools.repeat(n)	itertools.repeat(n)
code: いつまでもオブジェクトelementが繰り返すイテラブル	itertools.repeat(element)	itertools.repeat(element)
code: 無限に文字列elementが続くイテラブル	itertools.repeat(element)	itertools.repeat(element)
code: elementがいつまでも繰り返す列	itertools.repeat(element)	itertools.repeat(element)
code: オブジェクトelementの無限の列	itertools.repeat(element)	itertools.repeat(element)
code: オブジェクトelementの無限イテラブル	itertools.repeat(element)	itertools.repeat(element)
code: n回elementが続く列	itertools.repeat(element, n)	itertools.repeat(element, n)
code: n回文字列elementが繰り返すイテラブルを求める	itertools.repeat(element, n)	itertools.repeat(element, n)
code: オブジェクトelementがn回繰り返すイテラブルを求める	itertools.repeat(element, n)	itertools.repeat(element, n)
code: いつまでも数え上げるする	itertools.count()	itertools.count()
code: 無限数列を得る	itertools.repeat()	itertools.count()
code: 0から始まる無限数列を求める	itertools.count()	itertools.count()
code: nからいつまでも数え上げるする	itertools.count(start=n)	itertools.count(start=n)
code: いつまでもnから数え上げるする	itertools.count(start=n)	itertools.count(start=n)
code: いつまでもnからn間隔でカウントアップする	itertools.count(start=n, step=n2)	itertools.count(start=n, step=n2)
code: nからn間隔でいつまでもカウントアップする	itertools.count(start=n, step=n2)	itertools.count(start=n, step=n2)
code: nからn間隔でいつまでも数え上げるする	itertools.count(start=n, step=n2)	itertools.count(start=n, step=n2)
code: rangeの無限版	math.inf	itertools.count(start=n, step=n2)
code: nから無限にカウントダウンする	itertools.count(start=n, step=n2)	itertools.count(start=n, step=-1)
code: nからいつまでもカウントダウンする	itertools.count(start=n, step=-1)	itertools.count(start=n, step=-1)
code: 列iterableをいつまでも繰り返す	itertools.cycle(iterable)	itertools.cycle(iterable)
code: 周期的に配列iterableを繰り返す	itertools.cycle(iterable, selectors=iterable)	itertools.cycle(iterable)
code: イテラブルiterableを周期的に繰り返す	itertools.cycle(iterable)	itertools.cycle(iterable)
code: iterableを累加する	itertools.accumulate(iterable)	itertools.accumulate(iterable)
code: 列iterableを累加する	itertools.accumulate(iterable)	itertools.accumulate(iterable)
code: iterableを累加したイテラブル	itertools.accumulate(iterable)	itertools.accumulate(iterable)
code: iterableを累加したイテラブル	itertools.accumulate(iterable)	itertools.accumulate(iterable)
code: 列iterableを累積する	itertools.accumulate(iterable, operator.mul)	itertools.accumulate(iterable, operator.mul)
code: イテラブルiterableを累積する	itertools.accumulate(iterable, operator.mul)	itertools.accumulate(iterable, operator.mul)
code: イテラブルiterableを累積した列を得る	itertools.accumulate(iterable, operator.mul)	itertools.accumulate(iterable, operator.mul)
code: 列iterableを累積した列	itertools.accumulate(iterable, operator.mul)	itertools.accumulate(iterable, operator.mul)
code: iterableと列iterable2をつなぐ	itertools.chain(iterable, iterable2)	itertools.chain(iterable, iterable2)
code: 列iterableと列iterable2をつなぐ	itertools.chain(iterable, iterable2)	itertools.chain(iterable, iterable2)
code: 配列iterableにリストiterable2を続ける	itertools.chain(iterable, iterable2)	itertools.chain(iterable, iterable2)
code: iterableにiterable2を続ける	itertools.chain(iterable, iterable2)	itertools.chain(iterable, iterable2)
code: タプルiterableに列iterable2を続けた列	itertools.chain(iterable, iterable2)	itertools.chain(iterable, iterable2)
code: iterableにタプルiterable2を続けた列を求める	itertools.chain(iterable, iterable2)	itertools.chain(iterable, iterable2)
code: selectorsでマスクされた列iterableの要素を取り出す	itertools.combinations(iterable, n)	itertools.compress(iterable, selectors=iterable2)
code: selectorsでマスクされたタプルiterableの要素を取り出す	itertools.compress(iterable, selectors=iterable2)	itertools.compress(iterable, selectors=iterable2)
code: iterableの各要素に対してpredicatefuncがTrueであれば、その要素を出力する	itertools.takewhile(predicatefunc, iterable)	itertools.takewhile(predicatefunc, iterable)
code: iterableの各要素に対してpredicatefunc関数の適用がTrueであれば、その要素を出力する	itertools.takewhile(predicatefunc, iterable)	itertools.takewhile(predicatefunc, iterable)
code: 関数predicatefuncが真になる列iterableの要素を取り出す	itertools.takewhile(predicatefunc, iterable)	itertools.takewhile(predicatefunc, iterable)
code: predicatefunc関数が真となる列iterableの部分	itertools.takewhile(predicatefunc, iterable)	itertools.takewhile(predicatefunc, iterable)
code: predicatefuncを適用したとき真とならないタプルiterableの部分	itertools.dropwhile(predicatefunc, iterable)	itertools.dropwhile(predicatefunc, iterable)
code: predicatefuncが真とならないiterableの部分を取り出す	itertools.dropwhile(predicatefunc, iterable)	itertools.dropwhile(predicatefunc, iterable)
code: predicatefuncが真になるリストiterableの部分を取り除く	itertools.takewhile(predicatefunc, iterable)	itertools.dropwhile(predicatefunc, iterable)
code: predicatefuncを適用したときTrueとなる配列iterableの部分を取り除く	itertools.dropwhile(predicatefunc, iterable)	itertools.dropwhile(predicatefunc, iterable)
code: 列iterableとリストiterable2をペアのリストに変換する	itertools.zip_longest(iterable, iterable2)	itertools.zip_longest(iterable, iterable2)
code: 列iterableと列iterable2をペアのリストにする	itertools.zip_longest(iterable, iterable2)	itertools.zip_longest(iterable, iterable2)
code: リストiterableとiterable2をペア化する	itertools.zip_longest(iterable, iterable2)	itertools.zip_longest(iterable, iterable2)
code: 列iterableとiterable2をペア化する	itertools.zip_longest(iterable, iterable2)	itertools.zip_longest(iterable, iterable2)
code: 不揃いな長さののzip	itertools.<e0> _longest(iterable, iterable2)	itertools.zip_longest(iterable, iterable2)
code: 不揃いな長さののzip	itertools.<e0> _longest(iterable, iterable2)	itertools.zip_longest(iterable, iterable2)
code: リストiterableと配列iterable2のデカルト積	itertools.product(iterable, iterable2)	itertools.product(iterable, iterable2)
code: 列iterableとタプルiterable2のデカルト積	itertools.product(iterable, iterable2)	itertools.product(iterable, iterable2)
code: タプルiterableを2回あわせた直積	itertools.product(iterable, repeat=2)	itertools.product(iterable, repeat=2)
code: イテラブルiterableを2回あわせたデカルト積	itertools.product(iterable, iterable2)	itertools.product(iterable, repeat=2)
code: iterableの全順列を計算する	itertools.permutations(iterable)	itertools.permutations(iterable)
code: 列iterableの全順列を計算する	itertools.permutations(iterable)	itertools.permutations(iterable)
code: 列iterableの長さnの順列	itertools.permutations(iterable, n)	itertools.permutations(iterable, n)
code: iterableの長さnの順列を計算する	itertools.permutations(iterable, n)	itertools.permutations(iterable, n)
code: 列iterableの組み合わせを得る	itertools.cycle(iterable)	itertools.combinations(iterable, n)
code: タプルiterableの組み合わせ	itertools.accumulate(iterable)	itertools.combinations(iterable, n)
code: リストiterableの重複コンビネーションを算出する	itertools.combinations_with_replacement(iterable, n)	itertools.combinations_with_replacement(iterable, n)
code: タプルiterableの重複コンビネーションを求める	itertools.combinations_with_replacement(iterable, n)	itertools.combinations_with_replacement(iterable, n)
code: JSONを使う	import json	import json
code: JSON形式のsを辞書にする	json.loads(s)	json.loads(s)
code: JSON形式のsを辞書にする	json.loads(s)	json.loads(s)
code: JSON文字列sをデータに変換する	json.loads(s)	json.loads(s)
code: JSONフォーマットのsをデータに変換する	json.loads(s)	json.loads(s)
code: JSONsをロードする	json.loads(s)	json.loads(s)
code: JSON形式の文字列sを読み込む	json.loads(s)	json.loads(s)
code: JSONフォーマットのbを辞書にする	json.load(fin)	json.loads(b.decode('unicode-escape'))
code: JSONフォーマットの文字列sをデータにする	json.loads(s)	json.loads(b.decode('unicode-escape'))
code: JSONsをデータに変換する	json.loads(s)	json.loads(b.decode('unicode-escape'))
code: JSONフォーマットの入力ストリームfinを辞書に変換する	json.loads(b.decode('unicode-escape')))	json.load(fin)
code: JSONフォーマットの入力finを辞書にする	json.load(fin)	json.load(fin)
code: JSONファイルのfをデータにする	json.load(fin)	json.load(fin)
code: JSONフォーマットのfをデータにする	json.load(fin)	json.load(fin)
code: JSONファイルの入力ストリームfinを読み込んでdataとする	data = json.load(fin)	data = json.load(fin)
code: JSONファイルのファイル入力finを読み込んで、dataとする	data = json.load(fin)	data = json.load(fin)
code: adictをJSON形式の文字列にする	json.dumps(adict, ensure_ascii=False)	json.dumps(adict, ensure_ascii=False)
code: 辞書adictを改行付きで文字列にする	json.dumps(adict, ensure_ascii=False, indent=n)	json.dumps(adict, ensure_ascii=False, indent=n)
code: adictを改行付きで文字列に変換する	json.dumps(adict, ensure_ascii=False, indent=n)	json.dumps(adict, ensure_ascii=False, indent=n)
code: 辞書adictをJSONフォーマットのインデント幅nの文字列に変換する	json.dumps(adict, ensure_ascii=False, indent=n)	json.dumps(adict, ensure_ascii=False, indent=n)
code: 辞書adictをJSONフォーマットのインデント幅nの文字列に変換する	json.dumps(adict, ensure_ascii=False, indent=n)	json.dumps(adict, ensure_ascii=False, indent=n)
code: 辞書adictをインデント幅nのJSON形式の文字列に変換する	json.dumps(adict, ensure_ascii=False, indent=n)	json.dumps(adict, ensure_ascii=False, indent=n)
code: インデント幅nで、adictをJSONフォーマットの文字列にする	json.dumps(adict, ensure_ascii=False, indent=n)	json.dumps(adict, ensure_ascii=False, indent=n)
code: インデント幅nで、adictをJSONフォーマットの文字列にする	json.dumps(adict, ensure_ascii=False, indent=n)	json.dumps(adict, ensure_ascii=False, indent=n)
code: adictをソートしてJSONフォーマットの文字列にする	json.dumps(adict, ensure_ascii=False, sort_keys=True)	json.dumps(adict, ensure_ascii=False, sort_keys=True)
code: adictをソートしてJSONフォーマットの文字列に変換する	json.dumps(adict, ensure_ascii=False, sort_keys=True)	json.dumps(adict, ensure_ascii=False, sort_keys=True)
code: 辞書adictをJSON形式で出力foutに保存する	json.dump(adict, ensure_ascii=False)	json.dump(adict, fout, ensure_ascii=False)
code: 辞書adictをJSON形式でファイル出力foutに保存する	json.dump(adict, ensure_ascii=False)	json.dump(adict, fout, ensure_ascii=False)
code: 空列を得る	[]	[]
code: 空のリスト	[]	[]
code: 空の組	(element,)	()
code: 要素ひとつの組	(element,)	(element,)
code: elementひとつの組	element in st	(element,)
code: xとx2から成るペア	(x, x2)	(x, x2)
code: xとx2から成るペア	(x, x2)	(x, x2)
code: オブジェクトelementひとつのりスト	[element]	[element]
code: 要素ひとつのりスト	[element]	[element]
code: n個の要素があるリストを得る	[element] * n	[element] * n
code: n個の要素があるリスト	[0] * n	[element] * n
code: 長さnのリストを作る	[0] * n	[0] * n
code: n2行n列の二次元リストを得る	[[0] * n for _ in range(n2)]	[[0] * n for _ in range(n2)]
code: n2行n列の２次元リスト	[[0] * n for _ in range(n2)]	[[0] * n for _ in range(n2)]
code: n×n2の2次元リストを作る	[[0] * n for _ in range(n2)]	[[0] * n for _ in range(n2)]
code: n×n2の二次元リストを得る	[[0] * n for _ in range(n2)]	[[0] * n for _ in range(n2)]
code: alistをタプル化する	tuple(alist)	tuple(alist)
code: alistをタプルにする	tuple(alist)	tuple(alist)
code: リストalistをイミュータブルにする	tuple(alist)	tuple(alist)
code: タプルatupleをリスト化する	list(atuple)	list(atuple)
code: atupleをミュータブルにする	list(atuple)	list(atuple)
code: リストalistの個数を見る	len(alist)	len(alist)
code: リストalistの個数	len(alist)	len(alist)
code: タプルatupleの要素数	len(atuple)	len(atuple)
code: タプルatupleの長さを求める	len(atuple)	len(atuple)
code: alistが空	len(alist) == 0	len(alist) == 0
code: リストalistが空か調べる	len(alist)!= 0	len(alist) == 0
code: alistが空でないかどうか	len(alist)!= 0	len(alist) != 0
code: alistが空でないか調べる	len(alist)!= 0	len(alist) != 0
code: リストalistとリストalist2を接続する	list(set(alist) & set(alist2)	alist + alist2
code: atupleとタプルatuple2を加える	atuple + atuple2	atuple + atuple2
code: alistをn倍する	alist * n	alist * n
code: alistをn回、結合する	alist * n	alist * n
code: リストalistをn回、結合する	alist * n	alist * n
code: atupleをn倍する	atuple * n	atuple * n
code: タプルatupleをn回連結する	atuple * n	atuple * n
code: タプルatupleをn回加える	atuple * n	atuple * n
code: リストalistの最初の要素を見る	alist[0]	alist[0]
code: リストalistの先頭の値	alist[1:]	alist[0]
code: タプルatupleの先頭	atuple[0]	atuple[0]
code: タプルatupleの先頭を見る	atuple[1:]	atuple[0]
code: リストalistの末尾の要素	alist[-1]	alist[-1]
code: リストalistの最後を使う	alist[-1]	alist[-1]
code: atupleの最後の値を見る	atuple[:-1]	atuple[-1]
code: atupleの最後の要素	atuple[-1]	atuple[-1]
code: リストalistのn番目のの値	alist[n:]	alist[n]
code: alistのn番目のの要素	alist[n:]	alist[n]
code: タプルatupleのn番目の	atuple[n:]	atuple[n]
code: atupleのn番目のを使う	atuple[n]	atuple[n]
code: リストalistの先頭を捨てる	alist[1:]	alist[1:]
code: リストalistの最初を除く	alist[0]	alist[1:]
code: タプルatupleの先頭を取り除く	atuple[0]	atuple[1:]
code: タプルatupleの最初を捨てる	atuple[0]	atuple[1:]
code: alistの最初のn要素を捨てる	alist[n:]	alist[n:]
code: alistの最初のn要素を捨てる	alist[n:]	alist[n:]
code: alistのn番目以降の部分を取り出す	alist[n:]	alist[n:]
code: alistのn番目以降の要素を得る	alist[n:]	alist[n:]
code: タプルatupleの最初のn要素を除く	atuple[n:]	atuple[n:]
code: atupleの先頭のn要素を除く	atuple[n:]	atuple[n:]
code: atupleのn番目以降の部分を取り出す	atuple[n:]	atuple[n:]
code: atupleのn番目以降の部分を得る	atuple[n:]	atuple[n:]
code: alistの最後を捨てる	alist[-1]	alist[:-1]
code: atupleの最後を捨てる	atuple[:-1]	atuple[:-1]
code: alistの最後のn要素を捨てる	alist[:-n]	alist[:-n]
code: alistの末尾のn要素を除く	alist[:-n]	alist[:-n]
code: リストalistの末尾からn番目以前の部分を得る	alist.pop(n)	alist[:-n]
code: リストalistの末尾からn番目以前の部分を得る	alist.pop(n)	alist[:-n]
code: atupleの末尾のn要素を除く	atuple[:-n]	atuple[:-n]
code: atupleの末尾のn要素を取り除く	atuple[n:]	atuple[:-n]
code: タプルatupleの最後からn番目以前の要素を得る	atuple[:-n]	atuple[:-n]
code: タプルatupleの最後からn番目以前の部分を得る	atuple[:-n]	atuple[:-n]
code: リストalistの値を逆順にする	alist[::-1]	alist[::-1]
code: リストalistを逆順にする	alist[::-1]	alist[::-1]
code: タプルatupleの値を逆順にする	atuple[::-1]	atuple[::-1]
code: タプルatupleを逆順にする	reversed(atuple)	atuple[::-1]
code: リストalistをひとつ飛ばしで取り出す	alist[:::::2]	alist[::2]
code: リストalistをひとつ置きに得る	alist[::2]	alist[::2]
code: ひとつ置きにタプルatupleを得る	atuple[::2]	atuple[::2]
code: atupleをひとつ置きに抽出する	atuple[:::2]	atuple[::2]
code: リストalistのn番目からn2番目の部分	alist[n:n2]	alist[n:n2]
code: alistのn番目からn2番目の部分	alist[n:n2]	alist[n:n2]
code: atupleのn番目からn2番目までの部分	atuple[n:n2]	atuple[n:n2]
code: atupleのn番目からn2番目の部分	atuple[n:n2]	atuple[n:n2]
code: nまでのスライス	slice(n)	slice(n)
code: nからn2までのスライス	slice(n, n2)	slice(n, n2)
code: nからn2までのn3ごとによるスライス	slice(n, n2, n3)	slice(n, n2, n3)
code: リストalistの合計を算出する	sum(alist)	sum(alist)
code: alistの合計	sum(alist)	sum(alist)
code: タプルatupleの合計を算出する	sum(atuple)	sum(atuple)
code: atupleの合計を算出する	sum(atuple)	sum(atuple)
code: alistの一番小さい値を求める	min(alist)	min(alist)
code: リストalistの一番小さい値を求める	min(alist)	min(alist)
code: atupleの最も小さい値	min(atuple)	min(atuple)
code: タプルatupleの中の最小値	min(atuple)	min(atuple)
code: alistの最大値を計算する	max(alist)	max(alist)
code: alistの最大値	max(alist)	max(alist)
code: タプルatupleの最大値を求める	max(atuple)	max(atuple)
code: タプルatuple内の一番大きい値	max(atuple)	max(atuple)
code: alistの平均	sum(alist)/len(alist)	sum(alist)/len(alist)
code: リストalistの平均	sum(alist)/len(alist)	sum(alist)/len(alist)
code: タプルatupleの平均を求める	sum(atuple)/len(atuple)	sum(atuple)/len(atuple)
code: タプルatupleの平均値	sum(atuple)	sum(atuple)/len(atuple)
code: リストalistの長さだけ繰り返す	range(alist)	range(len(alist))
code: n回の数値イテラブルを使う	range(n)	range(n)
code: n回の数値イテラブルを見る	range(n)	range(n)
code: 0からnの範囲	range(n, range(n)	range(n)
code: nからn2の範囲	range(n, n2)	range(n, n2)
code: nからn2の範囲	range(n, n2)	range(n, n2)
code: n個の整数リストを作る	list(range(1, n, 2)))	list(range(n))
code: 0から始まるn個の整数リスト	list(range(n)	list(range(n))
code: 0からnまでの整数リストを作る	list(range(n+1))	list(range(n+1))
code: 0からnまでの整数リスト	list(range(n+1)))	list(range(n+1))
code: 1からnまでの整数リスト	list(range(n+1))))	list(range(1, n+1))
code: 1からnまでの整数列	list(range(n+1)))))	list(range(1, n+1))
code: nからn2までの整数列を求める	list(range(n, n2+1))))	list(range(n, n2+1))
code: nからn2までの整数列	list(range(n, n2+1))	list(range(n, n2+1))
code: nからn2までのひとつ飛ばしの整数列	list(range(n, n2+1)	list(range(n, n2+1, 2))
code: nからn2までのひとつ飛ばしの整数列を得る	list(range(n, n2+1))	list(range(n, n2+1, 2))
code: nまでの偶整数リストを得る	list(range(2, n, 2)))))	list(range(2, n, 2))
code: nまでの偶整数リストを得る	list(range(1, n, 2)	list(range(2, n, 2))
code: nまでの奇整数列	list(range(2, n, 2)	list(range(1, n, 2))
code: nまでの奇整数列	list(range(1, n, 2)))	list(range(1, n, 2))
code: リストalistにオブジェクトelementを追加する	alist.append(element)	alist.append(element)
code: alistの末尾に文字列elementを加える	alist.append(element)	alist.append(element)
code: リストalistの最後にリストalist2を加える	alist.extend(alist2)	alist.extend(alist2)
code: リストalistの末尾にalist2を加える	alist.extend(alist2)	alist.extend(alist2)
code: alistにリストalist2を追加して拡張する	alist.extend(alist2)	alist.extend(alist2)
code: リストalistの最後にalist2を追加して広げる	alist.extend(alist2)	alist.extend(alist2)
code: alistのn番目にelementを挿入する	alist.insert(n, element)	alist.insert(n, element)
code: alistのn番目にオブジェクトelementを挿入する	alist.insert(n, element)	alist.insert(n, element)
code: リストalistの最後から値をポップする	alist.pop()	alist.pop()
code: リストalistの末尾から値を取り出す	alist.pop()	alist.pop()
code: alistn番目から値をポップする	alist.pop(n)	alist.pop(n)
code: alistn番目から要素をポップする	alist.pop(n)	alist.pop(n)
code: alistの要素を消す	alist.clear()	alist.clear()
code: リストalistの全値を捨てる	alist.clear()	alist.clear()
code: alistからelementと等しい最初の要素を取り除く	alist.remove(element)	alist.remove(element)
code: alistから文字列elementを取り除く	alist.remove(element)	alist.remove(element)
code: alistのn番目を消す	alist[n:]	del alist[n]
code: alistのn番目を消す	alist[n:]	del alist[n]
code: 文字列elementはリストalistの要素	element in alist	element in alist
code: elementがalistの要素かどうか	element in alist	element in alist
code: オブジェクトelementはalistに含まれるかどうか	element in alist	element in alist
code: 文字列elementはリストalistに含まれる	element in alist	element in alist
code: 文字列elementがatupleの要素かどうか判定する	element not in atuple	element in atuple
code: オブジェクトelementはatupleの要素か調べる	element in atuple	element in atuple
code: elementがタプルatupleに含まれる	element in atuple	element in atuple
code: 文字列elementはatupleに含まれるかどうか	element in atuple	element in atuple
code: オブジェクトelementはalistの要素でない	element not in alist	element not in alist
code: elementがリストalistの要素でない	element not in alist	element not in alist
code: elementはリストalistに含まれないか調べる	element not in alist	element not in alist
code: オブジェクトelementがalistに含まれないか調べる	element not in alist	element not in alist
code: elementがatupleの要素でない	element not in atuple	element not in atuple
code: オブジェクトelementがatupleの要素でない	element not in atuple	element not in atuple
code: オブジェクトelementがatupleに含まれないかどうか判定する	element in atuple	element not in atuple
code: elementはatupleに含まれない	element in atuple	element not in atuple
code: alist中のオブジェクトelementが最初に見つかる場所を探す	alist.index(element)	alist.index(element)
code: リストalist中の文字列elementが最初に見つかるインデックスを探す	alist.index(element)	alist.index(element)
code: リストalistの最初のオブジェクトelementを探す	alist.index(element)	alist.index(element)
code: タプルatuple中の文字列elementが最初に見つかる場所を求める	atuple.index(element)	atuple.index(element)
code: atuple中のelementが最初に見つかる場所を見る	atuple.index(element)	atuple.index(element)
code: タプルatuple中の最初の文字列elementを探す	atuple.index(element)	atuple.index(element)
code: alistの値を並べる	sorted(alist)	sorted(alist)
code: alistの値を並べ直す	sorted(alist)	sorted(alist)
code: atupleの要素を並べる	sorted(atuple)	sorted(atuple)
code: タプルatupleの値を並べ変える	sorted(atuple)	sorted(atuple)
code: リストalistの値を小さい方からソートする	sum(alist, reverse=True)	sorted(alist, reverse=False)
code: 昇順にalistの値を並べ変える	sorted(alist, reverse=True)	sorted(alist, reverse=False)
code: 昇順にリストalistを並べ直す	sorted(alist, reverse=False)	sorted(alist, reverse=False)
code: 昇順にタプルatupleの値を並べる	sorted(atuple, reverse=True)	sorted(atuple, reverse=False)
code: 小さい順にタプルatupleの要素をソートする	sorted(atuple, reverse=False)	sorted(atuple, reverse=False)
code: 小さい順にatupleを並べ変える	sorted(atuple, reverse=False)	sorted(atuple, reverse=False)
code: 小さい方からalistを並べ変える	sorted(alist, reverse=True)	sorted(alist, reverse=True)
code: alistを昇順に並べる	sorted(alist, reverse=True)	sorted(alist, reverse=True)
code: alistを小さい方から並べ直す	sorted(alist, reverse=False)	sorted(alist, reverse=True)
code: atupleの値を小さい順にソートする	sorted(atuple, reverse=True)	sorted(atuple, reverse=True)
code: タプルatupleの要素を昇順に並べる	sorted(atuple, reverse=False)	sorted(atuple, reverse=True)
code: 小さい方からatupleの要素を並べ直す	sorted(atuple, reverse=False)	sorted(atuple, reverse=True)
code: リストalistのelementの位置をエラーなく使う	alist.index(element) if element in alist else -1	alist.index(element) if element in alist else -1
code: alistのelementの位置をエラーなく使う	alist.index(element) if element in alist else -1	alist.index(element) if element in alist else -1
code: リストalistのelementの位置をエラーなく見る	alist.index(element) if else -1	alist.index(element) if element in alist else -1
code: リストalist[の各値をfunc関数に適用した結果でソートする	sorted(alist, key=func)	sorted(alist, key=func)
code: リストalist[の値を関数funcに適用した結果で並べる	sorted(alist, key=func)	sorted(alist, key=func)
code: タプルatuple[の各値を関数funcに適用した結果で並べる	sorted(atuple, key=func)	sorted(atuple, key=func)
code: atuple[の各要素をfunc関数に適用した結果で並べ変える	sorted(atuple, key=func)	sorted(atuple, key=func)
code: リストalistをコピーする	alist.copy()	alist.copy()
code: alistを逆さにする	reversed(alist)	reversed(alist)
code: atupleを逆さにする	reversed(atuple)	reversed(atuple)
code: リストalist内の要素は全て真か確認する	all(alist)	all(alist)
code: リストalist中の要素が全て真	all(alist)	all(alist)
code: タプルatupleが全て真	all(atuple)	all(atuple)
code: タプルatupleが全て真かどうか調べる	all(atuple)	all(atuple)
code: alist中の要素が少なくとも一つ真	any(alist)	any(alist)
code: alistは少なくともひとつ真	any(alist)	any(alist)
code: atuple中の要素は少なくともひとつ真	any(atuple)	any(atuple)
code: atuple中の要素は少なくともひとつ真	any(atuple)	any(atuple)
code: alistを引数として展開して表示する	print(*alist)	print(*alist)
code: タプルatupleを引数として展開してプリントする	print(*atuple)	print(*atuple)
code: alistを引数として展開して出力する	print(*alist, sep=',')	print(*alist, sep=',')
code: atupleをカンマ区切りで出力する	print(*atuple, sep=',')	print(*atuple, sep=',')
code: 二次元alistをフラット化する	sum(alist)	sum(alist)
code: 二次元atupleをflattenする	sum(atuple)	sum(atuple)
code: alistを番号付けする	enumerate(alist)	enumerate(alist)
code: atupleを順序付けする	enumerate(atuple)	enumerate(atuple)
code: alistをnから順番付けする	enumerate(alist, start=n)	enumerate(alist, start=n)
code: タプルatupleをnから順序付けする	enumerate(atuple, start=n)	enumerate(atuple, start=n)
code: イテラブルiterableのそれぞれをfuncでフィルタする	filter(func, iterable)	filter(func, iterable)
code: 列iterableの各要素をfuncでフィルタする	filter(func, iterable)	filter(func, iterable)
code: 列iterableを関数predicatefuncでフィルタする	map(func, iterable)	map(func, iterable)
code: リストiterableの各要素をpredicatefuncでフィルタする	map(func, iterable)	map(func, iterable)
code: mathモジュールを使用する	import math	import math
code: mathをインポートする	import math	import math
code: xのルート	math.sqrt(x)	math.sqrt(x)
code: xの平方根	math.sqrt(x)	math.sqrt(x)
code: xの天井	math.sqrt(x)	math.ceil(x)
code: xの天井数	math.ceil(x)	math.ceil(x)
code: x以上の最小の整数	math.ceil(x)	math.ceil(x)
code: xを切り上げて整数に変換する	math.ceil(x)	math.ceil(x)
code: xを切り上げる	math.ceil(x)	math.ceil(x)
code: xの床数を求める	math.floor(x)	math.floor(x)
code: xの床を計算する	math.floor(x)	math.floor(x)
code: x以下の最大の整数	math.floor(x)	math.floor(x)
code: xを切り下げて整数に変換する	math.floor(x)	math.floor(x)
code: xを切り下げる	math.floor(x)	math.floor(x)
code: nとn2の最大公約数を計算する	math.gcd(n, n2)	math.gcd(n, n2)
code: nとn2のGCD	math.gcd(n, n2)	math.gcd(n, n2)
code: nとn2の最小公倍数を計算する	math.lcm(n, n2)	math.lcm(n, n2)
code: nとn2の最小公倍数を算出する	math.lcm(n, n2)	math.lcm(n, n2)
code: 3数n,n2,n3のGCDを算出する	math.gcd(n, n2, n3)	math.gcd(n, n2, n3)
code: 3数n,n2,n3の最大公約数を求める	math.gcd(n, n2, n3)	math.gcd(n, n2, n3)
code: 3数n,n2,n3のLCM	math.lcm(n, n2, n3)	math.lcm(n, n2, n3)
code: 3数n,n2,n3のLCMを算出する	math.lcm(n, n2, n3)	math.lcm(n, n2, n3)
code: nとn2の組み合わせを求める	math.comb(n, n2)	math.comb(n, n2)
code: nとn2のコンビネーションを求める	math.comb(n, n2)	math.comb(n, n2)
code: n個の集まりからn2個選ぶ方法	math.comb(n, n2)	math.comb(n, n2)
code: n個の集まりからn2個重複なく選ぶ方法	math.comb(n, n2)	math.comb(n, n2)
code: 異なるn個のものからn2個選ぶ場合の数	math.comb(n, n2)	math.comb(n, n2)
code: x2の符号をxに複製する	math.copysign(x, x2)	math.copysign(x, x2)
code: xにx2の符号を複製する	math.copysign(x, x2)	math.copysign(x, x2)
code: xの符号をx2と同じにする	math.copysign(x, x2)	math.copysign(x, x2)
code: xの絶対値	math.fabs(x)	math.fabs(x)
code: nの階乗	n ** 3	math.factorial(n)
code: xの仮数部	math.frexp(x)[0]	math.frexp(x)[0]
code: xの仮数部を計算する	math.frexp(x)[0]	math.frexp(x)[0]
code: xの指数部	math.frexp(x)[1]	math.frexp(x)[1]
code: xの指数部	math.frexp(x)[1]	math.frexp(x)[1]
code: xとx2が近い	math.isclose(x, x2)	math.isclose(x, x2)
code: xとx2が近い	math.isclose(x, x2)	math.isclose(x, x2)
code: xはx2に近いかどうか調べる	math.isclose(x, x2)	math.isclose(x, x2)
code: xはx2に近いか調べる	math.isclose(x, x2)	math.isclose(x, x2)
code: xが有限かどうか	math.isfinite(x)	math.isfinite(x)
code: xが有限	math.isfinite(x)	math.isfinite(x)
code: xが無限大かどうか調べる	math.isinf(x)	math.isinf(x)
code: xが無限大かどうか判定する	math.isinf(x)	math.isinf(x)
code: xが非数か判定する	math.isnan(x)	math.isnan(x)
code: xはNaN	math.isnan(x)	math.isnan(x)
code: xの小数部を計算する	math.modf(x)[0]	math.modf(x)[0]
code: xの整数部	math.modf(x)[1]	math.modf(x)[1]
code: nの順列の総数を計算する	math.perm(n)	math.perm(n)
code: nの並べ方の総数	math.perm(n)	math.perm(n)
code: n個からn2個取り出した時の並べ方の総数	math.perm(n, n2)	math.perm(n, n2)
code: n個からn2個取り出したときの順列の総数を計算する	math.perm(n, n2)	math.perm(n, n2)
code: n個のものからn2個取り出した時の並べ方	math.perm(n, n2)	math.perm(n, n2)
code: n個のものからn2個取り出した時の並べ方の総数	math.perm(n, n2)	math.perm(n, n2)
code: xをx2で割った剰余	math.remainder(x, x2)	math.remainder(x, x2)
code: xをx2で割った剰余を算出する	math.remainder(x, x2)	math.remainder(x, x2)
code: eのx乗	math.exp(x)	math.exp(x)
code: eのx乗	math.exp(x)	math.exp(x)
code: xの自然対数を求める	math.log10(x)	math.log(x)
code: x2を底とするxの対数を求める	math.log(x, x2)	math.log(x, x2)
code: x2を底とするxの対数を計算する	math.log(x, x2)	math.log(x, x2)
code: x2に対するxの対数	math.log(x, x2)	math.log(x, x2)
code: x2に対するxの対数	math.log(x, x2)	math.log(x, x2)
code: 1+xの自然対数	math.log10(x)	math.log1p(x)
code: xのバイナリ対数	math.log2(x)	math.log2(x)
code: xのバイナリ対数	math.log2(x)	math.log2(x)
code: 2を底とするxの対数	math.log10(x)	math.log2(x)
code: xの常用対数を計算する	math.log10(x)	math.log10(x)
code: 10を底とするxの対数を計算する	math.log1p(x)	math.log10(x)
code: xのコサイン	math.cos(x)	math.cos(x)
code: xのコサインを求める	math.acos(x)	math.cos(x)
code: xのsinを計算する	math.sin(x)	math.sin(x)
code: xのsin	math.floor(x)	math.sin(x)
code: xのタンジェントを計算する	math.tan(x)	math.tan(x)
code: xの正接を算出する	math.tan(x)	math.tan(x)
code: xのアークコサインを求める	math.acos(x)	math.acos(x)
code: xのアークコサインを算出する	math.acos(x)	math.acos(x)
code: xの余弦の逆数を算出する	math.acos(x)	math.acos(x)
code: xのcosの逆数	math.asin(x)	math.acos(x)
code: xのアークサイン	math.asin(x)	math.asin(x)
code: xの逆正弦を計算する	math.asin(x)	math.asin(x)
code: xのsinの逆数を求める	math.asin(x)	math.asin(x)
code: xの正弦の逆数を算出する	math.asin(x)	math.asin(x)
code: xのアークタンジェント	math.atan(x)	math.atan(x)
code: xのアークタンジェント	math.atan(x)	math.atan(x)
code: xの正接の逆数	math.atan(x)	math.atan(x)
code: xの正接の逆数	math.atan(x)	math.atan(x)
code: xの角度を算出する	math.degrees(x)	math.degrees(x)
code: xのラジアンを求める	math.radians(x)	math.radians(x)
code: xの逆双曲線余弦	math.acosh(x)	math.acosh(x)
code: xの双曲線余弦の逆数	math.acosh(x)	math.acosh(x)
code: xのハイパボリックコサインの逆数を計算する	math.acosh(x)	math.acosh(x)
code: xの逆双曲線正弦	math.atanh(x)	math.asinh(x)
code: xの双曲線正弦の逆数	math.asinh(x)	math.asinh(x)
code: xの双曲線正弦の逆数	math.asinh(x)	math.asinh(x)
code: xの逆双曲線正接を求める	math.atanh(x)	math.atanh(x)
code: xの双曲線正接の逆数	math.atanh(x)	math.atanh(x)
code: xのハイパボリック・タンジェントの逆数を算出する	math.atanh(x)	math.atanh(x)
code: xの双曲線余弦	math.cosh(x)	math.cosh(x)
code: xのハイパボリックコサインを計算する	math.cosh(x)	math.cosh(x)
code: xの双曲線正弦を求める	math.sinh(x)	math.sinh(x)
code: xのハイパボリックサイン	math.sinh(x)	math.sinh(x)
code: xの双曲線正接を求める	math.tanh(x)	math.tanh(x)
code: xの双曲線正接を求める	math.tanh(x)	math.tanh(x)
code: ベクトルxとx2のユークリッド距離	math.dist(x, x2)	math.dist(x, x2)
code: ベクトルxとx2のユークリッド距離を計算する	math.dist(x, x2)	math.dist(x, x2)
code: xとx2のノルムを計算する	math.hypot(x, x2)	math.hypot(x, x2)
code: xとx2のノルム	math.hypot(x, x2)	math.hypot(x, x2)
code: 原点からの(x, x2)の距離	math.hypot(x, x2)	math.hypot(x, x2)
code: 原点からの(x, x2)の距離を算出する	math.hypot(x, x2)	math.hypot(x, x2)
code: ガンマ関数	math.gamma(x)	math.gamma(x)
code: xにおけるガンマ関数の値	math.gamma(x)	math.gamma(x)
code: xにおけるガンマ関数の絶対値に自然対数をとった値	math.lgamma(x)	math.lgamma(x)
code: πを使用する	string.digits	math.pi
code: ネイピア数	math.e	math.e
code: 無限大を使用する	math.inf	math.inf
code: NaNを使う	math.nan	math.nan
code: matplotlibを描画する	import seaborn as sns	import matplotlib.pyplot as plt
code: プロットを使う	import seaborn as sns	import matplotlib.pyplot as plt
code: 見やすいmatplotlibを描画する	import seaborn as sns	import seaborn as sns
code: 見やすいグラフを描画する	import seaborn as sns	import seaborn as sns
code: 綺麗なプロットを使用する	import seaborn as sns	import seaborn as sns
code: 綺麗なグラフを用いる	import seaborn as sns	import seaborn as sns
code: グラフをキレイにする	import seaborn as sns	import seaborn as sns
code: matplotlibを見やすくする	import seaborn as sns	import seaborn as sns
code: プロットの見た目を良くする	import seaborn as sns	import seaborn as sns
code: seabornのデフォルトを適用する	sns.set()	sns.set()
code: seabornのデフォルトスタイルを適用する	sns.set()	sns.set()
code: グラフをいい感じに設定する	sns.set()	sns.set()
code: プロットをイイ感じにする	sns.set()	sns.set()
code: グラフの用途を論文用に変更する	sns.set(context='paper')	sns.set(context='paper')
code: グラフを論文にセットする	sns.set(context='paper')	sns.set(context='paper')
code: プロットを画面に指定する	sns.set(context='paper')	sns.set(context='notebook')
code: プロットの用途を画面用に変更する	sns.set(context='notebook')	sns.set(context='notebook')
code: プロットの用途をスライド用に指定する	sns.set(context='talk')	sns.set(context='talk')
code: プロットの用途をプレゼンに変更する	sns.set(context='talk')	sns.set(context='talk')
code: matplotlibの用途をポスターにする	sns.set(context='poster')	sns.set(context='poster')
code: matplotlibをポスターに設定する	sns.set(context='poster')	sns.set(context='poster')
code: プロットを全般的に濃くする	sns.set(pallete='deep')	sns.set(pallete='deep')
code: グラフで使うカラーパレットを全般的に濃くする	sns.set(pallete='deep')	sns.set(pallete='deep')
code: matplotlibのパレットを全般的に淡くする	sns.set(pallete='muted')	sns.set(pallete='muted')
code: プロットの色を全般的に淡くする	sns.set(pallete='muted')	sns.set(pallete='muted')
code: matplotlibを全般的にパステル調にする	sns.set(pallete='pastel')	sns.set(pallete='pastel')
code: プロットを全般的にパステル調にする	sns.set(pallete='pastel')	sns.set(pallete='pastel')
code: プロットのカラーテーマを全般的に暗くする	sns.set(pallete='dark')	sns.set(pallete='dark')
code: matplotlibの色テーマを全般的に暗くする	sns.set(pallete='dark')	sns.set(pallete='dark')
code: プロットを明るくする	sns.set(pallete='bright')	sns.set(pallete='bright')
code: グラフを全般的に明るくする	sns.set(pallete='bright')	sns.set(pallete='bright')
code: matplotlibで使用するカラーパレットを全般的に色差別なくする	sns.set(pallete='colorblind')	sns.set(pallete='colorblind')
code: グラフで使用するカラーパレットを全般的に色差別なくする	sns.set(pallete='colorblind')	sns.set(pallete='colorblind')
code: __X__テーマをmatplotlib全般に使用する	sns.set(pallete='deep')	sns.set(pallete='deep')
code: __X__色使いをmatplotlibに使う	sns.set(pallete='bright')	sns.set(pallete='deep')
code: __X__パレットをmatplotlib全般に用いる	sns.set(pallete='dark')	sns.set(pallete='deep')
code: __X__カラーパレットをグラフ全般に使用する	sns.set(pallete='bright')	sns.set(pallete='muted')
code: matplotlib全般に__X__色を使う	sns.set(pallete='muted')	sns.set(pallete='muted')
code: __X__色をグラフ全般に使用する	sns.set(pallete='dark')	sns.set(pallete='muted')
code: __X__色をプロット全般に使う	sns.set(pallete='dark')	sns.set(pallete='pastel')
code: __X__カラーパレットをグラフ全般に用いる	sns.set(pallete='dark')	sns.set(pallete='pastel')
code: matplotlibに__X__色を使用する	sns.set(pallete='dark')	sns.set(pallete='pastel')
code: __X__色テーマをグラフ全般に用いる	sns.set(pallete='muted')	sns.set(pallete='dark')
code: プロット全般に__X__色を用いる	sns.set(pallete='muted')	sns.set(pallete='dark')
code: __X__カラーテーマをグラフ全般に使う	sns.set(pallete='deep')	sns.set(pallete='dark')
code: matplotlib全般に__X__カラーパレットを用いる	sns.set(pallete='deep')	sns.set(pallete='bright')
code: プロット全般に__X__パレットを使う	sns.set(pallete='dark')	sns.set(pallete='bright')
code: プロットに__X__カラーテーマを使う	sns.set(pallete='deep')	sns.set(pallete='bright')
code: __X__色使いをグラフ全般に使用する	sns.set(pallete='deep')	sns.set(pallete='colorblind')
code: プロット全般に__X__色を使用する	sns.set(pallete='deep')	sns.set(pallete='colorblind')
code: __X__テーマをグラフ全般に用いる	sns.set(pallete='dark')	sns.set(pallete='colorblind')
code: matplotlibの色を文字列sで指定する	sns.set(pallete=s)	sns.set(pallete=s)
code: グラフの色テーマを文字列sで指定する	sns.set(pallete=s)	sns.set(pallete=s)
code: グラフで用いるテーマを文字列sに変更する	sns.set(font=s)	sns.set(pallete=s)
code: グラフのパレットを文字列sに変更する	sns.set(palette=s)	sns.set(pallete=s)
code: matplotlibで使用するフォントをsに指定する	sns.set(font=s)	sns.set(font=s)
code: グラフのフォントをsに変更する	sns.set(font=s)	sns.set(font=s)
code: matplotlib内のフォントをsに変更する	sns.set(font=s)	sns.set(font=s)
code: 日本語をmatplotlibのの中で使えるようにする	sns.set(font='IPAexGothic')	sns.set(font='IPAexGothic')
code: 日本語をmatplotlibので表示できるようにする	sns.set(font='IPAexGothic')	sns.set(font='IPAexGothic')
code: matplotlibので日本語を使えるようにする	sns.set(font='IPAexGothic')	sns.set(font='IPAexGothic')
code: matplotlibの内の日本語フォントを利用可能にする	sns.set(font='IPAexGothic')	sns.set(font='IPAexGothic')
code: matplotlibの日本語表示を有効にする	sns.set(font='IPAexGothic')	sns.set(font='IPAexGothic')
code: matplotlibの中のフォントを日本語に変更する	sns.set(font='IPAexGothic')	sns.set(font='IPAexGothic')
code: グラフで使うフォントを日本語表示に設定する	sns.set(font='IPAexGothic')	sns.set(font='IPAexGothic')
code: グラフの文字化けを防ぐ	sns.set(font='IPAexGothic')	sns.set(font='IPAexGothic')
code: 文字化けを防ぐ	sns.set(font='IPAexGothic')	sns.set(font='IPAexGothic')
code: グラフの背景色を暗くする	sns.set(style='darkgrid')	sns.set(style='darkgrid')
code: matplotlibのグリッドを暗くする	sns.set(style='darkgrid')	sns.set(style='darkgrid')
code: グラフのグリッドを白くする	sns.set(style='whitegrid')	sns.set(style='whitegrid')
code: matplotlibの描画で用いるパレットをsとする	sns.set(palette=s)	sns.set(palette=s)
code: matplotlibの描画で使うパレットをsに変更する	sns.set(pallete=s)	sns.set(palette=s)
code: グラフの中の題名をsに変更する	plt.legend(s)	plt.title(s)
code: グラフで使用する題名をsに設定する	plt.title(s)	plt.title(s)
code: 表示するプロットの大きさを縦n2横n変える	plt.figure(figsize=(n, n2)))))))	plt.figure(figsize=(n, n2))
code: 表示するプロットのサイズを横n縦n2変える	plt.figure(figsize=(n, n2))	plt.figure(figsize=(n, n2))
code: 横軸のラベルをsにセットする	plt.xlabel(s)	plt.xlabel(s)
code: グラフで用いる横軸のラベルを文字列sにする	plt.ylabel(s)	plt.xlabel(s)
code: グラフで使用するx座標にsというラベルを設定する	plt.xlabel(s)	plt.xlabel(s)
code: グラフで使う横軸にsという説明を設定する	plt.ylabel(s)	plt.xlabel(s)
code: y座標の軸ラベルを文字列s変える	plt.xlabel(s)	plt.ylabel(s)
code: 縦軸の軸ラベルを文字列sに変更する	plt.ylabel(s)	plt.ylabel(s)
code: プロットで使用するy座標に文字列sという説明を付ける	plt.title(s)	plt.ylabel(s)
code: y軸に文字列sというラベルを設定する	plt.ylabel(s)	plt.ylabel(s)
code: グラフに格子線を付ける	plt.grid(True)	plt.grid(True)
code: プロットにメモリ線を付ける	plt.grid(True)	plt.grid(True)
code: をプロットに表示する	plt.grid(True)	plt.grid(True)
code: 補足をプロットに入れる	plt.grid(True)	plt.legend()
code: 補足を加える	plt.legend(frameon=False)	plt.legend()
code: 凡例を表示する	plt.legend()	plt.legend()
code: データラベルをsと文字列s2と表示する	plt.legend([s, s2])	plt.legend([s, s2])
code: 補足を文字列sと文字列s2と加える	plt.legend([s, s2])	plt.legend([s, s2])
code: プロットの中に凡例を文字列sと文字列s2と付ける	plt.legend([s, s2])	plt.legend([s, s2])
code: 補足を(x, x2)の位置に付ける	plt.legend(loc=(x, x2))))	plt.legend(loc=(x, x2))
code: (x, x2)の場所に補足をグラフに加える	plt.legend(loc=(x, x2)	plt.legend(loc=(x, x2))
code: 補足を(x, x2)の位置にプロットに描画する	plt.legend(loc=(x, x2))))))))))	plt.legend(loc=(x, x2))
code: 凡例をグラフ中の(x, x2)の位置に付ける	plt.legend(loc=(x, x2)	plt.legend(loc=(x, x2))
code: グラフ中の(x, x2)の位置にデータラベルを入れる	plt.legend(loc=(x, x2)))	plt.legend(loc=(x, x2))
code: グラフ中の(x, x2)の位置に補足を付ける	plt.legend(loc=(x, x2)))))	plt.legend(loc=(x, x2))
code: 凡例をプロットに被らない位置に付ける	plt.legend()	plt.legend(loc='best')
code: 補足をベストな場所に表示する	plt.legend(frameon=False)	plt.legend(loc='best')
code: データラベルを最も適切な場所に加える	plt.legend(loc='best')	plt.legend(loc='best')
code: プロットに枠なしの補足を入れる	plt.legend(frameon=False)	plt.legend(frameon=False)
code: 枠なしの補足をプロット中に入れる	plt.legend(frameon=False)	plt.legend(frameon=False)
code: 枠なしのデータラベルをプロット内に表示する	plt.legend(frameon=False)	plt.legend(frameon=False)
code: 折れ線グラフを描画する	plt.plot(xdata, ydata)	plt.plot(xdata, ydata)
code: イテラブルxdataとイテラブルydataの折れ線グラフを描画する	plt.plot(xdata, ydata)	plt.plot(xdata, ydata)
code: リストxdataとイテラブルydataの折れ線を描画する	plt.plot(xdata, ydata)	plt.plot(xdata, ydata)
code: イテラブルxdataとリストydataを折れ線グラフに描画する	plt.plot(xdata, ydata)	plt.plot(xdata, ydata)
code: 数列xdataとデータ列ydataを折れ線グラフで描画する	plt.plot(xdata, ydata)	plt.plot(xdata, ydata)
code: 数列xdataを縦軸リストydataを横軸と設定して折れ線をプロットする	plt.plot(xdata, ydata)	plt.plot(xdata, ydata)
code: データ列xdataをy軸、数列ydataを横軸と設定して、折れ線グラフを描く	plt.plot(range(xdata, ydata)	plt.plot(xdata, ydata)
code: リストxdataの推移を折れ線グラフに描画する	plt.plot(xdata, ydata)	plt.plot(range(len(xdata)), xdata)
code: イテラブルxdataの変遷を折れ線グラフで描画する	plt.plot(range(len(xdata)), xdata)	plt.plot(range(len(xdata)), xdata)
code: データ列ydataをx座標と設定してイテラブルxdataの移り変わりを描画する	plt.plot(range(len(xdata)	plt.plot(range(len(xdata)), xdata)
code: 配列ydataをx座標と設定して、数列xdataの移り変わりを描く	plt.xlabel(xdata)	plt.plot(range(len(xdata)), xdata)
code: 折れ線を使ってdfのカラムcolとcol2をプロットする	plt.plot(df[col], df[col2])	plt.plot(df[col], df[col2])
code: データフレームdfのカラムcolとcol2を折れ線を用いて描く	plt.plot(df[col], df[col2])	plt.plot(df[col], df[col2])
code: dfのcolとカラムcol2を折れ線としてプロットする	plt.plot(df[col], df[col2])	plt.plot(df[col], df[col2])
code: アルファ値xの折れ線グラフを描く	plt.plot(xdata, ydata, alpha=x)	plt.plot(xdata, ydata, alpha=x)
code: アルファ値xの折れ線を描画する	plt.plot(xdata, ydata, alpha=x)	plt.plot(xdata, ydata, alpha=x)
code: 折れ線グラフのアルファ値をx変える	plt.plot(xdata, ydata, alpha=x)	plt.plot(xdata, ydata, alpha=x)
code: 折れ線グラフのアルファ値をxに変更する	plt.plot(xdata, ydata, alpha=x)	plt.plot(xdata, ydata, alpha=x)
code: 透明度xで配列xdataとデータ列ydataの折れ線グラフをプロットする	plt.plot(xdata, ydata, alpha=x)	plt.plot(xdata, ydata, alpha=x)
code: データ列xdataとイテラブルydataの折れ線グラフをアルファxで描く	plt.plot(xdata, ydata, alpha=x)	plt.plot(xdata, ydata, alpha=x)
code: リストxdataと配列ydataの折れ線グラフを透明度xでプロットする	plt.plot(xdata, ydata, alpha=x)	plt.plot(xdata, ydata, alpha=x)
code: 配列xdataとデータ列ydataの折れ線を描画して、アルファをx変える	plt.plot(xdata, ydata, alpha=x)	plt.plot(xdata, ydata, alpha=x)
code: 数列xdataと数列ydataの折れ線グラフを描画して、アルファ値をxに変更する	plt.plot(xdata, ydata, alpha=x)	plt.plot(xdata, ydata, alpha=x)
code: で使える色の一覧	import seaborn as sns	matplotlib.colors.cnames
code: 折れ線グラフの色をsに設定する	plt.plot(xdata, ydata, color=s)	plt.plot(xdata, ydata, color=s)
code: 折れ線グラフの色をs変える	plt.plot(xdata, ydata, color=s)	plt.plot(xdata, ydata, color=s)
code: 文字列sの色でデータ列xdataとイテラブルydataの折れ線をプロットする	plt.plot(xdata, ydata, color=s)	plt.plot(xdata, ydata, color=s)
code: sの色でデータ列xdataと配列ydataの折れ線をプロットする	plt.plot(xdata, ydata, color=s)	plt.plot(xdata, ydata, color=s)
code: 文字列sの色で数列xdataとリストydataの折れ線グラフを描く	plt.plot(xdata, ydata, color=s)	plt.plot(xdata, ydata, color=s)
code: イテラブルxdataと配列ydataの折れ線を描画して、色をsにセットする	plt.plot(xdata, ydata, color=s)	plt.plot(xdata, ydata, color=s)
code: 配列xdataとイテラブルydataの折れ線を描画して、色をsに変更する	plt.plot(xdata, ydata, color=s)	plt.plot(xdata, ydata, color=s)
code: 折れ線グラフの色をrgb変える	plt.plot(xdata, ydata, color=rgb)	plt.plot(xdata, ydata, color=rgb)
code: 折れ線グラフの色をカラーコードrgbにセットする	plt.plot(xdata, ydata, color=rgb)	plt.plot(xdata, ydata, color=rgb)
code: カラーコードrgbでイテラブルxdataと配列ydataの折れ線を描画する	plt.plot(xdata, ydata, color=rgb)	plt.plot(xdata, ydata, color=rgb)
code: カラーコードrgbでイテラブルxdataとデータ列ydataの折れ線を描く	plt.plot(xdata, ydata, color=rgb)	plt.plot(xdata, ydata, color=rgb)
code: 配列xdataと数列ydataの折れ線をrgbで描画する	plt.plot(xdata, ydata, color=rgb)	plt.plot(xdata, ydata, color=rgb)
code: 数列xdataとイテラブルydataについての折れ線を描画して色をrgb変える	plt.plot(xdata, ydata, color=rgb)	plt.plot(xdata, ydata, color=rgb)
code: 配列xdataとイテラブルydataの折れ線を描画して色をrgbにする	plt.plot(xdata, ydata, color=rgb)	plt.plot(xdata, ydata, color=rgb)
code: 折れ線の色をアリスブルーに指定する	plt.plot(xdata, ydata, color='aliceblue')	plt.plot(xdata, ydata, color='aliceblue')
code: 折れ線の色をアリスブルー変える	plt.plot(xdata, ydata, color='aliceblue')	plt.plot(xdata, ydata, color='aliceblue')
code: アリスブルー色の折れ線グラフをプロットする	plt.plot(xdata, ydata, color='aliceblue')	plt.plot(xdata, ydata, color='aliceblue')
code: 数列xdataと配列ydataの折れ線を描画して色をアリスブルーに設定する	plt.plot(xdata, ydata, color='aliceblue')	plt.plot(xdata, ydata, color='aliceblue')
code: 数列xdataとデータ列ydataについて折れ線を描画して、その色をアリスブルーに変更する	plt.plot(xdata, ydata, color='aliceblue')	plt.plot(xdata, ydata, color='aliceblue')
code: 折れ線グラフの色をアンティークホワイト変える	plt.plot(xdata, ydata, color='antiquewhite')	plt.plot(xdata, ydata, color='antiquewhite')
code: 折れ線グラフの色をアンティークホワイトに変更する	plt.plot(xdata, ydata, color='antiquewhite')	plt.plot(xdata, ydata, color='antiquewhite')
code: アンティークホワイト色の折れ線をプロットする	plt.plot(xdata, ydata, color='antiquewhite')	plt.plot(xdata, ydata, color='antiquewhite')
code: データ列xdataと配列ydataの折れ線を描画して、色をアンティークホワイトに設定する	plt.plot(xdata, ydata, color='antiquewhite')	plt.plot(xdata, ydata, color='antiquewhite')
code: 数列xdataとイテラブルydataについて折れ線を描画して色をアンティークホワイトとする	plt.plot(xdata, ydata, color='antiquewhite')	plt.plot(xdata, ydata, color='antiquewhite')
code: 折れ線グラフの色をアクアにする	plt.plot(xdata, ydata, color='aqua')	plt.plot(xdata, ydata, color='aqua')
code: 折れ線グラフの色をアクア変える	plt.plot(xdata, ydata, color='aqua')	plt.plot(xdata, ydata, color='aqua')
code: アクア色の折れ線グラフをプロットする	plt.plot(xdata, ydata, color='aqua')	plt.plot(xdata, ydata, color='aqua')
code: リストxdataと数列ydataの折れ線グラフを描画してその色をアクアに設定する	plt.plot(xdata, ydata, color='aqua')	plt.plot(xdata, ydata, color='aqua')
code: イテラブルxdataとイテラブルydataの折れ線を描画してその色をアクア変える	plt.plot(xdata, ydata, color='aqua')	plt.plot(xdata, ydata, color='aqua')
code: 折れ線グラフの色をアクアマリンに指定する	plt.plot(xdata, ydata, color='aquamarine')	plt.plot(xdata, ydata, color='aquamarine')
code: 折れ線グラフの色をアクアマリンにする	plt.plot(xdata, ydata, color='aquamarine')	plt.plot(xdata, ydata, color='aquamarine')
code: アクアマリン色の折れ線をプロットする	plt.plot(xdata, ydata, color='aquamarine')	plt.plot(xdata, ydata, color='aquamarine')
code: 数列xdataとリストydataについて折れ線グラフを描画して色をアクアマリンに指定する	plt.plot(xdata, ydata, color='aquamarine')	plt.plot(xdata, ydata, color='aquamarine')
code: データ列xdataと数列ydataの折れ線グラフを描画して色をアクアマリンにセットする	plt.plot(xdata, ydata, color='aquamarine')	plt.plot(xdata, ydata, color='aquamarine')
code: 折れ線グラフの色を紺碧とする	plt.plot(xdata, ydata, color='azure')	plt.plot(xdata, ydata, color='azure')
code: 折れ線グラフの色を紺碧に変更する	plt.plot(xdata, ydata, color='azure')	plt.plot(xdata, ydata, color='azure')
code: 紺碧色の折れ線グラフを描く	plt.plot(xdata, ydata, color='azure')	plt.plot(xdata, ydata, color='azure')
code: イテラブルxdataと配列ydataの折れ線を描画して、色を紺碧に設定する	plt.plot(xdata, ydata, color='azure')	plt.plot(xdata, ydata, color='azure')
code: 配列xdataとイテラブルydataの折れ線グラフを描画して、色を紺碧に指定する	plt.plot(xdata, ydata, color='azure')	plt.plot(xdata, ydata, color='azure')
code: 折れ線グラフの色をベージュに設定する	plt.plot(xdata, ydata, color='beige')	plt.plot(xdata, ydata, color='beige')
code: 折れ線の色をベージュに変更する	plt.plot(xdata, ydata, color='beige')	plt.plot(xdata, ydata, color='beige')
code: ベージュ色の折れ線グラフを描く	plt.plot(xdata, ydata, color='beige')	plt.plot(xdata, ydata, color='beige')
code: リストxdataとデータ列ydataの折れ線を描画してその色をベージュに指定する	plt.plot(xdata, ydata, color='beige')	plt.plot(xdata, ydata, color='beige')
code: リストxdataとリストydataについて折れ線グラフを描画して色をベージュ変える	plt.plot(xdata, ydata, color='beige')	plt.plot(xdata, ydata, color='beige')
code: 折れ線の色をビスクに設定する	plt.plot(xdata, ydata, color='bisque')	plt.plot(xdata, ydata, color='bisque')
code: 折れ線グラフの色をビスク変える	plt.plot(xdata, ydata, color='bisque')	plt.plot(xdata, ydata, color='bisque')
code: ビスク色の折れ線グラフをプロットする	plt.plot(xdata, ydata, color='bisque')	plt.plot(xdata, ydata, color='bisque')
code: リストxdataとリストydataの折れ線グラフを描画して色をビスクに変更する	plt.plot(xdata, ydata, color='bisque')	plt.plot(xdata, ydata, color='bisque')
code: 数列xdataとデータ列ydataについて折れ線を描画してその色をビスクに指定する	plt.plot(xdata, ydata, color='bisque')	plt.plot(xdata, ydata, color='bisque')
code: 折れ線グラフの色をブラックに変更する	plt.plot(xdata, ydata, color='black')	plt.plot(xdata, ydata, color='black')
code: 折れ線の色をブラックに設定する	plt.plot(xdata, ydata, color='black')	plt.plot(xdata, ydata, color='black')
code: ブラック色の折れ線グラフをプロットする	plt.plot(xdata, ydata, color='black')	plt.plot(xdata, ydata, color='black')
code: 数列xdataとリストydataについて折れ線グラフを描画して色をブラックにする	plt.plot(xdata, ydata, color='black')	plt.plot(xdata, ydata, color='black')
code: データ列xdataと数列ydataの折れ線を描画して、その色をブラックとする	plt.plot(xdata, ydata, color='black')	plt.plot(xdata, ydata, color='black')
code: 折れ線グラフの色をブランチドアーモンドにする	plt.plot(xdata, ydata, color='blanchedalmond')	plt.plot(xdata, ydata, color='blanchedalmond')
code: 折れ線の色をブランチドアーモンドに指定する	plt.plot(xdata, ydata, color='blanchedalmond')	plt.plot(xdata, ydata, color='blanchedalmond')
code: ブランチドアーモンド色の折れ線を描く	plt.plot(xdata, ydata, color='blanchedalmond')	plt.plot(xdata, ydata, color='blanchedalmond')
code: イテラブルxdataとリストydataの折れ線グラフを描画して、その色をブランチドアーモンドに変更する	plt.plot(xdata, ydata, color='blanchedalmond')	plt.plot(xdata, ydata, color='blanchedalmond')
code: リストxdataとリストydataの折れ線を描画してその色をブランチドアーモンドにセットする	plt.plot(xdata, ydata, color='blanchedalmond')	plt.plot(xdata, ydata, color='blanchedalmond')
code: 折れ線の色を青変える	plt.plot(xdata, ydata, color='blue')	plt.plot(xdata, ydata, color='blue')
code: 折れ線の色を青変える	plt.plot(xdata, ydata, color='blue')	plt.plot(xdata, ydata, color='blue')
code: 青色の折れ線をプロットする	plt.plot(xdata, ydata, color='blue')	plt.plot(xdata, ydata, color='blue')
code: データ列xdataと配列ydataについて折れ線を描画してその色を青変える	plt.plot(xdata, ydata, color='blue')	plt.plot(xdata, ydata, color='blue')
code: 配列xdataとデータ列ydataの折れ線を描画してその色を青変える	plt.plot(xdata, ydata, color='blue')	plt.plot(xdata, ydata, color='blue')
code: 折れ線の色をブルーバイオレット変える	plt.plot(xdata, ydata, color='blueviolet')	plt.plot(xdata, ydata, color='blueviolet')
code: 折れ線グラフの色をブルーバイオレットにする	plt.plot(xdata, ydata, color='blueviolet')	plt.plot(xdata, ydata, color='blueviolet')
code: ブルーバイオレット色の折れ線グラフを描く	plt.plot(xdata, ydata, color='blueviolet')	plt.plot(xdata, ydata, color='blueviolet')
code: 数列xdataとデータ列ydataについて折れ線グラフを描画して、その色をブルーバイオレット変える	plt.plot(xdata, ydata, color='blueviolet')	plt.plot(xdata, ydata, color='blueviolet')
code: データ列xdataとイテラブルydataについて折れ線グラフを描画して、その色をブルーバイオレットに設定する	plt.plot(xdata, ydata, color='blueviolet')	plt.plot(xdata, ydata, color='blueviolet')
code: 折れ線グラフの色をブラウンに設定する	plt.plot(xdata, ydata, color='brown')	plt.plot(xdata, ydata, color='brown')
code: 折れ線の色をブラウン変える	plt.plot(xdata, ydata, color='brown')	plt.plot(xdata, ydata, color='brown')
code: ブラウン色の折れ線を描く	plt.plot(xdata, ydata, color='brown')	plt.plot(xdata, ydata, color='brown')
code: イテラブルxdataと配列ydataについて折れ線を描画してその色をブラウンにセットする	plt.plot(xdata, ydata, color='brown')	plt.plot(xdata, ydata, color='brown')
code: データ列xdataとイテラブルydataについて折れ線グラフを描画して、その色をブラウンに設定する	plt.plot(xdata, ydata, color='brown')	plt.plot(xdata, ydata, color='brown')
code: 折れ線グラフの色をハリウッド変える	plt.plot(xdata, ydata, color='burlywood')	plt.plot(xdata, ydata, color='burlywood')
code: 折れ線の色をハリウッドにセットする	plt.plot(xdata, ydata, color='burlywood')	plt.plot(xdata, ydata, color='burlywood')
code: ハリウッド色の折れ線をプロットする	plt.plot(xdata, ydata, color='burlywood')	plt.plot(xdata, ydata, color='burlywood')
code: 数列xdataと数列ydataの折れ線グラフを描画してその色をハリウッドに設定する	plt.plot(xdata, ydata, color='burlywood')	plt.plot(xdata, ydata, color='burlywood')
code: データ列xdataと数列ydataについて折れ線を描画して、色をハリウッドにする	plt.plot(xdata, ydata, color='burlywood')	plt.plot(xdata, ydata, color='burlywood')
code: 折れ線グラフの色をカデットブルーにする	plt.plot(xdata, ydata, color='cadetblue')	plt.plot(xdata, ydata, color='cadetblue')
code: 折れ線の色をカデットブルーにセットする	plt.plot(xdata, ydata, color='cadetblue')	plt.plot(xdata, ydata, color='cadetblue')
code: カデットブルー色の折れ線グラフをプロットする	plt.plot(xdata, ydata, color='cadetblue')	plt.plot(xdata, ydata, color='cadetblue')
code: データ列xdataとイテラブルydataについて折れ線を描画して色をカデットブルーに設定する	plt.plot(xdata, ydata, color='cadetblue')	plt.plot(xdata, ydata, color='cadetblue')
code: リストxdataと数列ydataの折れ線を描画して色をカデットブルーに設定する	plt.plot(xdata, ydata, color='cadetblue')	plt.plot(xdata, ydata, color='cadetblue')
code: 折れ線グラフの色をシャルトルーズ変える	plt.plot(xdata, ydata, color='chartreuse')	plt.plot(xdata, ydata, color='chartreuse')
code: 折れ線の色をシャルトルーズに設定する	plt.plot(xdata, ydata, color='chartreuse')	plt.plot(xdata, ydata, color='chartreuse')
code: シャルトルーズ色の折れ線を描く	plt.plot(xdata, ydata, color='chartreuse')	plt.plot(xdata, ydata, color='chartreuse')
code: リストxdataとイテラブルydataについて折れ線グラフを描画して、色をシャルトルーズとする	plt.plot(xdata, ydata, color='chartreuse')	plt.plot(xdata, ydata, color='chartreuse')
code: 配列xdataと数列ydataの折れ線グラフを描画して色をシャルトルーズ変える	plt.plot(xdata, ydata, color='chartreuse')	plt.plot(xdata, ydata, color='chartreuse')
code: 折れ線グラフの色をチョコレートにする	plt.plot(xdata, ydata, color='chocolate')	plt.plot(xdata, ydata, color='chocolate')
code: 折れ線の色をチョコレートに指定する	plt.plot(xdata, ydata, color='chocolate')	plt.plot(xdata, ydata, color='chocolate')
code: チョコレート色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='chocolate')	plt.plot(xdata, ydata, color='chocolate')
code: イテラブルxdataとイテラブルydataの折れ線を描画してその色をチョコレートに変更する	plt.plot(xdata, ydata, color='chocolate')	plt.plot(xdata, ydata, color='chocolate')
code: リストxdataとデータ列ydataについて折れ線を描画してその色をチョコレートに変更する	plt.plot(xdata, ydata, color='chocolate')	plt.plot(xdata, ydata, color='chocolate')
code: 折れ線グラフの色をコーラルにセットする	plt.plot(xdata, ydata, color='coral')	plt.plot(xdata, ydata, color='coral')
code: 折れ線の色をコーラル変える	plt.plot(xdata, ydata, color='coral')	plt.plot(xdata, ydata, color='coral')
code: コーラル色の折れ線グラフをプロットする	plt.plot(xdata, ydata, color='coral')	plt.plot(xdata, ydata, color='coral')
code: イテラブルxdataとイテラブルydataの折れ線グラフを描画して、色をコーラルに指定する	plt.plot(xdata, ydata, color='coral')	plt.plot(xdata, ydata, color='coral')
code: 数列xdataとリストydataについて折れ線グラフを描画して、色をコーラルに変更する	plt.plot(xdata, ydata, color='coral')	plt.plot(xdata, ydata, color='coral')
code: 折れ線グラフの色をコーンフラワーブルーに設定する	plt.plot(xdata, ydata, color='cornflowerblue')	plt.plot(xdata, ydata, color='cornflowerblue')
code: 折れ線グラフの色をコーンフラワーブルーに変更する	plt.plot(xdata, ydata, color='cornflowerblue')	plt.plot(xdata, ydata, color='cornflowerblue')
code: コーンフラワーブルー色の折れ線を描画する	plt.plot(xdata, ydata, color='cornflowerblue')	plt.plot(xdata, ydata, color='cornflowerblue')
code: 配列xdataと配列ydataについて折れ線グラフを描画して色をコーンフラワーブルーにする	plt.plot(xdata, ydata, color='cornflowerblue')	plt.plot(xdata, ydata, color='cornflowerblue')
code: データ列xdataと数列ydataの折れ線グラフを描画して色をコーンフラワーブルーに指定する	plt.plot(xdata, ydata, color='cornflowerblue')	plt.plot(xdata, ydata, color='cornflowerblue')
code: 折れ線グラフの色をコーンズシルクに設定する	plt.plot(xdata, ydata, color='cornsilk')	plt.plot(xdata, ydata, color='cornsilk')
code: 折れ線グラフの色をコーンズシルク変える	plt.plot(xdata, ydata, color='cornsilk')	plt.plot(xdata, ydata, color='cornsilk')
code: コーンズシルク色の折れ線グラフをプロットする	plt.plot(xdata, ydata, color='cornsilk')	plt.plot(xdata, ydata, color='cornsilk')
code: リストxdataと配列ydataについて折れ線グラフを描画して色をコーンズシルクにセットする	plt.plot(xdata, ydata, color='cornsilk')	plt.plot(xdata, ydata, color='cornsilk')
code: データ列xdataと配列ydataについて折れ線を描画して、色をコーンズシルクとする	plt.plot(xdata, ydata, color='cornsilk')	plt.plot(xdata, ydata, color='cornsilk')
code: 折れ線グラフの色をクリムゾンに設定する	plt.plot(xdata, ydata, color='crimson')	plt.plot(xdata, ydata, color='crimson')
code: 折れ線グラフの色をクリムゾンとする	plt.plot(xdata, ydata, color='crimson')	plt.plot(xdata, ydata, color='crimson')
code: クリムゾン色の折れ線を描画する	plt.plot(xdata, ydata, color='crimson')	plt.plot(xdata, ydata, color='crimson')
code: 配列xdataとリストydataの折れ線を描画して、その色をクリムゾンにする	plt.plot(xdata, ydata, color='crimson')	plt.plot(xdata, ydata, color='crimson')
code: イテラブルxdataと配列ydataの折れ線グラフを描画して色をクリムゾンに変更する	plt.plot(xdata, ydata, color='crimson')	plt.plot(xdata, ydata, color='crimson')
code: 折れ線グラフの色をシアン変える	plt.plot(xdata, ydata, color='cyan')	plt.plot(xdata, ydata, color='cyan')
code: 折れ線の色をシアンにする	plt.plot(xdata, ydata, color='cyan')	plt.plot(xdata, ydata, color='cyan')
code: シアン色の折れ線を描く	plt.plot(xdata, ydata, color='cyan')	plt.plot(xdata, ydata, color='cyan')
code: データ列xdataとリストydataについて折れ線を描画して色をシアンとする	plt.plot(xdata, ydata, color='cyan')	plt.plot(xdata, ydata, color='cyan')
code: イテラブルxdataと配列ydataの折れ線グラフを描画して、その色をシアン変える	plt.plot(xdata, ydata, color='cyan')	plt.plot(xdata, ydata, color='cyan')
code: 折れ線グラフの色をダークブルー変える	plt.plot(xdata, ydata, color='darkblue')	plt.plot(xdata, ydata, color='darkblue')
code: 折れ線グラフの色をダークブルー変える	plt.plot(xdata, ydata, color='darkblue')	plt.plot(xdata, ydata, color='darkblue')
code: ダークブルー色の折れ線を描く	plt.plot(xdata, ydata, color='darkblue')	plt.plot(xdata, ydata, color='darkblue')
code: 数列xdataとデータ列ydataについて折れ線を描画して、その色をダークブルーにする	plt.plot(xdata, ydata, color='darkblue')	plt.plot(xdata, ydata, color='darkblue')
code: データ列xdataとリストydataの折れ線を描画して、その色をダークブルー変える	plt.plot(xdata, ydata, color='darkblue')	plt.plot(xdata, ydata, color='darkblue')
code: 折れ線の色をダークシアン変える	plt.plot(xdata, ydata, color='darkcyan')	plt.plot(xdata, ydata, color='darkcyan')
code: 折れ線グラフの色をダークシアンとする	plt.plot(xdata, ydata, color='darkcyan')	plt.plot(xdata, ydata, color='darkcyan')
code: ダークシアン色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='darkcyan')	plt.plot(xdata, ydata, color='darkcyan')
code: イテラブルxdataとデータ列ydataについて折れ線グラフを描画して色をダークシアンに設定する	plt.plot(xdata, ydata, color='darkcyan')	plt.plot(xdata, ydata, color='darkcyan')
code: 数列xdataと数列ydataについて折れ線を描画してその色をダークシアンに変更する	plt.plot(xdata, ydata, color='darkcyan')	plt.plot(xdata, ydata, color='darkcyan')
code: 折れ線グラフの色をダークゴールデンロッド変える	plt.plot(xdata, ydata, color='darkgoldenrod')	plt.plot(xdata, ydata, color='darkgoldenrod')
code: 折れ線の色をダークゴールデンロッドに変更する	plt.plot(xdata, ydata, color='darkgoldenrod')	plt.plot(xdata, ydata, color='darkgoldenrod')
code: ダークゴールデンロッド色の折れ線をプロットする	plt.plot(xdata, ydata, color='darkgoldenrod')	plt.plot(xdata, ydata, color='darkgoldenrod')
code: 数列xdataとイテラブルydataについて折れ線を描画して、その色をダークゴールデンロッドにセットする	plt.plot(xdata, ydata, color='darkgoldenrod')	plt.plot(xdata, ydata, color='darkgoldenrod')
code: データ列xdataとデータ列ydataの折れ線グラフを描画して色をダークゴールデンロッドに指定する	plt.plot(xdata, ydata, color='darkgoldenrod')	plt.plot(xdata, ydata, color='darkgoldenrod')
code: 折れ線グラフの色をダークグレーにセットする	plt.plot(xdata, ydata, color='darkgray')	plt.plot(xdata, ydata, color='darkgray')
code: 折れ線の色をダークグレーに設定する	plt.plot(xdata, ydata, color='darkgray')	plt.plot(xdata, ydata, color='darkgray')
code: ダークグレー色の折れ線をプロットする	plt.plot(xdata, ydata, color='darkgrey')	plt.plot(xdata, ydata, color='darkgray')
code: イテラブルxdataとリストydataの折れ線を描画して、色をダークグレーにする	plt.plot(xdata, ydata, color='darkgray')	plt.plot(xdata, ydata, color='darkgray')
code: 配列xdataとデータ列ydataの折れ線グラフを描画して色をダークグレーとする	plt.plot(xdata, ydata, color='darkgrey')	plt.plot(xdata, ydata, color='darkgray')
code: 折れ線グラフの色をダークグリーンに変更する	plt.plot(xdata, ydata, color='darkgreen')	plt.plot(xdata, ydata, color='darkgreen')
code: 折れ線の色をダークグリーンにセットする	plt.plot(xdata, ydata, color='darkgreen')	plt.plot(xdata, ydata, color='darkgreen')
code: ダークグリーン色の折れ線を描画する	plt.plot(xdata, ydata, color='darkgreen')	plt.plot(xdata, ydata, color='darkgreen')
code: リストxdataとリストydataの折れ線グラフを描画して、色をダークグリーンにセットする	plt.plot(xdata, ydata, color='darkgreen')	plt.plot(xdata, ydata, color='darkgreen')
code: 数列xdataとイテラブルydataの折れ線を描画してその色をダークグリーンに変更する	plt.plot(xdata, ydata, color='darkgreen')	plt.plot(xdata, ydata, color='darkgreen')
code: 折れ線の色をダークグレーに設定する	plt.plot(xdata, ydata, color='darkgray')	plt.plot(xdata, ydata, color='darkgrey')
code: 折れ線の色をダークグレーに設定する	plt.plot(xdata, ydata, color='darkgrey')	plt.plot(xdata, ydata, color='darkgrey')
code: ダークグレー色の折れ線グラフをプロットする	plt.plot(xdata, ydata, color='darkgrey')	plt.plot(xdata, ydata, color='darkgrey')
code: リストxdataと数列ydataについて折れ線を描画して、その色をダークグレーに指定する	plt.plot(xdata, ydata, color='darkgrey')	plt.plot(xdata, ydata, color='darkgrey')
code: データ列xdataと配列ydataについて折れ線グラフを描画して、その色をダークグレーに指定する	plt.plot(xdata, ydata, color='darkgrey')	plt.plot(xdata, ydata, color='darkgrey')
code: 折れ線グラフの色をダークカーキ変える	plt.plot(xdata, ydata, color='darkkhaki')	plt.plot(xdata, ydata, color='darkkhaki')
code: 折れ線グラフの色をダークカーキにセットする	plt.plot(xdata, ydata, color='darkkhaki')	plt.plot(xdata, ydata, color='darkkhaki')
code: ダークカーキ色の折れ線グラフをプロットする	plt.plot(xdata, ydata, color='darkkhaki')	plt.plot(xdata, ydata, color='darkkhaki')
code: 数列xdataと配列ydataについて折れ線を描画して、色をダークカーキに指定する	plt.plot(xdata, ydata, color='darkkhaki')	plt.plot(xdata, ydata, color='darkkhaki')
code: リストxdataとデータ列ydataについて折れ線グラフを描画してその色をダークカーキに設定する	plt.plot(xdata, ydata, color='darkkhaki')	plt.plot(xdata, ydata, color='darkkhaki')
code: 折れ線グラフの色をダークマゼンタ変える	plt.plot(xdata, ydata, color='darkmagenta')	plt.plot(xdata, ydata, color='darkmagenta')
code: 折れ線の色をダークマゼンタにセットする	plt.plot(xdata, ydata, color='darkmagenta')	plt.plot(xdata, ydata, color='darkmagenta')
code: ダークマゼンタ色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='darkmagenta')	plt.plot(xdata, ydata, color='darkmagenta')
code: データ列xdataとリストydataについて折れ線グラフを描画して、その色をダークマゼンタに指定する	plt.plot(xdata, ydata, color='darkmagenta')	plt.plot(xdata, ydata, color='darkmagenta')
code: 数列xdataとリストydataについて折れ線を描画してその色をダークマゼンタに変更する	plt.plot(xdata, ydata, color='darkmagenta')	plt.plot(xdata, ydata, color='darkmagenta')
code: 折れ線の色をダークオリーブグリーンに変更する	plt.plot(xdata, ydata, color='darkolivegreen')	plt.plot(xdata, ydata, color='darkolivegreen')
code: 折れ線グラフの色をダークオリーブグリーンに指定する	plt.plot(xdata, ydata, color='darkolivegreen')	plt.plot(xdata, ydata, color='darkolivegreen')
code: ダークオリーブグリーン色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='darkolivegreen')	plt.plot(xdata, ydata, color='darkolivegreen')
code: 配列xdataとイテラブルydataの折れ線を描画して色をダークオリーブグリーン変える	plt.plot(xdata, ydata, color='darkolivegreen')	plt.plot(xdata, ydata, color='darkolivegreen')
code: 配列xdataとイテラブルydataについて折れ線グラフを描画して、色をダークオリーブグリーンにセットする	plt.plot(xdata, ydata, color='darkolivegreen')	plt.plot(xdata, ydata, color='darkolivegreen')
code: 折れ線の色をダークオレンジに設定する	plt.plot(xdata, ydata, color='darkorange')	plt.plot(xdata, ydata, color='darkorange')
code: 折れ線の色をダークオレンジ変える	plt.plot(xdata, ydata, color='darkorange')	plt.plot(xdata, ydata, color='darkorange')
code: ダークオレンジ色の折れ線グラフを描く	plt.plot(xdata, ydata, color='darkorange')	plt.plot(xdata, ydata, color='darkorange')
code: リストxdataとリストydataについて折れ線を描画して、色をダークオレンジ変える	plt.plot(xdata, ydata, color='darkorange')	plt.plot(xdata, ydata, color='darkorange')
code: 配列xdataと数列ydataについて折れ線を描画して色をダークオレンジに変更する	plt.plot(xdata, ydata, color='darkorange')	plt.plot(xdata, ydata, color='darkorange')
code: 折れ線グラフの色をダークオーキッド変える	plt.plot(xdata, ydata, color='darkorchid')	plt.plot(xdata, ydata, color='darkorchid')
code: 折れ線の色をダークオーキッドに設定する	plt.plot(xdata, ydata, color='darkorchid')	plt.plot(xdata, ydata, color='darkorchid')
code: ダークオーキッド色の折れ線を描画する	plt.plot(xdata, ydata, color='darkorchid')	plt.plot(xdata, ydata, color='darkorchid')
code: イテラブルxdataとデータ列ydataについて折れ線を描画して、その色をダークオーキッド変える	plt.plot(xdata, ydata, color='darkorchid')	plt.plot(xdata, ydata, color='darkorchid')
code: 数列xdataと数列ydataについて折れ線を描画して、色をダークオーキッドに変更する	plt.plot(xdata, ydata, color='darkorchid')	plt.plot(xdata, ydata, color='darkorchid')
code: 折れ線グラフの色をダークレッドにする	plt.plot(xdata, ydata, color='darkred')	plt.plot(xdata, ydata, color='darkred')
code: 折れ線グラフの色をダークレッドに変更する	plt.plot(xdata, ydata, color='darkred')	plt.plot(xdata, ydata, color='darkred')
code: ダークレッド色の折れ線をプロットする	plt.plot(xdata, ydata, color='darkred')	plt.plot(xdata, ydata, color='darkred')
code: リストxdataとデータ列ydataの折れ線を描画して色をダークレッドに設定する	plt.plot(xdata, ydata, color='darkred')	plt.plot(xdata, ydata, color='darkred')
code: イテラブルxdataと配列ydataの折れ線グラフを描画して色をダークレッドにセットする	plt.plot(xdata, ydata, color='darkred')	plt.plot(xdata, ydata, color='darkred')
code: 折れ線グラフの色をダークサーモンに設定する	plt.plot(xdata, ydata, color='darksalmon')	plt.plot(xdata, ydata, color='darksalmon')
code: 折れ線グラフの色をダークサーモンに変更する	plt.plot(xdata, ydata, color='darksalmon')	plt.plot(xdata, ydata, color='darksalmon')
code: ダークサーモン色の折れ線グラフをプロットする	plt.plot(xdata, ydata, color='darksalmon')	plt.plot(xdata, ydata, color='darksalmon')
code: データ列xdataとイテラブルydataの折れ線グラフを描画して、その色をダークサーモンにセットする	plt.plot(xdata, ydata, color='darksalmon')	plt.plot(xdata, ydata, color='darksalmon')
code: 数列xdataとリストydataについて折れ線グラフを描画してその色をダークサーモンにセットする	plt.plot(xdata, ydata, color='darksalmon')	plt.plot(xdata, ydata, color='darksalmon')
code: 折れ線グラフの色をダークシアグリーンに変更する	plt.plot(xdata, ydata, color='darkseagreen')	plt.plot(xdata, ydata, color='darkseagreen')
code: 折れ線の色をダークシアグリーンに設定する	plt.plot(xdata, ydata, color='darkseagreen')	plt.plot(xdata, ydata, color='darkseagreen')
code: ダークシアグリーン色の折れ線グラフを描く	plt.plot(xdata, ydata, color='darkseagreen')	plt.plot(xdata, ydata, color='darkseagreen')
code: 配列xdataと配列ydataについて折れ線を描画して、その色をダークシアグリーンに変更する	plt.plot(xdata, ydata, color='darkseagreen')	plt.plot(xdata, ydata, color='darkseagreen')
code: 配列xdataと数列ydataについて折れ線を描画して色をダークシアグリーン変える	plt.plot(xdata, ydata, color='darkseagreen')	plt.plot(xdata, ydata, color='darkseagreen')
code: 折れ線グラフの色をダークスレートブルーにセットする	plt.plot(xdata, ydata, color='darkslateblue')	plt.plot(xdata, ydata, color='darkslateblue')
code: 折れ線グラフの色をダークスレートブルーに変更する	plt.plot(xdata, ydata, color='darkslateblue')	plt.plot(xdata, ydata, color='darkslateblue')
code: ダークスレートブルー色の折れ線グラフをプロットする	plt.plot(xdata, ydata, color='darkslateblue')	plt.plot(xdata, ydata, color='darkslateblue')
code: データ列xdataと数列ydataについて折れ線を描画してその色をダークスレートブルーに指定する	plt.plot(xdata, ydata, color='darkslateblue')	plt.plot(xdata, ydata, color='darkslateblue')
code: イテラブルxdataと数列ydataについて折れ線グラフを描画して、その色をダークスレートブルーに指定する	plt.plot(xdata, ydata, color='darkslateblue')	plt.plot(xdata, ydata, color='darkslateblue')
code: 折れ線の色をダークスラテグレーに指定する	plt.plot(xdata, ydata, color='darkslategray')	plt.plot(xdata, ydata, color='darkslategray')
code: 折れ線グラフの色をダークスラテグレー変える	plt.plot(xdata, ydata, color='darkslategray')	plt.plot(xdata, ydata, color='darkslategray')
code: ダークスラテグレー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='darkslategray')	plt.plot(xdata, ydata, color='darkslategray')
code: 数列xdataとリストydataについて折れ線を描画して、色をダークスラテグレーとする	plt.plot(xdata, ydata, color='darkslategray')	plt.plot(xdata, ydata, color='darkslategray')
code: 数列xdataとリストydataについて折れ線を描画して色をダークスラテグレー変える	plt.plot(xdata, ydata, color='darkslategray')	plt.plot(xdata, ydata, color='darkslategray')
code: 折れ線の色をダーク・スラテグレーに設定する	plt.plot(xdata, ydata, color='darkslategrey')	plt.plot(xdata, ydata, color='darkslategrey')
code: 折れ線の色をダーク・スラテグレー変える	plt.plot(xdata, ydata, color='darkslategrey')	plt.plot(xdata, ydata, color='darkslategrey')
code: ダーク・スラテグレー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='darkslategrey')	plt.plot(xdata, ydata, color='darkslategrey')
code: リストxdataとイテラブルydataについて折れ線グラフを描画して、その色をダーク・スラテグレー変える	plt.plot(xdata, ydata, color='darkslategrey')	plt.plot(xdata, ydata, color='darkslategrey')
code: データ列xdataとイテラブルydataについて折れ線を描画して色をダーク・スラテグレー変える	plt.plot(xdata, ydata, color='darkslategrey')	plt.plot(xdata, ydata, color='darkslategrey')
code: 折れ線の色をダークターコイズ変える	plt.plot(xdata, ydata, color='darkturquoise')	plt.plot(xdata, ydata, color='darkturquoise')
code: 折れ線の色をダークターコイズにセットする	plt.plot(xdata, ydata, color='darkturquoise')	plt.plot(xdata, ydata, color='darkturquoise')
code: ダークターコイズ色の折れ線グラフをプロットする	plt.plot(xdata, ydata, color='darkturquoise')	plt.plot(xdata, ydata, color='darkturquoise')
code: 数列xdataとリストydataについて折れ線を描画して、その色をダークターコイズ変える	plt.plot(xdata, ydata, color='darkturquoise')	plt.plot(xdata, ydata, color='darkturquoise')
code: リストxdataとリストydataについて折れ線を描画して、その色をダークターコイズ変える	plt.plot(xdata, ydata, color='darkturquoise')	plt.plot(xdata, ydata, color='darkturquoise')
code: 折れ線の色をダークバイオレットに設定する	plt.plot(xdata, ydata, color='darkviolet')	plt.plot(xdata, ydata, color='darkviolet')
code: 折れ線グラフの色をダークバイオレットとする	plt.plot(xdata, ydata, color='darkviolet')	plt.plot(xdata, ydata, color='darkviolet')
code: ダークバイオレット色の折れ線グラフをプロットする	plt.plot(xdata, ydata, color='darkviolet')	plt.plot(xdata, ydata, color='darkviolet')
code: 数列xdataとリストydataについて折れ線を描画して、その色をダークバイオレットに設定する	plt.plot(xdata, ydata, color='darkviolet')	plt.plot(xdata, ydata, color='darkviolet')
code: 配列xdataとデータ列ydataについて折れ線を描画して、色をダークバイオレットとする	plt.plot(xdata, ydata, color='darkviolet')	plt.plot(xdata, ydata, color='darkviolet')
code: 折れ線の色をデピンクにする	plt.plot(xdata, ydata, color='deeppink')	plt.plot(xdata, ydata, color='deeppink')
code: 折れ線の色をデピンクに設定する	plt.plot(xdata, ydata, color='deeppink')	plt.plot(xdata, ydata, color='deeppink')
code: デピンク色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='deeppink')	plt.plot(xdata, ydata, color='deeppink')
code: イテラブルxdataと配列ydataの折れ線グラフを描画してその色をデピンク変える	plt.plot(xdata, ydata, color='deeppink')	plt.plot(xdata, ydata, color='deeppink')
code: リストxdataと数列ydataについて折れ線グラフを描画して色をデピンクにセットする	plt.plot(xdata, ydata, color='deeppink')	plt.plot(xdata, ydata, color='deeppink')
code: 折れ線の色をディープスカイブルーに設定する	plt.plot(xdata, ydata, color='deepskyblue')	plt.plot(xdata, ydata, color='deepskyblue')
code: 折れ線グラフの色をディープスカイブルーにする	plt.plot(xdata, ydata, color='deepskyblue')	plt.plot(xdata, ydata, color='deepskyblue')
code: ディープスカイブルー色の折れ線グラフを描く	plt.plot(xdata, ydata, color='deepskyblue')	plt.plot(xdata, ydata, color='deepskyblue')
code: 配列xdataと数列ydataの折れ線を描画してその色をディープスカイブルーにセットする	plt.plot(xdata, ydata, color='deepskyblue')	plt.plot(xdata, ydata, color='deepskyblue')
code: イテラブルxdataとイテラブルydataの折れ線グラフを描画してその色をディープスカイブルー変える	plt.plot(xdata, ydata, color='deepskyblue')	plt.plot(xdata, ydata, color='deepskyblue')
code: 折れ線の色をディムグレーに設定する	plt.plot(xdata, ydata, color='dimgray')	plt.plot(xdata, ydata, color='dimgray')
code: 折れ線グラフの色をディムグレーに変更する	plt.plot(xdata, ydata, color='dimgray')	plt.plot(xdata, ydata, color='dimgray')
code: ディムグレー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='dimgray')	plt.plot(xdata, ydata, color='dimgray')
code: 配列xdataとリストydataについて折れ線を描画して、色をディムグレー変える	plt.plot(xdata, ydata, color='dimgrey')	plt.plot(xdata, ydata, color='dimgray')
code: イテラブルxdataと数列ydataについて折れ線を描画して、その色をディムグレー変える	plt.plot(xdata, ydata, color='dimgray')	plt.plot(xdata, ydata, color='dimgray')
code: 折れ線の色をディムグレー変える	plt.plot(xdata, ydata, color='dimgray')	plt.plot(xdata, ydata, color='dimgrey')
code: 折れ線の色をディムグレーに設定する	plt.plot(xdata, ydata, color='dimgray')	plt.plot(xdata, ydata, color='dimgrey')
code: ディムグレー色の折れ線グラフをプロットする	plt.plot(xdata, ydata, color='dimgray')	plt.plot(xdata, ydata, color='dimgrey')
code: 数列xdataと配列ydataについて折れ線グラフを描画して、色をディムグレー変える	plt.plot(xdata, ydata, color='dimgray')	plt.plot(xdata, ydata, color='dimgrey')
code: リストxdataと配列ydataの折れ線を描画して、色をディムグレーにセットする	plt.plot(xdata, ydata, color='dimgray')	plt.plot(xdata, ydata, color='dimgrey')
code: 折れ線グラフの色をドジャーブルー変える	plt.plot(xdata, ydata, color='dodgerblue')	plt.plot(xdata, ydata, color='dodgerblue')
code: 折れ線の色をドジャーブルーとする	plt.plot(xdata, ydata, color='dodgerblue')	plt.plot(xdata, ydata, color='dodgerblue')
code: ドジャーブルー色の折れ線グラフを描く	plt.plot(xdata, ydata, color='dodgerblue')	plt.plot(xdata, ydata, color='dodgerblue')
code: 数列xdataと数列ydataについて折れ線を描画して、その色をドジャーブルーにする	plt.plot(xdata, ydata, color='dodgerblue')	plt.plot(xdata, ydata, color='dodgerblue')
code: 配列xdataとイテラブルydataの折れ線を描画して、色をドジャーブルーにする	plt.plot(xdata, ydata, color='dodgerblue')	plt.plot(xdata, ydata, color='dodgerblue')
code: 折れ線の色を耐火レンガ変える	plt.plot(xdata, ydata, color='firebrick')	plt.plot(xdata, ydata, color='firebrick')
code: 折れ線グラフの色を耐火レンガに指定する	plt.plot(xdata, ydata, color='firebrick')	plt.plot(xdata, ydata, color='firebrick')
code: 耐火レンガ色の折れ線を描画する	plt.plot(xdata, ydata, color='firebrick')	plt.plot(xdata, ydata, color='firebrick')
code: 配列xdataとイテラブルydataの折れ線を描画してその色を耐火レンガに設定する	plt.plot(xdata, ydata, color='firebrick')	plt.plot(xdata, ydata, color='firebrick')
code: イテラブルxdataと数列ydataについて折れ線を描画してその色を耐火レンガに指定する	plt.plot(xdata, ydata, color='firebrick')	plt.plot(xdata, ydata, color='firebrick')
code: 折れ線グラフの色をフローラルホワイトに変更する	plt.plot(xdata, ydata, color='floralwhite')	plt.plot(xdata, ydata, color='floralwhite')
code: 折れ線の色をフローラルホワイトとする	plt.plot(xdata, ydata, color='floralwhite')	plt.plot(xdata, ydata, color='floralwhite')
code: フローラルホワイト色の折れ線グラフを描く	plt.plot(xdata, ydata, color='floralwhite')	plt.plot(xdata, ydata, color='floralwhite')
code: イテラブルxdataとデータ列ydataについて折れ線を描画してその色をフローラルホワイトに変更する	plt.plot(xdata, ydata, color='floralwhite')	plt.plot(xdata, ydata, color='floralwhite')
code: データ列xdataとイテラブルydataについて折れ線を描画してその色をフローラルホワイト変える	plt.plot(xdata, ydata, color='floralwhite')	plt.plot(xdata, ydata, color='floralwhite')
code: 折れ線グラフの色をフォレストグリーンにする	plt.plot(xdata, ydata, color='forestgreen')	plt.plot(xdata, ydata, color='forestgreen')
code: 折れ線グラフの色をフォレストグリーンに設定する	plt.plot(xdata, ydata, color='forestgreen')	plt.plot(xdata, ydata, color='forestgreen')
code: フォレストグリーン色の折れ線を描く	plt.plot(xdata, ydata, color='forestgreen')	plt.plot(xdata, ydata, color='forestgreen')
code: 配列xdataと数列ydataについて折れ線を描画してその色をフォレストグリーンにセットする	plt.plot(xdata, ydata, color='forestgreen')	plt.plot(xdata, ydata, color='forestgreen')
code: 数列xdataと数列ydataについて折れ線を描画してその色をフォレストグリーン変える	plt.plot(xdata, ydata, color='forestgreen')	plt.plot(xdata, ydata, color='forestgreen')
code: 折れ線グラフの色をフクシアに変更する	plt.plot(xdata, ydata, color='fuchsia')	plt.plot(xdata, ydata, color='fuchsia')
code: 折れ線の色をフクシアにする	plt.plot(xdata, ydata, color='fuchsia')	plt.plot(xdata, ydata, color='fuchsia')
code: フクシア色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='fuchsia')	plt.plot(xdata, ydata, color='fuchsia')
code: データ列xdataとリストydataについて折れ線を描画してその色をフクシアに変更する	plt.plot(xdata, ydata, color='fuchsia')	plt.plot(xdata, ydata, color='fuchsia')
code: 配列xdataとイテラブルydataについて折れ線グラフを描画して、その色をフクシアに指定する	plt.plot(xdata, ydata, color='fuchsia')	plt.plot(xdata, ydata, color='fuchsia')
code: 折れ線の色をゲインズボロとする	plt.plot(xdata, ydata, color='gainsboro')	plt.plot(xdata, ydata, color='gainsboro')
code: 折れ線の色をゲインズボロに設定する	plt.plot(xdata, ydata, color='gainsboro')	plt.plot(xdata, ydata, color='gainsboro')
code: ゲインズボロ色の折れ線グラフを描く	plt.plot(xdata, ydata, color='gainsboro')	plt.plot(xdata, ydata, color='gainsboro')
code: 数列xdataとリストydataの折れ線グラフを描画して、その色をゲインズボロに設定する	plt.plot(xdata, ydata, color='gainsboro')	plt.plot(xdata, ydata, color='gainsboro')
code: 数列xdataと配列ydataの折れ線グラフを描画して、色をゲインズボロにする	plt.plot(xdata, ydata, color='gainsboro')	plt.plot(xdata, ydata, color='gainsboro')
code: 折れ線の色をゴーストホワイトに設定する	plt.plot(xdata, ydata, color='ghostwhite')	plt.plot(xdata, ydata, color='ghostwhite')
code: 折れ線グラフの色をゴーストホワイトにする	plt.plot(xdata, ydata, color='ghostwhite')	plt.plot(xdata, ydata, color='ghostwhite')
code: ゴーストホワイト色の折れ線グラフをプロットする	plt.plot(xdata, ydata, color='ghostwhite')	plt.plot(xdata, ydata, color='ghostwhite')
code: イテラブルxdataと数列ydataについて折れ線を描画して色をゴーストホワイトに設定する	plt.plot(xdata, ydata, color='ghostwhite')	plt.plot(xdata, ydata, color='ghostwhite')
code: 数列xdataとイテラブルydataの折れ線グラフを描画して色をゴーストホワイトに指定する	plt.plot(xdata, ydata, color='ghostwhite')	plt.plot(xdata, ydata, color='ghostwhite')
code: 折れ線グラフの色をゴールド変える	plt.plot(xdata, ydata, color='gold')	plt.plot(xdata, ydata, color='gold')
code: 折れ線グラフの色をゴールドに変更する	plt.plot(xdata, ydata, color='gold')	plt.plot(xdata, ydata, color='gold')
code: ゴールド色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='gold')	plt.plot(xdata, ydata, color='gold')
code: 配列xdataと配列ydataについて折れ線を描画してその色をゴールドに変更する	plt.plot(xdata, ydata, color='gold')	plt.plot(xdata, ydata, color='gold')
code: イテラブルxdataとリストydataについて折れ線グラフを描画してその色をゴールドにセットする	plt.plot(xdata, ydata, color='gold')	plt.plot(xdata, ydata, color='gold')
code: 折れ線グラフの色をゴールデンロッドに変更する	plt.plot(xdata, ydata, color='goldenrod')	plt.plot(xdata, ydata, color='goldenrod')
code: 折れ線グラフの色をゴールデンロッドにセットする	plt.plot(xdata, ydata, color='goldenrod')	plt.plot(xdata, ydata, color='goldenrod')
code: ゴールデンロッド色の折れ線をプロットする	plt.plot(xdata, ydata, color='goldenrod')	plt.plot(xdata, ydata, color='goldenrod')
code: イテラブルxdataと数列ydataについて折れ線を描画して色をゴールデンロッドに指定する	plt.plot(xdata, ydata, color='goldenrod')	plt.plot(xdata, ydata, color='goldenrod')
code: データ列xdataと配列ydataの折れ線グラフを描画して色をゴールデンロッドにセットする	plt.plot(xdata, ydata, color='goldenrod')	plt.plot(xdata, ydata, color='goldenrod')
code: 折れ線の色をグレーとする	plt.plot(xdata, ydata, color='gray')	plt.plot(xdata, ydata, color='gray')
code: 折れ線グラフの色をグレーに変更する	plt.plot(xdata, ydata, color='gray')	plt.plot(xdata, ydata, color='gray')
code: グレー色の折れ線を描画する	plt.plot(xdata, ydata, color='gray')	plt.plot(xdata, ydata, color='gray')
code: データ列xdataと配列ydataの折れ線グラフを描画して色をグレーに設定する	plt.plot(xdata, ydata, color='gray')	plt.plot(xdata, ydata, color='gray')
code: データ列xdataとイテラブルydataの折れ線グラフを描画して、その色をグレーとする	plt.plot(xdata, ydata, color='gray')	plt.plot(xdata, ydata, color='gray')
code: 折れ線グラフの色をグリーン変える	plt.plot(xdata, ydata, color='green')	plt.plot(xdata, ydata, color='green')
code: 折れ線グラフの色をグリーン変える	plt.plot(xdata, ydata, color='green')	plt.plot(xdata, ydata, color='green')
code: グリーン色の折れ線グラフを描く	plt.plot(xdata, ydata, color='green')	plt.plot(xdata, ydata, color='green')
code: 配列xdataとイテラブルydataの折れ線を描画して、色をグリーンに設定する	plt.plot(xdata, ydata, color='green')	plt.plot(xdata, ydata, color='green')
code: データ列xdataと数列ydataについて折れ線を描画して、色をグリーンとする	plt.plot(xdata, ydata, color='green')	plt.plot(xdata, ydata, color='green')
code: 折れ線の色をグリーンイエローにする	plt.plot(xdata, ydata, color='greenyellow')	plt.plot(xdata, ydata, color='greenyellow')
code: 折れ線グラフの色をグリーンイエロー変える	plt.plot(xdata, ydata, color='yellowgreen')	plt.plot(xdata, ydata, color='greenyellow')
code: グリーンイエロー色の折れ線をプロットする	plt.plot(xdata, ydata, color='greenyellow')	plt.plot(xdata, ydata, color='greenyellow')
code: イテラブルxdataと配列ydataについて折れ線グラフを描画して、その色をグリーンイエローにセットする	plt.plot(xdata, ydata, color='greenyellow')	plt.plot(xdata, ydata, color='greenyellow')
code: イテラブルxdataと数列ydataについて折れ線を描画して、色をグリーンイエロー変える	plt.plot(xdata, ydata, color='yellowgreen')	plt.plot(xdata, ydata, color='greenyellow')
code: 折れ線グラフの色をグレーに設定する	plt.plot(xdata, ydata, color='gray')	plt.plot(xdata, ydata, color='grey')
code: 折れ線グラフの色をグレーに指定する	plt.plot(xdata, ydata, color='gray')	plt.plot(xdata, ydata, color='grey')
code: グレー色の折れ線グラフを描く	plt.plot(xdata, ydata, color='gray')	plt.plot(xdata, ydata, color='grey')
code: データ列xdataとリストydataの折れ線を描画して色をグレーにする	plt.plot(xdata, ydata, color='gray')	plt.plot(xdata, ydata, color='grey')
code: 数列xdataとリストydataについて折れ線を描画して、色をグレーにする	plt.plot(xdata, ydata, color='gray')	plt.plot(xdata, ydata, color='grey')
code: 折れ線グラフの色をハニーデューにする	plt.plot(xdata, ydata, color='honeydew')	plt.plot(xdata, ydata, color='honeydew')
code: 折れ線の色をハニーデューにする	plt.plot(xdata, ydata, color='honeydew')	plt.plot(xdata, ydata, color='honeydew')
code: ハニーデュー色の折れ線を描画する	plt.plot(xdata, ydata, color='honeydew')	plt.plot(xdata, ydata, color='honeydew')
code: 数列xdataとデータ列ydataの折れ線を描画してその色をハニーデューに変更する	plt.plot(xdata, ydata, color='honeydew')	plt.plot(xdata, ydata, color='honeydew')
code: イテラブルxdataとリストydataの折れ線を描画してその色をハニーデューに設定する	plt.plot(xdata, ydata, color='honeydew')	plt.plot(xdata, ydata, color='honeydew')
code: 折れ線グラフの色をホットピンク変える	plt.plot(xdata, ydata, color='hotpink')	plt.plot(xdata, ydata, color='hotpink')
code: 折れ線の色をホットピンクにする	plt.plot(xdata, ydata, color='hotpink')	plt.plot(xdata, ydata, color='hotpink')
code: ホットピンク色の折れ線をプロットする	plt.plot(xdata, ydata, color='hotpink')	plt.plot(xdata, ydata, color='hotpink')
code: イテラブルxdataとデータ列ydataについて折れ線グラフを描画してその色をホットピンクに指定する	plt.plot(xdata, ydata, color='hotpink')	plt.plot(xdata, ydata, color='hotpink')
code: リストxdataとイテラブルydataの折れ線を描画して、その色をホットピンク変える	plt.plot(xdata, ydata, color='hotpink')	plt.plot(xdata, ydata, color='hotpink')
code: 折れ線グラフの色をインディアンレッド変える	plt.plot(xdata, ydata, color='indianred')	plt.plot(xdata, ydata, color='indianred')
code: 折れ線の色をインディアンレッド変える	plt.plot(xdata, ydata, color='indianred')	plt.plot(xdata, ydata, color='indianred')
code: インディアンレッド色の折れ線グラフをプロットする	plt.plot(xdata, ydata, color='indianred')	plt.plot(xdata, ydata, color='indianred')
code: リストxdataとイテラブルydataの折れ線グラフを描画して色をインディアンレッドにセットする	plt.plot(xdata, ydata, color='indianred')	plt.plot(xdata, ydata, color='indianred')
code: リストxdataとリストydataの折れ線グラフを描画してその色をインディアンレッドに設定する	plt.plot(xdata, ydata, color='indianred')	plt.plot(xdata, ydata, color='indianred')
code: 折れ線グラフの色をインディゴ変える	plt.plot(xdata, ydata, color='indigo')	plt.plot(xdata, ydata, color='indigo')
code: 折れ線の色をインディゴ変える	plt.plot(xdata, ydata, color='indigo')	plt.plot(xdata, ydata, color='indigo')
code: インディゴ色の折れ線グラフを描く	plt.plot(xdata, ydata, color='indigo')	plt.plot(xdata, ydata, color='indigo')
code: 数列xdataとイテラブルydataについて折れ線グラフを描画して、その色をインディゴにセットする	plt.plot(xdata, ydata, color='indigo')	plt.plot(xdata, ydata, color='indigo')
code: 配列xdataとデータ列ydataについて折れ線グラフを描画してその色をインディゴに設定する	plt.plot(xdata, ydata, color='indigo')	plt.plot(xdata, ydata, color='indigo')
code: 折れ線グラフの色をアイボリーに変更する	plt.plot(xdata, ydata, color='ivory')	plt.plot(xdata, ydata, color='ivory')
code: 折れ線グラフの色をアイボリーに指定する	plt.plot(xdata, ydata, color='ivory')	plt.plot(xdata, ydata, color='ivory')
code: アイボリー色の折れ線グラフをプロットする	plt.plot(xdata, ydata, color='ivory')	plt.plot(xdata, ydata, color='ivory')
code: 配列xdataとイテラブルydataについて折れ線を描画して色をアイボリーとする	plt.plot(xdata, ydata, color='ivory')	plt.plot(xdata, ydata, color='ivory')
code: 数列xdataと数列ydataの折れ線を描画してその色をアイボリーに設定する	plt.plot(xdata, ydata, color='ivory')	plt.plot(xdata, ydata, color='ivory')
code: 折れ線グラフの色をカーキにする	plt.plot(xdata, ydata, color='khaki')	plt.plot(xdata, ydata, color='khaki')
code: 折れ線の色をカーキとする	plt.plot(xdata, ydata, color='khaki')	plt.plot(xdata, ydata, color='khaki')
code: カーキ色の折れ線をプロットする	plt.plot(xdata, ydata, color='khaki')	plt.plot(xdata, ydata, color='khaki')
code: 配列xdataと数列ydataについて折れ線を描画して色をカーキにする	plt.plot(xdata, ydata, color='khaki')	plt.plot(xdata, ydata, color='khaki')
code: 数列xdataと配列ydataの折れ線グラフを描画して色をカーキ変える	plt.plot(xdata, ydata, color='khaki')	plt.plot(xdata, ydata, color='khaki')
code: 折れ線グラフの色をラベンダーに変更する	plt.plot(xdata, ydata, color='lavender')	plt.plot(xdata, ydata, color='lavender')
code: 折れ線の色をラベンダーに設定する	plt.plot(xdata, ydata, color='lavender')	plt.plot(xdata, ydata, color='lavender')
code: ラベンダー色の折れ線グラフをプロットする	plt.plot(xdata, ydata, color='lavender')	plt.plot(xdata, ydata, color='lavender')
code: データ列xdataと配列ydataの折れ線を描画して色をラベンダーに指定する	plt.plot(xdata, ydata, color='lavender')	plt.plot(xdata, ydata, color='lavender')
code: イテラブルxdataとデータ列ydataについて折れ線を描画して色をラベンダーに設定する	plt.plot(xdata, ydata, color='lavender')	plt.plot(xdata, ydata, color='lavender')
code: 折れ線の色をラベンダーブラッシュに変更する	plt.plot(xdata, ydata, color='lavenderblush')	plt.plot(xdata, ydata, color='lavenderblush')
code: 折れ線の色をラベンダーブラッシュにする	plt.plot(xdata, ydata, color='lavenderblush')	plt.plot(xdata, ydata, color='lavenderblush')
code: ラベンダーブラッシュ色の折れ線グラフをプロットする	plt.plot(xdata, ydata, color='lavenderblush')	plt.plot(xdata, ydata, color='lavenderblush')
code: 配列xdataと数列ydataについて折れ線グラフを描画してその色をラベンダーブラッシュにセットする	plt.plot(xdata, ydata, color='lavenderblush')	plt.plot(xdata, ydata, color='lavenderblush')
code: データ列xdataとリストydataの折れ線グラフを描画して、その色をラベンダーブラッシュにセットする	plt.plot(xdata, ydata, color='lavenderblush')	plt.plot(xdata, ydata, color='lavenderblush')
code: 折れ線の色をローングリーンに変更する	plt.plot(xdata, ydata, color='lawngreen')	plt.plot(xdata, ydata, color='lawngreen')
code: 折れ線グラフの色をローングリーンに変更する	plt.plot(xdata, ydata, color='lawngreen')	plt.plot(xdata, ydata, color='lawngreen')
code: ローングリーン色の折れ線を描く	plt.plot(xdata, ydata, color='lawngreen')	plt.plot(xdata, ydata, color='lawngreen')
code: 数列xdataとリストydataの折れ線グラフを描画して、色をローングリーンに変更する	plt.plot(xdata, ydata, color='lawngreen')	plt.plot(xdata, ydata, color='lawngreen')
code: イテラブルxdataと配列ydataの折れ線グラフを描画して色をローングリーン変える	plt.plot(xdata, ydata, color='lawngreen')	plt.plot(xdata, ydata, color='lawngreen')
code: 折れ線グラフの色をレモンシフォンに変更する	plt.plot(xdata, ydata, color='lemonchiffon')	plt.plot(xdata, ydata, color='lemonchiffon')
code: 折れ線の色をレモンシフォンに指定する	plt.plot(xdata, ydata, color='lemonchiffon')	plt.plot(xdata, ydata, color='lemonchiffon')
code: レモンシフォン色の折れ線をプロットする	plt.plot(xdata, ydata, color='lemonchiffon')	plt.plot(xdata, ydata, color='lemonchiffon')
code: 数列xdataとデータ列ydataについて折れ線を描画して、色をレモンシフォンに指定する	plt.plot(xdata, ydata, color='lemonchiffon')	plt.plot(xdata, ydata, color='lemonchiffon')
code: イテラブルxdataと配列ydataの折れ線を描画して、その色をレモンシフォン変える	plt.plot(xdata, ydata, color='lemonchiffon')	plt.plot(xdata, ydata, color='lemonchiffon')
code: 折れ線グラフの色をライトブルーに指定する	plt.plot(xdata, ydata, color='lightblue')	plt.plot(xdata, ydata, color='lightblue')
code: 折れ線の色をライトブルー変える	plt.plot(xdata, ydata, color='lightblue')	plt.plot(xdata, ydata, color='lightblue')
code: ライトブルー色の折れ線グラフをプロットする	plt.plot(xdata, ydata, color='lightblue')	plt.plot(xdata, ydata, color='lightblue')
code: 配列xdataとイテラブルydataについて折れ線グラフを描画して、色をライトブルーとする	plt.plot(xdata, ydata, color='lightblue')	plt.plot(xdata, ydata, color='lightblue')
code: イテラブルxdataとイテラブルydataの折れ線グラフを描画して、色をライトブルーに指定する	plt.plot(xdata, ydata, color='lightblue')	plt.plot(xdata, ydata, color='lightblue')
code: 折れ線の色をライトコーラルに設定する	plt.plot(xdata, ydata, color='lightcoral')	plt.plot(xdata, ydata, color='lightcoral')
code: 折れ線グラフの色をライトコーラルとする	plt.plot(xdata, ydata, color='lightcoral')	plt.plot(xdata, ydata, color='lightcoral')
code: ライトコーラル色の折れ線を描く	plt.plot(xdata, ydata, color='lightcoral')	plt.plot(xdata, ydata, color='lightcoral')
code: 配列xdataとイテラブルydataについて折れ線を描画して色をライトコーラルに設定する	plt.plot(xdata, ydata, color='lightcoral')	plt.plot(xdata, ydata, color='lightcoral')
code: リストxdataとイテラブルydataの折れ線グラフを描画して、色をライトコーラル変える	plt.plot(xdata, ydata, color='lightcoral')	plt.plot(xdata, ydata, color='lightcoral')
code: 折れ線グラフの色をライトシアン変える	plt.plot(xdata, ydata, color='lightcyan')	plt.plot(xdata, ydata, color='lightcyan')
code: 折れ線の色をライトシアンに設定する	plt.plot(xdata, ydata, color='lightcyan')	plt.plot(xdata, ydata, color='lightcyan')
code: ライトシアン色の折れ線をプロットする	plt.plot(xdata, ydata, color='lightcyan')	plt.plot(xdata, ydata, color='lightcyan')
code: イテラブルxdataと数列ydataの折れ線グラフを描画して、その色をライトシアンに設定する	plt.plot(xdata, ydata, color='lightcyan')	plt.plot(xdata, ydata, color='lightcyan')
code: イテラブルxdataと数列ydataの折れ線を描画して色をライトシアンにする	plt.plot(xdata, ydata, color='lightcyan')	plt.plot(xdata, ydata, color='lightcyan')
code: 折れ線の色をライトゴールドロディイエロー変える	plt.plot(xdata, ydata, color='lightgoldenrodyellow')	plt.plot(xdata, ydata, color='lightgoldenrodyellow')
code: 折れ線の色をライトゴールドロディイエローに指定する	plt.plot(xdata, ydata, color='lightgoldenrodyellow')	plt.plot(xdata, ydata, color='lightgoldenrodyellow')
code: ライトゴールドロディイエロー色の折れ線を描画する	plt.plot(xdata, ydata, color='lightgoldenrodyellow')	plt.plot(xdata, ydata, color='lightgoldenrodyellow')
code: データ列xdataとリストydataについて折れ線を描画してその色をライトゴールドロディイエローにする	plt.plot(xdata, ydata, color='lightgoldenrodyellow')	plt.plot(xdata, ydata, color='lightgoldenrodyellow')
code: リストxdataと配列ydataの折れ線グラフを描画してその色をライトゴールドロディイエロー変える	plt.plot(xdata, ydata, color='lightgoldenrodyellow')	plt.plot(xdata, ydata, color='lightgoldenrodyellow')
code: 折れ線の色をライトグレーに設定する	plt.plot(xdata, ydata, color='lightgrey')	plt.plot(xdata, ydata, color='lightgray')
code: 折れ線グラフの色をライトグレーに設定する	plt.plot(xdata, ydata, color='lightgrey')	plt.plot(xdata, ydata, color='lightgray')
code: ライトグレー色の折れ線グラフを描く	plt.plot(xdata, ydata, color='lightgray')	plt.plot(xdata, ydata, color='lightgray')
code: 数列xdataとデータ列ydataの折れ線グラフを描画して、色をライトグレーにセットする	plt.plot(xdata, ydata, color='lightgrey')	plt.plot(xdata, ydata, color='lightgray')
code: 配列xdataとイテラブルydataの折れ線を描画して色をライトグレーに設定する	plt.plot(xdata, ydata, color='lightgray')	plt.plot(xdata, ydata, color='lightgray')
code: 折れ線グラフの色をライトグリーンに設定する	plt.plot(xdata, ydata, color='lightseagreen')	plt.plot(xdata, ydata, color='lightgreen')
code: 折れ線の色をライトグリーンとする	plt.plot(xdata, ydata, color='lightgreen')	plt.plot(xdata, ydata, color='lightgreen')
code: ライトグリーン色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='lightgreen')	plt.plot(xdata, ydata, color='lightgreen')
code: 配列xdataと数列ydataの折れ線を描画して色をライトグリーン変える	plt.plot(xdata, ydata, color='lightgreen')	plt.plot(xdata, ydata, color='lightgreen')
code: リストxdataと配列ydataについて折れ線を描画して、その色をライトグリーンに設定する	plt.plot(xdata, ydata, color='lightgreen')	plt.plot(xdata, ydata, color='lightgreen')
code: 折れ線グラフの色をライトグレーに変更する	plt.plot(xdata, ydata, color='lightgrey')	plt.plot(xdata, ydata, color='lightgrey')
code: 折れ線の色をライトグレーにセットする	plt.plot(xdata, ydata, color='lightgray')	plt.plot(xdata, ydata, color='lightgrey')
code: ライトグレー色の折れ線を描画する	plt.plot(xdata, ydata, color='lightgrey')	plt.plot(xdata, ydata, color='lightgrey')
code: イテラブルxdataと配列ydataについて折れ線グラフを描画して色をライトグレーに設定する	plt.plot(xdata, ydata, color='lightgray')	plt.plot(xdata, ydata, color='lightgrey')
code: イテラブルxdataと配列ydataの折れ線グラフを描画してその色をライトグレーに設定する	plt.plot(xdata, ydata, color='lightgrey')	plt.plot(xdata, ydata, color='lightgrey')
code: 折れ線グラフの色を淡いピンク色に変更する	plt.plot(xdata, ydata, color='lightpink')	plt.plot(xdata, ydata, color='lightpink')
code: 折れ線の色を淡いピンク色に変更する	plt.plot(xdata, ydata, color='lightpink')	plt.plot(xdata, ydata, color='lightpink')
code: 淡いピンク色色の折れ線を描く	plt.plot(xdata, ydata, color='lightpink')	plt.plot(xdata, ydata, color='lightpink')
code: 数列xdataとデータ列ydataの折れ線グラフを描画して色を淡いピンク色に設定する	plt.plot(xdata, ydata, color='lightpink')	plt.plot(xdata, ydata, color='lightpink')
code: リストxdataとデータ列ydataについて折れ線を描画して、色を淡いピンク色に設定する	plt.plot(xdata, ydata, color='lightpink')	plt.plot(xdata, ydata, color='lightpink')
code: 折れ線の色をライトサーモンとする	plt.plot(xdata, ydata, color='lightsalmon')	plt.plot(xdata, ydata, color='lightsalmon')
code: 折れ線グラフの色をライトサーモンとする	plt.plot(xdata, ydata, color='lightsalmon')	plt.plot(xdata, ydata, color='lightsalmon')
code: ライトサーモン色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='lightsalmon')	plt.plot(xdata, ydata, color='lightsalmon')
code: リストxdataとイテラブルydataの折れ線を描画して、色をライトサーモン変える	plt.plot(xdata, ydata, color='lightsalmon')	plt.plot(xdata, ydata, color='lightsalmon')
code: リストxdataとデータ列ydataの折れ線を描画して、色をライトサーモンにする	plt.plot(xdata, ydata, color='lightsalmon')	plt.plot(xdata, ydata, color='lightsalmon')
code: 折れ線グラフの色をライトグリーンにする	plt.plot(xdata, ydata, color='lightseagreen')	plt.plot(xdata, ydata, color='lightseagreen')
code: 折れ線の色をライトグリーン変える	plt.plot(xdata, ydata, color='lightgreen')	plt.plot(xdata, ydata, color='lightseagreen')
code: ライトグリーン色の折れ線をプロットする	plt.plot(xdata, ydata, color='lightgreen')	plt.plot(xdata, ydata, color='lightseagreen')
code: 数列xdataと配列ydataの折れ線を描画して、その色をライトグリーンに設定する	plt.plot(xdata, ydata, color='lightseagreen')	plt.plot(xdata, ydata, color='lightseagreen')
code: イテラブルxdataと数列ydataの折れ線を描画してその色をライトグリーンに設定する	plt.plot(xdata, ydata, color='lightgreen')	plt.plot(xdata, ydata, color='lightseagreen')
code: 折れ線の色をライトスカイブルー変える	plt.plot(xdata, ydata, color='lightskyblue')	plt.plot(xdata, ydata, color='lightskyblue')
code: 折れ線の色をライトスカイブルーとする	plt.plot(xdata, ydata, color='lightskyblue')	plt.plot(xdata, ydata, color='lightskyblue')
code: ライトスカイブルー色の折れ線グラフをプロットする	plt.plot(xdata, ydata, color='lightskyblue')	plt.plot(xdata, ydata, color='lightskyblue')
code: 配列xdataと配列ydataについて折れ線を描画して色をライトスカイブルーにする	plt.plot(xdata, ydata, color='lightskyblue')	plt.plot(xdata, ydata, color='lightskyblue')
code: イテラブルxdataと数列ydataについて折れ線グラフを描画して、色をライトスカイブルーに設定する	plt.plot(xdata, ydata, color='lightskyblue')	plt.plot(xdata, ydata, color='lightskyblue')
code: 折れ線グラフの色をライトスレイグレーにする	plt.plot(xdata, ydata, color='lightslategrey')	plt.plot(xdata, ydata, color='lightslategray')
code: 折れ線の色をライトスレイグレーに設定する	plt.plot(xdata, ydata, color='lightslategrey')	plt.plot(xdata, ydata, color='lightslategray')
code: ライトスレイグレー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='lightslategray')	plt.plot(xdata, ydata, color='lightslategray')
code: データ列xdataとリストydataについて折れ線を描画して、色をライトスレイグレーに変更する	plt.plot(xdata, ydata, color='lightslategrey')	plt.plot(xdata, ydata, color='lightslategray')
code: リストxdataとイテラブルydataについて折れ線を描画して、その色をライトスレイグレーに指定する	plt.plot(xdata, ydata, color='lightslategrey')	plt.plot(xdata, ydata, color='lightslategray')
code: 折れ線グラフの色をライトスレイグレー変える	plt.plot(xdata, ydata, color='lightslategrey')	plt.plot(xdata, ydata, color='lightslategrey')
code: 折れ線グラフの色をライトスレイグレー変える	plt.plot(xdata, ydata, color='lightslategray')	plt.plot(xdata, ydata, color='lightslategrey')
code: ライトスレイグレー色の折れ線グラフを描く	plt.plot(xdata, ydata, color='lightslategray')	plt.plot(xdata, ydata, color='lightslategrey')
code: 配列xdataとリストydataの折れ線グラフを描画して、色をライトスレイグレーに変更する	plt.plot(xdata, ydata, color='lightslategray')	plt.plot(xdata, ydata, color='lightslategrey')
code: 配列xdataと数列ydataについて折れ線を描画して、その色をライトスレイグレーに変更する	plt.plot(xdata, ydata, color='lightslategray')	plt.plot(xdata, ydata, color='lightslategrey')
code: 折れ線の色をライトスチールブルーに設定する	plt.plot(xdata, ydata, color='lightsteelblue')	plt.plot(xdata, ydata, color='lightsteelblue')
code: 折れ線グラフの色をライトスチールブルーに指定する	plt.plot(xdata, ydata, color='lightsteelblue')	plt.plot(xdata, ydata, color='lightsteelblue')
code: ライトスチールブルー色の折れ線グラフをプロットする	plt.plot(xdata, ydata, color='lightsteelblue')	plt.plot(xdata, ydata, color='lightsteelblue')
code: リストxdataとデータ列ydataの折れ線グラフを描画してその色をライトスチールブルーに設定する	plt.plot(xdata, ydata, color='lightsteelblue')	plt.plot(xdata, ydata, color='lightsteelblue')
code: 数列xdataと数列ydataについて折れ線を描画して色をライトスチールブルーに設定する	plt.plot(xdata, ydata, color='lightsteelblue')	plt.plot(xdata, ydata, color='lightsteelblue')
code: 折れ線グラフの色をライトイエローに変更する	plt.plot(xdata, ydata, color='lightyellow')	plt.plot(xdata, ydata, color='lightyellow')
code: 折れ線グラフの色をライトイエローに変更する	plt.plot(xdata, ydata, color='lightyellow')	plt.plot(xdata, ydata, color='lightyellow')
code: ライトイエロー色の折れ線グラフをプロットする	plt.plot(xdata, ydata, color='lightyellow')	plt.plot(xdata, ydata, color='lightyellow')
code: データ列xdataと配列ydataについて折れ線を描画して色をライトイエローに変更する	plt.plot(xdata, ydata, color='lightyellow')	plt.plot(xdata, ydata, color='lightyellow')
code: データ列xdataと配列ydataについて折れ線を描画してその色をライトイエローに設定する	plt.plot(xdata, ydata, color='lightyellow')	plt.plot(xdata, ydata, color='lightyellow')
code: 折れ線グラフの色をライム変える	plt.plot(xdata, ydata, color='lime')	plt.plot(xdata, ydata, color='lime')
code: 折れ線の色をライムに設定する	plt.plot(xdata, ydata, color='lime')	plt.plot(xdata, ydata, color='lime')
code: ライム色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='lime')	plt.plot(xdata, ydata, color='lime')
code: リストxdataと配列ydataについて折れ線を描画して、その色をライムに変更する	plt.plot(xdata, ydata, color='lime')	plt.plot(xdata, ydata, color='lime')
code: 配列xdataとイテラブルydataについて折れ線グラフを描画して、色をライムにセットする	plt.plot(xdata, ydata, color='lime')	plt.plot(xdata, ydata, color='lime')
code: 折れ線の色をライムグリーンに変更する	plt.plot(xdata, ydata, color='limegreen')	plt.plot(xdata, ydata, color='limegreen')
code: 折れ線グラフの色をライムグリーンにセットする	plt.plot(xdata, ydata, color='limegreen')	plt.plot(xdata, ydata, color='limegreen')
code: ライムグリーン色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='limegreen')	plt.plot(xdata, ydata, color='limegreen')
code: イテラブルxdataとデータ列ydataの折れ線を描画して、その色をライムグリーンに変更する	plt.plot(xdata, ydata, color='limegreen')	plt.plot(xdata, ydata, color='limegreen')
code: イテラブルxdataと数列ydataの折れ線グラフを描画してその色をライムグリーンに指定する	plt.plot(xdata, ydata, color='limegreen')	plt.plot(xdata, ydata, color='limegreen')
code: 折れ線グラフの色をリネンに変更する	plt.plot(xdata, ydata, color='linen')	plt.plot(xdata, ydata, color='linen')
code: 折れ線の色をリネンに設定する	plt.plot(xdata, ydata, color='linen')	plt.plot(xdata, ydata, color='linen')
code: リネン色の折れ線を描画する	plt.plot(xdata, ydata, color='linen')	plt.plot(xdata, ydata, color='linen')
code: 配列xdataとリストydataについて折れ線グラフを描画して、その色をリネンに設定する	plt.plot(xdata, ydata, color='linen')	plt.plot(xdata, ydata, color='linen')
code: データ列xdataと配列ydataについて折れ線を描画して、色をリネン変える	plt.plot(xdata, ydata, color='linen')	plt.plot(xdata, ydata, color='linen')
code: 折れ線の色をマゼンタに変更する	plt.plot(xdata, ydata, color='magenta')	plt.plot(xdata, ydata, color='magenta')
code: 折れ線グラフの色をマゼンタにする	plt.plot(xdata, ydata, color='magenta')	plt.plot(xdata, ydata, color='magenta')
code: マゼンタ色の折れ線グラフをプロットする	plt.plot(xdata, ydata, color='magenta')	plt.plot(xdata, ydata, color='magenta')
code: リストxdataと配列ydataの折れ線を描画して、色をマゼンタに指定する	plt.plot(xdata, ydata, color='magenta')	plt.plot(xdata, ydata, color='magenta')
code: イテラブルxdataと配列ydataの折れ線を描画して、色をマゼンタにする	plt.plot(xdata, ydata, color='magenta')	plt.plot(xdata, ydata, color='magenta')
code: 折れ線の色をマルーンに設定する	plt.plot(xdata, ydata, color='maroon')	plt.plot(xdata, ydata, color='maroon')
code: 折れ線グラフの色をマルーンに変更する	plt.plot(xdata, ydata, color='maroon')	plt.plot(xdata, ydata, color='maroon')
code: マルーン色の折れ線グラフを描く	plt.plot(xdata, ydata, color='maroon')	plt.plot(xdata, ydata, color='maroon')
code: 数列xdataとイテラブルydataについて折れ線グラフを描画して、色をマルーンにセットする	plt.plot(xdata, ydata, color='maroon')	plt.plot(xdata, ydata, color='maroon')
code: リストxdataと配列ydataについて折れ線グラフを描画してその色をマルーンに設定する	plt.plot(xdata, ydata, color='maroon')	plt.plot(xdata, ydata, color='maroon')
code: 折れ線グラフの色をミディアムアクアマリンとする	plt.plot(xdata, ydata, color='mediumaquamarine')	plt.plot(xdata, ydata, color='mediumaquamarine')
code: 折れ線の色をミディアムアクアマリンに変更する	plt.plot(xdata, ydata, color='mediumaquamarine')	plt.plot(xdata, ydata, color='mediumaquamarine')
code: ミディアムアクアマリン色の折れ線を描く	plt.plot(xdata, ydata, color='mediumaquamarine')	plt.plot(xdata, ydata, color='mediumaquamarine')
code: 配列xdataとリストydataについて折れ線グラフを描画して、色をミディアムアクアマリンにする	plt.plot(xdata, ydata, color='mediumaquamarine')	plt.plot(xdata, ydata, color='mediumaquamarine')
code: データ列xdataとリストydataの折れ線を描画してその色をミディアムアクアマリン変える	plt.plot(xdata, ydata, color='mediumaquamarine')	plt.plot(xdata, ydata, color='mediumaquamarine')
code: 折れ線グラフの色をミディアムブルーにする	plt.plot(xdata, ydata, color='mediumblue')	plt.plot(xdata, ydata, color='mediumblue')
code: 折れ線グラフの色をミディアムブルー変える	plt.plot(xdata, ydata, color='mediumblue')	plt.plot(xdata, ydata, color='mediumblue')
code: ミディアムブルー色の折れ線を描く	plt.plot(xdata, ydata, color='mediumblue')	plt.plot(xdata, ydata, color='mediumblue')
code: 数列xdataとデータ列ydataについて折れ線を描画して色をミディアムブルーとする	plt.plot(xdata, ydata, color='mediumblue')	plt.plot(xdata, ydata, color='mediumblue')
code: イテラブルxdataと数列ydataの折れ線グラフを描画して色をミディアムブルーに設定する	plt.plot(xdata, ydata, color='mediumblue')	plt.plot(xdata, ydata, color='mediumblue')
code: 折れ線グラフの色をミディアムオーキッド変える	plt.plot(xdata, ydata, color='mediumorchid')	plt.plot(xdata, ydata, color='mediumorchid')
code: 折れ線の色をミディアムオーキッドに設定する	plt.plot(xdata, ydata, color='mediumorchid')	plt.plot(xdata, ydata, color='mediumorchid')
code: ミディアムオーキッド色の折れ線グラフを描く	plt.plot(xdata, ydata, color='mediumorchid')	plt.plot(xdata, ydata, color='mediumorchid')
code: イテラブルxdataとリストydataの折れ線グラフを描画してその色をミディアムオーキッドとする	plt.plot(xdata, ydata, color='mediumorchid')	plt.plot(xdata, ydata, color='mediumorchid')
code: リストxdataと配列ydataの折れ線グラフを描画して、その色をミディアムオーキッドとする	plt.plot(xdata, ydata, color='mediumorchid')	plt.plot(xdata, ydata, color='mediumorchid')
code: 折れ線グラフの色をミディアムパープルとする	plt.plot(xdata, ydata, color='mediumpurple')	plt.plot(xdata, ydata, color='mediumpurple')
code: 折れ線の色をミディアムパープル変える	plt.plot(xdata, ydata, color='mediumpurple')	plt.plot(xdata, ydata, color='mediumpurple')
code: ミディアムパープル色の折れ線をプロットする	plt.plot(xdata, ydata, color='mediumpurple')	plt.plot(xdata, ydata, color='mediumpurple')
code: データ列xdataとデータ列ydataの折れ線グラフを描画して、その色をミディアムパープルに変更する	plt.plot(xdata, ydata, color='mediumpurple')	plt.plot(xdata, ydata, color='mediumpurple')
code: 数列xdataとリストydataについて折れ線グラフを描画して色をミディアムパープルとする	plt.plot(xdata, ydata, color='mediumpurple')	plt.plot(xdata, ydata, color='mediumpurple')
code: 折れ線の色をミディアムシアグリーンにセットする	plt.plot(xdata, ydata, color='mediumseagreen')	plt.plot(xdata, ydata, color='mediumseagreen')
code: 折れ線の色をミディアムシアグリーンに指定する	plt.plot(xdata, ydata, color='mediumseagreen')	plt.plot(xdata, ydata, color='mediumseagreen')
code: ミディアムシアグリーン色の折れ線をプロットする	plt.plot(xdata, ydata, color='mediumseagreen')	plt.plot(xdata, ydata, color='mediumseagreen')
code: リストxdataと数列ydataについて折れ線を描画して、色をミディアムシアグリーン変える	plt.plot(xdata, ydata, color='mediumseagreen')	plt.plot(xdata, ydata, color='mediumseagreen')
code: 数列xdataと配列ydataについて折れ線グラフを描画して色をミディアムシアグリーンに指定する	plt.plot(xdata, ydata, color='mediumseagreen')	plt.plot(xdata, ydata, color='mediumseagreen')
code: 折れ線の色をミディアムスレートブルーに変更する	plt.plot(xdata, ydata, color='mediumslateblue')	plt.plot(xdata, ydata, color='mediumslateblue')
code: 折れ線の色をミディアムスレートブルーにする	plt.plot(xdata, ydata, color='mediumslateblue')	plt.plot(xdata, ydata, color='mediumslateblue')
code: ミディアムスレートブルー色の折れ線グラフをプロットする	plt.plot(xdata, ydata, color='mediumslateblue')	plt.plot(xdata, ydata, color='mediumslateblue')
code: リストxdataとデータ列ydataについて折れ線を描画してその色をミディアムスレートブルー変える	plt.plot(xdata, ydata, color='mediumslateblue')	plt.plot(xdata, ydata, color='mediumslateblue')
code: データ列xdataと配列ydataの折れ線グラフを描画して、色をミディアムスレートブルーに指定する	plt.plot(xdata, ydata, color='mediumslateblue')	plt.plot(xdata, ydata, color='mediumslateblue')
code: 折れ線グラフの色をミディアムスプリンググリーンに変更する	plt.plot(xdata, ydata, color='mediumspringgreen')	plt.plot(xdata, ydata, color='mediumspringgreen')
code: 折れ線の色をミディアムスプリンググリーンに変更する	plt.plot(xdata, ydata, color='mediumspringgreen')	plt.plot(xdata, ydata, color='mediumspringgreen')
code: ミディアムスプリンググリーン色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='mediumspringgreen')	plt.plot(xdata, ydata, color='mediumspringgreen')
code: イテラブルxdataと数列ydataについて折れ線グラフを描画してその色をミディアムスプリンググリーンに設定する	plt.plot(xdata, ydata, color='mediumspringgreen')	plt.plot(xdata, ydata, color='mediumspringgreen')
code: 数列xdataと配列ydataについて折れ線グラフを描画して色をミディアムスプリンググリーンに設定する	plt.plot(xdata, ydata, color='mediumspringgreen')	plt.plot(xdata, ydata, color='mediumspringgreen')
code: 折れ線グラフの色をミディアムターコイズにセットする	plt.plot(xdata, ydata, color='mediumturquoise')	plt.plot(xdata, ydata, color='mediumturquoise')
code: 折れ線の色をミディアムターコイズにする	plt.plot(xdata, ydata, color='mediumturquoise')	plt.plot(xdata, ydata, color='mediumturquoise')
code: ミディアムターコイズ色の折れ線をプロットする	plt.plot(xdata, ydata, color='mediumturquoise')	plt.plot(xdata, ydata, color='mediumturquoise')
code: 数列xdataとデータ列ydataについて折れ線を描画して色をミディアムターコイズに変更する	plt.plot(xdata, ydata, color='mediumturquoise')	plt.plot(xdata, ydata, color='mediumturquoise')
code: リストxdataとイテラブルydataについて折れ線を描画して、その色をミディアムターコイズに変更する	plt.plot(xdata, ydata, color='mediumturquoise')	plt.plot(xdata, ydata, color='mediumturquoise')
code: 折れ線グラフの色をミディアムバイオレットレッドにする	plt.plot(xdata, ydata, color='mediumvioletred')	plt.plot(xdata, ydata, color='mediumvioletred')
code: 折れ線の色をミディアムバイオレットレッド変える	plt.plot(xdata, ydata, color='mediumvioletred')	plt.plot(xdata, ydata, color='mediumvioletred')
code: ミディアムバイオレットレッド色の折れ線をプロットする	plt.plot(xdata, ydata, color='mediumvioletred')	plt.plot(xdata, ydata, color='mediumvioletred')
code: 数列xdataとデータ列ydataについて折れ線グラフを描画して、色をミディアムバイオレットレッドに設定する	plt.plot(xdata, ydata, color='mediumvioletred')	plt.plot(xdata, ydata, color='mediumvioletred')
code: データ列xdataとデータ列ydataの折れ線を描画して色をミディアムバイオレットレッドに変更する	plt.plot(xdata, ydata, color='mediumvioletred')	plt.plot(xdata, ydata, color='mediumvioletred')
code: 折れ線の色をミッドナイトブルーに指定する	plt.plot(xdata, ydata, color='midnightblue')	plt.plot(xdata, ydata, color='midnightblue')
code: 折れ線グラフの色をミッドナイトブルーに指定する	plt.plot(xdata, ydata, color='midnightblue')	plt.plot(xdata, ydata, color='midnightblue')
code: ミッドナイトブルー色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='midnightblue')	plt.plot(xdata, ydata, color='midnightblue')
code: 配列xdataと配列ydataの折れ線グラフを描画して色をミッドナイトブルーに設定する	plt.plot(xdata, ydata, color='midnightblue')	plt.plot(xdata, ydata, color='midnightblue')
code: 数列xdataとイテラブルydataの折れ線を描画して色をミッドナイトブルーに指定する	plt.plot(xdata, ydata, color='midnightblue')	plt.plot(xdata, ydata, color='midnightblue')
code: 折れ線グラフの色をミントクリームに指定する	plt.plot(xdata, ydata, color='mintcream')	plt.plot(xdata, ydata, color='mintcream')
code: 折れ線の色をミントクリームにセットする	plt.plot(xdata, ydata, color='mintcream')	plt.plot(xdata, ydata, color='mintcream')
code: ミントクリーム色の折れ線を描く	plt.plot(xdata, ydata, color='mintcream')	plt.plot(xdata, ydata, color='mintcream')
code: 配列xdataと配列ydataについて折れ線グラフを描画して、その色をミントクリームに変更する	plt.plot(xdata, ydata, color='mintcream')	plt.plot(xdata, ydata, color='mintcream')
code: リストxdataと配列ydataの折れ線グラフを描画して、色をミントクリームに設定する	plt.plot(xdata, ydata, color='mintcream')	plt.plot(xdata, ydata, color='mintcream')
code: 折れ線グラフの色をミスティローズに変更する	plt.plot(xdata, ydata, color='mistyrose')	plt.plot(xdata, ydata, color='mistyrose')
code: 折れ線グラフの色をミスティローズにする	plt.plot(xdata, ydata, color='mistyrose')	plt.plot(xdata, ydata, color='mistyrose')
code: ミスティローズ色の折れ線グラフを描く	plt.plot(xdata, ydata, color='mistyrose')	plt.plot(xdata, ydata, color='mistyrose')
code: イテラブルxdataと配列ydataの折れ線を描画して色をミスティローズに設定する	plt.plot(xdata, ydata, color='mistyrose')	plt.plot(xdata, ydata, color='mistyrose')
code: イテラブルxdataと数列ydataの折れ線を描画して、その色をミスティローズにセットする	plt.plot(xdata, ydata, color='mistyrose')	plt.plot(xdata, ydata, color='mistyrose')
code: 折れ線グラフの色をモカシンに設定する	plt.plot(xdata, ydata, color='moccasin')	plt.plot(xdata, ydata, color='moccasin')
code: 折れ線の色をモカシンに変更する	plt.plot(xdata, ydata, color='moccasin')	plt.plot(xdata, ydata, color='moccasin')
code: モカシン色の折れ線グラフを描く	plt.plot(xdata, ydata, color='moccasin')	plt.plot(xdata, ydata, color='moccasin')
code: 配列xdataとデータ列ydataについて折れ線グラフを描画してその色をモカシンに変更する	plt.plot(xdata, ydata, color='moccasin')	plt.plot(xdata, ydata, color='moccasin')
code: イテラブルxdataと数列ydataについて折れ線を描画してその色をモカシンに変更する	plt.plot(xdata, ydata, color='moccasin')	plt.plot(xdata, ydata, color='moccasin')
code: 折れ線グラフの色をナバホホワイトに変更する	plt.plot(xdata, ydata, color='navajowhite')	plt.plot(xdata, ydata, color='navajowhite')
code: 折れ線の色をナバホホワイトに指定する	plt.plot(xdata, ydata, color='navajowhite')	plt.plot(xdata, ydata, color='navajowhite')
code: ナバホホワイト色の折れ線を描画する	plt.plot(xdata, ydata, color='navajowhite')	plt.plot(xdata, ydata, color='navajowhite')
code: 配列xdataとイテラブルydataの折れ線を描画して、色をナバホホワイト変える	plt.plot(xdata, ydata, color='navajowhite')	plt.plot(xdata, ydata, color='navajowhite')
code: イテラブルxdataとデータ列ydataについて折れ線を描画して、その色をナバホホワイトにする	plt.plot(xdata, ydata, color='navajowhite')	plt.plot(xdata, ydata, color='navajowhite')
code: 折れ線グラフの色をネイビーにセットする	plt.plot(xdata, ydata, color='navy')	plt.plot(xdata, ydata, color='navy')
code: 折れ線グラフの色をネイビーにする	plt.plot(xdata, ydata, color='navy')	plt.plot(xdata, ydata, color='navy')
code: ネイビー色の折れ線グラフを描く	plt.plot(xdata, ydata, color='navy')	plt.plot(xdata, ydata, color='navy')
code: イテラブルxdataとデータ列ydataについて折れ線を描画して、その色をネイビーにセットする	plt.plot(xdata, ydata, color='navy')	plt.plot(xdata, ydata, color='navy')
code: イテラブルxdataと数列ydataについて折れ線を描画してその色をネイビーに設定する	plt.plot(xdata, ydata, color='navy')	plt.plot(xdata, ydata, color='navy')
code: 折れ線の色をオールドレース変える	plt.plot(xdata, ydata, color='oldlace')	plt.plot(xdata, ydata, color='oldlace')
code: 折れ線の色をオールドレースに変更する	plt.plot(xdata, ydata, color='oldlace')	plt.plot(xdata, ydata, color='oldlace')
code: オールドレース色の折れ線をプロットする	plt.plot(xdata, ydata, color='oldlace')	plt.plot(xdata, ydata, color='oldlace')
code: 配列xdataと数列ydataについて折れ線を描画して、その色をオールドレース変える	plt.plot(xdata, ydata, color='oldlace')	plt.plot(xdata, ydata, color='oldlace')
code: データ列xdataとデータ列ydataについて折れ線を描画して、その色をオールドレース変える	plt.plot(xdata, ydata, color='oldlace')	plt.plot(xdata, ydata, color='oldlace')
code: 折れ線グラフの色をオリーブに変更する	plt.plot(xdata, ydata, color='olive')	plt.plot(xdata, ydata, color='olive')
code: 折れ線グラフの色をオリーブにセットする	plt.plot(xdata, ydata, color='olive')	plt.plot(xdata, ydata, color='olive')
code: オリーブ色の折れ線グラフを描く	plt.plot(xdata, ydata, color='olive')	plt.plot(xdata, ydata, color='olive')
code: 数列xdataとデータ列ydataについて折れ線グラフを描画して、その色をオリーブに変更する	plt.plot(xdata, ydata, color='olive')	plt.plot(xdata, ydata, color='olive')
code: 数列xdataとリストydataについて折れ線を描画して色をオリーブに設定する	plt.plot(xdata, ydata, color='olive')	plt.plot(xdata, ydata, color='olive')
code: 折れ線グラフの色をオリベドラブ変える	plt.plot(xdata, ydata, color='olivedrab')	plt.plot(xdata, ydata, color='olivedrab')
code: 折れ線の色をオリベドラブに指定する	plt.plot(xdata, ydata, color='olivedrab')	plt.plot(xdata, ydata, color='olivedrab')
code: オリベドラブ色の折れ線を描く	plt.plot(xdata, ydata, color='olivedrab')	plt.plot(xdata, ydata, color='olivedrab')
code: イテラブルxdataと数列ydataの折れ線グラフを描画して、色をオリベドラブ変える	plt.plot(xdata, ydata, color='olivedrab')	plt.plot(xdata, ydata, color='olivedrab')
code: 配列xdataとイテラブルydataについて折れ線グラフを描画して、その色をオリベドラブにセットする	plt.plot(xdata, ydata, color='olivedrab')	plt.plot(xdata, ydata, color='olivedrab')
code: 折れ線の色をオレンジ変える	plt.plot(xdata, ydata, color='orange')	plt.plot(xdata, ydata, color='orange')
code: 折れ線の色をオレンジにする	plt.plot(xdata, ydata, color='orange')	plt.plot(xdata, ydata, color='orange')
code: オレンジ色の折れ線をプロットする	plt.plot(xdata, ydata, color='orange')	plt.plot(xdata, ydata, color='orange')
code: リストxdataと配列ydataの折れ線を描画して、その色をオレンジ変える	plt.plot(xdata, ydata, color='orange')	plt.plot(xdata, ydata, color='orange')
code: リストxdataとイテラブルydataの折れ線グラフを描画して、色をオレンジに変更する	plt.plot(xdata, ydata, color='orange')	plt.plot(xdata, ydata, color='orange')
code: 折れ線の色をオレンジレッド変える	plt.plot(xdata, ydata, color='orangered')	plt.plot(xdata, ydata, color='orangered')
code: 折れ線の色をオレンジレッドに設定する	plt.plot(xdata, ydata, color='orangered')	plt.plot(xdata, ydata, color='orangered')
code: オレンジレッド色の折れ線グラフを描く	plt.plot(xdata, ydata, color='orangered')	plt.plot(xdata, ydata, color='orangered')
code: データ列xdataと数列ydataについて折れ線グラフを描画して色をオレンジレッドとする	plt.plot(xdata, ydata, color='orangered')	plt.plot(xdata, ydata, color='orangered')
code: データ列xdataと数列ydataの折れ線グラフを描画してその色をオレンジレッドに指定する	plt.plot(xdata, ydata, color='orangered')	plt.plot(xdata, ydata, color='orangered')
code: 折れ線グラフの色をオーキッド変える	plt.plot(xdata, ydata, color='orchid')	plt.plot(xdata, ydata, color='orchid')
code: 折れ線グラフの色をオーキッドに設定する	plt.plot(xdata, ydata, color='orchid')	plt.plot(xdata, ydata, color='orchid')
code: オーキッド色の折れ線グラフを描く	plt.plot(xdata, ydata, color='orchid')	plt.plot(xdata, ydata, color='orchid')
code: リストxdataと数列ydataについて折れ線グラフを描画して色をオーキッド変える	plt.plot(xdata, ydata, color='orchid')	plt.plot(xdata, ydata, color='orchid')
code: データ列xdataと数列ydataの折れ線グラフを描画して、その色をオーキッドに変更する	plt.plot(xdata, ydata, color='orchid')	plt.plot(xdata, ydata, color='orchid')
code: 折れ線グラフの色をパールゴールデンロッドに設定する	plt.plot(xdata, ydata, color='palegoldenrod')	plt.plot(xdata, ydata, color='palegoldenrod')
code: 折れ線の色をパールゴールデンロッド変える	plt.plot(xdata, ydata, color='palegoldenrod')	plt.plot(xdata, ydata, color='palegoldenrod')
code: パールゴールデンロッド色の折れ線を描画する	plt.plot(xdata, ydata, color='palegoldenrod')	plt.plot(xdata, ydata, color='palegoldenrod')
code: データ列xdataと数列ydataについて折れ線を描画して、その色をパールゴールデンロッド変える	plt.plot(xdata, ydata, color='palegoldenrod')	plt.plot(xdata, ydata, color='palegoldenrod')
code: イテラブルxdataと数列ydataについて折れ線を描画して、その色をパールゴールデンロッドに指定する	plt.plot(xdata, ydata, color='palegoldenrod')	plt.plot(xdata, ydata, color='palegoldenrod')
code: 折れ線の色をペールグリーンにセットする	plt.plot(xdata, ydata, color='palegreen')	plt.plot(xdata, ydata, color='palegreen')
code: 折れ線グラフの色をペールグリーン変える	plt.plot(xdata, ydata, color='palegreen')	plt.plot(xdata, ydata, color='palegreen')
code: ペールグリーン色の折れ線を描画する	plt.plot(xdata, ydata, color='palegreen')	plt.plot(xdata, ydata, color='palegreen')
code: イテラブルxdataとイテラブルydataの折れ線グラフを描画して色をペールグリーンとする	plt.plot(xdata, ydata, color='palegreen')	plt.plot(xdata, ydata, color='palegreen')
code: 配列xdataとイテラブルydataの折れ線グラフを描画して、その色をペールグリーンに指定する	plt.plot(xdata, ydata, color='palegreen')	plt.plot(xdata, ydata, color='palegreen')
code: 折れ線グラフの色をパレットトルコイズに変更する	plt.plot(xdata, ydata, color='paleturquoise')	plt.plot(xdata, ydata, color='paleturquoise')
code: 折れ線の色をパレットトルコイズ変える	plt.plot(xdata, ydata, color='paleturquoise')	plt.plot(xdata, ydata, color='paleturquoise')
code: パレットトルコイズ色の折れ線グラフをプロットする	plt.plot(xdata, ydata, color='paleturquoise')	plt.plot(xdata, ydata, color='paleturquoise')
code: イテラブルxdataとイテラブルydataの折れ線を描画してその色をパレットトルコイズにする	plt.plot(xdata, ydata, color='paleturquoise')	plt.plot(xdata, ydata, color='paleturquoise')
code: 配列xdataとリストydataについて折れ線を描画してその色をパレットトルコイズに設定する	plt.plot(xdata, ydata, color='paleturquoise')	plt.plot(xdata, ydata, color='paleturquoise')
code: 折れ線の色をパールバイオレットレッドとする	plt.plot(xdata, ydata, color='palevioletred')	plt.plot(xdata, ydata, color='palevioletred')
code: 折れ線グラフの色をパールバイオレットレッドにする	plt.plot(xdata, ydata, color='palevioletred')	plt.plot(xdata, ydata, color='palevioletred')
code: パールバイオレットレッド色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='palevioletred')	plt.plot(xdata, ydata, color='palevioletred')
code: イテラブルxdataと配列ydataの折れ線グラフを描画して、色をパールバイオレットレッドに変更する	plt.plot(xdata, ydata, color='palevioletred')	plt.plot(xdata, ydata, color='palevioletred')
code: リストxdataと配列ydataの折れ線を描画して色をパールバイオレットレッドに設定する	plt.plot(xdata, ydata, color='palevioletred')	plt.plot(xdata, ydata, color='palevioletred')
code: 折れ線グラフの色をパパイヤウィップにする	plt.plot(xdata, ydata, color='papayawhip')	plt.plot(xdata, ydata, color='papayawhip')
code: 折れ線グラフの色をパパイヤウィップに変更する	plt.plot(xdata, ydata, color='papayawhip')	plt.plot(xdata, ydata, color='papayawhip')
code: パパイヤウィップ色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='papayawhip')	plt.plot(xdata, ydata, color='papayawhip')
code: 数列xdataとリストydataの折れ線グラフを描画して、色をパパイヤウィップに設定する	plt.plot(xdata, ydata, color='papayawhip')	plt.plot(xdata, ydata, color='papayawhip')
code: データ列xdataと配列ydataについて折れ線グラフを描画して、その色をパパイヤウィップ変える	plt.plot(xdata, ydata, color='papayawhip')	plt.plot(xdata, ydata, color='papayawhip')
code: 折れ線の色をピーチパフに変更する	plt.plot(xdata, ydata, color='peachpuff')	plt.plot(xdata, ydata, color='peachpuff')
code: 折れ線グラフの色をピーチパフ変える	plt.plot(xdata, ydata, color='peachpuff')	plt.plot(xdata, ydata, color='peachpuff')
code: ピーチパフ色の折れ線をプロットする	plt.plot(xdata, ydata, color='peachpuff')	plt.plot(xdata, ydata, color='peachpuff')
code: 配列xdataと配列ydataについて折れ線グラフを描画してその色をピーチパフに変更する	plt.plot(xdata, ydata, color='peachpuff')	plt.plot(xdata, ydata, color='peachpuff')
code: データ列xdataと配列ydataの折れ線グラフを描画してその色をピーチパフ変える	plt.plot(xdata, ydata, color='peachpuff')	plt.plot(xdata, ydata, color='peachpuff')
code: 折れ線の色をペルー変える	plt.plot(xdata, ydata, color='peru')	plt.plot(xdata, ydata, color='peru')
code: 折れ線グラフの色をペルーに変更する	plt.plot(xdata, ydata, color='peru')	plt.plot(xdata, ydata, color='peru')
code: ペルー色の折れ線グラフをプロットする	plt.plot(xdata, ydata, color='peru')	plt.plot(xdata, ydata, color='peru')
code: リストxdataと数列ydataについて折れ線を描画して色をペルーに変更する	plt.plot(xdata, ydata, color='peru')	plt.plot(xdata, ydata, color='peru')
code: イテラブルxdataと数列ydataの折れ線を描画して、その色をペルーに設定する	plt.plot(xdata, ydata, color='peru')	plt.plot(xdata, ydata, color='peru')
code: 折れ線グラフの色をピンクとする	plt.plot(xdata, ydata, color='pink')	plt.plot(xdata, ydata, color='pink')
code: 折れ線の色をピンクに設定する	plt.plot(xdata, ydata, color='pink')	plt.plot(xdata, ydata, color='pink')
code: ピンク色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='pink')	plt.plot(xdata, ydata, color='pink')
code: 数列xdataとリストydataについて折れ線グラフを描画してその色をピンクに変更する	plt.plot(xdata, ydata, color='pink')	plt.plot(xdata, ydata, color='pink')
code: 配列xdataとイテラブルydataの折れ線を描画して、その色をピンクに変更する	plt.plot(xdata, ydata, color='pink')	plt.plot(xdata, ydata, color='pink')
code: 折れ線の色をプラム変える	plt.plot(xdata, ydata, color='plum')	plt.plot(xdata, ydata, color='plum')
code: 折れ線の色をプラム変える	plt.plot(xdata, ydata, color='plum')	plt.plot(xdata, ydata, color='plum')
code: プラム色の折れ線を描画する	plt.plot(xdata, ydata, color='plum')	plt.plot(xdata, ydata, color='plum')
code: データ列xdataと数列ydataの折れ線を描画してその色をプラムに変更する	plt.plot(xdata, ydata, color='plum')	plt.plot(xdata, ydata, color='plum')
code: データ列xdataと数列ydataの折れ線を描画して色をプラムに変更する	plt.plot(xdata, ydata, color='plum')	plt.plot(xdata, ydata, color='plum')
code: 折れ線の色をパウダーブルー変える	plt.plot(xdata, ydata, color='powderblue')	plt.plot(xdata, ydata, color='powderblue')
code: 折れ線の色をパウダーブルー変える	plt.plot(xdata, ydata, color='powderblue')	plt.plot(xdata, ydata, color='powderblue')
code: パウダーブルー色の折れ線をプロットする	plt.plot(xdata, ydata, color='powderblue')	plt.plot(xdata, ydata, color='powderblue')
code: リストxdataとデータ列ydataについて折れ線グラフを描画して、その色をパウダーブルーとする	plt.plot(xdata, ydata, color='powderblue')	plt.plot(xdata, ydata, color='powderblue')
code: リストxdataと数列ydataについて折れ線グラフを描画して色をパウダーブルー変える	plt.plot(xdata, ydata, color='powderblue')	plt.plot(xdata, ydata, color='powderblue')
code: 折れ線の色をパープルとする	plt.plot(xdata, ydata, color='purple')	plt.plot(xdata, ydata, color='purple')
code: 折れ線の色をパープルとする	plt.plot(xdata, ydata, color='purple')	plt.plot(xdata, ydata, color='purple')
code: パープル色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='purple')	plt.plot(xdata, ydata, color='purple')
code: データ列xdataと配列ydataについて折れ線を描画して色をパープルに設定する	plt.plot(xdata, ydata, color='purple')	plt.plot(xdata, ydata, color='purple')
code: データ列xdataとリストydataの折れ線グラフを描画してその色をパープルとする	plt.plot(xdata, ydata, color='purple')	plt.plot(xdata, ydata, color='purple')
code: 折れ線グラフの色をレベッカパープルにセットする	plt.plot(xdata, ydata, color='rebeccapurple')	plt.plot(xdata, ydata, color='rebeccapurple')
code: 折れ線の色をレベッカパープルに指定する	plt.plot(xdata, ydata, color='rebeccapurple')	plt.plot(xdata, ydata, color='rebeccapurple')
code: レベッカパープル色の折れ線グラフをプロットする	plt.plot(xdata, ydata, color='rebeccapurple')	plt.plot(xdata, ydata, color='rebeccapurple')
code: リストxdataとイテラブルydataの折れ線グラフを描画してその色をレベッカパープルに設定する	plt.plot(xdata, ydata, color='rebeccapurple')	plt.plot(xdata, ydata, color='rebeccapurple')
code: イテラブルxdataと数列ydataの折れ線を描画してその色をレベッカパープルにセットする	plt.plot(xdata, ydata, color='rebeccapurple')	plt.plot(xdata, ydata, color='rebeccapurple')
code: 折れ線グラフの色を赤に指定する	plt.plot(xdata, ydata, color='red')	plt.plot(xdata, ydata, color='red')
code: 折れ線の色を赤に変更する	plt.plot(xdata, ydata, color='red')	plt.plot(xdata, ydata, color='red')
code: 赤色の折れ線を描く	plt.plot(xdata, ydata, color='red')	plt.plot(xdata, ydata, color='red')
code: 配列xdataと数列ydataの折れ線グラフを描画して、その色を赤変える	plt.plot(xdata, ydata, color='red')	plt.plot(xdata, ydata, color='red')
code: 配列xdataと数列ydataについて折れ線グラフを描画してその色を赤に指定する	plt.plot(xdata, ydata, color='red')	plt.plot(xdata, ydata, color='red')
code: 折れ線グラフの色をロージーブラウンに変更する	plt.plot(xdata, ydata, color='rosybrown')	plt.plot(xdata, ydata, color='rosybrown')
code: 折れ線の色をロージーブラウンとする	plt.plot(xdata, ydata, color='rosybrown')	plt.plot(xdata, ydata, color='rosybrown')
code: ロージーブラウン色の折れ線を描画する	plt.plot(xdata, ydata, color='rosybrown')	plt.plot(xdata, ydata, color='rosybrown')
code: 数列xdataと数列ydataについて折れ線を描画してその色をロージーブラウンにする	plt.plot(xdata, ydata, color='rosybrown')	plt.plot(xdata, ydata, color='rosybrown')
code: データ列xdataとイテラブルydataの折れ線グラフを描画してその色をロージーブラウンに設定する	plt.plot(xdata, ydata, color='rosybrown')	plt.plot(xdata, ydata, color='rosybrown')
code: 折れ線グラフの色をロイヤルブルーにする	plt.plot(xdata, ydata, color='royalblue')	plt.plot(xdata, ydata, color='royalblue')
code: 折れ線グラフの色をロイヤルブルーに変更する	plt.plot(xdata, ydata, color='royalblue')	plt.plot(xdata, ydata, color='royalblue')
code: ロイヤルブルー色の折れ線グラフを描く	plt.plot(xdata, ydata, color='royalblue')	plt.plot(xdata, ydata, color='royalblue')
code: データ列xdataとデータ列ydataの折れ線を描画して、色をロイヤルブルーに変更する	plt.plot(xdata, ydata, color='royalblue')	plt.plot(xdata, ydata, color='royalblue')
code: データ列xdataと数列ydataの折れ線を描画してその色をロイヤルブルーにする	plt.plot(xdata, ydata, color='royalblue')	plt.plot(xdata, ydata, color='royalblue')
code: 折れ線の色をサドルブラウン変える	plt.plot(xdata, ydata, color='saddlebrown')	plt.plot(xdata, ydata, color='saddlebrown')
code: 折れ線グラフの色をサドルブラウンとする	plt.plot(xdata, ydata, color='saddlebrown')	plt.plot(xdata, ydata, color='saddlebrown')
code: サドルブラウン色の折れ線グラフをプロットする	plt.plot(xdata, ydata, color='saddlebrown')	plt.plot(xdata, ydata, color='saddlebrown')
code: データ列xdataとイテラブルydataの折れ線を描画してその色をサドルブラウンに設定する	plt.plot(xdata, ydata, color='saddlebrown')	plt.plot(xdata, ydata, color='saddlebrown')
code: 配列xdataとリストydataについて折れ線を描画して色をサドルブラウンにセットする	plt.plot(xdata, ydata, color='saddlebrown')	plt.plot(xdata, ydata, color='saddlebrown')
code: 折れ線の色をサーモンとする	plt.plot(xdata, ydata, color='salmon')	plt.plot(xdata, ydata, color='salmon')
code: 折れ線グラフの色をサーモンに設定する	plt.plot(xdata, ydata, color='salmon')	plt.plot(xdata, ydata, color='salmon')
code: サーモン色の折れ線を描画する	plt.plot(xdata, ydata, color='salmon')	plt.plot(xdata, ydata, color='salmon')
code: イテラブルxdataとリストydataについて折れ線グラフを描画して、その色をサーモン変える	plt.plot(xdata, ydata, color='salmon')	plt.plot(xdata, ydata, color='salmon')
code: 数列xdataと配列ydataの折れ線を描画して、その色をサーモンに設定する	plt.plot(xdata, ydata, color='salmon')	plt.plot(xdata, ydata, color='salmon')
code: 折れ線グラフの色をサンディーブラウンとする	plt.plot(xdata, ydata, color='sandybrown')	plt.plot(xdata, ydata, color='sandybrown')
code: 折れ線の色をサンディーブラウンにセットする	plt.plot(xdata, ydata, color='sandybrown')	plt.plot(xdata, ydata, color='sandybrown')
code: サンディーブラウン色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='sandybrown')	plt.plot(xdata, ydata, color='sandybrown')
code: データ列xdataとイテラブルydataの折れ線グラフを描画してその色をサンディーブラウンに指定する	plt.plot(xdata, ydata, color='sandybrown')	plt.plot(xdata, ydata, color='sandybrown')
code: 数列xdataとリストydataについて折れ線グラフを描画して、その色をサンディーブラウン変える	plt.plot(xdata, ydata, color='sandybrown')	plt.plot(xdata, ydata, color='sandybrown')
code: 折れ線グラフの色をシーグリーンに設定する	plt.plot(xdata, ydata, color='seagreen')	plt.plot(xdata, ydata, color='seagreen')
code: 折れ線グラフの色をシーグリーンに設定する	plt.plot(xdata, ydata, color='seagreen')	plt.plot(xdata, ydata, color='seagreen')
code: シーグリーン色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='seagreen')	plt.plot(xdata, ydata, color='seagreen')
code: リストxdataと配列ydataについて折れ線グラフを描画してその色をシーグリーンにする	plt.plot(xdata, ydata, color='seagreen')	plt.plot(xdata, ydata, color='seagreen')
code: 配列xdataとデータ列ydataの折れ線グラフを描画してその色をシーグリーンにする	plt.plot(xdata, ydata, color='seagreen')	plt.plot(xdata, ydata, color='seagreen')
code: 折れ線グラフの色を貝殻に設定する	plt.plot(xdata, ydata, color='seashell')	plt.plot(xdata, ydata, color='seashell')
code: 折れ線の色を貝殻にする	plt.plot(xdata, ydata, color='seashell')	plt.plot(xdata, ydata, color='seashell')
code: 貝殻色の折れ線グラフを描く	plt.plot(xdata, ydata, color='seashell')	plt.plot(xdata, ydata, color='seashell')
code: 数列xdataとイテラブルydataについて折れ線を描画して色を貝殻に変更する	plt.plot(xdata, ydata, color='seashell')	plt.plot(xdata, ydata, color='seashell')
code: 配列xdataとデータ列ydataについて折れ線を描画してその色を貝殻変える	plt.plot(xdata, ydata, color='seashell')	plt.plot(xdata, ydata, color='seashell')
code: 折れ線グラフの色をシエナに変更する	plt.plot(xdata, ydata, color='sienna')	plt.plot(xdata, ydata, color='sienna')
code: 折れ線の色をシエナ変える	plt.plot(xdata, ydata, color='sienna')	plt.plot(xdata, ydata, color='sienna')
code: シエナ色の折れ線をプロットする	plt.plot(xdata, ydata, color='sienna')	plt.plot(xdata, ydata, color='sienna')
code: 配列xdataと数列ydataについて折れ線グラフを描画して、その色をシエナに指定する	plt.plot(xdata, ydata, color='sienna')	plt.plot(xdata, ydata, color='sienna')
code: リストxdataとデータ列ydataについて折れ線を描画して、色をシエナに設定する	plt.plot(xdata, ydata, color='sienna')	plt.plot(xdata, ydata, color='sienna')
code: 折れ線の色をシルバーにセットする	plt.plot(xdata, ydata, color='silver')	plt.plot(xdata, ydata, color='silver')
code: 折れ線グラフの色をシルバーにする	plt.plot(xdata, ydata, color='silver')	plt.plot(xdata, ydata, color='silver')
code: シルバー色の折れ線を描く	plt.plot(xdata, ydata, color='silver')	plt.plot(xdata, ydata, color='silver')
code: リストxdataと数列ydataの折れ線グラフを描画して、その色をシルバーにセットする	plt.plot(xdata, ydata, color='silver')	plt.plot(xdata, ydata, color='silver')
code: 数列xdataとイテラブルydataについて折れ線グラフを描画して、色をシルバーに設定する	plt.plot(xdata, ydata, color='silver')	plt.plot(xdata, ydata, color='silver')
code: 折れ線グラフの色をスカイブルーに変更する	plt.plot(xdata, ydata, color='skyblue')	plt.plot(xdata, ydata, color='skyblue')
code: 折れ線グラフの色をスカイブルーに設定する	plt.plot(xdata, ydata, color='skyblue')	plt.plot(xdata, ydata, color='skyblue')
code: スカイブルー色の折れ線グラフをプロットする	plt.plot(xdata, ydata, color='skyblue')	plt.plot(xdata, ydata, color='skyblue')
code: データ列xdataとイテラブルydataについて折れ線を描画して、その色をスカイブルーに変更する	plt.plot(xdata, ydata, color='skyblue')	plt.plot(xdata, ydata, color='skyblue')
code: リストxdataと数列ydataの折れ線を描画して、その色をスカイブルー変える	plt.plot(xdata, ydata, color='skyblue')	plt.plot(xdata, ydata, color='skyblue')
code: 折れ線の色をスレートブルーにする	plt.plot(xdata, ydata, color='slateblue')	plt.plot(xdata, ydata, color='slateblue')
code: 折れ線グラフの色をスレートブルーにセットする	plt.plot(xdata, ydata, color='slateblue')	plt.plot(xdata, ydata, color='slateblue')
code: スレートブルー色の折れ線グラフをプロットする	plt.plot(xdata, ydata, color='slateblue')	plt.plot(xdata, ydata, color='slateblue')
code: リストxdataと配列ydataについて折れ線を描画して、その色をスレートブルーに変更する	plt.plot(xdata, ydata, color='slateblue')	plt.plot(xdata, ydata, color='slateblue')
code: 数列xdataと数列ydataについて折れ線グラフを描画して、その色をスレートブルーに指定する	plt.plot(xdata, ydata, color='slateblue')	plt.plot(xdata, ydata, color='slateblue')
code: 折れ線の色をスラグレーに指定する	plt.plot(xdata, ydata, color='slategray')	plt.plot(xdata, ydata, color='slategray')
code: 折れ線の色をスラグレーに設定する	plt.plot(xdata, ydata, color='slategrey')	plt.plot(xdata, ydata, color='slategray')
code: スラグレー色の折れ線グラフを描く	plt.plot(xdata, ydata, color='slategray')	plt.plot(xdata, ydata, color='slategray')
code: 配列xdataと配列ydataについて折れ線グラフを描画して、その色をスラグレー変える	plt.plot(xdata, ydata, color='slategray')	plt.plot(xdata, ydata, color='slategray')
code: イテラブルxdataと数列ydataについて折れ線を描画して色をスラグレーに変更する	plt.plot(xdata, ydata, color='slategray')	plt.plot(xdata, ydata, color='slategray')
code: 折れ線の色をスラグレーに変更する	plt.plot(xdata, ydata, color='slategray')	plt.plot(xdata, ydata, color='slategrey')
code: 折れ線グラフの色をスラグレーに設定する	plt.plot(xdata, ydata, color='slategray')	plt.plot(xdata, ydata, color='slategrey')
code: スラグレー色の折れ線グラフをプロットする	plt.plot(xdata, ydata, color='slategrey')	plt.plot(xdata, ydata, color='slategrey')
code: データ列xdataとリストydataについて折れ線を描画して色をスラグレーに変更する	plt.plot(xdata, ydata, color='slategray')	plt.plot(xdata, ydata, color='slategrey')
code: 数列xdataと数列ydataの折れ線を描画して、色をスラグレー変える	plt.plot(xdata, ydata, color='slategray')	plt.plot(xdata, ydata, color='slategrey')
code: 折れ線の色をスノー変える	plt.plot(xdata, ydata, color='snow')	plt.plot(xdata, ydata, color='snow')
code: 折れ線の色をスノー変える	plt.plot(xdata, ydata, color='snow')	plt.plot(xdata, ydata, color='snow')
code: スノー色の折れ線グラフを描く	plt.plot(xdata, ydata, color='snow')	plt.plot(xdata, ydata, color='snow')
code: 数列xdataとデータ列ydataの折れ線を描画して、色をスノー変える	plt.plot(xdata, ydata, color='snow')	plt.plot(xdata, ydata, color='snow')
code: イテラブルxdataとリストydataについて折れ線グラフを描画して色をスノー変える	plt.plot(xdata, ydata, color='snow')	plt.plot(xdata, ydata, color='snow')
code: 折れ線グラフの色をスプリンググリーンに変更する	plt.plot(xdata, ydata, color='springgreen')	plt.plot(xdata, ydata, color='springgreen')
code: 折れ線グラフの色をスプリンググリーンにセットする	plt.plot(xdata, ydata, color='springgreen')	plt.plot(xdata, ydata, color='springgreen')
code: スプリンググリーン色の折れ線をプロットする	plt.plot(xdata, ydata, color='springgreen')	plt.plot(xdata, ydata, color='springgreen')
code: 配列xdataとデータ列ydataについて折れ線を描画して、その色をスプリンググリーンに変更する	plt.plot(xdata, ydata, color='springgreen')	plt.plot(xdata, ydata, color='springgreen')
code: リストxdataと配列ydataについて折れ線グラフを描画して、色をスプリンググリーンに設定する	plt.plot(xdata, ydata, color='springgreen')	plt.plot(xdata, ydata, color='springgreen')
code: 折れ線の色をスチールブルーに設定する	plt.plot(xdata, ydata, color='steelblue')	plt.plot(xdata, ydata, color='steelblue')
code: 折れ線の色をスチールブルーに設定する	plt.plot(xdata, ydata, color='steelblue')	plt.plot(xdata, ydata, color='steelblue')
code: スチールブルー色の折れ線グラフを描く	plt.plot(xdata, ydata, color='steelblue')	plt.plot(xdata, ydata, color='steelblue')
code: リストxdataとデータ列ydataの折れ線グラフを描画してその色をスチールブルーに指定する	plt.plot(xdata, ydata, color='steelblue')	plt.plot(xdata, ydata, color='steelblue')
code: データ列xdataとデータ列ydataについて折れ線を描画してその色をスチールブルー変える	plt.plot(xdata, ydata, color='steelblue')	plt.plot(xdata, ydata, color='steelblue')
code: 折れ線の色をタンに変更する	plt.plot(xdata, ydata, color='tan')	plt.plot(xdata, ydata, color='tan')
code: 折れ線グラフの色をタンに変更する	plt.plot(xdata, ydata, color='tan')	plt.plot(xdata, ydata, color='tan')
code: タン色の折れ線を描画する	plt.plot(xdata, ydata, color='tan')	plt.plot(xdata, ydata, color='tan')
code: データ列xdataと配列ydataについて折れ線グラフを描画して、その色をタンとする	plt.plot(xdata, ydata, color='tan')	plt.plot(xdata, ydata, color='tan')
code: 数列xdataとデータ列ydataについて折れ線を描画してその色をタンに設定する	plt.plot(xdata, ydata, color='tan')	plt.plot(xdata, ydata, color='tan')
code: 折れ線グラフの色をティールに変更する	plt.plot(xdata, ydata, color='teal')	plt.plot(xdata, ydata, color='teal')
code: 折れ線の色をティールに設定する	plt.plot(xdata, ydata, color='teal')	plt.plot(xdata, ydata, color='teal')
code: ティール色の折れ線を描く	plt.plot(xdata, ydata, color='teal')	plt.plot(xdata, ydata, color='teal')
code: イテラブルxdataと数列ydataの折れ線を描画して色をティールにする	plt.plot(xdata, ydata, color='teal')	plt.plot(xdata, ydata, color='teal')
code: 配列xdataと配列ydataの折れ線グラフを描画して色をティール変える	plt.plot(xdata, ydata, color='teal')	plt.plot(xdata, ydata, color='teal')
code: 折れ線の色をアザミに設定する	plt.plot(xdata, ydata, color='thistle')	plt.plot(xdata, ydata, color='thistle')
code: 折れ線の色をアザミに変更する	plt.plot(xdata, ydata, color='thistle')	plt.plot(xdata, ydata, color='thistle')
code: アザミ色の折れ線グラフを描く	plt.plot(xdata, ydata, color='thistle')	plt.plot(xdata, ydata, color='thistle')
code: 数列xdataと配列ydataについて折れ線グラフを描画して、色をアザミにする	plt.plot(xdata, ydata, color='thistle')	plt.plot(xdata, ydata, color='thistle')
code: 配列xdataとイテラブルydataの折れ線を描画して色をアザミ変える	plt.plot(xdata, ydata, color='thistle')	plt.plot(xdata, ydata, color='thistle')
code: 折れ線の色をトマトにセットする	plt.plot(xdata, ydata, color='tomato')	plt.plot(xdata, ydata, color='tomato')
code: 折れ線の色をトマトに変更する	plt.plot(xdata, ydata, color='tomato')	plt.plot(xdata, ydata, color='tomato')
code: トマト色の折れ線グラフを描く	plt.plot(xdata, ydata, color='tomato')	plt.plot(xdata, ydata, color='tomato')
code: リストxdataと配列ydataの折れ線グラフを描画して、その色をトマトとする	plt.plot(xdata, ydata, color='tomato')	plt.plot(xdata, ydata, color='tomato')
code: イテラブルxdataと数列ydataについて折れ線グラフを描画して色をトマト変える	plt.plot(xdata, ydata, color='tomato')	plt.plot(xdata, ydata, color='tomato')
code: 折れ線の色をターコイズにセットする	plt.plot(xdata, ydata, color='turquoise')	plt.plot(xdata, ydata, color='turquoise')
code: 折れ線の色をターコイズに指定する	plt.plot(xdata, ydata, color='turquoise')	plt.plot(xdata, ydata, color='turquoise')
code: ターコイズ色の折れ線グラフを描く	plt.plot(xdata, ydata, color='turquoise')	plt.plot(xdata, ydata, color='turquoise')
code: リストxdataと数列ydataについて折れ線グラフを描画して色をターコイズ変える	plt.plot(xdata, ydata, color='turquoise')	plt.plot(xdata, ydata, color='turquoise')
code: リストxdataとイテラブルydataの折れ線グラフを描画して色をターコイズにする	plt.plot(xdata, ydata, color='turquoise')	plt.plot(xdata, ydata, color='turquoise')
code: 折れ線グラフの色をバイオレットに変更する	plt.plot(xdata, ydata, color='violet')	plt.plot(xdata, ydata, color='violet')
code: 折れ線グラフの色をバイオレットとする	plt.plot(xdata, ydata, color='violet')	plt.plot(xdata, ydata, color='violet')
code: バイオレット色の折れ線をプロットする	plt.plot(xdata, ydata, color='violet')	plt.plot(xdata, ydata, color='violet')
code: 数列xdataとリストydataについて折れ線を描画してその色をバイオレットに変更する	plt.plot(xdata, ydata, color='violet')	plt.plot(xdata, ydata, color='violet')
code: データ列xdataと配列ydataについて折れ線グラフを描画してその色をバイオレットにセットする	plt.plot(xdata, ydata, color='violet')	plt.plot(xdata, ydata, color='violet')
code: 折れ線の色を小麦変える	plt.plot(xdata, ydata, color='wheat')	plt.plot(xdata, ydata, color='wheat')
code: 折れ線グラフの色を小麦変える	plt.plot(xdata, ydata, color='wheat')	plt.plot(xdata, ydata, color='wheat')
code: 小麦色の折れ線をプロットする	plt.plot(xdata, ydata, color='wheat')	plt.plot(xdata, ydata, color='wheat')
code: イテラブルxdataと配列ydataについて折れ線を描画して色を小麦にセットする	plt.plot(xdata, ydata, color='wheat')	plt.plot(xdata, ydata, color='wheat')
code: 配列xdataとリストydataについて折れ線グラフを描画して、色を小麦に設定する	plt.plot(xdata, ydata, color='wheat')	plt.plot(xdata, ydata, color='wheat')
code: 折れ線グラフの色をホワイトに変更する	plt.plot(xdata, ydata, color='white')	plt.plot(xdata, ydata, color='white')
code: 折れ線グラフの色をホワイトに設定する	plt.plot(xdata, ydata, color='white')	plt.plot(xdata, ydata, color='white')
code: ホワイト色の折れ線をプロットする	plt.plot(xdata, ydata, color='white')	plt.plot(xdata, ydata, color='white')
code: 数列xdataとリストydataの折れ線グラフを描画してその色をホワイトにセットする	plt.plot(xdata, ydata, color='white')	plt.plot(xdata, ydata, color='white')
code: データ列xdataと数列ydataの折れ線グラフを描画して色をホワイトにセットする	plt.plot(xdata, ydata, color='white')	plt.plot(xdata, ydata, color='white')
code: 折れ線の色をホワイトスモークにセットする	plt.plot(xdata, ydata, color='whitesmoke')	plt.plot(xdata, ydata, color='whitesmoke')
code: 折れ線グラフの色をホワイトスモークに設定する	plt.plot(xdata, ydata, color='whitesmoke')	plt.plot(xdata, ydata, color='whitesmoke')
code: ホワイトスモーク色の折れ線を描画する	plt.plot(xdata, ydata, color='whitesmoke')	plt.plot(xdata, ydata, color='whitesmoke')
code: イテラブルxdataとデータ列ydataについて折れ線グラフを描画して色をホワイトスモークに指定する	plt.plot(xdata, ydata, color='whitesmoke')	plt.plot(xdata, ydata, color='whitesmoke')
code: データ列xdataとデータ列ydataの折れ線を描画して、その色をホワイトスモークに変更する	plt.plot(xdata, ydata, color='whitesmoke')	plt.plot(xdata, ydata, color='whitesmoke')
code: 折れ線の色を黄色に変更する	plt.plot(xdata, ydata, color='yellow')	plt.plot(xdata, ydata, color='yellow')
code: 折れ線の色を黄色に設定する	plt.plot(xdata, ydata, color='yellow')	plt.plot(xdata, ydata, color='yellow')
code: 黄色色の折れ線をプロットする	plt.plot(xdata, ydata, color='yellow')	plt.plot(xdata, ydata, color='yellow')
code: 配列xdataとイテラブルydataについて折れ線を描画して、その色を黄色に設定する	plt.plot(xdata, ydata, color='yellow')	plt.plot(xdata, ydata, color='yellow')
code: 数列xdataと数列ydataについて折れ線グラフを描画して色を黄色にセットする	plt.plot(xdata, ydata, color='yellow')	plt.plot(xdata, ydata, color='yellow')
code: 折れ線グラフの色をイエローグリーンとする	plt.plot(xdata, ydata, color='yellowgreen')	plt.plot(xdata, ydata, color='yellowgreen')
code: 折れ線の色をイエローグリーンにする	plt.plot(xdata, ydata, color='greenyellow')	plt.plot(xdata, ydata, color='yellowgreen')
code: イエローグリーン色の折れ線グラフを描画する	plt.plot(xdata, ydata, color='greenyellow')	plt.plot(xdata, ydata, color='yellowgreen')
code: リストxdataとリストydataについて折れ線グラフを描画して、その色をイエローグリーンにする	plt.plot(xdata, ydata, color='yellowgreen')	plt.plot(xdata, ydata, color='yellowgreen')
code: イテラブルxdataとデータ列ydataについて折れ線グラフを描画して、その色をイエローグリーンに設定する	plt.plot(xdata, ydata, color='yellowgreen')	plt.plot(xdata, ydata, color='yellowgreen')
code: 破線の色をアリスブルー変える	plt.plot(xdata, ydata, linestyle='dash', color='aliceblue')	plt.plot(xdata, ydata, linestyle='dash', color='aliceblue')
code: 破線の色をアリスブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='aliceblue')	plt.plot(xdata, ydata, linestyle='dash', color='aliceblue')
code: イテラブルxdataとリストydataについて破線グラフを描画してその色をアリスブルーにする	plt.plot(xdata, ydata, linestyle='dash', color='aliceblue')	plt.plot(xdata, ydata, linestyle='dash', color='aliceblue')
code: 配列xdataと数列ydataについて破線グラフを描画して、その色をアリスブルーに指定する	plt.plot(xdata, ydata, linestyle='dash', color='aliceblue')	plt.plot(xdata, ydata, linestyle='dash', color='aliceblue')
code: 破線の色をアンティークホワイトに設定する	plt.plot(xdata, ydata, linestyle='dash', color='antiquewhite')	plt.plot(xdata, ydata, linestyle='dash', color='antiquewhite')
code: 破線グラフの色をアンティークホワイトに指定する	plt.plot(xdata, ydata, linestyle='dash', color='antiquewhite')	plt.plot(xdata, ydata, linestyle='dash', color='antiquewhite')
code: データ列xdataと数列ydataについて破線グラフを描画して、その色をアンティークホワイトにセットする	plt.plot(xdata, ydata, linestyle='dash', color='antiquewhite')	plt.plot(xdata, ydata, linestyle='dash', color='antiquewhite')
code: リストxdataとデータ列ydataについて破線を描画してその色をアンティークホワイト変える	plt.plot(xdata, ydata, linestyle='dash', color='antiquewhite')	plt.plot(xdata, ydata, linestyle='dash', color='antiquewhite')
code: 破線グラフの色をアクアに変更する	plt.plot(xdata, ydata, linestyle='dash', color='aqua')	plt.plot(xdata, ydata, linestyle='dash', color='aqua')
code: 破線の色をアクアとする	plt.plot(xdata, ydata, linestyle='dash', color='aqua')	plt.plot(xdata, ydata, linestyle='dash', color='aqua')
code: リストxdataとリストydataの破線グラフを描画して色をアクアに設定する	plt.plot(xdata, ydata, linestyle='dash', color='aqua')	plt.plot(xdata, ydata, linestyle='dash', color='aqua')
code: 数列xdataとイテラブルydataの破線グラフを描画して色をアクアに変更する	plt.plot(xdata, ydata, linestyle='dash', color='aqua')	plt.plot(xdata, ydata, linestyle='dash', color='aqua')
code: 破線の色をアクアマリンにセットする	plt.plot(xdata, ydata, linestyle='dash', color='aquamarine')	plt.plot(xdata, ydata, linestyle='dash', color='aquamarine')
code: 破線の色をアクアマリンに変更する	plt.plot(xdata, ydata, linestyle='dash', color='aquamarine')	plt.plot(xdata, ydata, linestyle='dash', color='aquamarine')
code: リストxdataとイテラブルydataの破線を描画して、色をアクアマリン変える	plt.plot(xdata, ydata, linestyle='dash', color='aquamarine')	plt.plot(xdata, ydata, linestyle='dash', color='aquamarine')
code: 配列xdataと数列ydataについて破線を描画して色をアクアマリンにする	plt.plot(xdata, ydata, linestyle='dash', color='aquamarine')	plt.plot(xdata, ydata, linestyle='dash', color='aquamarine')
code: 破線の色を紺碧変える	plt.plot(xdata, ydata, linestyle='dash', color='azure')	plt.plot(xdata, ydata, linestyle='dash', color='azure')
code: 破線の色を紺碧に指定する	plt.plot(xdata, ydata, linestyle='dash', color='azure')	plt.plot(xdata, ydata, linestyle='dash', color='azure')
code: データ列xdataとデータ列ydataの破線グラフを描画して、色を紺碧変える	plt.plot(xdata, ydata, linestyle='dash', color='azure')	plt.plot(xdata, ydata, linestyle='dash', color='azure')
code: 配列xdataとリストydataの破線を描画して色を紺碧にする	plt.plot(xdata, ydata, linestyle='dash', color='azure')	plt.plot(xdata, ydata, linestyle='dash', color='azure')
code: 破線グラフの色をベージュに設定する	plt.plot(xdata, ydata, linestyle='dash', color='beige')	plt.plot(xdata, ydata, linestyle='dash', color='beige')
code: 破線グラフの色をベージュに変更する	plt.plot(xdata, ydata, linestyle='dash', color='beige')	plt.plot(xdata, ydata, linestyle='dash', color='beige')
code: データ列xdataと配列ydataの破線グラフを描画してその色をベージュに指定する	plt.plot(xdata, ydata, linestyle='dash', color='beige')	plt.plot(xdata, ydata, linestyle='dash', color='beige')
code: リストxdataとイテラブルydataの破線を描画してその色をベージュ変える	plt.plot(xdata, ydata, linestyle='dash', color='beige')	plt.plot(xdata, ydata, linestyle='dash', color='beige')
code: 破線グラフの色をビスクに指定する	plt.plot(xdata, ydata, linestyle='dash', color='bisque')	plt.plot(xdata, ydata, linestyle='dash', color='bisque')
code: 破線グラフの色をビスクに変更する	plt.plot(xdata, ydata, linestyle='dash', color='bisque')	plt.plot(xdata, ydata, linestyle='dash', color='bisque')
code: 数列xdataと配列ydataについて破線グラフを描画して色をビスク変える	plt.plot(xdata, ydata, linestyle='dash', color='bisque')	plt.plot(xdata, ydata, linestyle='dash', color='bisque')
code: データ列xdataとリストydataについて破線を描画してその色をビスクとする	plt.plot(xdata, ydata, linestyle='dash', color='bisque')	plt.plot(xdata, ydata, linestyle='dash', color='bisque')
code: 破線の色をブラックにセットする	plt.plot(xdata, ydata, linestyle='dash', color='black')	plt.plot(xdata, ydata, linestyle='dash', color='black')
code: 破線の色をブラックに設定する	plt.plot(xdata, ydata, linestyle='dash', color='black')	plt.plot(xdata, ydata, linestyle='dash', color='black')
code: 数列xdataとイテラブルydataについて破線グラフを描画して、その色をブラックにセットする	plt.plot(xdata, ydata, linestyle='dash', color='black')	plt.plot(xdata, ydata, linestyle='dash', color='black')
code: イテラブルxdataとデータ列ydataの破線を描画して、色をブラックにセットする	plt.plot(xdata, ydata, linestyle='dash', color='black')	plt.plot(xdata, ydata, linestyle='dash', color='black')
code: 破線グラフの色をブランチドアーモンド変える	plt.plot(xdata, ydata, linestyle='dash', color='blanchedalmond')	plt.plot(xdata, ydata, linestyle='dash', color='blanchedalmond')
code: 破線の色をブランチドアーモンドに設定する	plt.plot(xdata, ydata, linestyle='dash', color='blanchedalmond')	plt.plot(xdata, ydata, linestyle='dash', color='blanchedalmond')
code: 数列xdataとリストydataの破線グラフを描画して色をブランチドアーモンドとする	plt.plot(xdata, ydata, linestyle='dash', color='blanchedalmond')	plt.plot(xdata, ydata, linestyle='dash', color='blanchedalmond')
code: リストxdataとイテラブルydataの破線グラフを描画して色をブランチドアーモンドに変更する	plt.plot(xdata, ydata, linestyle='dash', color='blanchedalmond')	plt.plot(xdata, ydata, linestyle='dash', color='blanchedalmond')
code: 破線の色を青にセットする	plt.plot(xdata, ydata, linestyle='dash', color='blue')	plt.plot(xdata, ydata, linestyle='dash', color='blue')
code: 破線グラフの色を青に指定する	plt.plot(xdata, ydata, linestyle='dash', color='blue')	plt.plot(xdata, ydata, linestyle='dash', color='blue')
code: データ列xdataと数列ydataの破線グラフを描画してその色を青に設定する	plt.plot(xdata, ydata, linestyle='dashed', color='b')	plt.plot(xdata, ydata, linestyle='dash', color='blue')
code: データ列xdataと数列ydataの破線を描画して色を青に設定する	plt.plot(xdata, ydata, linestyle='dash', color='blue')	plt.plot(xdata, ydata, linestyle='dash', color='blue')
code: 破線グラフの色をブルーバイオレットにする	plt.plot(xdata, ydata, linestyle='dash', color='blueviolet')	plt.plot(xdata, ydata, linestyle='dash', color='blueviolet')
code: 破線の色をブルーバイオレットに変更する	plt.plot(xdata, ydata, linestyle='dash', color='blueviolet')	plt.plot(xdata, ydata, linestyle='dash', color='blueviolet')
code: 配列xdataとイテラブルydataについて破線を描画して、その色をブルーバイオレットとする	plt.plot(xdata, ydata, linestyle='dash', color='blueviolet')	plt.plot(xdata, ydata, linestyle='dash', color='blueviolet')
code: 配列xdataとデータ列ydataについて破線グラフを描画して、色をブルーバイオレットに指定する	plt.plot(xdata, ydata, linestyle='dash', color='blueviolet')	plt.plot(xdata, ydata, linestyle='dash', color='blueviolet')
code: 破線の色をブラウンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='brown')	plt.plot(xdata, ydata, linestyle='dash', color='brown')
code: 破線の色をブラウンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='brown')	plt.plot(xdata, ydata, linestyle='dash', color='brown')
code: 数列xdataとイテラブルydataについて破線グラフを描画して、その色をブラウンに変更する	plt.plot(xdata, ydata, linestyle='dash', color='brown')	plt.plot(xdata, ydata, linestyle='dash', color='brown')
code: 数列xdataと配列ydataの破線グラフを描画して色をブラウンにする	plt.plot(xdata, ydata, linestyle='dash', color='brown')	plt.plot(xdata, ydata, linestyle='dash', color='brown')
code: 破線の色をハリウッドにする	plt.plot(xdata, ydata, linestyle='dash', color='burlywood')	plt.plot(xdata, ydata, linestyle='dash', color='burlywood')
code: 破線の色をハリウッドにセットする	plt.plot(xdata, ydata, linestyle='dash', color='burlywood')	plt.plot(xdata, ydata, linestyle='dash', color='burlywood')
code: データ列xdataとデータ列ydataについて破線を描画して、色をハリウッド変える	plt.plot(xdata, ydata, linestyle='dash', color='burlywood')	plt.plot(xdata, ydata, linestyle='dash', color='burlywood')
code: データ列xdataとデータ列ydataの破線グラフを描画して色をハリウッドに指定する	plt.plot(xdata, ydata, linestyle='dash', color='burlywood')	plt.plot(xdata, ydata, linestyle='dash', color='burlywood')
code: 破線の色をカデットブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='cadetblue')	plt.plot(xdata, ydata, linestyle='dash', color='cadetblue')
code: 破線の色をカデットブルーにセットする	plt.plot(xdata, ydata, linestyle='dash', color='cadetblue')	plt.plot(xdata, ydata, linestyle='dash', color='cadetblue')
code: イテラブルxdataとデータ列ydataの破線を描画して、その色をカデットブルーに変更する	plt.plot(xdata, ydata, linestyle='dash', color='cadetblue')	plt.plot(xdata, ydata, linestyle='dash', color='cadetblue')
code: 配列xdataと配列ydataの破線を描画して、その色をカデットブルーにする	plt.plot(xdata, ydata, linestyle='dash', color='cadetblue')	plt.plot(xdata, ydata, linestyle='dash', color='cadetblue')
code: 破線グラフの色をシャルトルーズにセットする	plt.plot(xdata, ydata, linestyle='dash', color='chartreuse')	plt.plot(xdata, ydata, linestyle='dash', color='chartreuse')
code: 破線の色をシャルトルーズにセットする	plt.plot(xdata, ydata, linestyle='dash', color='chartreuse')	plt.plot(xdata, ydata, linestyle='dash', color='chartreuse')
code: データ列xdataとイテラブルydataについて破線グラフを描画して、その色をシャルトルーズに変更する	plt.plot(xdata, ydata, linestyle='dash', color='chartreuse')	plt.plot(xdata, ydata, linestyle='dash', color='chartreuse')
code: データ列xdataと数列ydataについて破線グラフを描画してその色をシャルトルーズに変更する	plt.plot(xdata, ydata, linestyle='dash', color='chartreuse')	plt.plot(xdata, ydata, linestyle='dash', color='chartreuse')
code: 破線の色をチョコレートに設定する	plt.plot(xdata, ydata, linestyle='dash', color='chocolate')	plt.plot(xdata, ydata, linestyle='dash', color='chocolate')
code: 破線の色をチョコレートに変更する	plt.plot(xdata, ydata, linestyle='dash', color='chocolate')	plt.plot(xdata, ydata, linestyle='dash', color='chocolate')
code: 配列xdataとリストydataの破線グラフを描画してその色をチョコレート変える	plt.plot(xdata, ydata, linestyle='dash', color='chocolate')	plt.plot(xdata, ydata, linestyle='dash', color='chocolate')
code: リストxdataとイテラブルydataの破線グラフを描画してその色をチョコレートに変更する	plt.plot(xdata, ydata, linestyle='dash', color='chocolate')	plt.plot(xdata, ydata, linestyle='dash', color='chocolate')
code: 破線の色をコーラル変える	plt.plot(xdata, ydata, linestyle='dash', color='coral')	plt.plot(xdata, ydata, linestyle='dash', color='coral')
code: 破線グラフの色をコーラルにする	plt.plot(xdata, ydata, linestyle='dash', color='coral')	plt.plot(xdata, ydata, linestyle='dash', color='coral')
code: リストxdataと数列ydataの破線を描画して色をコーラルとする	plt.plot(xdata, ydata, linestyle='dash', color='coral')	plt.plot(xdata, ydata, linestyle='dash', color='coral')
code: 配列xdataとデータ列ydataについて破線を描画して、色をコーラルとする	plt.plot(xdata, ydata, linestyle='dash', color='coral')	plt.plot(xdata, ydata, linestyle='dash', color='coral')
code: 破線グラフの色をコーンフラワーブルーとする	plt.plot(xdata, ydata, linestyle='dash', color='cornflowerblue')	plt.plot(xdata, ydata, linestyle='dash', color='cornflowerblue')
code: 破線の色をコーンフラワーブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='cornflowerblue')	plt.plot(xdata, ydata, linestyle='dash', color='cornflowerblue')
code: 配列xdataと数列ydataについて破線グラフを描画して、色をコーンフラワーブルーとする	plt.plot(xdata, ydata, linestyle='dash', color='cornflowerblue')	plt.plot(xdata, ydata, linestyle='dash', color='cornflowerblue')
code: 配列xdataとデータ列ydataについて破線を描画して、その色をコーンフラワーブルーに変更する	plt.plot(xdata, ydata, linestyle='dash', color='cornflowerblue')	plt.plot(xdata, ydata, linestyle='dash', color='cornflowerblue')
code: 破線グラフの色をコーンズシルクにする	plt.plot(xdata, ydata, linestyle='dash', color='cornsilk')	plt.plot(xdata, ydata, linestyle='dash', color='cornsilk')
code: 破線の色をコーンズシルクに設定する	plt.plot(xdata, ydata, linestyle='dash', color='cornsilk')	plt.plot(xdata, ydata, linestyle='dash', color='cornsilk')
code: 数列xdataと数列ydataの破線を描画して色をコーンズシルクにセットする	plt.plot(xdata, ydata, linestyle='dash', color='cornsilk')	plt.plot(xdata, ydata, linestyle='dash', color='cornsilk')
code: 配列xdataとデータ列ydataの破線を描画して、その色をコーンズシルクとする	plt.plot(xdata, ydata, linestyle='dash', color='cornsilk')	plt.plot(xdata, ydata, linestyle='dash', color='cornsilk')
code: 破線の色をクリムゾンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='crimson')	plt.plot(xdata, ydata, linestyle='dash', color='crimson')
code: 破線の色をクリムゾン変える	plt.plot(xdata, ydata, linestyle='dash', color='crimson')	plt.plot(xdata, ydata, linestyle='dash', color='crimson')
code: リストxdataとイテラブルydataの破線を描画して、色をクリムゾンに変更する	plt.plot(xdata, ydata, linestyle='dash', color='crimson')	plt.plot(xdata, ydata, linestyle='dash', color='crimson')
code: データ列xdataとデータ列ydataの破線を描画して、その色をクリムゾンにする	plt.plot(xdata, ydata, linestyle='dash', color='crimson')	plt.plot(xdata, ydata, linestyle='dash', color='crimson')
code: 破線の色をシアン変える	plt.plot(xdata, ydata, linestyle='dash', color='cyan')	plt.plot(xdata, ydata, linestyle='dash', color='cyan')
code: 破線グラフの色をシアン変える	plt.plot(xdata, ydata, linestyle='dash', color='cyan')	plt.plot(xdata, ydata, linestyle='dash', color='cyan')
code: データ列xdataと数列ydataの破線グラフを描画してその色をシアンにセットする	plt.plot(xdata, ydata, linestyle='dash', color='cyan')	plt.plot(xdata, ydata, linestyle='dash', color='cyan')
code: 数列xdataとイテラブルydataの破線を描画して色をシアンにする	plt.plot(xdata, ydata, linestyle='dash', color='cyan')	plt.plot(xdata, ydata, linestyle='dash', color='cyan')
code: 破線の色をダークブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkblue')	plt.plot(xdata, ydata, linestyle='dash', color='darkblue')
code: 破線の色をダークブルーにする	plt.plot(xdata, ydata, linestyle='dash', color='darkblue')	plt.plot(xdata, ydata, linestyle='dash', color='darkblue')
code: 数列xdataとイテラブルydataの破線グラフを描画してその色をダークブルーにセットする	plt.plot(xdata, ydata, linestyle='dash', color='darkblue')	plt.plot(xdata, ydata, linestyle='dash', color='darkblue')
code: イテラブルxdataとイテラブルydataの破線グラフを描画して色をダークブルー変える	plt.plot(xdata, ydata, linestyle='dash', color='darkblue')	plt.plot(xdata, ydata, linestyle='dash', color='darkblue')
code: 破線の色をダークシアンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkcyan')	plt.plot(xdata, ydata, linestyle='dash', color='darkcyan')
code: 破線グラフの色をダークシアン変える	plt.plot(xdata, ydata, linestyle='dash', color='darkcyan')	plt.plot(xdata, ydata, linestyle='dash', color='darkcyan')
code: リストxdataとリストydataの破線グラフを描画して、その色をダークシアンに変更する	plt.plot(xdata, ydata, linestyle='dash', color='darkcyan')	plt.plot(xdata, ydata, linestyle='dash', color='darkcyan')
code: イテラブルxdataとイテラブルydataの破線を描画してその色をダークシアンにセットする	plt.plot(xdata, ydata, linestyle='dash', color='darkcyan')	plt.plot(xdata, ydata, linestyle='dash', color='darkcyan')
code: 破線グラフの色をダークゴールデンロッドとする	plt.plot(xdata, ydata, linestyle='dash', color='darkgoldenrod')	plt.plot(xdata, ydata, linestyle='dash', color='darkgoldenrod')
code: 破線グラフの色をダークゴールデンロッドに変更する	plt.plot(xdata, ydata, linestyle='dash', color='darkgoldenrod')	plt.plot(xdata, ydata, linestyle='dash', color='darkgoldenrod')
code: 数列xdataと数列ydataについて破線グラフを描画して、色をダークゴールデンロッドに変更する	plt.plot(xdata, ydata, linestyle='dash', color='darkgoldenrod')	plt.plot(xdata, ydata, linestyle='dash', color='darkgoldenrod')
code: 配列xdataと数列ydataについて破線グラフを描画して色をダークゴールデンロッドに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkgoldenrod')	plt.plot(xdata, ydata, linestyle='dash', color='darkgoldenrod')
code: 破線グラフの色をダークグレーにセットする	plt.plot(xdata, ydata, linestyle='dash', color='darkgray')	plt.plot(xdata, ydata, linestyle='dash', color='darkgray')
code: 破線グラフの色をダークグレーとする	plt.plot(xdata, ydata, linestyle='dash', color='darkgrey')	plt.plot(xdata, ydata, linestyle='dash', color='darkgray')
code: 数列xdataとデータ列ydataの破線を描画して色をダークグレーに変更する	plt.plot(xdata, ydata, linestyle='dash', color='darkgrey')	plt.plot(xdata, ydata, linestyle='dash', color='darkgray')
code: 数列xdataとイテラブルydataの破線グラフを描画して、色をダークグレー変える	plt.plot(xdata, ydata, linestyle='dash', color='darkgrey')	plt.plot(xdata, ydata, linestyle='dash', color='darkgray')
code: 破線の色をダークグリーンにセットする	plt.plot(xdata, ydata, linestyle='dash', color='darkgreen')	plt.plot(xdata, ydata, linestyle='dash', color='darkgreen')
code: 破線の色をダークグリーンに変更する	plt.plot(xdata, ydata, linestyle='dash', color='darkgreen')	plt.plot(xdata, ydata, linestyle='dash', color='darkgreen')
code: 数列xdataとデータ列ydataについて破線を描画してその色をダークグリーンに変更する	plt.plot(xdata, ydata, linestyle='dash', color='darkgreen')	plt.plot(xdata, ydata, linestyle='dash', color='darkgreen')
code: イテラブルxdataとデータ列ydataについて破線を描画して、色をダークグリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkgreen')	plt.plot(xdata, ydata, linestyle='dash', color='darkgreen')
code: 破線の色をダークグレーとする	plt.plot(xdata, ydata, linestyle='dash', color='darkgrey')	plt.plot(xdata, ydata, linestyle='dash', color='darkgrey')
code: 破線グラフの色をダークグレー変える	plt.plot(xdata, ydata, linestyle='dash', color='darkgray')	plt.plot(xdata, ydata, linestyle='dash', color='darkgrey')
code: 配列xdataとイテラブルydataについて破線グラフを描画して色をダークグレー変える	plt.plot(xdata, ydata, linestyle='dash', color='darkgray')	plt.plot(xdata, ydata, linestyle='dash', color='darkgrey')
code: リストxdataと配列ydataの破線グラフを描画して、色をダークグレー変える	plt.plot(xdata, ydata, linestyle='dash', color='darkgrey')	plt.plot(xdata, ydata, linestyle='dash', color='darkgrey')
code: 破線の色をダークカーキに指定する	plt.plot(xdata, ydata, linestyle='dash', color='darkkhaki')	plt.plot(xdata, ydata, linestyle='dash', color='darkkhaki')
code: 破線の色をダークカーキ変える	plt.plot(xdata, ydata, linestyle='dash', color='darkkhaki')	plt.plot(xdata, ydata, linestyle='dash', color='darkkhaki')
code: 数列xdataとイテラブルydataについて破線を描画して、色をダークカーキに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkkhaki')	plt.plot(xdata, ydata, linestyle='dash', color='darkkhaki')
code: データ列xdataとデータ列ydataの破線を描画して、その色をダークカーキにする	plt.plot(xdata, ydata, linestyle='dash', color='darkkhaki')	plt.plot(xdata, ydata, linestyle='dash', color='darkkhaki')
code: 破線の色をダークマゼンタに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkmagenta')	plt.plot(xdata, ydata, linestyle='dash', color='darkmagenta')
code: 破線の色をダークマゼンタに指定する	plt.plot(xdata, ydata, linestyle='dash', color='darkmagenta')	plt.plot(xdata, ydata, linestyle='dash', color='darkmagenta')
code: イテラブルxdataとデータ列ydataについて破線を描画してその色をダークマゼンタに変更する	plt.plot(xdata, ydata, linestyle='dash', color='darkmagenta')	plt.plot(xdata, ydata, linestyle='dash', color='darkmagenta')
code: イテラブルxdataとイテラブルydataの破線を描画して、その色をダークマゼンタ変える	plt.plot(xdata, ydata, linestyle='dash', color='darkmagenta')	plt.plot(xdata, ydata, linestyle='dash', color='darkmagenta')
code: 破線の色をダークオリーブグリーンに変更する	plt.plot(xdata, ydata, linestyle='dash', color='darkolivegreen')	plt.plot(xdata, ydata, linestyle='dash', color='darkolivegreen')
code: 破線の色をダークオリーブグリーンにセットする	plt.plot(xdata, ydata, linestyle='dash', color='darkolivegreen')	plt.plot(xdata, ydata, linestyle='dash', color='darkolivegreen')
code: データ列xdataとイテラブルydataについて破線グラフを描画して色をダークオリーブグリーンに変更する	plt.plot(xdata, ydata, linestyle='dash', color='darkolivegreen')	plt.plot(xdata, ydata, linestyle='dash', color='darkolivegreen')
code: 数列xdataとデータ列ydataの破線を描画して色をダークオリーブグリーンに変更する	plt.plot(xdata, ydata, linestyle='dash', color='darkolivegreen')	plt.plot(xdata, ydata, linestyle='dash', color='darkolivegreen')
code: 破線グラフの色をダークオレンジにセットする	plt.plot(xdata, ydata, linestyle='dash', color='darkorange')	plt.plot(xdata, ydata, linestyle='dash', color='darkorange')
code: 破線グラフの色をダークオレンジに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkorange')	plt.plot(xdata, ydata, linestyle='dash', color='darkorange')
code: リストxdataとリストydataの破線グラフを描画してその色をダークオレンジにセットする	plt.plot(xdata, ydata, linestyle='dash', color='darkorange')	plt.plot(xdata, ydata, linestyle='dash', color='darkorange')
code: リストxdataと配列ydataの破線グラフを描画して、その色をダークオレンジ変える	plt.plot(xdata, ydata, linestyle='dash', color='darkorange')	plt.plot(xdata, ydata, linestyle='dash', color='darkorange')
code: 破線グラフの色をダークオーキッドに指定する	plt.plot(xdata, ydata, linestyle='dash', color='darkorchid')	plt.plot(xdata, ydata, linestyle='dash', color='darkorchid')
code: 破線グラフの色をダークオーキッドに変更する	plt.plot(xdata, ydata, linestyle='dash', color='darkorchid')	plt.plot(xdata, ydata, linestyle='dash', color='darkorchid')
code: 数列xdataとデータ列ydataの破線グラフを描画して、色をダークオーキッドにセットする	plt.plot(xdata, ydata, linestyle='dash', color='darkorchid')	plt.plot(xdata, ydata, linestyle='dash', color='darkorchid')
code: データ列xdataとイテラブルydataについて破線を描画して色をダークオーキッド変える	plt.plot(xdata, ydata, linestyle='dash', color='darkorchid')	plt.plot(xdata, ydata, linestyle='dash', color='darkorchid')
code: 破線の色をダークレッドに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkred')	plt.plot(xdata, ydata, linestyle='dash', color='darkred')
code: 破線の色をダークレッド変える	plt.plot(xdata, ydata, linestyle='dash', color='darkred')	plt.plot(xdata, ydata, linestyle='dash', color='darkred')
code: リストxdataとイテラブルydataの破線を描画して色をダークレッドに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkred')	plt.plot(xdata, ydata, linestyle='dash', color='darkred')
code: リストxdataと数列ydataの破線グラフを描画して、色をダークレッドに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkred')	plt.plot(xdata, ydata, linestyle='dash', color='darkred')
code: 破線の色をダークサーモン変える	plt.plot(xdata, ydata, linestyle='dash', color='darksalmon')	plt.plot(xdata, ydata, linestyle='dash', color='darksalmon')
code: 破線グラフの色をダークサーモンにする	plt.plot(xdata, ydata, linestyle='dash', color='darksalmon')	plt.plot(xdata, ydata, linestyle='dash', color='darksalmon')
code: リストxdataとイテラブルydataについて破線グラフを描画して色をダークサーモンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darksalmon')	plt.plot(xdata, ydata, linestyle='dash', color='darksalmon')
code: リストxdataと数列ydataについて破線グラフを描画して、その色をダークサーモンに変更する	plt.plot(xdata, ydata, linestyle='dash', color='darksalmon')	plt.plot(xdata, ydata, linestyle='dash', color='darksalmon')
code: 破線の色をダークシアグリーン変える	plt.plot(xdata, ydata, linestyle='dash', color='darkseagreen')	plt.plot(xdata, ydata, linestyle='dash', color='darkseagreen')
code: 破線の色をダークシアグリーンに変更する	plt.plot(xdata, ydata, linestyle='dash', color='darkseagreen')	plt.plot(xdata, ydata, linestyle='dash', color='darkseagreen')
code: 数列xdataと配列ydataについて破線グラフを描画して、その色をダークシアグリーン変える	plt.plot(xdata, ydata, linestyle='dash', color='darkseagreen')	plt.plot(xdata, ydata, linestyle='dash', color='darkseagreen')
code: リストxdataとイテラブルydataについて破線グラフを描画してその色をダークシアグリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkseagreen')	plt.plot(xdata, ydata, linestyle='dash', color='darkseagreen')
code: 破線グラフの色をダークスレートブルー変える	plt.plot(xdata, ydata, linestyle='dash', color='darkslateblue')	plt.plot(xdata, ydata, linestyle='dash', color='darkslateblue')
code: 破線の色をダークスレートブルー変える	plt.plot(xdata, ydata, linestyle='dash', color='darkslateblue')	plt.plot(xdata, ydata, linestyle='dash', color='darkslateblue')
code: データ列xdataとデータ列ydataの破線グラフを描画して、その色をダークスレートブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkslateblue')	plt.plot(xdata, ydata, linestyle='dash', color='darkslateblue')
code: 数列xdataとイテラブルydataについて破線グラフを描画して色をダークスレートブルーに変更する	plt.plot(xdata, ydata, linestyle='dash', color='darkslateblue')	plt.plot(xdata, ydata, linestyle='dash', color='darkslateblue')
code: 破線の色をダークスラテグレーに指定する	plt.plot(xdata, ydata, linestyle='dash', color='darkslategray')	plt.plot(xdata, ydata, linestyle='dash', color='darkslategray')
code: 破線グラフの色をダークスラテグレーにセットする	plt.plot(xdata, ydata, linestyle='dash', color='darkslategray')	plt.plot(xdata, ydata, linestyle='dash', color='darkslategray')
code: データ列xdataとイテラブルydataの破線を描画して、色をダークスラテグレー変える	plt.plot(xdata, ydata, linestyle='dash', color='darkslategray')	plt.plot(xdata, ydata, linestyle='dash', color='darkslategray')
code: イテラブルxdataと数列ydataの破線グラフを描画して色をダークスラテグレーに指定する	plt.plot(xdata, ydata, linestyle='dash', color='darkslategray')	plt.plot(xdata, ydata, linestyle='dash', color='darkslategray')
code: 破線グラフの色をダーク・スラテグレーとする	plt.plot(xdata, ydata, linestyle='dash', color='darkslategrey')	plt.plot(xdata, ydata, linestyle='dash', color='darkslategrey')
code: 破線グラフの色をダーク・スラテグレーに変更する	plt.plot(xdata, ydata, linestyle='dash', color='darkslategrey')	plt.plot(xdata, ydata, linestyle='dash', color='darkslategrey')
code: 数列xdataとリストydataの破線を描画してその色をダーク・スラテグレー変える	plt.plot(xdata, ydata, linestyle='dash', color='darkslategrey')	plt.plot(xdata, ydata, linestyle='dash', color='darkslategrey')
code: イテラブルxdataと数列ydataについて破線グラフを描画して、その色をダーク・スラテグレーにセットする	plt.plot(xdata, ydata, linestyle='dash', color='darkslategrey')	plt.plot(xdata, ydata, linestyle='dash', color='darkslategrey')
code: 破線グラフの色をダークターコイズ変える	plt.plot(xdata, ydata, linestyle='dash', color='darkturquoise')	plt.plot(xdata, ydata, linestyle='dash', color='darkturquoise')
code: 破線グラフの色をダークターコイズに変更する	plt.plot(xdata, ydata, linestyle='dash', color='darkturquoise')	plt.plot(xdata, ydata, linestyle='dash', color='darkturquoise')
code: 数列xdataとデータ列ydataの破線グラフを描画して色をダークターコイズに変更する	plt.plot(xdata, ydata, linestyle='dash', color='darkturquoise')	plt.plot(xdata, ydata, linestyle='dash', color='darkturquoise')
code: イテラブルxdataとリストydataの破線を描画してその色をダークターコイズにセットする	plt.plot(xdata, ydata, linestyle='dash', color='darkturquoise')	plt.plot(xdata, ydata, linestyle='dash', color='darkturquoise')
code: 破線グラフの色をダークバイオレットに指定する	plt.plot(xdata, ydata, linestyle='dash', color='darkviolet')	plt.plot(xdata, ydata, linestyle='dash', color='darkviolet')
code: 破線の色をダークバイオレットとする	plt.plot(xdata, ydata, linestyle='dash', color='darkviolet')	plt.plot(xdata, ydata, linestyle='dash', color='darkviolet')
code: 数列xdataとデータ列ydataについて破線を描画して色をダークバイオレットに設定する	plt.plot(xdata, ydata, linestyle='dash', color='darkviolet')	plt.plot(xdata, ydata, linestyle='dash', color='darkviolet')
code: 配列xdataと配列ydataの破線グラフを描画して色をダークバイオレット変える	plt.plot(xdata, ydata, linestyle='dash', color='darkviolet')	plt.plot(xdata, ydata, linestyle='dash', color='darkviolet')
code: 破線の色をデピンクに変更する	plt.plot(xdata, ydata, linestyle='dash', color='deeppink')	plt.plot(xdata, ydata, linestyle='dash', color='deeppink')
code: 破線の色をデピンクに設定する	plt.plot(xdata, ydata, linestyle='dash', color='deeppink')	plt.plot(xdata, ydata, linestyle='dash', color='deeppink')
code: 数列xdataと配列ydataの破線グラフを描画してその色をデピンク変える	plt.plot(xdata, ydata, linestyle='dash', color='deeppink')	plt.plot(xdata, ydata, linestyle='dash', color='deeppink')
code: データ列xdataと配列ydataの破線を描画して、色をデピンクとする	plt.plot(xdata, ydata, linestyle='dash', color='deeppink')	plt.plot(xdata, ydata, linestyle='dash', color='deeppink')
code: 破線の色をディープスカイブルーに変更する	plt.plot(xdata, ydata, linestyle='dash', color='deepskyblue')	plt.plot(xdata, ydata, linestyle='dash', color='deepskyblue')
code: 破線の色をディープスカイブルーに変更する	plt.plot(xdata, ydata, linestyle='dash', color='deepskyblue')	plt.plot(xdata, ydata, linestyle='dash', color='deepskyblue')
code: 配列xdataと配列ydataについて破線を描画して色をディープスカイブルーに指定する	plt.plot(xdata, ydata, linestyle='dash', color='deepskyblue')	plt.plot(xdata, ydata, linestyle='dash', color='deepskyblue')
code: 数列xdataとイテラブルydataについて破線グラフを描画してその色をディープスカイブルーに変更する	plt.plot(xdata, ydata, linestyle='dash', color='deepskyblue')	plt.plot(xdata, ydata, linestyle='dash', color='deepskyblue')
code: 破線グラフの色をディムグレーとする	plt.plot(xdata, ydata, linestyle='dash', color='dimgray')	plt.plot(xdata, ydata, linestyle='dash', color='dimgray')
code: 破線グラフの色をディムグレー変える	plt.plot(xdata, ydata, linestyle='dash', color='dimgray')	plt.plot(xdata, ydata, linestyle='dash', color='dimgray')
code: イテラブルxdataと配列ydataの破線グラフを描画して色をディムグレーにセットする	plt.plot(xdata, ydata, linestyle='dash', color='dimgray')	plt.plot(xdata, ydata, linestyle='dash', color='dimgray')
code: イテラブルxdataとリストydataの破線グラフを描画してその色をディムグレーに指定する	plt.plot(xdata, ydata, linestyle='dash', color='dimgray')	plt.plot(xdata, ydata, linestyle='dash', color='dimgray')
code: 破線グラフの色をディムグレーにセットする	plt.plot(xdata, ydata, linestyle='dash', color='dimgray')	plt.plot(xdata, ydata, linestyle='dash', color='dimgrey')
code: 破線の色をディムグレーにする	plt.plot(xdata, ydata, linestyle='dash', color='dimgrey')	plt.plot(xdata, ydata, linestyle='dash', color='dimgrey')
code: 数列xdataとデータ列ydataの破線グラフを描画して、その色をディムグレー変える	plt.plot(xdata, ydata, linestyle='dash', color='dimgray')	plt.plot(xdata, ydata, linestyle='dash', color='dimgrey')
code: 数列xdataとイテラブルydataについて破線グラフを描画して、色をディムグレーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='dimgrey')	plt.plot(xdata, ydata, linestyle='dash', color='dimgrey')
code: 破線の色をドジャーブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='dodgerblue')	plt.plot(xdata, ydata, linestyle='dash', color='dodgerblue')
code: 破線グラフの色をドジャーブルーに変更する	plt.plot(xdata, ydata, linestyle='dash', color='dodgerblue')	plt.plot(xdata, ydata, linestyle='dash', color='dodgerblue')
code: リストxdataとデータ列ydataの破線を描画してその色をドジャーブルーにする	plt.plot(xdata, ydata, linestyle='dash', color='dodgerblue')	plt.plot(xdata, ydata, linestyle='dash', color='dodgerblue')
code: イテラブルxdataとデータ列ydataについて破線を描画して、色をドジャーブルーに指定する	plt.plot(xdata, ydata, linestyle='dash', color='dodgerblue')	plt.plot(xdata, ydata, linestyle='dash', color='dodgerblue')
code: 破線グラフの色を耐火レンガに変更する	plt.plot(xdata, ydata, linestyle='dash', color='firebrick')	plt.plot(xdata, ydata, linestyle='dash', color='firebrick')
code: 破線の色を耐火レンガとする	plt.plot(xdata, ydata, linestyle='dash', color='firebrick')	plt.plot(xdata, ydata, linestyle='dash', color='firebrick')
code: 数列xdataと配列ydataについて破線を描画して、色を耐火レンガ変える	plt.plot(xdata, ydata, linestyle='dash', color='firebrick')	plt.plot(xdata, ydata, linestyle='dash', color='firebrick')
code: 数列xdataとリストydataの破線グラフを描画して、その色を耐火レンガに指定する	plt.plot(xdata, ydata, linestyle='dash', color='firebrick')	plt.plot(xdata, ydata, linestyle='dash', color='firebrick')
code: 破線グラフの色をフローラルホワイト変える	plt.plot(xdata, ydata, linestyle='dash', color='floralwhite')	plt.plot(xdata, ydata, linestyle='dash', color='floralwhite')
code: 破線グラフの色をフローラルホワイトとする	plt.plot(xdata, ydata, linestyle='dash', color='floralwhite')	plt.plot(xdata, ydata, linestyle='dash', color='floralwhite')
code: リストxdataと数列ydataの破線グラフを描画して、その色をフローラルホワイト変える	plt.plot(xdata, ydata, linestyle='dash', color='floralwhite')	plt.plot(xdata, ydata, linestyle='dash', color='floralwhite')
code: 配列xdataと数列ydataの破線グラフを描画して色をフローラルホワイト変える	plt.plot(xdata, ydata, linestyle='dash', color='floralwhite')	plt.plot(xdata, ydata, linestyle='dash', color='floralwhite')
code: 破線の色をフォレストグリーン変える	plt.plot(xdata, ydata, linestyle='dash', color='forestgreen')	plt.plot(xdata, ydata, linestyle='dash', color='forestgreen')
code: 破線グラフの色をフォレストグリーン変える	plt.plot(xdata, ydata, linestyle='dash', color='forestgreen')	plt.plot(xdata, ydata, linestyle='dash', color='forestgreen')
code: 配列xdataと数列ydataについて破線を描画してその色をフォレストグリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='forestgreen')	plt.plot(xdata, ydata, linestyle='dash', color='forestgreen')
code: イテラブルxdataと数列ydataの破線を描画して、色をフォレストグリーンに指定する	plt.plot(xdata, ydata, linestyle='dash', color='forestgreen')	plt.plot(xdata, ydata, linestyle='dash', color='forestgreen')
code: 破線グラフの色をフクシアにセットする	plt.plot(xdata, ydata, linestyle='dash', color='fuchsia')	plt.plot(xdata, ydata, linestyle='dash', color='fuchsia')
code: 破線グラフの色をフクシアとする	plt.plot(xdata, ydata, linestyle='dash', color='fuchsia')	plt.plot(xdata, ydata, linestyle='dash', color='fuchsia')
code: リストxdataと配列ydataについて破線を描画してその色をフクシア変える	plt.plot(xdata, ydata, linestyle='dash', color='fuchsia')	plt.plot(xdata, ydata, linestyle='dash', color='fuchsia')
code: 数列xdataと数列ydataについて破線を描画して、その色をフクシアにする	plt.plot(xdata, ydata, linestyle='dash', color='fuchsia')	plt.plot(xdata, ydata, linestyle='dash', color='fuchsia')
code: 破線グラフの色をゲインズボロとする	plt.plot(xdata, ydata, linestyle='dash', color='gainsboro')	plt.plot(xdata, ydata, linestyle='dash', color='gainsboro')
code: 破線の色をゲインズボロにセットする	plt.plot(xdata, ydata, linestyle='dash', color='gainsboro')	plt.plot(xdata, ydata, linestyle='dash', color='gainsboro')
code: イテラブルxdataとデータ列ydataの破線を描画して、その色をゲインズボロに設定する	plt.plot(xdata, ydata, linestyle='dash', color='gainsboro')	plt.plot(xdata, ydata, linestyle='dash', color='gainsboro')
code: リストxdataと配列ydataの破線グラフを描画して、色をゲインズボロに指定する	plt.plot(xdata, ydata, linestyle='dash', color='gainsboro')	plt.plot(xdata, ydata, linestyle='dash', color='gainsboro')
code: 破線グラフの色をゴーストホワイトに設定する	plt.plot(xdata, ydata, linestyle='dash', color='ghostwhite')	plt.plot(xdata, ydata, linestyle='dash', color='ghostwhite')
code: 破線グラフの色をゴーストホワイト変える	plt.plot(xdata, ydata, linestyle='dash', color='ghostwhite')	plt.plot(xdata, ydata, linestyle='dash', color='ghostwhite')
code: 数列xdataと数列ydataについて破線を描画してその色をゴーストホワイトとする	plt.plot(xdata, ydata, linestyle='dash', color='ghostwhite')	plt.plot(xdata, ydata, linestyle='dash', color='ghostwhite')
code: 配列xdataとイテラブルydataの破線グラフを描画して、色をゴーストホワイトに変更する	plt.plot(xdata, ydata, linestyle='dash', color='ghostwhite')	plt.plot(xdata, ydata, linestyle='dash', color='ghostwhite')
code: 破線グラフの色をゴールドにセットする	plt.plot(xdata, ydata, linestyle='dash', color='gold')	plt.plot(xdata, ydata, linestyle='dash', color='gold')
code: 破線の色をゴールドにする	plt.plot(xdata, ydata, linestyle='dash', color='gold')	plt.plot(xdata, ydata, linestyle='dash', color='gold')
code: イテラブルxdataとイテラブルydataについて破線を描画してその色をゴールドに変更する	plt.plot(xdata, ydata, linestyle='dash', color='gold')	plt.plot(xdata, ydata, linestyle='dash', color='gold')
code: 配列xdataとデータ列ydataについて破線グラフを描画して、色をゴールドにする	plt.plot(xdata, ydata, linestyle='dash', color='gold')	plt.plot(xdata, ydata, linestyle='dash', color='gold')
code: 破線グラフの色をゴールデンロッド変える	plt.plot(xdata, ydata, linestyle='dash', color='goldenrod')	plt.plot(xdata, ydata, linestyle='dash', color='goldenrod')
code: 破線グラフの色をゴールデンロッド変える	plt.plot(xdata, ydata, linestyle='dash', color='goldenrod')	plt.plot(xdata, ydata, linestyle='dash', color='goldenrod')
code: 数列xdataとリストydataについて破線グラフを描画してその色をゴールデンロッドとする	plt.plot(xdata, ydata, linestyle='dash', color='goldenrod')	plt.plot(xdata, ydata, linestyle='dash', color='goldenrod')
code: 配列xdataと配列ydataについて破線を描画して色をゴールデンロッドに変更する	plt.plot(xdata, ydata, linestyle='dash', color='goldenrod')	plt.plot(xdata, ydata, linestyle='dash', color='goldenrod')
code: 破線の色をグレーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='gray')	plt.plot(xdata, ydata, linestyle='dash', color='gray')
code: 破線の色をグレーにする	plt.plot(xdata, ydata, linestyle='dash', color='gray')	plt.plot(xdata, ydata, linestyle='dash', color='gray')
code: データ列xdataとイテラブルydataの破線グラフを描画してその色をグレーにセットする	plt.plot(xdata, ydata, linestyle='dash', color='gray')	plt.plot(xdata, ydata, linestyle='dash', color='gray')
code: イテラブルxdataと数列ydataの破線グラフを描画してその色をグレーに変更する	plt.plot(xdata, ydata, linestyle='dash', color='gray')	plt.plot(xdata, ydata, linestyle='dash', color='gray')
code: 破線グラフの色をグリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='green')	plt.plot(xdata, ydata, linestyle='dash', color='green')
code: 破線の色をグリーンにする	plt.plot(xdata, ydata, linestyle='dash', color='green')	plt.plot(xdata, ydata, linestyle='dash', color='green')
code: 配列xdataと配列ydataの破線を描画して、色をグリーン変える	plt.plot(xdata, ydata, linestyle='dash', color='green')	plt.plot(xdata, ydata, linestyle='dash', color='green')
code: リストxdataとイテラブルydataの破線を描画して色をグリーン変える	plt.plot(xdata, ydata, linestyle='dash', color='green')	plt.plot(xdata, ydata, linestyle='dash', color='green')
code: 破線グラフの色をグリーンイエローに指定する	plt.plot(xdata, ydata, linestyle='dash', color='yellowgreen')	plt.plot(xdata, ydata, linestyle='dash', color='greenyellow')
code: 破線の色をグリーンイエローに変更する	plt.plot(xdata, ydata, linestyle='dash', color='yellowgreen')	plt.plot(xdata, ydata, linestyle='dash', color='greenyellow')
code: 配列xdataと配列ydataの破線グラフを描画してその色をグリーンイエローにする	plt.plot(xdata, ydata, linestyle='dash', color='yellowgreen')	plt.plot(xdata, ydata, linestyle='dash', color='greenyellow')
code: リストxdataとイテラブルydataについて破線グラフを描画して、その色をグリーンイエローに設定する	plt.plot(xdata, ydata, linestyle='dash', color='greenyellow')	plt.plot(xdata, ydata, linestyle='dash', color='greenyellow')
code: 破線の色をグレーに指定する	plt.plot(xdata, ydata, linestyle='dash', color='gray')	plt.plot(xdata, ydata, linestyle='dash', color='grey')
code: 破線の色をグレーに変更する	plt.plot(xdata, ydata, linestyle='dash', color='gray')	plt.plot(xdata, ydata, linestyle='dash', color='grey')
code: 配列xdataとリストydataの破線グラフを描画して、色をグレーに変更する	plt.plot(xdata, ydata, linestyle='dash', color='grey')	plt.plot(xdata, ydata, linestyle='dash', color='grey')
code: 数列xdataとリストydataの破線グラフを描画して、その色をグレーにする	plt.plot(xdata, ydata, linestyle='dash', color='gray')	plt.plot(xdata, ydata, linestyle='dash', color='grey')
code: 破線の色をハニーデューにする	plt.plot(xdata, ydata, linestyle='dash', color='honeydew')	plt.plot(xdata, ydata, linestyle='dash', color='honeydew')
code: 破線グラフの色をハニーデューとする	plt.plot(xdata, ydata, linestyle='dash', color='honeydew')	plt.plot(xdata, ydata, linestyle='dash', color='honeydew')
code: データ列xdataとイテラブルydataについて破線を描画して、色をハニーデューとする	plt.plot(xdata, ydata, linestyle='dash', color='honeydew')	plt.plot(xdata, ydata, linestyle='dash', color='honeydew')
code: 配列xdataとデータ列ydataの破線グラフを描画してその色をハニーデューに設定する	plt.plot(xdata, ydata, linestyle='dash', color='honeydew')	plt.plot(xdata, ydata, linestyle='dash', color='honeydew')
code: 破線グラフの色をホットピンクに設定する	plt.plot(xdata, ydata, linestyle='dash', color='hotpink')	plt.plot(xdata, ydata, linestyle='dash', color='hotpink')
code: 破線グラフの色をホットピンクにする	plt.plot(xdata, ydata, linestyle='dash', color='hotpink')	plt.plot(xdata, ydata, linestyle='dash', color='hotpink')
code: 数列xdataとデータ列ydataについて破線グラフを描画してその色をホットピンクに設定する	plt.plot(xdata, ydata, linestyle='dash', color='hotpink')	plt.plot(xdata, ydata, linestyle='dash', color='hotpink')
code: リストxdataとイテラブルydataについて破線グラフを描画して、色をホットピンク変える	plt.plot(xdata, ydata, linestyle='dash', color='hotpink')	plt.plot(xdata, ydata, linestyle='dash', color='hotpink')
code: 破線グラフの色をインディアンレッドとする	plt.plot(xdata, ydata, linestyle='dash', color='indianred')	plt.plot(xdata, ydata, linestyle='dash', color='indianred')
code: 破線の色をインディアンレッドに指定する	plt.plot(xdata, ydata, linestyle='dash', color='indianred')	plt.plot(xdata, ydata, linestyle='dash', color='indianred')
code: データ列xdataとデータ列ydataの破線グラフを描画してその色をインディアンレッドに指定する	plt.plot(xdata, ydata, linestyle='dash', color='indianred')	plt.plot(xdata, ydata, linestyle='dash', color='indianred')
code: データ列xdataと数列ydataの破線グラフを描画して色をインディアンレッドに変更する	plt.plot(xdata, ydata, linestyle='dash', color='indianred')	plt.plot(xdata, ydata, linestyle='dash', color='indianred')
code: 破線グラフの色をインディゴにセットする	plt.plot(xdata, ydata, linestyle='dash', color='indigo')	plt.plot(xdata, ydata, linestyle='dash', color='indigo')
code: 破線の色をインディゴにセットする	plt.plot(xdata, ydata, linestyle='dash', color='indigo')	plt.plot(xdata, ydata, linestyle='dash', color='indigo')
code: 配列xdataとデータ列ydataの破線グラフを描画してその色をインディゴに設定する	plt.plot(xdata, ydata, linestyle='dash', color='indigo')	plt.plot(xdata, ydata, linestyle='dash', color='indigo')
code: イテラブルxdataとデータ列ydataの破線を描画してその色をインディゴ変える	plt.plot(xdata, ydata, linestyle='dash', color='indigo')	plt.plot(xdata, ydata, linestyle='dash', color='indigo')
code: 破線グラフの色をアイボリーにセットする	plt.plot(xdata, ydata, linestyle='dash', color='ivory')	plt.plot(xdata, ydata, linestyle='dash', color='ivory')
code: 破線の色をアイボリーに変更する	plt.plot(xdata, ydata, linestyle='dash', color='ivory')	plt.plot(xdata, ydata, linestyle='dash', color='ivory')
code: 配列xdataと数列ydataの破線グラフを描画してその色をアイボリー変える	plt.plot(xdata, ydata, linestyle='dash', color='ivory')	plt.plot(xdata, ydata, linestyle='dash', color='ivory')
code: データ列xdataと配列ydataについて破線を描画して色をアイボリーに変更する	plt.plot(xdata, ydata, linestyle='dash', color='ivory')	plt.plot(xdata, ydata, linestyle='dash', color='ivory')
code: 破線グラフの色をカーキにする	plt.plot(xdata, ydata, linestyle='dash', color='khaki')	plt.plot(xdata, ydata, linestyle='dash', color='khaki')
code: 破線の色をカーキに指定する	plt.plot(xdata, ydata, linestyle='dash', color='khaki')	plt.plot(xdata, ydata, linestyle='dash', color='khaki')
code: データ列xdataとデータ列ydataについて破線グラフを描画して、色をカーキにセットする	plt.plot(xdata, ydata, linestyle='dash', color='khaki')	plt.plot(xdata, ydata, linestyle='dash', color='khaki')
code: データ列xdataとイテラブルydataについて破線を描画して、色をカーキに指定する	plt.plot(xdata, ydata, linestyle='dash', color='khaki')	plt.plot(xdata, ydata, linestyle='dash', color='khaki')
code: 破線グラフの色をラベンダーに変更する	plt.plot(xdata, ydata, linestyle='dash', color='lavender')	plt.plot(xdata, ydata, linestyle='dash', color='lavender')
code: 破線グラフの色をラベンダーとする	plt.plot(xdata, ydata, linestyle='dash', color='lavender')	plt.plot(xdata, ydata, linestyle='dash', color='lavender')
code: リストxdataとイテラブルydataの破線グラフを描画して、色をラベンダー変える	plt.plot(xdata, ydata, linestyle='dash', color='lavender')	plt.plot(xdata, ydata, linestyle='dash', color='lavender')
code: 配列xdataとイテラブルydataの破線グラフを描画して、色をラベンダー変える	plt.plot(xdata, ydata, linestyle='dash', color='lavender')	plt.plot(xdata, ydata, linestyle='dash', color='lavender')
code: 破線グラフの色をラベンダーブラッシュに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lavenderblush')	plt.plot(xdata, ydata, linestyle='dash', color='lavenderblush')
code: 破線グラフの色をラベンダーブラッシュに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lavenderblush')	plt.plot(xdata, ydata, linestyle='dash', color='lavenderblush')
code: 数列xdataと配列ydataの破線を描画して、色をラベンダーブラッシュにセットする	plt.plot(xdata, ydata, linestyle='dash', color='lavenderblush')	plt.plot(xdata, ydata, linestyle='dash', color='lavenderblush')
code: リストxdataと配列ydataの破線を描画して、その色をラベンダーブラッシュにする	plt.plot(xdata, ydata, linestyle='dash', color='lavenderblush')	plt.plot(xdata, ydata, linestyle='dash', color='lavenderblush')
code: 破線グラフの色をローングリーンに変更する	plt.plot(xdata, ydata, linestyle='dash', color='lawngreen')	plt.plot(xdata, ydata, linestyle='dash', color='lawngreen')
code: 破線グラフの色をローングリーンにする	plt.plot(xdata, ydata, linestyle='dash', color='lawngreen')	plt.plot(xdata, ydata, linestyle='dash', color='lawngreen')
code: 配列xdataと数列ydataの破線グラフを描画して、色をローングリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lawngreen')	plt.plot(xdata, ydata, linestyle='dash', color='lawngreen')
code: イテラブルxdataと数列ydataの破線を描画してその色をローングリーンに変更する	plt.plot(xdata, ydata, linestyle='dash', color='lawngreen')	plt.plot(xdata, ydata, linestyle='dash', color='lawngreen')
code: 破線の色をレモンシフォンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lemonchiffon')	plt.plot(xdata, ydata, linestyle='dash', color='lemonchiffon')
code: 破線の色をレモンシフォンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lemonchiffon')	plt.plot(xdata, ydata, linestyle='dash', color='lemonchiffon')
code: イテラブルxdataと配列ydataについて破線グラフを描画してその色をレモンシフォンとする	plt.plot(xdata, ydata, linestyle='dash', color='lemonchiffon')	plt.plot(xdata, ydata, linestyle='dash', color='lemonchiffon')
code: イテラブルxdataと配列ydataについて破線を描画して色をレモンシフォン変える	plt.plot(xdata, ydata, linestyle='dash', color='lemonchiffon')	plt.plot(xdata, ydata, linestyle='dash', color='lemonchiffon')
code: 破線の色をライトブルーにする	plt.plot(xdata, ydata, linestyle='dash', color='lightblue')	plt.plot(xdata, ydata, linestyle='dash', color='lightblue')
code: 破線の色をライトブルーにする	plt.plot(xdata, ydata, linestyle='dash', color='lightblue')	plt.plot(xdata, ydata, linestyle='dash', color='lightblue')
code: イテラブルxdataと数列ydataについて破線を描画して、色をライトブルーに変更する	plt.plot(xdata, ydata, linestyle='dash', color='lightblue')	plt.plot(xdata, ydata, linestyle='dash', color='lightblue')
code: データ列xdataとデータ列ydataについて破線を描画してその色をライトブルーに指定する	plt.plot(xdata, ydata, linestyle='dash', color='lightblue')	plt.plot(xdata, ydata, linestyle='dash', color='lightblue')
code: 破線グラフの色をライトコーラルに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightcoral')	plt.plot(xdata, ydata, linestyle='dash', color='lightcoral')
code: 破線の色をライトコーラルに変更する	plt.plot(xdata, ydata, linestyle='dash', color='lightcoral')	plt.plot(xdata, ydata, linestyle='dash', color='lightcoral')
code: イテラブルxdataとイテラブルydataについて破線グラフを描画してその色をライトコーラルに変更する	plt.plot(xdata, ydata, linestyle='dash', color='lightcoral')	plt.plot(xdata, ydata, linestyle='dash', color='lightcoral')
code: 配列xdataとイテラブルydataの破線を描画して色をライトコーラルに変更する	plt.plot(xdata, ydata, linestyle='dash', color='lightcoral')	plt.plot(xdata, ydata, linestyle='dash', color='lightcoral')
code: 破線の色をライトシアンとする	plt.plot(xdata, ydata, linestyle='dash', color='lightcyan')	plt.plot(xdata, ydata, linestyle='dash', color='lightcyan')
code: 破線の色をライトシアンにセットする	plt.plot(xdata, ydata, linestyle='dash', color='lightcyan')	plt.plot(xdata, ydata, linestyle='dash', color='lightcyan')
code: 配列xdataとリストydataの破線を描画して、その色をライトシアン変える	plt.plot(xdata, ydata, linestyle='dash', color='lightcyan')	plt.plot(xdata, ydata, linestyle='dash', color='lightcyan')
code: 数列xdataとイテラブルydataについて破線グラフを描画して色をライトシアンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightcyan')	plt.plot(xdata, ydata, linestyle='dash', color='lightcyan')
code: 破線の色をライトゴールドロディイエローに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightgoldenrodyellow')	plt.plot(xdata, ydata, linestyle='dash', color='lightgoldenrodyellow')
code: 破線グラフの色をライトゴールドロディイエローとする	plt.plot(xdata, ydata, linestyle='dash', color='lightgoldenrodyellow')	plt.plot(xdata, ydata, linestyle='dash', color='lightgoldenrodyellow')
code: 数列xdataとデータ列ydataについて破線グラフを描画してその色をライトゴールドロディイエロー変える	plt.plot(xdata, ydata, linestyle='dash', color='lightgoldenrodyellow')	plt.plot(xdata, ydata, linestyle='dash', color='lightgoldenrodyellow')
code: リストxdataと配列ydataの破線グラフを描画して、その色をライトゴールドロディイエローにセットする	plt.plot(xdata, ydata, linestyle='dash', color='lightgoldenrodyellow')	plt.plot(xdata, ydata, linestyle='dash', color='lightgoldenrodyellow')
code: 破線グラフの色をライトグレーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightgray')	plt.plot(xdata, ydata, linestyle='dash', color='lightgray')
code: 破線グラフの色をライトグレー変える	plt.plot(xdata, ydata, linestyle='dash', color='lightgrey')	plt.plot(xdata, ydata, linestyle='dash', color='lightgray')
code: 配列xdataと数列ydataについて破線グラフを描画してその色をライトグレー変える	plt.plot(xdata, ydata, linestyle='dash', color='lightgrey')	plt.plot(xdata, ydata, linestyle='dash', color='lightgray')
code: 数列xdataと配列ydataの破線グラフを描画してその色をライトグレーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightgrey')	plt.plot(xdata, ydata, linestyle='dash', color='lightgray')
code: 破線グラフの色をライトグリーン変える	plt.plot(xdata, ydata, linestyle='dash', color='lightgreen')	plt.plot(xdata, ydata, linestyle='dash', color='lightgreen')
code: 破線の色をライトグリーンとする	plt.plot(xdata, ydata, linestyle='dash', color='lightgreen')	plt.plot(xdata, ydata, linestyle='dash', color='lightgreen')
code: 配列xdataと配列ydataの破線を描画してその色をライトグリーンに変更する	plt.plot(xdata, ydata, linestyle='dash', color='lightgreen')	plt.plot(xdata, ydata, linestyle='dash', color='lightgreen')
code: イテラブルxdataと配列ydataの破線を描画して、色をライトグリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightgreen')	plt.plot(xdata, ydata, linestyle='dash', color='lightgreen')
code: 破線の色をライトグレーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightgray')	plt.plot(xdata, ydata, linestyle='dash', color='lightgrey')
code: 破線の色をライトグレーにする	plt.plot(xdata, ydata, linestyle='dash', color='lightgray')	plt.plot(xdata, ydata, linestyle='dash', color='lightgrey')
code: 数列xdataとデータ列ydataの破線を描画して色をライトグレーにする	plt.plot(xdata, ydata, linestyle='dash', color='lightgrey')	plt.plot(xdata, ydata, linestyle='dash', color='lightgrey')
code: イテラブルxdataとデータ列ydataについて破線を描画して、色をライトグレーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightgray')	plt.plot(xdata, ydata, linestyle='dash', color='lightgrey')
code: 破線の色を淡いピンク色に設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightpink')	plt.plot(xdata, ydata, linestyle='dash', color='lightpink')
code: 破線グラフの色を淡いピンク色に設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightpink')	plt.plot(xdata, ydata, linestyle='dash', color='lightpink')
code: 数列xdataとデータ列ydataについて破線を描画してその色を淡いピンク色変える	plt.plot(xdata, ydata, linestyle='dash', color='lightpink')	plt.plot(xdata, ydata, linestyle='dash', color='lightpink')
code: 数列xdataとデータ列ydataについて破線を描画してその色を淡いピンク色に設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightpink')	plt.plot(xdata, ydata, linestyle='dash', color='lightpink')
code: 破線グラフの色をライトサーモンに変更する	plt.plot(xdata, ydata, linestyle='dash', color='lightsalmon')	plt.plot(xdata, ydata, linestyle='dash', color='lightsalmon')
code: 破線の色をライトサーモンに変更する	plt.plot(xdata, ydata, linestyle='dash', color='lightsalmon')	plt.plot(xdata, ydata, linestyle='dash', color='lightsalmon')
code: リストxdataとデータ列ydataの破線を描画してその色をライトサーモンとする	plt.plot(xdata, ydata, linestyle='dash', color='lightsalmon')	plt.plot(xdata, ydata, linestyle='dash', color='lightsalmon')
code: データ列xdataと数列ydataについて破線を描画して、その色をライトサーモンにする	plt.plot(xdata, ydata, linestyle='dash', color='lightsalmon')	plt.plot(xdata, ydata, linestyle='dash', color='lightsalmon')
code: 破線の色をライトグリーン変える	plt.plot(xdata, ydata, linestyle='dash', color='lightgreen')	plt.plot(xdata, ydata, linestyle='dash', color='lightseagreen')
code: 破線グラフの色をライトグリーンとする	plt.plot(xdata, ydata, linestyle='dash', color='lightgreen')	plt.plot(xdata, ydata, linestyle='dash', color='lightseagreen')
code: 数列xdataとイテラブルydataの破線グラフを描画して色をライトグリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightgreen')	plt.plot(xdata, ydata, linestyle='dash', color='lightseagreen')
code: データ列xdataとイテラブルydataの破線を描画して、その色をライトグリーンに変更する	plt.plot(xdata, ydata, linestyle='dash', color='lightgreen')	plt.plot(xdata, ydata, linestyle='dash', color='lightseagreen')
code: 破線グラフの色をライトスカイブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightskyblue')	plt.plot(xdata, ydata, linestyle='dash', color='lightskyblue')
code: 破線の色をライトスカイブルーに指定する	plt.plot(xdata, ydata, linestyle='dash', color='lightskyblue')	plt.plot(xdata, ydata, linestyle='dash', color='lightskyblue')
code: 配列xdataと数列ydataの破線を描画してその色をライトスカイブルーとする	plt.plot(xdata, ydata, linestyle='dash', color='lightskyblue')	plt.plot(xdata, ydata, linestyle='dash', color='lightskyblue')
code: 数列xdataとリストydataの破線を描画して、その色をライトスカイブルーにする	plt.plot(xdata, ydata, linestyle='dash', color='lightskyblue')	plt.plot(xdata, ydata, linestyle='dash', color='lightskyblue')
code: 破線の色をライトスレイグレーにセットする	plt.plot(xdata, ydata, linestyle='dash', color='lightslategrey')	plt.plot(xdata, ydata, linestyle='dash', color='lightslategray')
code: 破線の色をライトスレイグレーにセットする	plt.plot(xdata, ydata, linestyle='dash', color='lightslategray')	plt.plot(xdata, ydata, linestyle='dash', color='lightslategray')
code: イテラブルxdataと数列ydataについて破線を描画してその色をライトスレイグレー変える	plt.plot(xdata, ydata, linestyle='dash', color='lightslategray')	plt.plot(xdata, ydata, linestyle='dash', color='lightslategray')
code: 配列xdataとイテラブルydataの破線グラフを描画して色をライトスレイグレーに変更する	plt.plot(xdata, ydata, linestyle='dash', color='lightslategrey')	plt.plot(xdata, ydata, linestyle='dash', color='lightslategray')
code: 破線グラフの色をライトスレイグレーとする	plt.plot(xdata, ydata, linestyle='dash', color='lightslategrey')	plt.plot(xdata, ydata, linestyle='dash', color='lightslategrey')
code: 破線の色をライトスレイグレー変える	plt.plot(xdata, ydata, linestyle='dash', color='lightslategrey')	plt.plot(xdata, ydata, linestyle='dash', color='lightslategrey')
code: 配列xdataとリストydataの破線グラフを描画してその色をライトスレイグレーとする	plt.plot(xdata, ydata, linestyle='dash', color='lightslategrey')	plt.plot(xdata, ydata, linestyle='dash', color='lightslategrey')
code: 数列xdataとイテラブルydataの破線グラフを描画して、その色をライトスレイグレーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightslategray')	plt.plot(xdata, ydata, linestyle='dash', color='lightslategrey')
code: 破線グラフの色をライトスチールブルーに変更する	plt.plot(xdata, ydata, linestyle='dash', color='lightsteelblue')	plt.plot(xdata, ydata, linestyle='dash', color='lightsteelblue')
code: 破線グラフの色をライトスチールブルーに変更する	plt.plot(xdata, ydata, linestyle='dash', color='lightsteelblue')	plt.plot(xdata, ydata, linestyle='dash', color='lightsteelblue')
code: 配列xdataとデータ列ydataの破線を描画して、色をライトスチールブルーにセットする	plt.plot(xdata, ydata, linestyle='dash', color='lightsteelblue')	plt.plot(xdata, ydata, linestyle='dash', color='lightsteelblue')
code: リストxdataとデータ列ydataについて破線グラフを描画してその色をライトスチールブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightsteelblue')	plt.plot(xdata, ydata, linestyle='dash', color='lightsteelblue')
code: 破線の色をライトイエローに設定する	plt.plot(xdata, ydata, linestyle='dash', color='lightyellow')	plt.plot(xdata, ydata, linestyle='dash', color='lightyellow')
code: 破線の色をライトイエローに指定する	plt.plot(xdata, ydata, linestyle='dash', color='lightyellow')	plt.plot(xdata, ydata, linestyle='dash', color='lightyellow')
code: 数列xdataと数列ydataについて破線を描画して、その色をライトイエローに変更する	plt.plot(xdata, ydata, linestyle='dash', color='lightyellow')	plt.plot(xdata, ydata, linestyle='dash', color='lightyellow')
code: データ列xdataとイテラブルydataの破線を描画して、その色をライトイエロー変える	plt.plot(xdata, ydata, linestyle='dash', color='lightyellow')	plt.plot(xdata, ydata, linestyle='dash', color='lightyellow')
code: 破線グラフの色をライムにセットする	plt.plot(xdata, ydata, linestyle='dash', color='lime')	plt.plot(xdata, ydata, linestyle='dash', color='lime')
code: 破線の色をライムにセットする	plt.plot(xdata, ydata, linestyle='dash', color='lime')	plt.plot(xdata, ydata, linestyle='dash', color='lime')
code: 配列xdataと数列ydataの破線グラフを描画して色をライム変える	plt.plot(xdata, ydata, linestyle='dash', color='lime')	plt.plot(xdata, ydata, linestyle='dash', color='lime')
code: イテラブルxdataとリストydataの破線を描画して、その色をライム変える	plt.plot(xdata, ydata, linestyle='dash', color='lime')	plt.plot(xdata, ydata, linestyle='dash', color='lime')
code: 破線の色をライムグリーン変える	plt.plot(xdata, ydata, linestyle='dash', color='limegreen')	plt.plot(xdata, ydata, linestyle='dash', color='limegreen')
code: 破線グラフの色をライムグリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='limegreen')	plt.plot(xdata, ydata, linestyle='dash', color='limegreen')
code: 配列xdataとデータ列ydataについて破線を描画して、色をライムグリーンにセットする	plt.plot(xdata, ydata, linestyle='dash', color='limegreen')	plt.plot(xdata, ydata, linestyle='dash', color='limegreen')
code: リストxdataと数列ydataについて破線を描画して、色をライムグリーンに変更する	plt.plot(xdata, ydata, linestyle='dash', color='limegreen')	plt.plot(xdata, ydata, linestyle='dash', color='limegreen')
code: 破線グラフの色をリネンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='linen')	plt.plot(xdata, ydata, linestyle='dash', color='linen')
code: 破線グラフの色をリネン変える	plt.plot(xdata, ydata, linestyle='dash', color='linen')	plt.plot(xdata, ydata, linestyle='dash', color='linen')
code: 数列xdataと配列ydataについて破線を描画してその色をリネン変える	plt.plot(xdata, ydata, linestyle='dash', color='linen')	plt.plot(xdata, ydata, linestyle='dash', color='linen')
code: イテラブルxdataとリストydataについて破線グラフを描画して色をリネンに変更する	plt.plot(xdata, ydata, linestyle='dash', color='linen')	plt.plot(xdata, ydata, linestyle='dash', color='linen')
code: 破線グラフの色をマゼンタに設定する	plt.plot(xdata, ydata, linestyle='dash', color='magenta')	plt.plot(xdata, ydata, linestyle='dash', color='magenta')
code: 破線グラフの色をマゼンタにする	plt.plot(xdata, ydata, linestyle='dash', color='magenta')	plt.plot(xdata, ydata, linestyle='dash', color='magenta')
code: 数列xdataとイテラブルydataについて破線を描画して、その色をマゼンタ変える	plt.plot(xdata, ydata, linestyle='dash', color='magenta')	plt.plot(xdata, ydata, linestyle='dash', color='magenta')
code: リストxdataと配列ydataの破線を描画して、色をマゼンタに設定する	plt.plot(xdata, ydata, linestyle='dash', color='magenta')	plt.plot(xdata, ydata, linestyle='dash', color='magenta')
code: 破線の色をマルーン変える	plt.plot(xdata, ydata, linestyle='dash', color='maroon')	plt.plot(xdata, ydata, linestyle='dash', color='maroon')
code: 破線の色をマルーン変える	plt.plot(xdata, ydata, linestyle='dash', color='maroon')	plt.plot(xdata, ydata, linestyle='dash', color='maroon')
code: イテラブルxdataとデータ列ydataの破線を描画して色をマルーンにする	plt.plot(xdata, ydata, linestyle='dash', color='maroon')	plt.plot(xdata, ydata, linestyle='dash', color='maroon')
code: データ列xdataとイテラブルydataの破線グラフを描画してその色をマルーン変える	plt.plot(xdata, ydata, linestyle='dash', color='maroon')	plt.plot(xdata, ydata, linestyle='dash', color='maroon')
code: 破線の色をミディアムアクアマリン変える	plt.plot(xdata, ydata, linestyle='dash', color='mediumaquamarine')	plt.plot(xdata, ydata, linestyle='dash', color='mediumaquamarine')
code: 破線の色をミディアムアクアマリンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='mediumaquamarine')	plt.plot(xdata, ydata, linestyle='dash', color='mediumaquamarine')
code: イテラブルxdataとデータ列ydataについて破線グラフを描画してその色をミディアムアクアマリンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='mediumaquamarine')	plt.plot(xdata, ydata, linestyle='dash', color='mediumaquamarine')
code: データ列xdataとデータ列ydataの破線を描画して、色をミディアムアクアマリンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='mediumaquamarine')	plt.plot(xdata, ydata, linestyle='dash', color='mediumaquamarine')
code: 破線グラフの色をミディアムブルーに変更する	plt.plot(xdata, ydata, linestyle='dash', color='mediumblue')	plt.plot(xdata, ydata, linestyle='dash', color='mediumblue')
code: 破線の色をミディアムブルーに変更する	plt.plot(xdata, ydata, linestyle='dash', color='mediumblue')	plt.plot(xdata, ydata, linestyle='dash', color='mediumblue')
code: 数列xdataとリストydataの破線を描画して色をミディアムブルーとする	plt.plot(xdata, ydata, linestyle='dash', color='mediumblue')	plt.plot(xdata, ydata, linestyle='dash', color='mediumblue')
code: 配列xdataと数列ydataについて破線グラフを描画してその色をミディアムブルー変える	plt.plot(xdata, ydata, linestyle='dash', color='mediumblue')	plt.plot(xdata, ydata, linestyle='dash', color='mediumblue')
code: 破線グラフの色をミディアムオーキッドにする	plt.plot(xdata, ydata, linestyle='dash', color='mediumorchid')	plt.plot(xdata, ydata, linestyle='dash', color='mediumorchid')
code: 破線グラフの色をミディアムオーキッドに設定する	plt.plot(xdata, ydata, linestyle='dash', color='mediumorchid')	plt.plot(xdata, ydata, linestyle='dash', color='mediumorchid')
code: リストxdataとリストydataについて破線を描画して、その色をミディアムオーキッド変える	plt.plot(xdata, ydata, linestyle='dash', color='mediumorchid')	plt.plot(xdata, ydata, linestyle='dash', color='mediumorchid')
code: 配列xdataとデータ列ydataの破線グラフを描画して、色をミディアムオーキッド変える	plt.plot(xdata, ydata, linestyle='dash', color='mediumorchid')	plt.plot(xdata, ydata, linestyle='dash', color='mediumorchid')
code: 破線グラフの色をミディアムパープル変える	plt.plot(xdata, ydata, linestyle='dash', color='mediumpurple')	plt.plot(xdata, ydata, linestyle='dash', color='mediumpurple')
code: 破線の色をミディアムパープルとする	plt.plot(xdata, ydata, linestyle='dash', color='mediumpurple')	plt.plot(xdata, ydata, linestyle='dash', color='mediumpurple')
code: リストxdataとデータ列ydataについて破線を描画して色をミディアムパープルに設定する	plt.plot(xdata, ydata, linestyle='dash', color='mediumpurple')	plt.plot(xdata, ydata, linestyle='dash', color='mediumpurple')
code: 数列xdataとリストydataについて破線を描画して、色をミディアムパープルに変更する	plt.plot(xdata, ydata, linestyle='dash', color='mediumpurple')	plt.plot(xdata, ydata, linestyle='dash', color='mediumpurple')
code: 破線グラフの色をミディアムシアグリーンとする	plt.plot(xdata, ydata, linestyle='dash', color='mediumseagreen')	plt.plot(xdata, ydata, linestyle='dash', color='mediumseagreen')
code: 破線グラフの色をミディアムシアグリーンに変更する	plt.plot(xdata, ydata, linestyle='dash', color='mediumseagreen')	plt.plot(xdata, ydata, linestyle='dash', color='mediumseagreen')
code: リストxdataとデータ列ydataについて破線を描画して色をミディアムシアグリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='mediumseagreen')	plt.plot(xdata, ydata, linestyle='dash', color='mediumseagreen')
code: リストxdataとデータ列ydataの破線を描画して、色をミディアムシアグリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='mediumseagreen')	plt.plot(xdata, ydata, linestyle='dash', color='mediumseagreen')
code: 破線グラフの色をミディアムスレートブルーとする	plt.plot(xdata, ydata, linestyle='dash', color='mediumslateblue')	plt.plot(xdata, ydata, linestyle='dash', color='mediumslateblue')
code: 破線グラフの色をミディアムスレートブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='mediumslateblue')	plt.plot(xdata, ydata, linestyle='dash', color='mediumslateblue')
code: 数列xdataとデータ列ydataの破線グラフを描画してその色をミディアムスレートブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='mediumslateblue')	plt.plot(xdata, ydata, linestyle='dash', color='mediumslateblue')
code: イテラブルxdataとリストydataについて破線を描画してその色をミディアムスレートブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='mediumslateblue')	plt.plot(xdata, ydata, linestyle='dash', color='mediumslateblue')
code: 破線グラフの色をミディアムスプリンググリーンにセットする	plt.plot(xdata, ydata, linestyle='dash', color='mediumspringgreen')	plt.plot(xdata, ydata, linestyle='dash', color='mediumspringgreen')
code: 破線グラフの色をミディアムスプリンググリーンに変更する	plt.plot(xdata, ydata, linestyle='dash', color='mediumspringgreen')	plt.plot(xdata, ydata, linestyle='dash', color='mediumspringgreen')
code: 配列xdataとデータ列ydataについて破線グラフを描画して色をミディアムスプリンググリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='mediumspringgreen')	plt.plot(xdata, ydata, linestyle='dash', color='mediumspringgreen')
code: リストxdataと数列ydataについて破線グラフを描画して色をミディアムスプリンググリーン変える	plt.plot(xdata, ydata, linestyle='dash', color='mediumspringgreen')	plt.plot(xdata, ydata, linestyle='dash', color='mediumspringgreen')
code: 破線グラフの色をミディアムターコイズに設定する	plt.plot(xdata, ydata, linestyle='dash', color='mediumturquoise')	plt.plot(xdata, ydata, linestyle='dash', color='mediumturquoise')
code: 破線グラフの色をミディアムターコイズにする	plt.plot(xdata, ydata, linestyle='dash', color='mediumturquoise')	plt.plot(xdata, ydata, linestyle='dash', color='mediumturquoise')
code: 配列xdataと配列ydataについて破線を描画して、その色をミディアムターコイズに設定する	plt.plot(xdata, ydata, linestyle='dash', color='mediumturquoise')	plt.plot(xdata, ydata, linestyle='dash', color='mediumturquoise')
code: 数列xdataとリストydataの破線を描画して、色をミディアムターコイズ変える	plt.plot(xdata, ydata, linestyle='dash', color='mediumturquoise')	plt.plot(xdata, ydata, linestyle='dash', color='mediumturquoise')
code: 破線グラフの色をミディアムバイオレットレッドに設定する	plt.plot(xdata, ydata, linestyle='dash', color='mediumvioletred')	plt.plot(xdata, ydata, linestyle='dash', color='mediumvioletred')
code: 破線グラフの色をミディアムバイオレットレッド変える	plt.plot(xdata, ydata, linestyle='dash', color='mediumvioletred')	plt.plot(xdata, ydata, linestyle='dash', color='mediumvioletred')
code: 数列xdataとリストydataについて破線を描画して、その色をミディアムバイオレットレッドに変更する	plt.plot(xdata, ydata, linestyle='dash', color='mediumvioletred')	plt.plot(xdata, ydata, linestyle='dash', color='mediumvioletred')
code: 配列xdataとリストydataの破線を描画して、色をミディアムバイオレットレッドに設定する	plt.plot(xdata, ydata, linestyle='dash', color='mediumvioletred')	plt.plot(xdata, ydata, linestyle='dash', color='mediumvioletred')
code: 破線グラフの色をミッドナイトブルー変える	plt.plot(xdata, ydata, linestyle='dash', color='midnightblue')	plt.plot(xdata, ydata, linestyle='dash', color='midnightblue')
code: 破線グラフの色をミッドナイトブルー変える	plt.plot(xdata, ydata, linestyle='dash', color='midnightblue')	plt.plot(xdata, ydata, linestyle='dash', color='midnightblue')
code: 配列xdataと数列ydataの破線グラフを描画して、色をミッドナイトブルーとする	plt.plot(xdata, ydata, linestyle='dash', color='midnightblue')	plt.plot(xdata, ydata, linestyle='dash', color='midnightblue')
code: データ列xdataとイテラブルydataについて破線グラフを描画して、色をミッドナイトブルー変える	plt.plot(xdata, ydata, linestyle='dash', color='midnightblue')	plt.plot(xdata, ydata, linestyle='dash', color='midnightblue')
code: 破線の色をミントクリーム変える	plt.plot(xdata, ydata, linestyle='dash', color='mintcream')	plt.plot(xdata, ydata, linestyle='dash', color='mintcream')
code: 破線の色をミントクリームとする	plt.plot(xdata, ydata, linestyle='dash', color='mintcream')	plt.plot(xdata, ydata, linestyle='dash', color='mintcream')
code: リストxdataとイテラブルydataの破線グラフを描画して、色をミントクリームに設定する	plt.plot(xdata, ydata, linestyle='dash', color='mintcream')	plt.plot(xdata, ydata, linestyle='dash', color='mintcream')
code: リストxdataと配列ydataについて破線グラフを描画してその色をミントクリームに設定する	plt.plot(xdata, ydata, linestyle='dash', color='mintcream')	plt.plot(xdata, ydata, linestyle='dash', color='mintcream')
code: 破線の色をミスティローズ変える	plt.plot(xdata, ydata, linestyle='dash', color='mistyrose')	plt.plot(xdata, ydata, linestyle='dash', color='mistyrose')
code: 破線グラフの色をミスティローズとする	plt.plot(xdata, ydata, linestyle='dash', color='mistyrose')	plt.plot(xdata, ydata, linestyle='dash', color='mistyrose')
code: 配列xdataと配列ydataの破線を描画して色をミスティローズ変える	plt.plot(xdata, ydata, linestyle='dash', color='mistyrose')	plt.plot(xdata, ydata, linestyle='dash', color='mistyrose')
code: 配列xdataと配列ydataについて破線を描画して色をミスティローズ変える	plt.plot(xdata, ydata, linestyle='dash', color='mistyrose')	plt.plot(xdata, ydata, linestyle='dash', color='mistyrose')
code: 破線グラフの色をモカシンに指定する	plt.plot(xdata, ydata, linestyle='dash', color='moccasin')	plt.plot(xdata, ydata, linestyle='dash', color='moccasin')
code: 破線グラフの色をモカシン変える	plt.plot(xdata, ydata, linestyle='dash', color='moccasin')	plt.plot(xdata, ydata, linestyle='dash', color='moccasin')
code: 数列xdataとイテラブルydataについて破線を描画して、色をモカシンとする	plt.plot(xdata, ydata, linestyle='dash', color='moccasin')	plt.plot(xdata, ydata, linestyle='dash', color='moccasin')
code: リストxdataと数列ydataの破線を描画して、その色をモカシンにする	plt.plot(xdata, ydata, linestyle='dash', color='moccasin')	plt.plot(xdata, ydata, linestyle='dash', color='moccasin')
code: 破線グラフの色をナバホホワイトとする	plt.plot(xdata, ydata, linestyle='dash', color='navajowhite')	plt.plot(xdata, ydata, linestyle='dash', color='navajowhite')
code: 破線の色をナバホホワイトに変更する	plt.plot(xdata, ydata, linestyle='dash', color='navajowhite')	plt.plot(xdata, ydata, linestyle='dash', color='navajowhite')
code: 配列xdataとデータ列ydataについて破線グラフを描画して色をナバホホワイトに変更する	plt.plot(xdata, ydata, linestyle='dash', color='navajowhite')	plt.plot(xdata, ydata, linestyle='dash', color='navajowhite')
code: 数列xdataとイテラブルydataの破線グラフを描画して、色をナバホホワイトに変更する	plt.plot(xdata, ydata, linestyle='dash', color='navajowhite')	plt.plot(xdata, ydata, linestyle='dash', color='navajowhite')
code: 破線の色をネイビーに指定する	plt.plot(xdata, ydata, linestyle='dash', color='navy')	plt.plot(xdata, ydata, linestyle='dash', color='navy')
code: 破線の色をネイビーに変更する	plt.plot(xdata, ydata, linestyle='dash', color='navy')	plt.plot(xdata, ydata, linestyle='dash', color='navy')
code: 数列xdataと数列ydataの破線を描画してその色をネイビーに変更する	plt.plot(xdata, ydata, linestyle='dash', color='navy')	plt.plot(xdata, ydata, linestyle='dash', color='navy')
code: イテラブルxdataとイテラブルydataについて破線グラフを描画して色をネイビーとする	plt.plot(xdata, ydata, linestyle='dash', color='navy')	plt.plot(xdata, ydata, linestyle='dash', color='navy')
code: 破線グラフの色をオールドレースに変更する	plt.plot(xdata, ydata, linestyle='dash', color='oldlace')	plt.plot(xdata, ydata, linestyle='dash', color='oldlace')
code: 破線の色をオールドレースに指定する	plt.plot(xdata, ydata, linestyle='dash', color='oldlace')	plt.plot(xdata, ydata, linestyle='dash', color='oldlace')
code: 数列xdataとイテラブルydataの破線を描画して色をオールドレース変える	plt.plot(xdata, ydata, linestyle='dash', color='oldlace')	plt.plot(xdata, ydata, linestyle='dash', color='oldlace')
code: 数列xdataとデータ列ydataについて破線を描画して色をオールドレースに設定する	plt.plot(xdata, ydata, linestyle='dash', color='oldlace')	plt.plot(xdata, ydata, linestyle='dash', color='oldlace')
code: 破線の色をオリーブにする	plt.plot(xdata, ydata, linestyle='dash', color='olive')	plt.plot(xdata, ydata, linestyle='dash', color='olive')
code: 破線グラフの色をオリーブ変える	plt.plot(xdata, ydata, linestyle='dash', color='olive')	plt.plot(xdata, ydata, linestyle='dash', color='olive')
code: データ列xdataと配列ydataの破線グラフを描画して色をオリーブに指定する	plt.plot(xdata, ydata, linestyle='dash', color='olive')	plt.plot(xdata, ydata, linestyle='dash', color='olive')
code: データ列xdataとデータ列ydataについて破線を描画して、その色をオリーブに変更する	plt.plot(xdata, ydata, linestyle='dash', color='olive')	plt.plot(xdata, ydata, linestyle='dash', color='olive')
code: 破線グラフの色をオリベドラブとする	plt.plot(xdata, ydata, linestyle='dash', color='olivedrab')	plt.plot(xdata, ydata, linestyle='dash', color='olivedrab')
code: 破線グラフの色をオリベドラブに指定する	plt.plot(xdata, ydata, linestyle='dash', color='olivedrab')	plt.plot(xdata, ydata, linestyle='dash', color='olivedrab')
code: イテラブルxdataと配列ydataの破線を描画してその色をオリベドラブにセットする	plt.plot(xdata, ydata, linestyle='dash', color='olivedrab')	plt.plot(xdata, ydata, linestyle='dash', color='olivedrab')
code: 配列xdataと配列ydataの破線を描画して色をオリベドラブにする	plt.plot(xdata, ydata, linestyle='dash', color='olivedrab')	plt.plot(xdata, ydata, linestyle='dash', color='olivedrab')
code: 破線グラフの色をオレンジに指定する	plt.plot(xdata, ydata, linestyle='dash', color='orange')	plt.plot(xdata, ydata, linestyle='dash', color='orange')
code: 破線の色をオレンジに変更する	plt.plot(xdata, ydata, linestyle='dash', color='orange')	plt.plot(xdata, ydata, linestyle='dash', color='orange')
code: データ列xdataと配列ydataの破線を描画して、色をオレンジに設定する	plt.plot(xdata, ydata, linestyle='dash', color='orange')	plt.plot(xdata, ydata, linestyle='dash', color='orange')
code: イテラブルxdataとデータ列ydataについて破線グラフを描画して、その色をオレンジに変更する	plt.plot(xdata, ydata, linestyle='dash', color='orange')	plt.plot(xdata, ydata, linestyle='dash', color='orange')
code: 破線グラフの色をオレンジレッドに設定する	plt.plot(xdata, ydata, linestyle='dash', color='orangered')	plt.plot(xdata, ydata, linestyle='dash', color='orangered')
code: 破線の色をオレンジレッドに指定する	plt.plot(xdata, ydata, linestyle='dash', color='orangered')	plt.plot(xdata, ydata, linestyle='dash', color='orangered')
code: データ列xdataとデータ列ydataの破線グラフを描画して色をオレンジレッドにセットする	plt.plot(xdata, ydata, linestyle='dash', color='orangered')	plt.plot(xdata, ydata, linestyle='dash', color='orangered')
code: 数列xdataと配列ydataについて破線グラフを描画してその色をオレンジレッドに変更する	plt.plot(xdata, ydata, linestyle='dash', color='orangered')	plt.plot(xdata, ydata, linestyle='dash', color='orangered')
code: 破線グラフの色をオーキッドにセットする	plt.plot(xdata, ydata, linestyle='dash', color='orchid')	plt.plot(xdata, ydata, linestyle='dash', color='orchid')
code: 破線グラフの色をオーキッド変える	plt.plot(xdata, ydata, linestyle='dash', color='orchid')	plt.plot(xdata, ydata, linestyle='dash', color='orchid')
code: 数列xdataと配列ydataについて破線を描画して色をオーキッドに設定する	plt.plot(xdata, ydata, linestyle='dash', color='orchid')	plt.plot(xdata, ydata, linestyle='dash', color='orchid')
code: データ列xdataと配列ydataについて破線グラフを描画して、その色をオーキッドにする	plt.plot(xdata, ydata, linestyle='dash', color='orchid')	plt.plot(xdata, ydata, linestyle='dash', color='orchid')
code: 破線グラフの色をパールゴールデンロッドに設定する	plt.plot(xdata, ydata, linestyle='dash', color='palegoldenrod')	plt.plot(xdata, ydata, linestyle='dash', color='palegoldenrod')
code: 破線の色をパールゴールデンロッドに設定する	plt.plot(xdata, ydata, linestyle='dash', color='palegoldenrod')	plt.plot(xdata, ydata, linestyle='dash', color='palegoldenrod')
code: イテラブルxdataとイテラブルydataの破線グラフを描画して、色をパールゴールデンロッド変える	plt.plot(xdata, ydata, linestyle='dash', color='palegoldenrod')	plt.plot(xdata, ydata, linestyle='dash', color='palegoldenrod')
code: リストxdataと配列ydataの破線グラフを描画して、その色をパールゴールデンロッドに設定する	plt.plot(xdata, ydata, linestyle='dash', color='palegoldenrod')	plt.plot(xdata, ydata, linestyle='dash', color='palegoldenrod')
code: 破線の色をペールグリーンとする	plt.plot(xdata, ydata, linestyle='dash', color='palegreen')	plt.plot(xdata, ydata, linestyle='dash', color='palegreen')
code: 破線グラフの色をペールグリーン変える	plt.plot(xdata, ydata, linestyle='dash', color='palegreen')	plt.plot(xdata, ydata, linestyle='dash', color='palegreen')
code: データ列xdataと配列ydataの破線を描画してその色をペールグリーンにセットする	plt.plot(xdata, ydata, linestyle='dash', color='palegreen')	plt.plot(xdata, ydata, linestyle='dash', color='palegreen')
code: データ列xdataとリストydataの破線を描画して色をペールグリーンにセットする	plt.plot(xdata, ydata, linestyle='dash', color='palegreen')	plt.plot(xdata, ydata, linestyle='dash', color='palegreen')
code: 破線グラフの色をパレットトルコイズとする	plt.plot(xdata, ydata, linestyle='dash', color='paleturquoise')	plt.plot(xdata, ydata, linestyle='dash', color='paleturquoise')
code: 破線の色をパレットトルコイズに変更する	plt.plot(xdata, ydata, linestyle='dash', color='paleturquoise')	plt.plot(xdata, ydata, linestyle='dash', color='paleturquoise')
code: リストxdataと配列ydataについて破線を描画してその色をパレットトルコイズとする	plt.plot(xdata, ydata, linestyle='dash', color='paleturquoise')	plt.plot(xdata, ydata, linestyle='dash', color='paleturquoise')
code: 数列xdataとリストydataについて破線を描画して、その色をパレットトルコイズに変更する	plt.plot(xdata, ydata, linestyle='dash', color='paleturquoise')	plt.plot(xdata, ydata, linestyle='dash', color='paleturquoise')
code: 破線グラフの色をパールバイオレットレッドに設定する	plt.plot(xdata, ydata, linestyle='dash', color='palevioletred')	plt.plot(xdata, ydata, linestyle='dash', color='palevioletred')
code: 破線グラフの色をパールバイオレットレッドに設定する	plt.plot(xdata, ydata, linestyle='dash', color='palevioletred')	plt.plot(xdata, ydata, linestyle='dash', color='palevioletred')
code: 数列xdataと数列ydataについて破線グラフを描画して色をパールバイオレットレッド変える	plt.plot(xdata, ydata, linestyle='dash', color='palevioletred')	plt.plot(xdata, ydata, linestyle='dash', color='palevioletred')
code: データ列xdataと数列ydataの破線グラフを描画して、色をパールバイオレットレッドに指定する	plt.plot(xdata, ydata, linestyle='dash', color='palevioletred')	plt.plot(xdata, ydata, linestyle='dash', color='palevioletred')
code: 破線グラフの色をパパイヤウィップ変える	plt.plot(xdata, ydata, linestyle='dash', color='papayawhip')	plt.plot(xdata, ydata, linestyle='dash', color='papayawhip')
code: 破線の色をパパイヤウィップに設定する	plt.plot(xdata, ydata, linestyle='dash', color='papayawhip')	plt.plot(xdata, ydata, linestyle='dash', color='papayawhip')
code: イテラブルxdataとリストydataの破線を描画して、色をパパイヤウィップにする	plt.plot(xdata, ydata, linestyle='dash', color='papayawhip')	plt.plot(xdata, ydata, linestyle='dash', color='papayawhip')
code: 数列xdataとデータ列ydataの破線グラフを描画して色をパパイヤウィップに設定する	plt.plot(xdata, ydata, linestyle='dash', color='papayawhip')	plt.plot(xdata, ydata, linestyle='dash', color='papayawhip')
code: 破線グラフの色をピーチパフに指定する	plt.plot(xdata, ydata, linestyle='dash', color='peachpuff')	plt.plot(xdata, ydata, linestyle='dash', color='peachpuff')
code: 破線グラフの色をピーチパフに変更する	plt.plot(xdata, ydata, linestyle='dash', color='peachpuff')	plt.plot(xdata, ydata, linestyle='dash', color='peachpuff')
code: 数列xdataと配列ydataについて破線グラフを描画して、その色をピーチパフとする	plt.plot(xdata, ydata, linestyle='dash', color='peachpuff')	plt.plot(xdata, ydata, linestyle='dash', color='peachpuff')
code: 数列xdataとリストydataの破線を描画して、その色をピーチパフに変更する	plt.plot(xdata, ydata, linestyle='dash', color='peachpuff')	plt.plot(xdata, ydata, linestyle='dash', color='peachpuff')
code: 破線の色をペルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='peru')	plt.plot(xdata, ydata, linestyle='dash', color='peru')
code: 破線の色をペルーに変更する	plt.plot(xdata, ydata, linestyle='dash', color='peru')	plt.plot(xdata, ydata, linestyle='dash', color='peru')
code: 配列xdataとリストydataについて破線を描画して、その色をペルーに変更する	plt.plot(xdata, ydata, linestyle='dash', color='peru')	plt.plot(xdata, ydata, linestyle='dash', color='peru')
code: リストxdataとリストydataについて破線グラフを描画して色をペルーにセットする	plt.plot(xdata, ydata, linestyle='dash', color='peru')	plt.plot(xdata, ydata, linestyle='dash', color='peru')
code: 破線グラフの色をピンクに設定する	plt.plot(xdata, ydata, linestyle='dash', color='pink')	plt.plot(xdata, ydata, linestyle='dash', color='pink')
code: 破線の色をピンクにセットする	plt.plot(xdata, ydata, linestyle='dash', color='pink')	plt.plot(xdata, ydata, linestyle='dash', color='pink')
code: データ列xdataと配列ydataについて破線を描画してその色をピンクにセットする	plt.plot(xdata, ydata, linestyle='dash', color='pink')	plt.plot(xdata, ydata, linestyle='dash', color='pink')
code: 配列xdataとデータ列ydataの破線を描画して、その色をピンクに指定する	plt.plot(xdata, ydata, linestyle='dash', color='pink')	plt.plot(xdata, ydata, linestyle='dash', color='pink')
code: 破線の色をプラム変える	plt.plot(xdata, ydata, linestyle='dash', color='plum')	plt.plot(xdata, ydata, linestyle='dash', color='plum')
code: 破線の色をプラムにセットする	plt.plot(xdata, ydata, linestyle='dash', color='plum')	plt.plot(xdata, ydata, linestyle='dash', color='plum')
code: リストxdataとデータ列ydataについて破線を描画して色をプラム変える	plt.plot(xdata, ydata, linestyle='dash', color='plum')	plt.plot(xdata, ydata, linestyle='dash', color='plum')
code: 数列xdataと配列ydataの破線を描画して、その色をプラムに変更する	plt.plot(xdata, ydata, linestyle='dash', color='plum')	plt.plot(xdata, ydata, linestyle='dash', color='plum')
code: 破線グラフの色をパウダーブルーにする	plt.plot(xdata, ydata, linestyle='dash', color='powderblue')	plt.plot(xdata, ydata, linestyle='dash', color='powderblue')
code: 破線グラフの色をパウダーブルーに指定する	plt.plot(xdata, ydata, linestyle='dash', color='powderblue')	plt.plot(xdata, ydata, linestyle='dash', color='powderblue')
code: 配列xdataと数列ydataについて破線を描画してその色をパウダーブルー変える	plt.plot(xdata, ydata, linestyle='dash', color='powderblue')	plt.plot(xdata, ydata, linestyle='dash', color='powderblue')
code: 数列xdataとイテラブルydataについて破線を描画してその色をパウダーブルーに指定する	plt.plot(xdata, ydata, linestyle='dash', color='powderblue')	plt.plot(xdata, ydata, linestyle='dash', color='powderblue')
code: 破線グラフの色をパープル変える	plt.plot(xdata, ydata, linestyle='dash', color='purple')	plt.plot(xdata, ydata, linestyle='dash', color='purple')
code: 破線グラフの色をパープルに指定する	plt.plot(xdata, ydata, linestyle='dash', color='purple')	plt.plot(xdata, ydata, linestyle='dash', color='purple')
code: 配列xdataと配列ydataについて破線グラフを描画して、その色をパープルに指定する	plt.plot(xdata, ydata, linestyle='dash', color='purple')	plt.plot(xdata, ydata, linestyle='dash', color='purple')
code: データ列xdataと数列ydataについて破線を描画して、その色をパープル変える	plt.plot(xdata, ydata, linestyle='dash', color='purple')	plt.plot(xdata, ydata, linestyle='dash', color='purple')
code: 破線の色をレベッカパープルに変更する	plt.plot(xdata, ydata, linestyle='dash', color='rebeccapurple')	plt.plot(xdata, ydata, linestyle='dash', color='rebeccapurple')
code: 破線グラフの色をレベッカパープルに変更する	plt.plot(xdata, ydata, linestyle='dash', color='rebeccapurple')	plt.plot(xdata, ydata, linestyle='dash', color='rebeccapurple')
code: 配列xdataと数列ydataの破線グラフを描画して、その色をレベッカパープルに変更する	plt.plot(xdata, ydata, linestyle='dash', color='rebeccapurple')	plt.plot(xdata, ydata, linestyle='dash', color='rebeccapurple')
code: イテラブルxdataとイテラブルydataについて破線グラフを描画して、その色をレベッカパープルに設定する	plt.plot(xdata, ydata, linestyle='dash', color='rebeccapurple')	plt.plot(xdata, ydata, linestyle='dash', color='rebeccapurple')
code: 破線の色を赤に設定する	plt.plot(xdata, ydata, linestyle='dash', color='red')	plt.plot(xdata, ydata, linestyle='dash', color='red')
code: 破線グラフの色を赤に指定する	plt.plot(xdata, ydata, linestyle='dashed', color='r')	plt.plot(xdata, ydata, linestyle='dash', color='red')
code: 配列xdataとリストydataの破線グラフを描画して、色を赤に変更する	plt.plot(xdata, ydata, linestyle='dashed', color='r')	plt.plot(xdata, ydata, linestyle='dash', color='red')
code: 配列xdataと数列ydataについて破線を描画してその色を赤にセットする	plt.plot(xdata, ydata, linestyle='dash', color='red')	plt.plot(xdata, ydata, linestyle='dash', color='red')
code: 破線グラフの色をロージーブラウンにセットする	plt.plot(xdata, ydata, linestyle='dash', color='rosybrown')	plt.plot(xdata, ydata, linestyle='dash', color='rosybrown')
code: 破線グラフの色をロージーブラウンに変更する	plt.plot(xdata, ydata, linestyle='dash', color='rosybrown')	plt.plot(xdata, ydata, linestyle='dash', color='rosybrown')
code: 配列xdataとリストydataについて破線を描画して、色をロージーブラウンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='rosybrown')	plt.plot(xdata, ydata, linestyle='dash', color='rosybrown')
code: 配列xdataと数列ydataについて破線グラフを描画してその色をロージーブラウン変える	plt.plot(xdata, ydata, linestyle='dash', color='rosybrown')	plt.plot(xdata, ydata, linestyle='dash', color='rosybrown')
code: 破線の色をロイヤルブルーとする	plt.plot(xdata, ydata, linestyle='dash', color='royalblue')	plt.plot(xdata, ydata, linestyle='dash', color='royalblue')
code: 破線の色をロイヤルブルー変える	plt.plot(xdata, ydata, linestyle='dash', color='royalblue')	plt.plot(xdata, ydata, linestyle='dash', color='royalblue')
code: イテラブルxdataとイテラブルydataの破線グラフを描画して、色をロイヤルブルーにする	plt.plot(xdata, ydata, linestyle='dash', color='royalblue')	plt.plot(xdata, ydata, linestyle='dash', color='royalblue')
code: 配列xdataとリストydataの破線グラフを描画して、色をロイヤルブルー変える	plt.plot(xdata, ydata, linestyle='dash', color='royalblue')	plt.plot(xdata, ydata, linestyle='dash', color='royalblue')
code: 破線の色をサドルブラウンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='saddlebrown')	plt.plot(xdata, ydata, linestyle='dash', color='saddlebrown')
code: 破線グラフの色をサドルブラウンに変更する	plt.plot(xdata, ydata, linestyle='dash', color='saddlebrown')	plt.plot(xdata, ydata, linestyle='dash', color='saddlebrown')
code: 配列xdataとイテラブルydataの破線グラフを描画して色をサドルブラウンとする	plt.plot(xdata, ydata, linestyle='dash', color='saddlebrown')	plt.plot(xdata, ydata, linestyle='dash', color='saddlebrown')
code: 配列xdataと配列ydataについて破線グラフを描画してその色をサドルブラウンにセットする	plt.plot(xdata, ydata, linestyle='dash', color='saddlebrown')	plt.plot(xdata, ydata, linestyle='dash', color='saddlebrown')
code: 破線グラフの色をサーモンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='salmon')	plt.plot(xdata, ydata, linestyle='dash', color='salmon')
code: 破線グラフの色をサーモン変える	plt.plot(xdata, ydata, linestyle='dash', color='salmon')	plt.plot(xdata, ydata, linestyle='dash', color='salmon')
code: イテラブルxdataとイテラブルydataの破線グラフを描画してその色をサーモンに指定する	plt.plot(xdata, ydata, linestyle='dash', color='salmon')	plt.plot(xdata, ydata, linestyle='dash', color='salmon')
code: イテラブルxdataとリストydataについて破線グラフを描画して、その色をサーモン変える	plt.plot(xdata, ydata, linestyle='dash', color='salmon')	plt.plot(xdata, ydata, linestyle='dash', color='salmon')
code: 破線グラフの色をサンディーブラウンにする	plt.plot(xdata, ydata, linestyle='dash', color='sandybrown')	plt.plot(xdata, ydata, linestyle='dash', color='sandybrown')
code: 破線グラフの色をサンディーブラウンにする	plt.plot(xdata, ydata, linestyle='dash', color='sandybrown')	plt.plot(xdata, ydata, linestyle='dash', color='sandybrown')
code: データ列xdataとリストydataについて破線を描画して、色をサンディーブラウンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='sandybrown')	plt.plot(xdata, ydata, linestyle='dash', color='sandybrown')
code: 数列xdataと配列ydataの破線グラフを描画して、その色をサンディーブラウンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='sandybrown')	plt.plot(xdata, ydata, linestyle='dash', color='sandybrown')
code: 破線グラフの色をシーグリーン変える	plt.plot(xdata, ydata, linestyle='dash', color='seagreen')	plt.plot(xdata, ydata, linestyle='dash', color='seagreen')
code: 破線グラフの色をシーグリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='seagreen')	plt.plot(xdata, ydata, linestyle='dash', color='seagreen')
code: リストxdataと配列ydataについて破線を描画して、色をシーグリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='seagreen')	plt.plot(xdata, ydata, linestyle='dash', color='seagreen')
code: イテラブルxdataと配列ydataの破線グラフを描画してその色をシーグリーンに変更する	plt.plot(xdata, ydata, linestyle='dash', color='seagreen')	plt.plot(xdata, ydata, linestyle='dash', color='seagreen')
code: 破線グラフの色を貝殻変える	plt.plot(xdata, ydata, linestyle='dash', color='seashell')	plt.plot(xdata, ydata, linestyle='dash', color='seashell')
code: 破線グラフの色を貝殻にする	plt.plot(xdata, ydata, linestyle='dash', color='seashell')	plt.plot(xdata, ydata, linestyle='dash', color='seashell')
code: イテラブルxdataとデータ列ydataの破線グラフを描画して、その色を貝殻変える	plt.plot(xdata, ydata, linestyle='dash', color='seashell')	plt.plot(xdata, ydata, linestyle='dash', color='seashell')
code: リストxdataと数列ydataの破線グラフを描画して、色を貝殻に変更する	plt.plot(xdata, ydata, linestyle='dash', color='seashell')	plt.plot(xdata, ydata, linestyle='dash', color='seashell')
code: 破線グラフの色をシエナ変える	plt.plot(xdata, ydata, linestyle='dash', color='sienna')	plt.plot(xdata, ydata, linestyle='dash', color='sienna')
code: 破線グラフの色をシエナにセットする	plt.plot(xdata, ydata, linestyle='dash', color='sienna')	plt.plot(xdata, ydata, linestyle='dash', color='sienna')
code: データ列xdataと数列ydataの破線を描画してその色をシエナに設定する	plt.plot(xdata, ydata, linestyle='dash', color='sienna')	plt.plot(xdata, ydata, linestyle='dash', color='sienna')
code: 配列xdataと配列ydataについて破線グラフを描画して、色をシエナに変更する	plt.plot(xdata, ydata, linestyle='dash', color='sienna')	plt.plot(xdata, ydata, linestyle='dash', color='sienna')
code: 破線の色をシルバーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='silver')	plt.plot(xdata, ydata, linestyle='dash', color='silver')
code: 破線の色をシルバーとする	plt.plot(xdata, ydata, linestyle='dash', color='silver')	plt.plot(xdata, ydata, linestyle='dash', color='silver')
code: 配列xdataと配列ydataについて破線を描画して、その色をシルバーにする	plt.plot(xdata, ydata, linestyle='dash', color='silver')	plt.plot(xdata, ydata, linestyle='dash', color='silver')
code: 数列xdataと配列ydataの破線グラフを描画して、色をシルバーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='silver')	plt.plot(xdata, ydata, linestyle='dash', color='silver')
code: 破線グラフの色をスカイブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='skyblue')	plt.plot(xdata, ydata, linestyle='dash', color='skyblue')
code: 破線グラフの色をスカイブルー変える	plt.plot(xdata, ydata, linestyle='dash', color='skyblue')	plt.plot(xdata, ydata, linestyle='dash', color='skyblue')
code: 配列xdataと数列ydataの破線グラフを描画して、色をスカイブルーに変更する	plt.plot(xdata, ydata, linestyle='dash', color='skyblue')	plt.plot(xdata, ydata, linestyle='dash', color='skyblue')
code: 数列xdataとリストydataの破線グラフを描画して、その色をスカイブルーに指定する	plt.plot(xdata, ydata, linestyle='dash', color='skyblue')	plt.plot(xdata, ydata, linestyle='dash', color='skyblue')
code: 破線の色をスレートブルーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='slateblue')	plt.plot(xdata, ydata, linestyle='dash', color='slateblue')
code: 破線の色をスレートブルーにする	plt.plot(xdata, ydata, linestyle='dash', color='slateblue')	plt.plot(xdata, ydata, linestyle='dash', color='slateblue')
code: イテラブルxdataとイテラブルydataについて破線を描画してその色をスレートブルーとする	plt.plot(xdata, ydata, linestyle='dash', color='slateblue')	plt.plot(xdata, ydata, linestyle='dash', color='slateblue')
code: 数列xdataと数列ydataの破線グラフを描画して、その色をスレートブルー変える	plt.plot(xdata, ydata, linestyle='dash', color='slateblue')	plt.plot(xdata, ydata, linestyle='dash', color='slateblue')
code: 破線の色をスラグレーに変更する	plt.plot(xdata, ydata, linestyle='dash', color='slategray')	plt.plot(xdata, ydata, linestyle='dash', color='slategray')
code: 破線の色をスラグレーに設定する	plt.plot(xdata, ydata, linestyle='dash', color='slategray')	plt.plot(xdata, ydata, linestyle='dash', color='slategray')
code: リストxdataとリストydataについて破線グラフを描画してその色をスラグレーにセットする	plt.plot(xdata, ydata, linestyle='dash', color='slategrey')	plt.plot(xdata, ydata, linestyle='dash', color='slategray')
code: 数列xdataと数列ydataについて破線を描画して、その色をスラグレーにセットする	plt.plot(xdata, ydata, linestyle='dash', color='slategrey')	plt.plot(xdata, ydata, linestyle='dash', color='slategray')
code: 破線グラフの色をスラグレー変える	plt.plot(xdata, ydata, linestyle='dash', color='slategray')	plt.plot(xdata, ydata, linestyle='dash', color='slategrey')
code: 破線グラフの色をスラグレーに指定する	plt.plot(xdata, ydata, linestyle='dash', color='slategrey')	plt.plot(xdata, ydata, linestyle='dash', color='slategrey')
code: 配列xdataと配列ydataについて破線グラフを描画して、色をスラグレーに変更する	plt.plot(xdata, ydata, linestyle='dash', color='slategray')	plt.plot(xdata, ydata, linestyle='dash', color='slategrey')
code: イテラブルxdataと配列ydataの破線グラフを描画して色をスラグレーとする	plt.plot(xdata, ydata, linestyle='dash', color='slategray')	plt.plot(xdata, ydata, linestyle='dash', color='slategrey')
code: 破線グラフの色をスノーにセットする	plt.plot(xdata, ydata, linestyle='dash', color='snow')	plt.plot(xdata, ydata, linestyle='dash', color='snow')
code: 破線グラフの色をスノーにセットする	plt.plot(xdata, ydata, linestyle='dash', color='snow')	plt.plot(xdata, ydata, linestyle='dash', color='snow')
code: データ列xdataとデータ列ydataの破線グラフを描画して、色をスノーに変更する	plt.plot(xdata, ydata, linestyle='dash', color='snow')	plt.plot(xdata, ydata, linestyle='dash', color='snow')
code: データ列xdataとイテラブルydataの破線を描画してその色をスノー変える	plt.plot(xdata, ydata, linestyle='dash', color='snow')	plt.plot(xdata, ydata, linestyle='dash', color='snow')
code: 破線の色をスプリンググリーンに指定する	plt.plot(xdata, ydata, linestyle='dash', color='springgreen')	plt.plot(xdata, ydata, linestyle='dash', color='springgreen')
code: 破線グラフの色をスプリンググリーンに指定する	plt.plot(xdata, ydata, linestyle='dash', color='springgreen')	plt.plot(xdata, ydata, linestyle='dash', color='springgreen')
code: 配列xdataと配列ydataについて破線グラフを描画してその色をスプリンググリーンに変更する	plt.plot(xdata, ydata, linestyle='dash', color='springgreen')	plt.plot(xdata, ydata, linestyle='dash', color='springgreen')
code: 配列xdataとデータ列ydataについて破線グラフを描画してその色をスプリンググリーンにセットする	plt.plot(xdata, ydata, linestyle='dash', color='springgreen')	plt.plot(xdata, ydata, linestyle='dash', color='springgreen')
code: 破線の色をスチールブルー変える	plt.plot(xdata, ydata, linestyle='dash', color='steelblue')	plt.plot(xdata, ydata, linestyle='dash', color='steelblue')
code: 破線グラフの色をスチールブルーとする	plt.plot(xdata, ydata, linestyle='dash', color='steelblue')	plt.plot(xdata, ydata, linestyle='dash', color='steelblue')
code: 配列xdataとデータ列ydataについて破線グラフを描画してその色をスチールブルーとする	plt.plot(xdata, ydata, linestyle='dash', color='steelblue')	plt.plot(xdata, ydata, linestyle='dash', color='steelblue')
code: 数列xdataと数列ydataについて破線グラフを描画して、その色をスチールブルーとする	plt.plot(xdata, ydata, linestyle='dash', color='steelblue')	plt.plot(xdata, ydata, linestyle='dash', color='steelblue')
code: 破線グラフの色をタンにセットする	plt.plot(xdata, ydata, linestyle='dash', color='tan')	plt.plot(xdata, ydata, linestyle='dash', color='tan')
code: 破線の色をタンに変更する	plt.plot(xdata, ydata, linestyle='dash', color='tan')	plt.plot(xdata, ydata, linestyle='dash', color='tan')
code: 数列xdataとイテラブルydataについて破線を描画して色をタンとする	plt.plot(xdata, ydata, linestyle='dash', color='tan')	plt.plot(xdata, ydata, linestyle='dash', color='tan')
code: イテラブルxdataとイテラブルydataについて破線を描画して、その色をタン変える	plt.plot(xdata, ydata, linestyle='dash', color='tan')	plt.plot(xdata, ydata, linestyle='dash', color='tan')
code: 破線の色をティール変える	plt.plot(xdata, ydata, linestyle='dash', color='teal')	plt.plot(xdata, ydata, linestyle='dash', color='teal')
code: 破線の色をティールに設定する	plt.plot(xdata, ydata, linestyle='dash', color='teal')	plt.plot(xdata, ydata, linestyle='dash', color='teal')
code: 数列xdataとイテラブルydataの破線グラフを描画して色をティールに指定する	plt.plot(xdata, ydata, linestyle='dash', color='teal')	plt.plot(xdata, ydata, linestyle='dash', color='teal')
code: イテラブルxdataとイテラブルydataの破線グラフを描画して、その色をティールとする	plt.plot(xdata, ydata, linestyle='dash', color='teal')	plt.plot(xdata, ydata, linestyle='dash', color='teal')
code: 破線の色をアザミに指定する	plt.plot(xdata, ydata, linestyle='dash', color='thistle')	plt.plot(xdata, ydata, linestyle='dash', color='thistle')
code: 破線グラフの色をアザミにセットする	plt.plot(xdata, ydata, linestyle='dash', color='thistle')	plt.plot(xdata, ydata, linestyle='dash', color='thistle')
code: 数列xdataとデータ列ydataの破線を描画して、色をアザミにする	plt.plot(xdata, ydata, linestyle='dash', color='thistle')	plt.plot(xdata, ydata, linestyle='dash', color='thistle')
code: 配列xdataとデータ列ydataの破線グラフを描画して、その色をアザミにセットする	plt.plot(xdata, ydata, linestyle='dash', color='thistle')	plt.plot(xdata, ydata, linestyle='dash', color='thistle')
code: 破線グラフの色をトマトにセットする	plt.plot(xdata, ydata, linestyle='dash', color='tomato')	plt.plot(xdata, ydata, linestyle='dash', color='tomato')
code: 破線の色をトマトに変更する	plt.plot(xdata, ydata, linestyle='dash', color='tomato')	plt.plot(xdata, ydata, linestyle='dash', color='tomato')
code: リストxdataとリストydataの破線を描画して色をトマトに変更する	plt.plot(xdata, ydata, linestyle='dash', color='tomato')	plt.plot(xdata, ydata, linestyle='dash', color='tomato')
code: 数列xdataと数列ydataについて破線グラフを描画して、その色をトマトに指定する	plt.plot(xdata, ydata, linestyle='dash', color='tomato')	plt.plot(xdata, ydata, linestyle='dash', color='tomato')
code: 破線グラフの色をターコイズ変える	plt.plot(xdata, ydata, linestyle='dash', color='turquoise')	plt.plot(xdata, ydata, linestyle='dash', color='turquoise')
code: 破線の色をターコイズに指定する	plt.plot(xdata, ydata, linestyle='dash', color='turquoise')	plt.plot(xdata, ydata, linestyle='dash', color='turquoise')
code: データ列xdataと配列ydataについて破線グラフを描画して色をターコイズ変える	plt.plot(xdata, ydata, linestyle='dash', color='turquoise')	plt.plot(xdata, ydata, linestyle='dash', color='turquoise')
code: リストxdataと配列ydataの破線を描画して、その色をターコイズにする	plt.plot(xdata, ydata, linestyle='dash', color='turquoise')	plt.plot(xdata, ydata, linestyle='dash', color='turquoise')
code: 破線グラフの色をバイオレットとする	plt.plot(xdata, ydata, linestyle='dash', color='violet')	plt.plot(xdata, ydata, linestyle='dash', color='violet')
code: 破線グラフの色をバイオレットに指定する	plt.plot(xdata, ydata, linestyle='dash', color='violet')	plt.plot(xdata, ydata, linestyle='dash', color='violet')
code: 配列xdataとリストydataの破線グラフを描画して、その色をバイオレットに設定する	plt.plot(xdata, ydata, linestyle='dash', color='violet')	plt.plot(xdata, ydata, linestyle='dash', color='violet')
code: 配列xdataと配列ydataについて破線グラフを描画して、その色をバイオレットに変更する	plt.plot(xdata, ydata, linestyle='dash', color='violet')	plt.plot(xdata, ydata, linestyle='dash', color='violet')
code: 破線グラフの色を小麦変える	plt.plot(xdata, ydata, linestyle='dash', color='wheat')	plt.plot(xdata, ydata, linestyle='dash', color='wheat')
code: 破線グラフの色を小麦にする	plt.plot(xdata, ydata, linestyle='dash', color='wheat')	plt.plot(xdata, ydata, linestyle='dash', color='wheat')
code: 配列xdataとデータ列ydataの破線グラフを描画して、色を小麦にする	plt.plot(xdata, ydata, linestyle='dash', color='wheat')	plt.plot(xdata, ydata, linestyle='dash', color='wheat')
code: 数列xdataとイテラブルydataについて破線を描画してその色を小麦に指定する	plt.plot(xdata, ydata, linestyle='dash', color='wheat')	plt.plot(xdata, ydata, linestyle='dash', color='wheat')
code: 破線グラフの色をホワイトとする	plt.plot(xdata, ydata, linestyle='dash', color='white')	plt.plot(xdata, ydata, linestyle='dash', color='white')
code: 破線の色をホワイトに変更する	plt.plot(xdata, ydata, linestyle='dash', color='white')	plt.plot(xdata, ydata, linestyle='dash', color='white')
code: イテラブルxdataとデータ列ydataについて破線を描画して色をホワイトとする	plt.plot(xdata, ydata, linestyle='dash', color='white')	plt.plot(xdata, ydata, linestyle='dash', color='white')
code: 配列xdataとデータ列ydataの破線を描画してその色をホワイトに設定する	plt.plot(xdata, ydata, linestyle='dash', color='white')	plt.plot(xdata, ydata, linestyle='dash', color='white')
code: 破線の色をホワイトスモークに指定する	plt.plot(xdata, ydata, linestyle='dash', color='whitesmoke')	plt.plot(xdata, ydata, linestyle='dash', color='whitesmoke')
code: 破線グラフの色をホワイトスモークにする	plt.plot(xdata, ydata, linestyle='dash', color='whitesmoke')	plt.plot(xdata, ydata, linestyle='dash', color='whitesmoke')
code: 配列xdataとデータ列ydataについて破線グラフを描画して色をホワイトスモークに設定する	plt.plot(xdata, ydata, linestyle='dash', color='whitesmoke')	plt.plot(xdata, ydata, linestyle='dash', color='whitesmoke')
code: 配列xdataとイテラブルydataについて破線グラフを描画して、色をホワイトスモークに設定する	plt.plot(xdata, ydata, linestyle='dash', color='whitesmoke')	plt.plot(xdata, ydata, linestyle='dash', color='whitesmoke')
code: 破線の色を黄色にする	plt.plot(xdata, ydata, linestyle='dash', color='yellow')	plt.plot(xdata, ydata, linestyle='dash', color='yellow')
code: 破線の色を黄色とする	plt.plot(xdata, ydata, linestyle='dash', color='yellow')	plt.plot(xdata, ydata, linestyle='dash', color='yellow')
code: リストxdataとリストydataについて破線グラフを描画してその色を黄色変える	plt.plot(xdata, ydata, linestyle='dash', color='yellow')	plt.plot(xdata, ydata, linestyle='dash', color='yellow')
code: データ列xdataとリストydataについて破線を描画してその色を黄色とする	plt.plot(xdata, ydata, linestyle='dash', color='yellow')	plt.plot(xdata, ydata, linestyle='dash', color='yellow')
code: 破線グラフの色をイエローグリーンとする	plt.plot(xdata, ydata, linestyle='dash', color='yellowgreen')	plt.plot(xdata, ydata, linestyle='dash', color='yellowgreen')
code: 破線の色をイエローグリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='greenyellow')	plt.plot(xdata, ydata, linestyle='dash', color='yellowgreen')
code: 配列xdataとイテラブルydataについて破線グラフを描画して色をイエローグリーンに設定する	plt.plot(xdata, ydata, linestyle='dash', color='greenyellow')	plt.plot(xdata, ydata, linestyle='dash', color='yellowgreen')
code: リストxdataとリストydataの破線グラフを描画して、その色をイエローグリーンにする	plt.plot(xdata, ydata, linestyle='dash', color='yellowgreen')	plt.plot(xdata, ydata, linestyle='dash', color='yellowgreen')
code: アリスブルー色の折れ線を描画して線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='aliceblue')	plt.plot(xdata, ydata, linewidth=n, color='aliceblue')
code: アリスブルー色の折れ線を描画して、線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='aliceblue')	plt.plot(xdata, ydata, linewidth=n, color='aliceblue')
code: データ列xdataと配列ydataについてアリスブルー色の折れ線グラフを描画して、線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='aliceblue')	plt.plot(xdata, ydata, linewidth=n, color='aliceblue')
code: イテラブルxdataとデータ列ydataについてアリスブルー色の折れ線グラフを描画して線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='aliceblue')	plt.plot(xdata, ydata, linewidth=n, color='aliceblue')
code: アンティークホワイト色の折れ線を描画してその線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='antiquewhite')	plt.plot(xdata, ydata, linewidth=n, color='antiquewhite')
code: アンティークホワイト色の折れ線を描画して線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='antiquewhite')	plt.plot(xdata, ydata, linewidth=n, color='antiquewhite')
code: 配列xdataとデータ列ydataについてアンティークホワイト色の折れ線を描画して、その線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='antiquewhite')	plt.plot(xdata, ydata, linewidth=n, color='antiquewhite')
code: リストxdataと配列ydataについてアンティークホワイト色の折れ線を描画して、線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='antiquewhite')	plt.plot(xdata, ydata, linewidth=n, color='antiquewhite')
code: アクア色の折れ線グラフを描画して線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='aqua')	plt.plot(xdata, ydata, linewidth=n, color='aqua')
code: アクア色の折れ線グラフを描画して、その線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='aqua')	plt.plot(xdata, ydata, linewidth=n, color='aqua')
code: 数列xdataと配列ydataについてアクア色の折れ線グラフを描画して線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='aqua')	plt.plot(xdata, ydata, linewidth=n, color='aqua')
code: リストxdataとデータ列ydataについてアクア色の折れ線を描画して、線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='aqua')	plt.plot(xdata, ydata, linewidth=n, color='aqua')
code: アクアマリン色の折れ線グラフを描画して、その線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='aquamarine')	plt.plot(xdata, ydata, linewidth=n, color='aquamarine')
code: アクアマリン色の折れ線グラフを描画してその線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='aquamarine')	plt.plot(xdata, ydata, linewidth=n, color='aquamarine')
code: 配列xdataとリストydataについてアクアマリン色の折れ線を描画して、その線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='aquamarine')	plt.plot(xdata, ydata, linewidth=n, color='aquamarine')
code: イテラブルxdataと数列ydataについてアクアマリン色の折れ線を描画してその線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='aquamarine')	plt.plot(xdata, ydata, linewidth=n, color='aquamarine')
code: 紺碧色の折れ線グラフを描画して線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='azure')	plt.plot(xdata, ydata, linewidth=n, color='azure')
code: 紺碧色の折れ線グラフを描画して、その線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='azure')	plt.plot(xdata, ydata, linewidth=n, color='azure')
code: 配列xdataとリストydataについて紺碧色の折れ線グラフを描画してその線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='azure')	plt.plot(xdata, ydata, linewidth=n, color='azure')
code: データ列xdataとデータ列ydataについて紺碧色の折れ線グラフを描画して、その線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='azure')	plt.plot(xdata, ydata, linewidth=n, color='azure')
code: ベージュ色の折れ線グラフを描画してその線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='beige')	plt.plot(xdata, ydata, linewidth=n, color='beige')
code: ベージュ色の折れ線グラフを描画してその線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='beige')	plt.plot(xdata, ydata, linewidth=n, color='beige')
code: イテラブルxdataと数列ydataについてベージュ色の折れ線を描画して、線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='beige')	plt.plot(xdata, ydata, linewidth=n, color='beige')
code: イテラブルxdataと配列ydataについてベージュ色の折れ線グラフを描画して、その線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='beige')	plt.plot(xdata, ydata, linewidth=n, color='beige')
code: ビスク色の折れ線グラフを描画して、線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='bisque')	plt.plot(xdata, ydata, linewidth=n, color='bisque')
code: ビスク色の折れ線グラフを描画して、線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='bisque')	plt.plot(xdata, ydata, linewidth=n, color='bisque')
code: イテラブルxdataと配列ydataについてビスク色の折れ線グラフを描画して、線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='bisque')	plt.plot(xdata, ydata, linewidth=n, color='bisque')
code: リストxdataとリストydataについてビスク色の折れ線グラフを描画して線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='bisque')	plt.plot(xdata, ydata, linewidth=n, color='bisque')
code: ブラック色の折れ線を描画して、その線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='black')	plt.plot(xdata, ydata, linewidth=n, color='black')
code: ブラック色の折れ線を描画して、線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='black')	plt.plot(xdata, ydata, linewidth=n, color='black')
code: リストxdataと配列ydataについてブラック色の折れ線グラフを描画してその線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='black')	plt.plot(xdata, ydata, linewidth=n, color='black')
code: 数列xdataとデータ列ydataについてブラック色の折れ線を描画してその線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='black')	plt.plot(xdata, ydata, linewidth=n, color='black')
code: ブランチドアーモンド色の折れ線を描画してその線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='blanchedalmond')	plt.plot(xdata, ydata, linewidth=n, color='blanchedalmond')
code: ブランチドアーモンド色の折れ線を描画してその線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='blanchedalmond')	plt.plot(xdata, ydata, linewidth=n, color='blanchedalmond')
code: リストxdataとイテラブルydataについてブランチドアーモンド色の折れ線グラフを描画して、線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='blanchedalmond')	plt.plot(xdata, ydata, linewidth=n, color='blanchedalmond')
code: 数列xdataと配列ydataについてブランチドアーモンド色の折れ線を描画して線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='blanchedalmond')	plt.plot(xdata, ydata, linewidth=n, color='blanchedalmond')
code: 青色の折れ線を描画して、その線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='blue')	plt.plot(xdata, ydata, linewidth=n, color='blue')
code: 青色の折れ線を描画して線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='blue')	plt.plot(xdata, ydata, linewidth=n, color='blue')
code: イテラブルxdataとイテラブルydataについて青色の折れ線グラフを描画して、線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='blue')	plt.plot(xdata, ydata, linewidth=n, color='blue')
code: リストxdataと数列ydataについて青色の折れ線を描画してその線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='blue')	plt.plot(xdata, ydata, linewidth=n, color='blue')
code: ブルーバイオレット色の折れ線を描画して、線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='blueviolet')	plt.plot(xdata, ydata, linewidth=n, color='blueviolet')
code: ブルーバイオレット色の折れ線を描画して、その線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='blueviolet')	plt.plot(xdata, ydata, linewidth=n, color='blueviolet')
code: 配列xdataとイテラブルydataについてブルーバイオレット色の折れ線グラフを描画して、その線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='blueviolet')	plt.plot(xdata, ydata, linewidth=n, color='blueviolet')
code: リストxdataとイテラブルydataについてブルーバイオレット色の折れ線を描画して、その線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='blueviolet')	plt.plot(xdata, ydata, linewidth=n, color='blueviolet')
code: ブラウン色の折れ線を描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='brown')	plt.plot(xdata, ydata, linewidth=n, color='brown')
code: ブラウン色の折れ線を描画して線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='brown')	plt.plot(xdata, ydata, linewidth=n, color='brown')
code: リストxdataとデータ列ydataについてブラウン色の折れ線を描画してその線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='brown')	plt.plot(xdata, ydata, linewidth=n, color='brown')
code: リストxdataとイテラブルydataについてブラウン色の折れ線を描画して、線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='brown')	plt.plot(xdata, ydata, linewidth=n, color='brown')
code: ハリウッド色の折れ線を描画して、その線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='burlywood')	plt.plot(xdata, ydata, linewidth=n, color='burlywood')
code: ハリウッド色の折れ線を描画して線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='burlywood')	plt.plot(xdata, ydata, linewidth=n, color='burlywood')
code: データ列xdataとイテラブルydataについてハリウッド色の折れ線を描画して線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='burlywood')	plt.plot(xdata, ydata, linewidth=n, color='burlywood')
code: リストxdataと数列ydataについてハリウッド色の折れ線グラフを描画して線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='burlywood')	plt.plot(xdata, ydata, linewidth=n, color='burlywood')
code: カデットブルー色の折れ線グラフを描画して線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='cadetblue')	plt.plot(xdata, ydata, linewidth=n, color='cadetblue')
code: カデットブルー色の折れ線を描画して、線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='cadetblue')	plt.plot(xdata, ydata, linewidth=n, color='cadetblue')
code: データ列xdataとリストydataについてカデットブルー色の折れ線グラフを描画して、線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='cadetblue')	plt.plot(xdata, ydata, linewidth=n, color='cadetblue')
code: リストxdataとリストydataについてカデットブルー色の折れ線を描画して、その線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='cadetblue')	plt.plot(xdata, ydata, linewidth=n, color='cadetblue')
code: シャルトルーズ色の折れ線グラフを描画してその線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='chartreuse')	plt.plot(xdata, ydata, linewidth=n, color='chartreuse')
code: シャルトルーズ色の折れ線を描画して、その線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='chartreuse')	plt.plot(xdata, ydata, linewidth=n, color='chartreuse')
code: データ列xdataとイテラブルydataについてシャルトルーズ色の折れ線を描画して、線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='chartreuse')	plt.plot(xdata, ydata, linewidth=n, color='chartreuse')
code: イテラブルxdataとデータ列ydataについてシャルトルーズ色の折れ線を描画して、その線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='chartreuse')	plt.plot(xdata, ydata, linewidth=n, color='chartreuse')
code: チョコレート色の折れ線を描画して線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='chocolate')	plt.plot(xdata, ydata, linewidth=n, color='chocolate')
code: チョコレート色の折れ線グラフを描画して、その線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='chocolate')	plt.plot(xdata, ydata, linewidth=n, color='chocolate')
code: 配列xdataとイテラブルydataについてチョコレート色の折れ線を描画して、線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='chocolate')	plt.plot(xdata, ydata, linewidth=n, color='chocolate')
code: 数列xdataとデータ列ydataについてチョコレート色の折れ線を描画して、線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='chocolate')	plt.plot(xdata, ydata, linewidth=n, color='chocolate')
code: コーラル色の折れ線グラフを描画してその線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='coral')	plt.plot(xdata, ydata, linewidth=n, color='coral')
code: コーラル色の折れ線を描画して、線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='coral')	plt.plot(xdata, ydata, linewidth=n, color='coral')
code: イテラブルxdataと配列ydataについてコーラル色の折れ線を描画して、線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='coral')	plt.plot(xdata, ydata, linewidth=n, color='coral')
code: 配列xdataと数列ydataについてコーラル色の折れ線を描画してその線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='coral')	plt.plot(xdata, ydata, linewidth=n, color='coral')
code: コーンフラワーブルー色の折れ線を描画して線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='cornflowerblue')	plt.plot(xdata, ydata, linewidth=n, color='cornflowerblue')
code: コーンフラワーブルー色の折れ線を描画して、その線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='cornflowerblue')	plt.plot(xdata, ydata, linewidth=n, color='cornflowerblue')
code: 配列xdataとリストydataについてコーンフラワーブルー色の折れ線を描画して、その線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='cornflowerblue')	plt.plot(xdata, ydata, linewidth=n, color='cornflowerblue')
code: 数列xdataと配列ydataについてコーンフラワーブルー色の折れ線グラフを描画して、その線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='cornflowerblue')	plt.plot(xdata, ydata, linewidth=n, color='cornflowerblue')
code: コーンズシルク色の折れ線グラフを描画してその線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='cornsilk')	plt.plot(xdata, ydata, linewidth=n, color='cornsilk')
code: コーンズシルク色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='cornsilk')	plt.plot(xdata, ydata, linewidth=n, color='cornsilk')
code: 数列xdataとデータ列ydataについてコーンズシルク色の折れ線グラフを描画して、線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='cornsilk')	plt.plot(xdata, ydata, linewidth=n, color='cornsilk')
code: リストxdataと数列ydataについてコーンズシルク色の折れ線を描画して、その線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='cornsilk')	plt.plot(xdata, ydata, linewidth=n, color='cornsilk')
code: クリムゾン色の折れ線を描画して線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='crimson')	plt.plot(xdata, ydata, linewidth=n, color='crimson')
code: クリムゾン色の折れ線グラフを描画して線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='crimson')	plt.plot(xdata, ydata, linewidth=n, color='crimson')
code: 配列xdataとリストydataについてクリムゾン色の折れ線グラフを描画して、線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='crimson')	plt.plot(xdata, ydata, linewidth=n, color='crimson')
code: 配列xdataと数列ydataについてクリムゾン色の折れ線を描画して、その線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='crimson')	plt.plot(xdata, ydata, linewidth=n, color='crimson')
code: シアン色の折れ線を描画して線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='cyan')	plt.plot(xdata, ydata, linewidth=n, color='cyan')
code: シアン色の折れ線を描画して線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='cyan')	plt.plot(xdata, ydata, linewidth=n, color='cyan')
code: リストxdataと数列ydataについてシアン色の折れ線グラフを描画してその線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='cyan')	plt.plot(xdata, ydata, linewidth=n, color='cyan')
code: イテラブルxdataとデータ列ydataについてシアン色の折れ線を描画して、その線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='cyan')	plt.plot(xdata, ydata, linewidth=n, color='cyan')
code: ダークブルー色の折れ線グラフを描画してその線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='darkblue')	plt.plot(xdata, ydata, linewidth=n, color='darkblue')
code: ダークブルー色の折れ線を描画して、線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='darkblue')	plt.plot(xdata, ydata, linewidth=n, color='darkblue')
code: リストxdataと配列ydataについてダークブルー色の折れ線グラフを描画して、線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='darkblue')	plt.plot(xdata, ydata, linewidth=n, color='darkblue')
code: イテラブルxdataとリストydataについてダークブルー色の折れ線を描画して、線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='darkblue')	plt.plot(xdata, ydata, linewidth=n, color='darkblue')
code: ダークシアン色の折れ線を描画して、その線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='darkcyan')	plt.plot(xdata, ydata, linewidth=n, color='darkcyan')
code: ダークシアン色の折れ線グラフを描画して、その線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='darkcyan')	plt.plot(xdata, ydata, linewidth=n, color='darkcyan')
code: 数列xdataと数列ydataについてダークシアン色の折れ線を描画して、線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkcyan')	plt.plot(xdata, ydata, linewidth=n, color='darkcyan')
code: 数列xdataとデータ列ydataについてダークシアン色の折れ線グラフを描画して、その線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='darkcyan')	plt.plot(xdata, ydata, linewidth=n, color='darkcyan')
code: ダークゴールデンロッド色の折れ線グラフを描画してその線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='darkgoldenrod')	plt.plot(xdata, ydata, linewidth=n, color='darkgoldenrod')
code: ダークゴールデンロッド色の折れ線を描画してその線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='darkgoldenrod')	plt.plot(xdata, ydata, linewidth=n, color='darkgoldenrod')
code: データ列xdataと配列ydataについてダークゴールデンロッド色の折れ線グラフを描画して、その線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='darkgoldenrod')	plt.plot(xdata, ydata, linewidth=n, color='darkgoldenrod')
code: リストxdataと配列ydataについてダークゴールデンロッド色の折れ線を描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkgoldenrod')	plt.plot(xdata, ydata, linewidth=n, color='darkgoldenrod')
code: ダークグレー色の折れ線を描画してその線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='darkgray')	plt.plot(xdata, ydata, linewidth=n, color='darkgray')
code: ダークグレー色の折れ線グラフを描画して、その線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='darkgrey')	plt.plot(xdata, ydata, linewidth=n, color='darkgray')
code: リストxdataと配列ydataについてダークグレー色の折れ線グラフを描画して、線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='darkgray')	plt.plot(xdata, ydata, linewidth=n, color='darkgray')
code: データ列xdataとイテラブルydataについてダークグレー色の折れ線を描画して、線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='darkgray')	plt.plot(xdata, ydata, linewidth=n, color='darkgray')
code: ダークグリーン色の折れ線を描画して、線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkgreen')	plt.plot(xdata, ydata, linewidth=n, color='darkgreen')
code: ダークグリーン色の折れ線グラフを描画して線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='darkgreen')	plt.plot(xdata, ydata, linewidth=n, color='darkgreen')
code: 数列xdataとリストydataについてダークグリーン色の折れ線を描画して、その線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='darkgreen')	plt.plot(xdata, ydata, linewidth=n, color='darkgreen')
code: 配列xdataと数列ydataについてダークグリーン色の折れ線グラフを描画して、その線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='darkgreen')	plt.plot(xdata, ydata, linewidth=n, color='darkgreen')
code: ダークグレー色の折れ線グラフを描画して、その線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='darkgray')	plt.plot(xdata, ydata, linewidth=n, color='darkgrey')
code: ダークグレー色の折れ線を描画して、その線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='darkgray')	plt.plot(xdata, ydata, linewidth=n, color='darkgrey')
code: リストxdataとリストydataについてダークグレー色の折れ線グラフを描画してその線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkgray')	plt.plot(xdata, ydata, linewidth=n, color='darkgrey')
code: リストxdataとリストydataについてダークグレー色の折れ線グラフを描画してその線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='darkgray')	plt.plot(xdata, ydata, linewidth=n, color='darkgrey')
code: ダークカーキ色の折れ線を描画して線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkkhaki')	plt.plot(xdata, ydata, linewidth=n, color='darkkhaki')
code: ダークカーキ色の折れ線を描画して線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='darkkhaki')	plt.plot(xdata, ydata, linewidth=n, color='darkkhaki')
code: リストxdataとデータ列ydataについてダークカーキ色の折れ線グラフを描画して、線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='darkkhaki')	plt.plot(xdata, ydata, linewidth=n, color='darkkhaki')
code: 配列xdataと配列ydataについてダークカーキ色の折れ線グラフを描画して、線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='darkkhaki')	plt.plot(xdata, ydata, linewidth=n, color='darkkhaki')
code: ダークマゼンタ色の折れ線グラフを描画してその線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='darkmagenta')	plt.plot(xdata, ydata, linewidth=n, color='darkmagenta')
code: ダークマゼンタ色の折れ線グラフを描画して線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='darkmagenta')	plt.plot(xdata, ydata, linewidth=n, color='darkmagenta')
code: 数列xdataとデータ列ydataについてダークマゼンタ色の折れ線を描画して、線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='darkmagenta')	plt.plot(xdata, ydata, linewidth=n, color='darkmagenta')
code: リストxdataとイテラブルydataについてダークマゼンタ色の折れ線を描画して線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='darkmagenta')	plt.plot(xdata, ydata, linewidth=n, color='darkmagenta')
code: ダークオリーブグリーン色の折れ線グラフを描画して線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='darkolivegreen')	plt.plot(xdata, ydata, linewidth=n, color='darkolivegreen')
code: ダークオリーブグリーン色の折れ線グラフを描画してその線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkolivegreen')	plt.plot(xdata, ydata, linewidth=n, color='darkolivegreen')
code: データ列xdataとイテラブルydataについてダークオリーブグリーン色の折れ線を描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkolivegreen')	plt.plot(xdata, ydata, linewidth=n, color='darkolivegreen')
code: 配列xdataとデータ列ydataについてダークオリーブグリーン色の折れ線グラフを描画してその線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='darkolivegreen')	plt.plot(xdata, ydata, linewidth=n, color='darkolivegreen')
code: ダークオレンジ色の折れ線を描画してその線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkorange')	plt.plot(xdata, ydata, linewidth=n, color='darkorange')
code: ダークオレンジ色の折れ線を描画してその線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkorange')	plt.plot(xdata, ydata, linewidth=n, color='darkorange')
code: データ列xdataとデータ列ydataについてダークオレンジ色の折れ線を描画して線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='darkorange')	plt.plot(xdata, ydata, linewidth=n, color='darkorange')
code: イテラブルxdataと数列ydataについてダークオレンジ色の折れ線を描画して、その線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='darkorange')	plt.plot(xdata, ydata, linewidth=n, color='darkorange')
code: ダークオーキッド色の折れ線グラフを描画して、その線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='darkorchid')	plt.plot(xdata, ydata, linewidth=n, color='darkorchid')
code: ダークオーキッド色の折れ線を描画して、線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='darkorchid')	plt.plot(xdata, ydata, linewidth=n, color='darkorchid')
code: データ列xdataと数列ydataについてダークオーキッド色の折れ線グラフを描画して、線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkorchid')	plt.plot(xdata, ydata, linewidth=n, color='darkorchid')
code: 配列xdataとイテラブルydataについてダークオーキッド色の折れ線を描画してその線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='darkorchid')	plt.plot(xdata, ydata, linewidth=n, color='darkorchid')
code: ダークレッド色の折れ線を描画してその線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='darkred')	plt.plot(xdata, ydata, linewidth=n, color='darkred')
code: ダークレッド色の折れ線グラフを描画して線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkred')	plt.plot(xdata, ydata, linewidth=n, color='darkred')
code: イテラブルxdataとリストydataについてダークレッド色の折れ線グラフを描画して線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='darkred')	plt.plot(xdata, ydata, linewidth=n, color='darkred')
code: 数列xdataと配列ydataについてダークレッド色の折れ線グラフを描画してその線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkred')	plt.plot(xdata, ydata, linewidth=n, color='darkred')
code: ダークサーモン色の折れ線グラフを描画して線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='darksalmon')	plt.plot(xdata, ydata, linewidth=n, color='darksalmon')
code: ダークサーモン色の折れ線を描画して、線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='darksalmon')	plt.plot(xdata, ydata, linewidth=n, color='darksalmon')
code: 配列xdataと配列ydataについてダークサーモン色の折れ線グラフを描画して、その線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='darksalmon')	plt.plot(xdata, ydata, linewidth=n, color='darksalmon')
code: リストxdataとリストydataについてダークサーモン色の折れ線グラフを描画して線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='darksalmon')	plt.plot(xdata, ydata, linewidth=n, color='darksalmon')
code: ダークシアグリーン色の折れ線を描画して、その線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='darkseagreen')	plt.plot(xdata, ydata, linewidth=n, color='darkseagreen')
code: ダークシアグリーン色の折れ線を描画して、線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='darkseagreen')	plt.plot(xdata, ydata, linewidth=n, color='darkseagreen')
code: 数列xdataとイテラブルydataについてダークシアグリーン色の折れ線を描画して線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='darkseagreen')	plt.plot(xdata, ydata, linewidth=n, color='darkseagreen')
code: イテラブルxdataとリストydataについてダークシアグリーン色の折れ線グラフを描画してその線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='darkseagreen')	plt.plot(xdata, ydata, linewidth=n, color='darkseagreen')
code: ダークスレートブルー色の折れ線グラフを描画して、線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='darkslateblue')	plt.plot(xdata, ydata, linewidth=n, color='darkslateblue')
code: ダークスレートブルー色の折れ線グラフを描画して線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='darkslateblue')	plt.plot(xdata, ydata, linewidth=n, color='darkslateblue')
code: データ列xdataとリストydataについてダークスレートブルー色の折れ線を描画してその線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='darkslateblue')	plt.plot(xdata, ydata, linewidth=n, color='darkslateblue')
code: データ列xdataと数列ydataについてダークスレートブルー色の折れ線グラフを描画して、その線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='darkslateblue')	plt.plot(xdata, ydata, linewidth=n, color='darkslateblue')
code: ダークスラテグレー色の折れ線を描画して、その線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='darkslategray')	plt.plot(xdata, ydata, linewidth=n, color='darkslategray')
code: ダークスラテグレー色の折れ線を描画して、線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='darkslategray')	plt.plot(xdata, ydata, linewidth=n, color='darkslategray')
code: 配列xdataとイテラブルydataについてダークスラテグレー色の折れ線を描画して線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkslategray')	plt.plot(xdata, ydata, linewidth=n, color='darkslategray')
code: 数列xdataとリストydataについてダークスラテグレー色の折れ線グラフを描画して、線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='darkslategray')	plt.plot(xdata, ydata, linewidth=n, color='darkslategray')
code: ダーク・スラテグレー色の折れ線を描画して線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='darkslategrey')	plt.plot(xdata, ydata, linewidth=n, color='darkslategrey')
code: ダーク・スラテグレー色の折れ線グラフを描画してその線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='darkslategrey')	plt.plot(xdata, ydata, linewidth=n, color='darkslategrey')
code: イテラブルxdataと配列ydataについてダーク・スラテグレー色の折れ線グラフを描画して線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkslategrey')	plt.plot(xdata, ydata, linewidth=n, color='darkslategrey')
code: イテラブルxdataとイテラブルydataについてダーク・スラテグレー色の折れ線グラフを描画して、線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='darkslategrey')	plt.plot(xdata, ydata, linewidth=n, color='darkslategrey')
code: ダークターコイズ色の折れ線を描画して、その線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='darkturquoise')	plt.plot(xdata, ydata, linewidth=n, color='darkturquoise')
code: ダークターコイズ色の折れ線を描画して、その線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='darkturquoise')	plt.plot(xdata, ydata, linewidth=n, color='darkturquoise')
code: データ列xdataと数列ydataについてダークターコイズ色の折れ線を描画して、その線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='darkturquoise')	plt.plot(xdata, ydata, linewidth=n, color='darkturquoise')
code: 数列xdataと数列ydataについてダークターコイズ色の折れ線グラフを描画して線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='darkturquoise')	plt.plot(xdata, ydata, linewidth=n, color='darkturquoise')
code: ダークバイオレット色の折れ線グラフを描画してその線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='darkviolet')	plt.plot(xdata, ydata, linewidth=n, color='darkviolet')
code: ダークバイオレット色の折れ線グラフを描画して線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='darkviolet')	plt.plot(xdata, ydata, linewidth=n, color='darkviolet')
code: 配列xdataとリストydataについてダークバイオレット色の折れ線グラフを描画して、その線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='darkviolet')	plt.plot(xdata, ydata, linewidth=n, color='darkviolet')
code: イテラブルxdataとイテラブルydataについてダークバイオレット色の折れ線グラフを描画して、線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='darkviolet')	plt.plot(xdata, ydata, linewidth=n, color='darkviolet')
code: デピンク色の折れ線を描画して線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='deeppink')	plt.plot(xdata, ydata, linewidth=n, color='deeppink')
code: デピンク色の折れ線を描画して線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='deeppink')	plt.plot(xdata, ydata, linewidth=n, color='deeppink')
code: リストxdataとデータ列ydataについてデピンク色の折れ線を描画して、その線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='deeppink')	plt.plot(xdata, ydata, linewidth=n, color='deeppink')
code: 数列xdataとデータ列ydataについてデピンク色の折れ線を描画して線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='deeppink')	plt.plot(xdata, ydata, linewidth=n, color='deeppink')
code: ディープスカイブルー色の折れ線を描画して、線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='deepskyblue')	plt.plot(xdata, ydata, linewidth=n, color='deepskyblue')
code: ディープスカイブルー色の折れ線グラフを描画して、線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='deepskyblue')	plt.plot(xdata, ydata, linewidth=n, color='deepskyblue')
code: 数列xdataと配列ydataについてディープスカイブルー色の折れ線グラフを描画して、線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='deepskyblue')	plt.plot(xdata, ydata, linewidth=n, color='deepskyblue')
code: データ列xdataとイテラブルydataについてディープスカイブルー色の折れ線を描画して線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='deepskyblue')	plt.plot(xdata, ydata, linewidth=n, color='deepskyblue')
code: ディムグレー色の折れ線を描画して、線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='dimgrey')	plt.plot(xdata, ydata, linewidth=n, color='dimgray')
code: ディムグレー色の折れ線を描画して、その線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='dimgray')	plt.plot(xdata, ydata, linewidth=n, color='dimgray')
code: イテラブルxdataと数列ydataについてディムグレー色の折れ線グラフを描画して線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='dimgray')	plt.plot(xdata, ydata, linewidth=n, color='dimgray')
code: 配列xdataと配列ydataについてディムグレー色の折れ線を描画して線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='dimgrey')	plt.plot(xdata, ydata, linewidth=n, color='dimgray')
code: ディムグレー色の折れ線を描画して線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='dimgray')	plt.plot(xdata, ydata, linewidth=n, color='dimgrey')
code: ディムグレー色の折れ線グラフを描画して、線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='dimgrey')	plt.plot(xdata, ydata, linewidth=n, color='dimgrey')
code: データ列xdataとデータ列ydataについてディムグレー色の折れ線を描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='dimgray')	plt.plot(xdata, ydata, linewidth=n, color='dimgrey')
code: データ列xdataとイテラブルydataについてディムグレー色の折れ線を描画して線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='dimgray')	plt.plot(xdata, ydata, linewidth=n, color='dimgrey')
code: ドジャーブルー色の折れ線を描画して線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='dodgerblue')	plt.plot(xdata, ydata, linewidth=n, color='dodgerblue')
code: ドジャーブルー色の折れ線グラフを描画して、線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='dodgerblue')	plt.plot(xdata, ydata, linewidth=n, color='dodgerblue')
code: データ列xdataと数列ydataについてドジャーブルー色の折れ線を描画して、その線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='dodgerblue')	plt.plot(xdata, ydata, linewidth=n, color='dodgerblue')
code: 配列xdataとイテラブルydataについてドジャーブルー色の折れ線を描画してその線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='dodgerblue')	plt.plot(xdata, ydata, linewidth=n, color='dodgerblue')
code: 耐火レンガ色の折れ線を描画して線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='firebrick')	plt.plot(xdata, ydata, linewidth=n, color='firebrick')
code: 耐火レンガ色の折れ線を描画して、線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='firebrick')	plt.plot(xdata, ydata, linewidth=n, color='firebrick')
code: イテラブルxdataとリストydataについて耐火レンガ色の折れ線を描画して線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='firebrick')	plt.plot(xdata, ydata, linewidth=n, color='firebrick')
code: 配列xdataとリストydataについて耐火レンガ色の折れ線グラフを描画してその線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='firebrick')	plt.plot(xdata, ydata, linewidth=n, color='firebrick')
code: フローラルホワイト色の折れ線を描画して、線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='floralwhite')	plt.plot(xdata, ydata, linewidth=n, color='floralwhite')
code: フローラルホワイト色の折れ線を描画して、その線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='floralwhite')	plt.plot(xdata, ydata, linewidth=n, color='floralwhite')
code: 数列xdataと数列ydataについてフローラルホワイト色の折れ線を描画して、線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='floralwhite')	plt.plot(xdata, ydata, linewidth=n, color='floralwhite')
code: 数列xdataとデータ列ydataについてフローラルホワイト色の折れ線グラフを描画してその線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='floralwhite')	plt.plot(xdata, ydata, linewidth=n, color='floralwhite')
code: フォレストグリーン色の折れ線を描画してその線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='forestgreen')	plt.plot(xdata, ydata, linewidth=n, color='forestgreen')
code: フォレストグリーン色の折れ線を描画して、その線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='forestgreen')	plt.plot(xdata, ydata, linewidth=n, color='forestgreen')
code: リストxdataとイテラブルydataについてフォレストグリーン色の折れ線を描画して、線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='forestgreen')	plt.plot(xdata, ydata, linewidth=n, color='forestgreen')
code: 配列xdataとデータ列ydataについてフォレストグリーン色の折れ線グラフを描画して線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='forestgreen')	plt.plot(xdata, ydata, linewidth=n, color='forestgreen')
code: フクシア色の折れ線を描画して、その線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='fuchsia')	plt.plot(xdata, ydata, linewidth=n, color='fuchsia')
code: フクシア色の折れ線グラフを描画して、線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='fuchsia')	plt.plot(xdata, ydata, linewidth=n, color='fuchsia')
code: 数列xdataと数列ydataについてフクシア色の折れ線を描画して、線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='fuchsia')	plt.plot(xdata, ydata, linewidth=n, color='fuchsia')
code: データ列xdataとイテラブルydataについてフクシア色の折れ線を描画して、その線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='fuchsia')	plt.plot(xdata, ydata, linewidth=n, color='fuchsia')
code: ゲインズボロ色の折れ線グラフを描画してその線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='gainsboro')	plt.plot(xdata, ydata, linewidth=n, color='gainsboro')
code: ゲインズボロ色の折れ線を描画してその線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='gainsboro')	plt.plot(xdata, ydata, linewidth=n, color='gainsboro')
code: イテラブルxdataと配列ydataについてゲインズボロ色の折れ線を描画して、線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='gainsboro')	plt.plot(xdata, ydata, linewidth=n, color='gainsboro')
code: イテラブルxdataと数列ydataについてゲインズボロ色の折れ線を描画して、線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='gainsboro')	plt.plot(xdata, ydata, linewidth=n, color='gainsboro')
code: ゴーストホワイト色の折れ線を描画して、その線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='ghostwhite')	plt.plot(xdata, ydata, linewidth=n, color='ghostwhite')
code: ゴーストホワイト色の折れ線グラフを描画してその線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='ghostwhite')	plt.plot(xdata, ydata, linewidth=n, color='ghostwhite')
code: 配列xdataとリストydataについてゴーストホワイト色の折れ線グラフを描画して線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='ghostwhite')	plt.plot(xdata, ydata, linewidth=n, color='ghostwhite')
code: データ列xdataと配列ydataについてゴーストホワイト色の折れ線を描画してその線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='ghostwhite')	plt.plot(xdata, ydata, linewidth=n, color='ghostwhite')
code: ゴールド色の折れ線グラフを描画して、線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='gold')	plt.plot(xdata, ydata, linewidth=n, color='gold')
code: ゴールド色の折れ線グラフを描画して、線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='gold')	plt.plot(xdata, ydata, linewidth=n, color='gold')
code: データ列xdataとリストydataについてゴールド色の折れ線グラフを描画して、線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='gold')	plt.plot(xdata, ydata, linewidth=n, color='gold')
code: リストxdataとイテラブルydataについてゴールド色の折れ線を描画してその線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='gold')	plt.plot(xdata, ydata, linewidth=n, color='gold')
code: ゴールデンロッド色の折れ線グラフを描画してその線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='goldenrod')	plt.plot(xdata, ydata, linewidth=n, color='goldenrod')
code: ゴールデンロッド色の折れ線グラフを描画して線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='goldenrod')	plt.plot(xdata, ydata, linewidth=n, color='goldenrod')
code: イテラブルxdataとリストydataについてゴールデンロッド色の折れ線グラフを描画してその線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='goldenrod')	plt.plot(xdata, ydata, linewidth=n, color='goldenrod')
code: イテラブルxdataとリストydataについてゴールデンロッド色の折れ線を描画して、その線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='goldenrod')	plt.plot(xdata, ydata, linewidth=n, color='goldenrod')
code: グレー色の折れ線を描画して、線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='gray')	plt.plot(xdata, ydata, linewidth=n, color='gray')
code: グレー色の折れ線グラフを描画して、線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='gray')	plt.plot(xdata, ydata, linewidth=n, color='gray')
code: リストxdataと数列ydataについてグレー色の折れ線グラフを描画して線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='gray')	plt.plot(xdata, ydata, linewidth=n, color='gray')
code: リストxdataと数列ydataについてグレー色の折れ線グラフを描画してその線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='grey')	plt.plot(xdata, ydata, linewidth=n, color='gray')
code: グリーン色の折れ線を描画して線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='green')	plt.plot(xdata, ydata, linewidth=n, color='green')
code: グリーン色の折れ線を描画して、その線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='green')	plt.plot(xdata, ydata, linewidth=n, color='green')
code: 配列xdataと配列ydataについてグリーン色の折れ線グラフを描画して線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='green')	plt.plot(xdata, ydata, linewidth=n, color='green')
code: リストxdataとイテラブルydataについてグリーン色の折れ線を描画して線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='green')	plt.plot(xdata, ydata, linewidth=n, color='green')
code: グリーンイエロー色の折れ線グラフを描画してその線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='greenyellow')	plt.plot(xdata, ydata, linewidth=n, color='greenyellow')
code: グリーンイエロー色の折れ線グラフを描画して、その線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='yellowgreen')	plt.plot(xdata, ydata, linewidth=n, color='greenyellow')
code: 配列xdataとリストydataについてグリーンイエロー色の折れ線を描画して、線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='greenyellow')	plt.plot(xdata, ydata, linewidth=n, color='greenyellow')
code: データ列xdataと数列ydataについてグリーンイエロー色の折れ線グラフを描画して線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='yellowgreen')	plt.plot(xdata, ydata, linewidth=n, color='greenyellow')
code: グレー色の折れ線を描画してその線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='gray')	plt.plot(xdata, ydata, linewidth=n, color='grey')
code: グレー色の折れ線を描画して、線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='grey')	plt.plot(xdata, ydata, linewidth=n, color='grey')
code: 数列xdataとイテラブルydataについてグレー色の折れ線を描画して、線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='gray')	plt.plot(xdata, ydata, linewidth=n, color='grey')
code: 配列xdataとリストydataについてグレー色の折れ線グラフを描画して、線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='gray')	plt.plot(xdata, ydata, linewidth=n, color='grey')
code: ハニーデュー色の折れ線グラフを描画して、線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='honeydew')	plt.plot(xdata, ydata, linewidth=n, color='honeydew')
code: ハニーデュー色の折れ線グラフを描画して、線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='honeydew')	plt.plot(xdata, ydata, linewidth=n, color='honeydew')
code: リストxdataとリストydataについてハニーデュー色の折れ線グラフを描画して、線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='honeydew')	plt.plot(xdata, ydata, linewidth=n, color='honeydew')
code: リストxdataとリストydataについてハニーデュー色の折れ線グラフを描画して線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='honeydew')	plt.plot(xdata, ydata, linewidth=n, color='honeydew')
code: ホットピンク色の折れ線を描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='hotpink')	plt.plot(xdata, ydata, linewidth=n, color='hotpink')
code: ホットピンク色の折れ線を描画して線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='hotpink')	plt.plot(xdata, ydata, linewidth=n, color='hotpink')
code: イテラブルxdataとデータ列ydataについてホットピンク色の折れ線を描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='hotpink')	plt.plot(xdata, ydata, linewidth=n, color='hotpink')
code: データ列xdataと数列ydataについてホットピンク色の折れ線を描画して、その線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='hotpink')	plt.plot(xdata, ydata, linewidth=n, color='hotpink')
code: インディアンレッド色の折れ線グラフを描画してその線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='indianred')	plt.plot(xdata, ydata, linewidth=n, color='indianred')
code: インディアンレッド色の折れ線グラフを描画して、線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='indianred')	plt.plot(xdata, ydata, linewidth=n, color='indianred')
code: 数列xdataと配列ydataについてインディアンレッド色の折れ線グラフを描画して線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='indianred')	plt.plot(xdata, ydata, linewidth=n, color='indianred')
code: イテラブルxdataと配列ydataについてインディアンレッド色の折れ線グラフを描画してその線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='indianred')	plt.plot(xdata, ydata, linewidth=n, color='indianred')
code: インディゴ色の折れ線グラフを描画して、線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='indigo')	plt.plot(xdata, ydata, linewidth=n, color='indigo')
code: インディゴ色の折れ線を描画して線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='indigo')	plt.plot(xdata, ydata, linewidth=n, color='indigo')
code: データ列xdataとリストydataについてインディゴ色の折れ線を描画して、線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='indigo')	plt.plot(xdata, ydata, linewidth=n, color='indigo')
code: リストxdataとデータ列ydataについてインディゴ色の折れ線グラフを描画して、その線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='indigo')	plt.plot(xdata, ydata, linewidth=n, color='indigo')
code: アイボリー色の折れ線グラフを描画してその線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='ivory')	plt.plot(xdata, ydata, linewidth=n, color='ivory')
code: アイボリー色の折れ線を描画して線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='ivory')	plt.plot(xdata, ydata, linewidth=n, color='ivory')
code: データ列xdataと配列ydataについてアイボリー色の折れ線グラフを描画して、線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='ivory')	plt.plot(xdata, ydata, linewidth=n, color='ivory')
code: イテラブルxdataと数列ydataについてアイボリー色の折れ線を描画して、その線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='ivory')	plt.plot(xdata, ydata, linewidth=n, color='ivory')
code: カーキ色の折れ線グラフを描画してその線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='khaki')	plt.plot(xdata, ydata, linewidth=n, color='khaki')
code: カーキ色の折れ線グラフを描画して、その線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='khaki')	plt.plot(xdata, ydata, linewidth=n, color='khaki')
code: イテラブルxdataと配列ydataについてカーキ色の折れ線を描画して、線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='khaki')	plt.plot(xdata, ydata, linewidth=n, color='khaki')
code: イテラブルxdataとデータ列ydataについてカーキ色の折れ線グラフを描画して、線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='khaki')	plt.plot(xdata, ydata, linewidth=n, color='khaki')
code: ラベンダー色の折れ線グラフを描画して、その線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='lavender')	plt.plot(xdata, ydata, linewidth=n, color='lavender')
code: ラベンダー色の折れ線を描画して、線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lavender')	plt.plot(xdata, ydata, linewidth=n, color='lavender')
code: リストxdataとリストydataについてラベンダー色の折れ線グラフを描画して線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='lavender')	plt.plot(xdata, ydata, linewidth=n, color='lavender')
code: リストxdataとイテラブルydataについてラベンダー色の折れ線を描画してその線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='lavender')	plt.plot(xdata, ydata, linewidth=n, color='lavender')
code: ラベンダーブラッシュ色の折れ線グラフを描画してその線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='lavenderblush')	plt.plot(xdata, ydata, linewidth=n, color='lavenderblush')
code: ラベンダーブラッシュ色の折れ線を描画して線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='lavenderblush')	plt.plot(xdata, ydata, linewidth=n, color='lavenderblush')
code: 配列xdataとデータ列ydataについてラベンダーブラッシュ色の折れ線グラフを描画してその線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lavenderblush')	plt.plot(xdata, ydata, linewidth=n, color='lavenderblush')
code: 配列xdataと数列ydataについてラベンダーブラッシュ色の折れ線グラフを描画して、線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='lavenderblush')	plt.plot(xdata, ydata, linewidth=n, color='lavenderblush')
code: ローングリーン色の折れ線グラフを描画してその線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='lawngreen')	plt.plot(xdata, ydata, linewidth=n, color='lawngreen')
code: ローングリーン色の折れ線を描画して線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='lawngreen')	plt.plot(xdata, ydata, linewidth=n, color='lawngreen')
code: 数列xdataとリストydataについてローングリーン色の折れ線グラフを描画して、線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='lawngreen')	plt.plot(xdata, ydata, linewidth=n, color='lawngreen')
code: データ列xdataと数列ydataについてローングリーン色の折れ線グラフを描画して、その線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='lawngreen')	plt.plot(xdata, ydata, linewidth=n, color='lawngreen')
code: レモンシフォン色の折れ線グラフを描画して、その線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='lemonchiffon')	plt.plot(xdata, ydata, linewidth=n, color='lemonchiffon')
code: レモンシフォン色の折れ線グラフを描画して、その線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='lemonchiffon')	plt.plot(xdata, ydata, linewidth=n, color='lemonchiffon')
code: リストxdataと数列ydataについてレモンシフォン色の折れ線グラフを描画して、その線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='lemonchiffon')	plt.plot(xdata, ydata, linewidth=n, color='lemonchiffon')
code: データ列xdataとデータ列ydataについてレモンシフォン色の折れ線を描画してその線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lemonchiffon')	plt.plot(xdata, ydata, linewidth=n, color='lemonchiffon')
code: ライトブルー色の折れ線を描画して、線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='lightblue')	plt.plot(xdata, ydata, linewidth=n, color='lightblue')
code: ライトブルー色の折れ線を描画して線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightblue')	plt.plot(xdata, ydata, linewidth=n, color='lightblue')
code: 配列xdataと数列ydataについてライトブルー色の折れ線グラフを描画して線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='lightblue')	plt.plot(xdata, ydata, linewidth=n, color='lightblue')
code: リストxdataとイテラブルydataについてライトブルー色の折れ線を描画してその線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='lightblue')	plt.plot(xdata, ydata, linewidth=n, color='lightblue')
code: ライトコーラル色の折れ線を描画して線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='lightcoral')	plt.plot(xdata, ydata, linewidth=n, color='lightcoral')
code: ライトコーラル色の折れ線グラフを描画して、その線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='lightcoral')	plt.plot(xdata, ydata, linewidth=n, color='lightcoral')
code: データ列xdataとリストydataについてライトコーラル色の折れ線を描画してその線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightcoral')	plt.plot(xdata, ydata, linewidth=n, color='lightcoral')
code: 配列xdataとデータ列ydataについてライトコーラル色の折れ線グラフを描画して、その線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='lightcoral')	plt.plot(xdata, ydata, linewidth=n, color='lightcoral')
code: ライトシアン色の折れ線グラフを描画して線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='lightcyan')	plt.plot(xdata, ydata, linewidth=n, color='lightcyan')
code: ライトシアン色の折れ線を描画して、その線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='lightcyan')	plt.plot(xdata, ydata, linewidth=n, color='lightcyan')
code: リストxdataとデータ列ydataについてライトシアン色の折れ線を描画して、線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='lightcyan')	plt.plot(xdata, ydata, linewidth=n, color='lightcyan')
code: 数列xdataと数列ydataについてライトシアン色の折れ線グラフを描画してその線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightcyan')	plt.plot(xdata, ydata, linewidth=n, color='lightcyan')
code: ライトゴールドロディイエロー色の折れ線を描画して、線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='lightgoldenrodyellow')	plt.plot(xdata, ydata, linewidth=n, color='lightgoldenrodyellow')
code: ライトゴールドロディイエロー色の折れ線を描画して線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightgoldenrodyellow')	plt.plot(xdata, ydata, linewidth=n, color='lightgoldenrodyellow')
code: イテラブルxdataとリストydataについてライトゴールドロディイエロー色の折れ線グラフを描画してその線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='lightgoldenrodyellow')	plt.plot(xdata, ydata, linewidth=n, color='lightgoldenrodyellow')
code: リストxdataと数列ydataについてライトゴールドロディイエロー色の折れ線を描画して線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightgoldenrodyellow')	plt.plot(xdata, ydata, linewidth=n, color='lightgoldenrodyellow')
code: ライトグレー色の折れ線を描画して、線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightgrey')	plt.plot(xdata, ydata, linewidth=n, color='lightgray')
code: ライトグレー色の折れ線を描画して線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='lightgray')	plt.plot(xdata, ydata, linewidth=n, color='lightgray')
code: 数列xdataと数列ydataについてライトグレー色の折れ線グラフを描画して線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='lightgrey')	plt.plot(xdata, ydata, linewidth=n, color='lightgray')
code: データ列xdataと数列ydataについてライトグレー色の折れ線を描画してその線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='lightgrey')	plt.plot(xdata, ydata, linewidth=n, color='lightgray')
code: ライトグリーン色の折れ線グラフを描画して線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightgreen')	plt.plot(xdata, ydata, linewidth=n, color='lightgreen')
code: ライトグリーン色の折れ線グラフを描画して、その線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='lightgreen')	plt.plot(xdata, ydata, linewidth=n, color='lightgreen')
code: データ列xdataとデータ列ydataについてライトグリーン色の折れ線グラフを描画してその線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightgreen')	plt.plot(xdata, ydata, linewidth=n, color='lightgreen')
code: 数列xdataとリストydataについてライトグリーン色の折れ線を描画してその線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='lightgreen')	plt.plot(xdata, ydata, linewidth=n, color='lightgreen')
code: ライトグレー色の折れ線を描画して、線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='lightgray')	plt.plot(xdata, ydata, linewidth=n, color='lightgrey')
code: ライトグレー色の折れ線を描画して、線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='lightgrey')	plt.plot(xdata, ydata, linewidth=n, color='lightgrey')
code: 数列xdataとリストydataについてライトグレー色の折れ線を描画してその線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='lightgrey')	plt.plot(xdata, ydata, linewidth=n, color='lightgrey')
code: リストxdataと配列ydataについてライトグレー色の折れ線を描画して線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='lightgrey')	plt.plot(xdata, ydata, linewidth=n, color='lightgrey')
code: 淡いピンク色色の折れ線を描画してその線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='lightpink')	plt.plot(xdata, ydata, linewidth=n, color='lightpink')
code: 淡いピンク色色の折れ線を描画して、その線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='lightpink')	plt.plot(xdata, ydata, linewidth=n, color='lightpink')
code: 配列xdataとリストydataについて淡いピンク色色の折れ線グラフを描画して、その線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='lightpink')	plt.plot(xdata, ydata, linewidth=n, color='lightpink')
code: リストxdataとデータ列ydataについて淡いピンク色色の折れ線を描画して、線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='lightpink')	plt.plot(xdata, ydata, linewidth=n, color='lightpink')
code: ライトサーモン色の折れ線を描画してその線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='lightsalmon')	plt.plot(xdata, ydata, linewidth=n, color='lightsalmon')
code: ライトサーモン色の折れ線グラフを描画してその線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='lightsalmon')	plt.plot(xdata, ydata, linewidth=n, color='lightsalmon')
code: 配列xdataと配列ydataについてライトサーモン色の折れ線グラフを描画してその線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='lightsalmon')	plt.plot(xdata, ydata, linewidth=n, color='lightsalmon')
code: データ列xdataとデータ列ydataについてライトサーモン色の折れ線グラフを描画してその線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='lightsalmon')	plt.plot(xdata, ydata, linewidth=n, color='lightsalmon')
code: ライトグリーン色の折れ線を描画して、線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='lightgreen')	plt.plot(xdata, ydata, linewidth=n, color='lightseagreen')
code: ライトグリーン色の折れ線を描画して、線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='lightgreen')	plt.plot(xdata, ydata, linewidth=n, color='lightseagreen')
code: 数列xdataと配列ydataについてライトグリーン色の折れ線グラフを描画して、その線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='lightgreen')	plt.plot(xdata, ydata, linewidth=n, color='lightseagreen')
code: リストxdataとイテラブルydataについてライトグリーン色の折れ線グラフを描画して、線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='lightgreen')	plt.plot(xdata, ydata, linewidth=n, color='lightseagreen')
code: ライトスカイブルー色の折れ線を描画して線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='lightskyblue')	plt.plot(xdata, ydata, linewidth=n, color='lightskyblue')
code: ライトスカイブルー色の折れ線を描画して線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='lightskyblue')	plt.plot(xdata, ydata, linewidth=n, color='lightskyblue')
code: イテラブルxdataとイテラブルydataについてライトスカイブルー色の折れ線を描画して、その線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='lightskyblue')	plt.plot(xdata, ydata, linewidth=n, color='lightskyblue')
code: イテラブルxdataとイテラブルydataについてライトスカイブルー色の折れ線を描画して、その線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='lightskyblue')	plt.plot(xdata, ydata, linewidth=n, color='lightskyblue')
code: ライトスレイグレー色の折れ線グラフを描画して、線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='lightslategrey')	plt.plot(xdata, ydata, linewidth=n, color='lightslategray')
code: ライトスレイグレー色の折れ線を描画して、線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='lightslategrey')	plt.plot(xdata, ydata, linewidth=n, color='lightslategray')
code: イテラブルxdataと配列ydataについてライトスレイグレー色の折れ線を描画して、その線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='lightslategrey')	plt.plot(xdata, ydata, linewidth=n, color='lightslategray')
code: イテラブルxdataとイテラブルydataについてライトスレイグレー色の折れ線グラフを描画して、線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='lightslategrey')	plt.plot(xdata, ydata, linewidth=n, color='lightslategray')
code: ライトスレイグレー色の折れ線グラフを描画して、線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightslategrey')	plt.plot(xdata, ydata, linewidth=n, color='lightslategrey')
code: ライトスレイグレー色の折れ線を描画して線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightslategrey')	plt.plot(xdata, ydata, linewidth=n, color='lightslategrey')
code: リストxdataと配列ydataについてライトスレイグレー色の折れ線グラフを描画して、線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='lightslategray')	plt.plot(xdata, ydata, linewidth=n, color='lightslategrey')
code: イテラブルxdataとリストydataについてライトスレイグレー色の折れ線を描画してその線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightslategray')	plt.plot(xdata, ydata, linewidth=n, color='lightslategrey')
code: ライトスチールブルー色の折れ線グラフを描画して線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='lightsteelblue')	plt.plot(xdata, ydata, linewidth=n, color='lightsteelblue')
code: ライトスチールブルー色の折れ線グラフを描画して、その線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='lightsteelblue')	plt.plot(xdata, ydata, linewidth=n, color='lightsteelblue')
code: データ列xdataとイテラブルydataについてライトスチールブルー色の折れ線を描画して線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='lightsteelblue')	plt.plot(xdata, ydata, linewidth=n, color='lightsteelblue')
code: リストxdataとイテラブルydataについてライトスチールブルー色の折れ線を描画して線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='lightsteelblue')	plt.plot(xdata, ydata, linewidth=n, color='lightsteelblue')
code: ライトイエロー色の折れ線グラフを描画して線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='lightyellow')	plt.plot(xdata, ydata, linewidth=n, color='lightyellow')
code: ライトイエロー色の折れ線を描画して線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='lightyellow')	plt.plot(xdata, ydata, linewidth=n, color='lightyellow')
code: データ列xdataと数列ydataについてライトイエロー色の折れ線を描画して、線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='lightyellow')	plt.plot(xdata, ydata, linewidth=n, color='lightyellow')
code: リストxdataと数列ydataについてライトイエロー色の折れ線を描画してその線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='lightyellow')	plt.plot(xdata, ydata, linewidth=n, color='lightyellow')
code: ライム色の折れ線グラフを描画してその線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='lime')	plt.plot(xdata, ydata, linewidth=n, color='lime')
code: ライム色の折れ線を描画してその線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='lime')	plt.plot(xdata, ydata, linewidth=n, color='lime')
code: リストxdataと数列ydataについてライム色の折れ線を描画してその線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='lime')	plt.plot(xdata, ydata, linewidth=n, color='lime')
code: イテラブルxdataと配列ydataについてライム色の折れ線グラフを描画して線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='lime')	plt.plot(xdata, ydata, linewidth=n, color='lime')
code: ライムグリーン色の折れ線を描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='limegreen')	plt.plot(xdata, ydata, linewidth=n, color='limegreen')
code: ライムグリーン色の折れ線グラフを描画して、その線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='limegreen')	plt.plot(xdata, ydata, linewidth=n, color='limegreen')
code: データ列xdataとリストydataについてライムグリーン色の折れ線グラフを描画して線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='limegreen')	plt.plot(xdata, ydata, linewidth=n, color='limegreen')
code: イテラブルxdataとデータ列ydataについてライムグリーン色の折れ線を描画して、その線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='limegreen')	plt.plot(xdata, ydata, linewidth=n, color='limegreen')
code: リネン色の折れ線を描画してその線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='linen')	plt.plot(xdata, ydata, linewidth=n, color='linen')
code: リネン色の折れ線を描画して、線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='linen')	plt.plot(xdata, ydata, linewidth=n, color='linen')
code: イテラブルxdataと配列ydataについてリネン色の折れ線を描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='linen')	plt.plot(xdata, ydata, linewidth=n, color='linen')
code: リストxdataとリストydataについてリネン色の折れ線グラフを描画して、その線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='linen')	plt.plot(xdata, ydata, linewidth=n, color='linen')
code: マゼンタ色の折れ線グラフを描画して、その線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='magenta')	plt.plot(xdata, ydata, linewidth=n, color='magenta')
code: マゼンタ色の折れ線グラフを描画してその線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='magenta')	plt.plot(xdata, ydata, linewidth=n, color='magenta')
code: イテラブルxdataとデータ列ydataについてマゼンタ色の折れ線を描画してその線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='magenta')	plt.plot(xdata, ydata, linewidth=n, color='magenta')
code: リストxdataと配列ydataについてマゼンタ色の折れ線を描画して、線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='magenta')	plt.plot(xdata, ydata, linewidth=n, color='magenta')
code: マルーン色の折れ線グラフを描画して、その線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='maroon')	plt.plot(xdata, ydata, linewidth=n, color='maroon')
code: マルーン色の折れ線グラフを描画して線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='maroon')	plt.plot(xdata, ydata, linewidth=n, color='maroon')
code: リストxdataとリストydataについてマルーン色の折れ線グラフを描画して、線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='maroon')	plt.plot(xdata, ydata, linewidth=n, color='maroon')
code: 配列xdataとリストydataについてマルーン色の折れ線グラフを描画して、線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='maroon')	plt.plot(xdata, ydata, linewidth=n, color='maroon')
code: ミディアムアクアマリン色の折れ線を描画して、線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='mediumaquamarine')	plt.plot(xdata, ydata, linewidth=n, color='mediumaquamarine')
code: ミディアムアクアマリン色の折れ線を描画して、線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='mediumaquamarine')	plt.plot(xdata, ydata, linewidth=n, color='mediumaquamarine')
code: イテラブルxdataと配列ydataについてミディアムアクアマリン色の折れ線グラフを描画して、線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='mediumaquamarine')	plt.plot(xdata, ydata, linewidth=n, color='mediumaquamarine')
code: 数列xdataとイテラブルydataについてミディアムアクアマリン色の折れ線グラフを描画してその線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='mediumaquamarine')	plt.plot(xdata, ydata, linewidth=n, color='mediumaquamarine')
code: ミディアムブルー色の折れ線グラフを描画してその線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='mediumblue')	plt.plot(xdata, ydata, linewidth=n, color='mediumblue')
code: ミディアムブルー色の折れ線を描画して線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='mediumblue')	plt.plot(xdata, ydata, linewidth=n, color='mediumblue')
code: イテラブルxdataとリストydataについてミディアムブルー色の折れ線グラフを描画してその線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='mediumblue')	plt.plot(xdata, ydata, linewidth=n, color='mediumblue')
code: 配列xdataと数列ydataについてミディアムブルー色の折れ線を描画してその線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='mediumblue')	plt.plot(xdata, ydata, linewidth=n, color='mediumblue')
code: ミディアムオーキッド色の折れ線グラフを描画して線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='mediumorchid')	plt.plot(xdata, ydata, linewidth=n, color='mediumorchid')
code: ミディアムオーキッド色の折れ線を描画して線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='mediumorchid')	plt.plot(xdata, ydata, linewidth=n, color='mediumorchid')
code: イテラブルxdataとイテラブルydataについてミディアムオーキッド色の折れ線を描画して線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='mediumorchid')	plt.plot(xdata, ydata, linewidth=n, color='mediumorchid')
code: イテラブルxdataとデータ列ydataについてミディアムオーキッド色の折れ線を描画してその線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='mediumorchid')	plt.plot(xdata, ydata, linewidth=n, color='mediumorchid')
code: ミディアムパープル色の折れ線グラフを描画して、線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='mediumpurple')	plt.plot(xdata, ydata, linewidth=n, color='mediumpurple')
code: ミディアムパープル色の折れ線を描画して線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='mediumpurple')	plt.plot(xdata, ydata, linewidth=n, color='mediumpurple')
code: リストxdataと数列ydataについてミディアムパープル色の折れ線グラフを描画して、線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='mediumpurple')	plt.plot(xdata, ydata, linewidth=n, color='mediumpurple')
code: イテラブルxdataと配列ydataについてミディアムパープル色の折れ線を描画して線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='mediumpurple')	plt.plot(xdata, ydata, linewidth=n, color='mediumpurple')
code: ミディアムシアグリーン色の折れ線を描画して、その線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='mediumseagreen')	plt.plot(xdata, ydata, linewidth=n, color='mediumseagreen')
code: ミディアムシアグリーン色の折れ線を描画して線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='mediumseagreen')	plt.plot(xdata, ydata, linewidth=n, color='mediumseagreen')
code: 数列xdataとリストydataについてミディアムシアグリーン色の折れ線を描画して、線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='mediumseagreen')	plt.plot(xdata, ydata, linewidth=n, color='mediumseagreen')
code: 数列xdataとイテラブルydataについてミディアムシアグリーン色の折れ線グラフを描画して、線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='mediumseagreen')	plt.plot(xdata, ydata, linewidth=n, color='mediumseagreen')
code: ミディアムスレートブルー色の折れ線グラフを描画してその線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='mediumslateblue')	plt.plot(xdata, ydata, linewidth=n, color='mediumslateblue')
code: ミディアムスレートブルー色の折れ線を描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='mediumslateblue')	plt.plot(xdata, ydata, linewidth=n, color='mediumslateblue')
code: リストxdataとリストydataについてミディアムスレートブルー色の折れ線を描画してその線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='mediumslateblue')	plt.plot(xdata, ydata, linewidth=n, color='mediumslateblue')
code: イテラブルxdataとリストydataについてミディアムスレートブルー色の折れ線グラフを描画して、線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='mediumslateblue')	plt.plot(xdata, ydata, linewidth=n, color='mediumslateblue')
code: ミディアムスプリンググリーン色の折れ線を描画してその線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='mediumspringgreen')	plt.plot(xdata, ydata, linewidth=n, color='mediumspringgreen')
code: ミディアムスプリンググリーン色の折れ線を描画して、その線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='mediumspringgreen')	plt.plot(xdata, ydata, linewidth=n, color='mediumspringgreen')
code: 数列xdataと数列ydataについてミディアムスプリンググリーン色の折れ線を描画して線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='mediumspringgreen')	plt.plot(xdata, ydata, linewidth=n, color='mediumspringgreen')
code: リストxdataと数列ydataについてミディアムスプリンググリーン色の折れ線を描画して、線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='mediumspringgreen')	plt.plot(xdata, ydata, linewidth=n, color='mediumspringgreen')
code: ミディアムターコイズ色の折れ線を描画して、線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='mediumturquoise')	plt.plot(xdata, ydata, linewidth=n, color='mediumturquoise')
code: ミディアムターコイズ色の折れ線グラフを描画して、その線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='mediumturquoise')	plt.plot(xdata, ydata, linewidth=n, color='mediumturquoise')
code: イテラブルxdataと配列ydataについてミディアムターコイズ色の折れ線を描画して、その線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='mediumturquoise')	plt.plot(xdata, ydata, linewidth=n, color='mediumturquoise')
code: リストxdataと数列ydataについてミディアムターコイズ色の折れ線を描画して、その線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='mediumturquoise')	plt.plot(xdata, ydata, linewidth=n, color='mediumturquoise')
code: ミディアムバイオレットレッド色の折れ線グラフを描画して、線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='mediumvioletred')	plt.plot(xdata, ydata, linewidth=n, color='mediumvioletred')
code: ミディアムバイオレットレッド色の折れ線を描画して、その線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='mediumvioletred')	plt.plot(xdata, ydata, linewidth=n, color='mediumvioletred')
code: リストxdataと数列ydataについてミディアムバイオレットレッド色の折れ線グラフを描画して、その線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='mediumvioletred')	plt.plot(xdata, ydata, linewidth=n, color='mediumvioletred')
code: リストxdataと数列ydataについてミディアムバイオレットレッド色の折れ線を描画してその線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='mediumvioletred')	plt.plot(xdata, ydata, linewidth=n, color='mediumvioletred')
code: ミッドナイトブルー色の折れ線を描画してその線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='midnightblue')	plt.plot(xdata, ydata, linewidth=n, color='midnightblue')
code: ミッドナイトブルー色の折れ線グラフを描画して、線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='midnightblue')	plt.plot(xdata, ydata, linewidth=n, color='midnightblue')
code: データ列xdataとイテラブルydataについてミッドナイトブルー色の折れ線を描画して、線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='midnightblue')	plt.plot(xdata, ydata, linewidth=n, color='midnightblue')
code: 数列xdataとデータ列ydataについてミッドナイトブルー色の折れ線を描画して線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='midnightblue')	plt.plot(xdata, ydata, linewidth=n, color='midnightblue')
code: ミントクリーム色の折れ線を描画して、その線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='mintcream')	plt.plot(xdata, ydata, linewidth=n, color='mintcream')
code: ミントクリーム色の折れ線を描画して、その線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='mintcream')	plt.plot(xdata, ydata, linewidth=n, color='mintcream')
code: イテラブルxdataとリストydataについてミントクリーム色の折れ線を描画して、線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='mintcream')	plt.plot(xdata, ydata, linewidth=n, color='mintcream')
code: 数列xdataとデータ列ydataについてミントクリーム色の折れ線グラフを描画して、線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='mintcream')	plt.plot(xdata, ydata, linewidth=n, color='mintcream')
code: ミスティローズ色の折れ線を描画してその線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='mistyrose')	plt.plot(xdata, ydata, linewidth=n, color='mistyrose')
code: ミスティローズ色の折れ線グラフを描画して、線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='mistyrose')	plt.plot(xdata, ydata, linewidth=n, color='mistyrose')
code: リストxdataとイテラブルydataについてミスティローズ色の折れ線グラフを描画して、線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='mistyrose')	plt.plot(xdata, ydata, linewidth=n, color='mistyrose')
code: 数列xdataとデータ列ydataについてミスティローズ色の折れ線グラフを描画して、その線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='mistyrose')	plt.plot(xdata, ydata, linewidth=n, color='mistyrose')
code: モカシン色の折れ線グラフを描画して線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='moccasin')	plt.plot(xdata, ydata, linewidth=n, color='moccasin')
code: モカシン色の折れ線グラフを描画してその線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='moccasin')	plt.plot(xdata, ydata, linewidth=n, color='moccasin')
code: 数列xdataとイテラブルydataについてモカシン色の折れ線を描画して、その線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='moccasin')	plt.plot(xdata, ydata, linewidth=n, color='moccasin')
code: 数列xdataと配列ydataについてモカシン色の折れ線グラフを描画して線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='moccasin')	plt.plot(xdata, ydata, linewidth=n, color='moccasin')
code: ナバホホワイト色の折れ線を描画してその線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='navajowhite')	plt.plot(xdata, ydata, linewidth=n, color='navajowhite')
code: ナバホホワイト色の折れ線を描画してその線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='navajowhite')	plt.plot(xdata, ydata, linewidth=n, color='navajowhite')
code: データ列xdataとデータ列ydataについてナバホホワイト色の折れ線グラフを描画して、その線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='navajowhite')	plt.plot(xdata, ydata, linewidth=n, color='navajowhite')
code: 数列xdataとイテラブルydataについてナバホホワイト色の折れ線を描画してその線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='navajowhite')	plt.plot(xdata, ydata, linewidth=n, color='navajowhite')
code: ネイビー色の折れ線グラフを描画して、線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='navy')	plt.plot(xdata, ydata, linewidth=n, color='navy')
code: ネイビー色の折れ線を描画してその線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='navy')	plt.plot(xdata, ydata, linewidth=n, color='navy')
code: 配列xdataと数列ydataについてネイビー色の折れ線を描画してその線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='navy')	plt.plot(xdata, ydata, linewidth=n, color='navy')
code: 配列xdataと配列ydataについてネイビー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='navy')	plt.plot(xdata, ydata, linewidth=n, color='navy')
code: オールドレース色の折れ線を描画して線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='oldlace')	plt.plot(xdata, ydata, linewidth=n, color='oldlace')
code: オールドレース色の折れ線グラフを描画して、線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='oldlace')	plt.plot(xdata, ydata, linewidth=n, color='oldlace')
code: 数列xdataとリストydataについてオールドレース色の折れ線を描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='oldlace')	plt.plot(xdata, ydata, linewidth=n, color='oldlace')
code: リストxdataとイテラブルydataについてオールドレース色の折れ線を描画して、その線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='oldlace')	plt.plot(xdata, ydata, linewidth=n, color='oldlace')
code: オリーブ色の折れ線グラフを描画して線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='olive')	plt.plot(xdata, ydata, linewidth=n, color='olive')
code: オリーブ色の折れ線を描画して線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='olive')	plt.plot(xdata, ydata, linewidth=n, color='olive')
code: 配列xdataとデータ列ydataについてオリーブ色の折れ線を描画して線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='olive')	plt.plot(xdata, ydata, linewidth=n, color='olive')
code: イテラブルxdataと数列ydataについてオリーブ色の折れ線を描画して線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='olive')	plt.plot(xdata, ydata, linewidth=n, color='olive')
code: オリベドラブ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='olivedrab')	plt.plot(xdata, ydata, linewidth=n, color='olivedrab')
code: オリベドラブ色の折れ線グラフを描画して線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='olivedrab')	plt.plot(xdata, ydata, linewidth=n, color='olivedrab')
code: 数列xdataとリストydataについてオリベドラブ色の折れ線を描画して、線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='olivedrab')	plt.plot(xdata, ydata, linewidth=n, color='olivedrab')
code: リストxdataと配列ydataについてオリベドラブ色の折れ線グラフを描画して、線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='olivedrab')	plt.plot(xdata, ydata, linewidth=n, color='olivedrab')
code: オレンジ色の折れ線グラフを描画して、線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='orange')	plt.plot(xdata, ydata, linewidth=n, color='orange')
code: オレンジ色の折れ線を描画して、その線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='orange')	plt.plot(xdata, ydata, linewidth=n, color='orange')
code: イテラブルxdataとリストydataについてオレンジ色の折れ線グラフを描画して線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='orange')	plt.plot(xdata, ydata, linewidth=n, color='orange')
code: 配列xdataと配列ydataについてオレンジ色の折れ線グラフを描画してその線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='orange')	plt.plot(xdata, ydata, linewidth=n, color='orange')
code: オレンジレッド色の折れ線を描画してその線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='orangered')	plt.plot(xdata, ydata, linewidth=n, color='orangered')
code: オレンジレッド色の折れ線グラフを描画して、その線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='orangered')	plt.plot(xdata, ydata, linewidth=n, color='orangered')
code: イテラブルxdataとイテラブルydataについてオレンジレッド色の折れ線を描画して、その線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='orangered')	plt.plot(xdata, ydata, linewidth=n, color='orangered')
code: データ列xdataとイテラブルydataについてオレンジレッド色の折れ線を描画してその線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='orangered')	plt.plot(xdata, ydata, linewidth=n, color='orangered')
code: オーキッド色の折れ線グラフを描画してその線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='orchid')	plt.plot(xdata, ydata, linewidth=n, color='orchid')
code: オーキッド色の折れ線グラフを描画してその線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='orchid')	plt.plot(xdata, ydata, linewidth=n, color='orchid')
code: 数列xdataとデータ列ydataについてオーキッド色の折れ線グラフを描画してその線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='orchid')	plt.plot(xdata, ydata, linewidth=n, color='orchid')
code: 数列xdataと配列ydataについてオーキッド色の折れ線を描画して線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='orchid')	plt.plot(xdata, ydata, linewidth=n, color='orchid')
code: パールゴールデンロッド色の折れ線を描画して、その線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='palegoldenrod')	plt.plot(xdata, ydata, linewidth=n, color='palegoldenrod')
code: パールゴールデンロッド色の折れ線グラフを描画して、線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='palegoldenrod')	plt.plot(xdata, ydata, linewidth=n, color='palegoldenrod')
code: イテラブルxdataとリストydataについてパールゴールデンロッド色の折れ線グラフを描画して、線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='palegoldenrod')	plt.plot(xdata, ydata, linewidth=n, color='palegoldenrod')
code: リストxdataとデータ列ydataについてパールゴールデンロッド色の折れ線を描画して線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='palegoldenrod')	plt.plot(xdata, ydata, linewidth=n, color='palegoldenrod')
code: ペールグリーン色の折れ線グラフを描画して、線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='palegreen')	plt.plot(xdata, ydata, linewidth=n, color='palegreen')
code: ペールグリーン色の折れ線グラフを描画して線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='palegreen')	plt.plot(xdata, ydata, linewidth=n, color='palegreen')
code: データ列xdataとデータ列ydataについてペールグリーン色の折れ線グラフを描画して、線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='palegreen')	plt.plot(xdata, ydata, linewidth=n, color='palegreen')
code: イテラブルxdataと数列ydataについてペールグリーン色の折れ線グラフを描画して、その線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='palegreen')	plt.plot(xdata, ydata, linewidth=n, color='palegreen')
code: パレットトルコイズ色の折れ線を描画してその線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='paleturquoise')	plt.plot(xdata, ydata, linewidth=n, color='paleturquoise')
code: パレットトルコイズ色の折れ線グラフを描画して、その線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='paleturquoise')	plt.plot(xdata, ydata, linewidth=n, color='paleturquoise')
code: イテラブルxdataとイテラブルydataについてパレットトルコイズ色の折れ線グラフを描画して、線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='paleturquoise')	plt.plot(xdata, ydata, linewidth=n, color='paleturquoise')
code: リストxdataと配列ydataについてパレットトルコイズ色の折れ線グラフを描画してその線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='paleturquoise')	plt.plot(xdata, ydata, linewidth=n, color='paleturquoise')
code: パールバイオレットレッド色の折れ線を描画して、線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='palevioletred')	plt.plot(xdata, ydata, linewidth=n, color='palevioletred')
code: パールバイオレットレッド色の折れ線を描画して線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='palevioletred')	plt.plot(xdata, ydata, linewidth=n, color='palevioletred')
code: イテラブルxdataとリストydataについてパールバイオレットレッド色の折れ線を描画してその線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='palevioletred')	plt.plot(xdata, ydata, linewidth=n, color='palevioletred')
code: イテラブルxdataとリストydataについてパールバイオレットレッド色の折れ線を描画して線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='palevioletred')	plt.plot(xdata, ydata, linewidth=n, color='palevioletred')
code: パパイヤウィップ色の折れ線グラフを描画して、その線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='papayawhip')	plt.plot(xdata, ydata, linewidth=n, color='papayawhip')
code: パパイヤウィップ色の折れ線グラフを描画して線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='papayawhip')	plt.plot(xdata, ydata, linewidth=n, color='papayawhip')
code: リストxdataと配列ydataについてパパイヤウィップ色の折れ線グラフを描画してその線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='papayawhip')	plt.plot(xdata, ydata, linewidth=n, color='papayawhip')
code: 配列xdataと配列ydataについてパパイヤウィップ色の折れ線を描画して、線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='papayawhip')	plt.plot(xdata, ydata, linewidth=n, color='papayawhip')
code: ピーチパフ色の折れ線グラフを描画して、その線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='peachpuff')	plt.plot(xdata, ydata, linewidth=n, color='peachpuff')
code: ピーチパフ色の折れ線を描画して線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='peachpuff')	plt.plot(xdata, ydata, linewidth=n, color='peachpuff')
code: 配列xdataと配列ydataについてピーチパフ色の折れ線グラフを描画してその線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='peachpuff')	plt.plot(xdata, ydata, linewidth=n, color='peachpuff')
code: 数列xdataと配列ydataについてピーチパフ色の折れ線を描画して、その線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='peachpuff')	plt.plot(xdata, ydata, linewidth=n, color='peachpuff')
code: ペルー色の折れ線グラフを描画して線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='peru')	plt.plot(xdata, ydata, linewidth=n, color='peru')
code: ペルー色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='peru')	plt.plot(xdata, ydata, linewidth=n, color='peru')
code: 配列xdataとイテラブルydataについてペルー色の折れ線グラフを描画して、線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='peru')	plt.plot(xdata, ydata, linewidth=n, color='peru')
code: 配列xdataと数列ydataについてペルー色の折れ線を描画して、その線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='peru')	plt.plot(xdata, ydata, linewidth=n, color='peru')
code: ピンク色の折れ線グラフを描画して線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='pink')	plt.plot(xdata, ydata, linewidth=n, color='pink')
code: ピンク色の折れ線を描画して、その線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='pink')	plt.plot(xdata, ydata, linewidth=n, color='pink')
code: イテラブルxdataと配列ydataについてピンク色の折れ線グラフを描画して線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='pink')	plt.plot(xdata, ydata, linewidth=n, color='pink')
code: イテラブルxdataと配列ydataについてピンク色の折れ線グラフを描画して、その線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='pink')	plt.plot(xdata, ydata, linewidth=n, color='pink')
code: プラム色の折れ線グラフを描画して線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='plum')	plt.plot(xdata, ydata, linewidth=n, color='plum')
code: プラム色の折れ線を描画して、線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='plum')	plt.plot(xdata, ydata, linewidth=n, color='plum')
code: イテラブルxdataと数列ydataについてプラム色の折れ線グラフを描画してその線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='plum')	plt.plot(xdata, ydata, linewidth=n, color='plum')
code: データ列xdataと配列ydataについてプラム色の折れ線グラフを描画して線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='plum')	plt.plot(xdata, ydata, linewidth=n, color='plum')
code: パウダーブルー色の折れ線を描画して線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='powderblue')	plt.plot(xdata, ydata, linewidth=n, color='powderblue')
code: パウダーブルー色の折れ線グラフを描画して、その線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='powderblue')	plt.plot(xdata, ydata, linewidth=n, color='powderblue')
code: データ列xdataとデータ列ydataについてパウダーブルー色の折れ線グラフを描画して、線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='powderblue')	plt.plot(xdata, ydata, linewidth=n, color='powderblue')
code: 配列xdataと数列ydataについてパウダーブルー色の折れ線を描画してその線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='powderblue')	plt.plot(xdata, ydata, linewidth=n, color='powderblue')
code: パープル色の折れ線を描画してその線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='purple')	plt.plot(xdata, ydata, linewidth=n, color='purple')
code: パープル色の折れ線グラフを描画してその線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='purple')	plt.plot(xdata, ydata, linewidth=n, color='purple')
code: イテラブルxdataと数列ydataについてパープル色の折れ線を描画して、その線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='purple')	plt.plot(xdata, ydata, linewidth=n, color='purple')
code: リストxdataとリストydataについてパープル色の折れ線を描画してその線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='purple')	plt.plot(xdata, ydata, linewidth=n, color='purple')
code: レベッカパープル色の折れ線を描画してその線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='rebeccapurple')	plt.plot(xdata, ydata, linewidth=n, color='rebeccapurple')
code: レベッカパープル色の折れ線グラフを描画して、線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='rebeccapurple')	plt.plot(xdata, ydata, linewidth=n, color='rebeccapurple')
code: イテラブルxdataとイテラブルydataについてレベッカパープル色の折れ線グラフを描画して、線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='rebeccapurple')	plt.plot(xdata, ydata, linewidth=n, color='rebeccapurple')
code: 数列xdataとデータ列ydataについてレベッカパープル色の折れ線グラフを描画して、その線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='rebeccapurple')	plt.plot(xdata, ydata, linewidth=n, color='rebeccapurple')
code: 赤色の折れ線を描画して線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='red')	plt.plot(xdata, ydata, linewidth=n, color='red')
code: 赤色の折れ線を描画して、線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='red')	plt.plot(xdata, ydata, linewidth=n, color='red')
code: 数列xdataとリストydataについて赤色の折れ線グラフを描画して線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='red')	plt.plot(xdata, ydata, linewidth=n, color='red')
code: リストxdataとイテラブルydataについて赤色の折れ線を描画して、その線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='red')	plt.plot(xdata, ydata, linewidth=n, color='red')
code: ロージーブラウン色の折れ線グラフを描画して線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='rosybrown')	plt.plot(xdata, ydata, linewidth=n, color='rosybrown')
code: ロージーブラウン色の折れ線グラフを描画して、その線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='rosybrown')	plt.plot(xdata, ydata, linewidth=n, color='rosybrown')
code: データ列xdataとイテラブルydataについてロージーブラウン色の折れ線を描画してその線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='rosybrown')	plt.plot(xdata, ydata, linewidth=n, color='rosybrown')
code: 配列xdataとデータ列ydataについてロージーブラウン色の折れ線を描画して線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='rosybrown')	plt.plot(xdata, ydata, linewidth=n, color='rosybrown')
code: ロイヤルブルー色の折れ線グラフを描画してその線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='royalblue')	plt.plot(xdata, ydata, linewidth=n, color='royalblue')
code: ロイヤルブルー色の折れ線を描画して、その線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='royalblue')	plt.plot(xdata, ydata, linewidth=n, color='royalblue')
code: 配列xdataとリストydataについてロイヤルブルー色の折れ線を描画してその線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='royalblue')	plt.plot(xdata, ydata, linewidth=n, color='royalblue')
code: リストxdataと数列ydataについてロイヤルブルー色の折れ線を描画して線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='royalblue')	plt.plot(xdata, ydata, linewidth=n, color='royalblue')
code: サドルブラウン色の折れ線を描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='saddlebrown')	plt.plot(xdata, ydata, linewidth=n, color='saddlebrown')
code: サドルブラウン色の折れ線を描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='saddlebrown')	plt.plot(xdata, ydata, linewidth=n, color='saddlebrown')
code: リストxdataとデータ列ydataについてサドルブラウン色の折れ線を描画して、その線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='saddlebrown')	plt.plot(xdata, ydata, linewidth=n, color='saddlebrown')
code: リストxdataとリストydataについてサドルブラウン色の折れ線を描画してその線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='saddlebrown')	plt.plot(xdata, ydata, linewidth=n, color='saddlebrown')
code: サーモン色の折れ線を描画して、その線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='salmon')	plt.plot(xdata, ydata, linewidth=n, color='salmon')
code: サーモン色の折れ線グラフを描画してその線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='salmon')	plt.plot(xdata, ydata, linewidth=n, color='salmon')
code: 配列xdataとイテラブルydataについてサーモン色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='salmon')	plt.plot(xdata, ydata, linewidth=n, color='salmon')
code: 数列xdataと数列ydataについてサーモン色の折れ線を描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='salmon')	plt.plot(xdata, ydata, linewidth=n, color='salmon')
code: サンディーブラウン色の折れ線グラフを描画して線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='sandybrown')	plt.plot(xdata, ydata, linewidth=n, color='sandybrown')
code: サンディーブラウン色の折れ線グラフを描画して線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='sandybrown')	plt.plot(xdata, ydata, linewidth=n, color='sandybrown')
code: イテラブルxdataと数列ydataについてサンディーブラウン色の折れ線を描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='sandybrown')	plt.plot(xdata, ydata, linewidth=n, color='sandybrown')
code: 配列xdataとデータ列ydataについてサンディーブラウン色の折れ線を描画してその線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='sandybrown')	plt.plot(xdata, ydata, linewidth=n, color='sandybrown')
code: シーグリーン色の折れ線を描画してその線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='seagreen')	plt.plot(xdata, ydata, linewidth=n, color='seagreen')
code: シーグリーン色の折れ線を描画して線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='seagreen')	plt.plot(xdata, ydata, linewidth=n, color='seagreen')
code: データ列xdataと配列ydataについてシーグリーン色の折れ線を描画して線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='seagreen')	plt.plot(xdata, ydata, linewidth=n, color='seagreen')
code: リストxdataとリストydataについてシーグリーン色の折れ線グラフを描画して、線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='seagreen')	plt.plot(xdata, ydata, linewidth=n, color='seagreen')
code: 貝殻色の折れ線グラフを描画してその線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='seashell')	plt.plot(xdata, ydata, linewidth=n, color='seashell')
code: 貝殻色の折れ線グラフを描画して、線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='seashell')	plt.plot(xdata, ydata, linewidth=n, color='seashell')
code: イテラブルxdataとリストydataについて貝殻色の折れ線を描画して線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='seashell')	plt.plot(xdata, ydata, linewidth=n, color='seashell')
code: 配列xdataと配列ydataについて貝殻色の折れ線グラフを描画してその線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='seashell')	plt.plot(xdata, ydata, linewidth=n, color='seashell')
code: シエナ色の折れ線グラフを描画して、その線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='sienna')	plt.plot(xdata, ydata, linewidth=n, color='sienna')
code: シエナ色の折れ線を描画してその線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='sienna')	plt.plot(xdata, ydata, linewidth=n, color='sienna')
code: リストxdataと配列ydataについてシエナ色の折れ線を描画して線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='sienna')	plt.plot(xdata, ydata, linewidth=n, color='sienna')
code: データ列xdataとリストydataについてシエナ色の折れ線を描画してその線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='sienna')	plt.plot(xdata, ydata, linewidth=n, color='sienna')
code: シルバー色の折れ線を描画して線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='silver')	plt.plot(xdata, ydata, linewidth=n, color='silver')
code: シルバー色の折れ線を描画してその線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='silver')	plt.plot(xdata, ydata, linewidth=n, color='silver')
code: データ列xdataとイテラブルydataについてシルバー色の折れ線を描画してその線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='silver')	plt.plot(xdata, ydata, linewidth=n, color='silver')
code: 数列xdataと配列ydataについてシルバー色の折れ線グラフを描画してその線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='silver')	plt.plot(xdata, ydata, linewidth=n, color='silver')
code: スカイブルー色の折れ線グラフを描画して、線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='skyblue')	plt.plot(xdata, ydata, linewidth=n, color='skyblue')
code: スカイブルー色の折れ線を描画してその線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='skyblue')	plt.plot(xdata, ydata, linewidth=n, color='skyblue')
code: 数列xdataとイテラブルydataについてスカイブルー色の折れ線を描画して線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='skyblue')	plt.plot(xdata, ydata, linewidth=n, color='skyblue')
code: リストxdataと数列ydataについてスカイブルー色の折れ線を描画して線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='skyblue')	plt.plot(xdata, ydata, linewidth=n, color='skyblue')
code: スレートブルー色の折れ線グラフを描画して、線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='slateblue')	plt.plot(xdata, ydata, linewidth=n, color='slateblue')
code: スレートブルー色の折れ線を描画して線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='slateblue')	plt.plot(xdata, ydata, linewidth=n, color='slateblue')
code: 配列xdataとイテラブルydataについてスレートブルー色の折れ線グラフを描画してその線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='slateblue')	plt.plot(xdata, ydata, linewidth=n, color='slateblue')
code: リストxdataとリストydataについてスレートブルー色の折れ線を描画して、その線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='slateblue')	plt.plot(xdata, ydata, linewidth=n, color='slateblue')
code: スラグレー色の折れ線グラフを描画して線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='slategray')	plt.plot(xdata, ydata, linewidth=n, color='slategray')
code: スラグレー色の折れ線を描画して、線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='slategray')	plt.plot(xdata, ydata, linewidth=n, color='slategray')
code: 数列xdataと数列ydataについてスラグレー色の折れ線を描画してその線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='slategray')	plt.plot(xdata, ydata, linewidth=n, color='slategray')
code: イテラブルxdataとリストydataについてスラグレー色の折れ線を描画して、線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='slategray')	plt.plot(xdata, ydata, linewidth=n, color='slategray')
code: スラグレー色の折れ線を描画して、線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='slategray')	plt.plot(xdata, ydata, linewidth=n, color='slategrey')
code: スラグレー色の折れ線を描画して線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='slategrey')	plt.plot(xdata, ydata, linewidth=n, color='slategrey')
code: イテラブルxdataと数列ydataについてスラグレー色の折れ線グラフを描画してその線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='slategray')	plt.plot(xdata, ydata, linewidth=n, color='slategrey')
code: リストxdataと数列ydataについてスラグレー色の折れ線グラフを描画してその線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='slategray')	plt.plot(xdata, ydata, linewidth=n, color='slategrey')
code: スノー色の折れ線を描画して、その線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='snow')	plt.plot(xdata, ydata, linewidth=n, color='snow')
code: スノー色の折れ線を描画して、線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='snow')	plt.plot(xdata, ydata, linewidth=n, color='snow')
code: 配列xdataと配列ydataについてスノー色の折れ線グラフを描画して、線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='snow')	plt.plot(xdata, ydata, linewidth=n, color='snow')
code: データ列xdataと数列ydataについてスノー色の折れ線グラフを描画して、その線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='snow')	plt.plot(xdata, ydata, linewidth=n, color='snow')
code: スプリンググリーン色の折れ線を描画してその線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='springgreen')	plt.plot(xdata, ydata, linewidth=n, color='springgreen')
code: スプリンググリーン色の折れ線を描画してその線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='springgreen')	plt.plot(xdata, ydata, linewidth=n, color='springgreen')
code: 数列xdataと配列ydataについてスプリンググリーン色の折れ線を描画して線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='springgreen')	plt.plot(xdata, ydata, linewidth=n, color='springgreen')
code: 配列xdataとデータ列ydataについてスプリンググリーン色の折れ線グラフを描画してその線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='springgreen')	plt.plot(xdata, ydata, linewidth=n, color='springgreen')
code: スチールブルー色の折れ線を描画して線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='steelblue')	plt.plot(xdata, ydata, linewidth=n, color='steelblue')
code: スチールブルー色の折れ線グラフを描画して線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='steelblue')	plt.plot(xdata, ydata, linewidth=n, color='steelblue')
code: 配列xdataと配列ydataについてスチールブルー色の折れ線を描画してその線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='steelblue')	plt.plot(xdata, ydata, linewidth=n, color='steelblue')
code: リストxdataとイテラブルydataについてスチールブルー色の折れ線グラフを描画して線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='steelblue')	plt.plot(xdata, ydata, linewidth=n, color='steelblue')
code: タン色の折れ線グラフを描画してその線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='tan')	plt.plot(xdata, ydata, linewidth=n, color='tan')
code: タン色の折れ線グラフを描画して、その線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='tan')	plt.plot(xdata, ydata, linewidth=n, color='tan')
code: 数列xdataとリストydataについてタン色の折れ線グラフを描画して線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='tan')	plt.plot(xdata, ydata, linewidth=n, color='tan')
code: イテラブルxdataとデータ列ydataについてタン色の折れ線グラフを描画して、その線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='tan')	plt.plot(xdata, ydata, linewidth=n, color='tan')
code: ティール色の折れ線グラフを描画して、その線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='teal')	plt.plot(xdata, ydata, linewidth=n, color='teal')
code: ティール色の折れ線を描画して線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='teal')	plt.plot(xdata, ydata, linewidth=n, color='teal')
code: 配列xdataとデータ列ydataについてティール色の折れ線グラフを描画して、その線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='teal')	plt.plot(xdata, ydata, linewidth=n, color='teal')
code: 数列xdataとリストydataについてティール色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='teal')	plt.plot(xdata, ydata, linewidth=n, color='teal')
code: アザミ色の折れ線グラフを描画して、線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='thistle')	plt.plot(xdata, ydata, linewidth=n, color='thistle')
code: アザミ色の折れ線を描画して、線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='thistle')	plt.plot(xdata, ydata, linewidth=n, color='thistle')
code: 配列xdataと配列ydataについてアザミ色の折れ線を描画して線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='thistle')	plt.plot(xdata, ydata, linewidth=n, color='thistle')
code: 数列xdataと数列ydataについてアザミ色の折れ線グラフを描画して、その線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='thistle')	plt.plot(xdata, ydata, linewidth=n, color='thistle')
code: トマト色の折れ線を描画してその線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='tomato')	plt.plot(xdata, ydata, linewidth=n, color='tomato')
code: トマト色の折れ線を描画して、線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='tomato')	plt.plot(xdata, ydata, linewidth=n, color='tomato')
code: 数列xdataとリストydataについてトマト色の折れ線グラフを描画して線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='tomato')	plt.plot(xdata, ydata, linewidth=n, color='tomato')
code: データ列xdataとイテラブルydataについてトマト色の折れ線グラフを描画して、その線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='tomato')	plt.plot(xdata, ydata, linewidth=n, color='tomato')
code: ターコイズ色の折れ線を描画して、その線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='turquoise')	plt.plot(xdata, ydata, linewidth=n, color='turquoise')
code: ターコイズ色の折れ線グラフを描画して、その線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='turquoise')	plt.plot(xdata, ydata, linewidth=n, color='turquoise')
code: 配列xdataとリストydataについてターコイズ色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='turquoise')	plt.plot(xdata, ydata, linewidth=n, color='turquoise')
code: 数列xdataと配列ydataについてターコイズ色の折れ線グラフを描画して線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='turquoise')	plt.plot(xdata, ydata, linewidth=n, color='turquoise')
code: バイオレット色の折れ線を描画して、線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='violet')	plt.plot(xdata, ydata, linewidth=n, color='violet')
code: バイオレット色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='violet')	plt.plot(xdata, ydata, linewidth=n, color='violet')
code: 数列xdataと配列ydataについてバイオレット色の折れ線グラフを描画してその線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='violet')	plt.plot(xdata, ydata, linewidth=n, color='violet')
code: 数列xdataと数列ydataについてバイオレット色の折れ線を描画して、その線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='violet')	plt.plot(xdata, ydata, linewidth=n, color='violet')
code: 小麦色の折れ線グラフを描画して、線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='wheat')	plt.plot(xdata, ydata, linewidth=n, color='wheat')
code: 小麦色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='wheat')	plt.plot(xdata, ydata, linewidth=n, color='wheat')
code: リストxdataとデータ列ydataについて小麦色の折れ線グラフを描画して、その線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='wheat')	plt.plot(xdata, ydata, linewidth=n, color='wheat')
code: 数列xdataとデータ列ydataについて小麦色の折れ線を描画して線幅をnとする	plt.plot(xdata, ydata, linewidth=n, color='wheat')	plt.plot(xdata, ydata, linewidth=n, color='wheat')
code: ホワイト色の折れ線グラフを描画して線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='white')	plt.plot(xdata, ydata, linewidth=n, color='white')
code: ホワイト色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='white')	plt.plot(xdata, ydata, linewidth=n, color='white')
code: イテラブルxdataとリストydataについてホワイト色の折れ線グラフを描画してその線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='white')	plt.plot(xdata, ydata, linewidth=n, color='white')
code: 配列xdataとデータ列ydataについてホワイト色の折れ線を描画して、線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='white')	plt.plot(xdata, ydata, linewidth=n, color='white')
code: ホワイトスモーク色の折れ線を描画してその線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='whitesmoke')	plt.plot(xdata, ydata, linewidth=n, color='whitesmoke')
code: ホワイトスモーク色の折れ線を描画して、その線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='whitesmoke')	plt.plot(xdata, ydata, linewidth=n, color='whitesmoke')
code: リストxdataとリストydataについてホワイトスモーク色の折れ線グラフを描画してその線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='whitesmoke')	plt.plot(xdata, ydata, linewidth=n, color='whitesmoke')
code: データ列xdataとイテラブルydataについてホワイトスモーク色の折れ線を描画して、線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n, color='whitesmoke')	plt.plot(xdata, ydata, linewidth=n, color='whitesmoke')
code: 黄色色の折れ線グラフを描画して、線幅をn変える	plt.plot(xdata, ydata, linewidth=n, color='yellow')	plt.plot(xdata, ydata, linewidth=n, color='yellow')
code: 黄色色の折れ線を描画して線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='yellow')	plt.plot(xdata, ydata, linewidth=n, color='yellow')
code: リストxdataとデータ列ydataについて黄色色の折れ線を描画して線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='yellow')	plt.plot(xdata, ydata, linewidth=n, color='yellow')
code: リストxdataとイテラブルydataについて黄色色の折れ線グラフを描画して、その線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n, color='yellow')	plt.plot(xdata, ydata, linewidth=n, color='yellow')
code: イエローグリーン色の折れ線グラフを描画して線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='yellowgreen')	plt.plot(xdata, ydata, linewidth=n, color='yellowgreen')
code: イエローグリーン色の折れ線を描画して、その線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n, color='greenyellow')	plt.plot(xdata, ydata, linewidth=n, color='yellowgreen')
code: 数列xdataとデータ列ydataについてイエローグリーン色の折れ線グラフを描画してその線幅をnに指定する	plt.plot(xdata, ydata, linewidth=n, color='yellowgreen')	plt.plot(xdata, ydata, linewidth=n, color='yellowgreen')
code: データ列xdataとリストydataについてイエローグリーン色の折れ線を描画してその線幅をnにする	plt.plot(xdata, ydata, linewidth=n, color='yellowgreen')	plt.plot(xdata, ydata, linewidth=n, color='yellowgreen')
code: 散布図にアリスブルー色のマーカーを用いる	plt.plot(xdata, ydata, c='aliceblue')	plt.plot(xdata, ydata, c='aliceblue')
code: 散布図にアリスブルー色のマーカーを使用する	plt.plot(xdata, ydata, c='aliceblue')	plt.plot(xdata, ydata, c='aliceblue')
code: アリスブルー色のマーカーを用いて散布図を描画する	plt.plot(xdata, ydata, c='aliceblue')	plt.plot(xdata, ydata, c='aliceblue')
code: 散布図をアリスブルー色を使ってプロットする	plt.plot(xdata, ydata, c='aliceblue')	plt.plot(xdata, ydata, c='aliceblue')
code: 散布図をアリスブルー色を用いて描く	plt.plot(xdata, ydata, c='aliceblue')	plt.plot(xdata, ydata, c='aliceblue')
code: アリスブルー色として配列xdataとデータ列ydataについての散布図を描く	plt.plot(xdata, ydata, c='aliceblue')	plt.plot(xdata, ydata, c='aliceblue')
code: アリスブルー色としてリストxdataと数列ydataの散布図を描画する	plt.plot(xdata, ydata, c='aliceblue')	plt.plot(xdata, ydata, c='aliceblue')
code: アリスブルー色を使ってリストxdataと配列ydataについての散布図をプロットする	plt.plot(xdata, ydata, c='aliceblue')	plt.plot(xdata, ydata, c='aliceblue')
code: リストxdataとデータ列ydataの散布図を描画して、マーカーの色をアリスブルーに設定する	plt.plot(xdata, ydata, c='aliceblue')	plt.plot(xdata, ydata, c='aliceblue')
code: リストxdataと配列ydataの散布図を描画して、色をアリスブルーに指定する	plt.plot(xdata, ydata, c='aliceblue')	plt.plot(xdata, ydata, c='aliceblue')
code: アンティークホワイト色のマーカーを散布図に用いる	plt.plot(xdata, ydata, c='antiquewhite')	plt.plot(xdata, ydata, c='antiquewhite')
code: 散布図にアンティークホワイト色のマーカーを使用する	plt.plot(xdata, ydata, c='antiquewhite')	plt.plot(xdata, ydata, c='antiquewhite')
code: 散布図をアンティークホワイト色のマーカーで描画する	plt.plot(xdata, ydata, c='antiquewhite')	plt.plot(xdata, ydata, c='antiquewhite')
code: アンティークホワイト色のマーカーで散布図を描く	plt.plot(xdata, ydata, c='antiquewhite')	plt.plot(xdata, ydata, c='antiquewhite')
code: 散布図をアンティークホワイト色を使ってプロットする	plt.plot(xdata, ydata, c='antiquewhite')	plt.plot(xdata, ydata, c='antiquewhite')
code: アンティークホワイト色で数列xdataとリストydataについての散布図をプロットする	plt.plot(xdata, ydata, c='antiquewhite')	plt.plot(xdata, ydata, c='antiquewhite')
code: アンティークホワイト色として数列xdataとデータ列ydataについての散布図をプロットする	plt.plot(xdata, ydata, c='antiquewhite')	plt.plot(xdata, ydata, c='antiquewhite')
code: 数列xdataと数列ydataの散布図をアンティークホワイト色として描く	plt.plot(xdata, ydata, c='antiquewhite')	plt.plot(xdata, ydata, c='antiquewhite')
code: データ列xdataと数列ydataについて散布図を描画して、マーカーの色をアンティークホワイトに設定する	plt.plot(xdata, ydata, c='antiquewhite')	plt.plot(xdata, ydata, c='antiquewhite')
code: イテラブルxdataと数列ydataの散布図を描画して色をアンティークホワイト変える	plt.plot(xdata, ydata, c='antiquewhite')	plt.plot(xdata, ydata, c='antiquewhite')
code: アクア色のマーカーを散布図に使う	plt.plot(xdata, ydata, c='aqua')	plt.plot(xdata, ydata, c='aqua')
code: 散布図にアクア色のマーカーを使う	plt.plot(xdata, ydata, c='aqua')	plt.plot(xdata, ydata, c='aqua')
code: 散布図をアクア色のマーカーでプロットする	plt.plot(xdata, ydata, c='aqua')	plt.plot(xdata, ydata, c='aqua')
code: アクア色として散布図を描く	plt.plot(xdata, ydata, c='aqua')	plt.plot(xdata, ydata, c='aqua')
code: アクア色のマーカーを用いて散布図を描く	plt.plot(xdata, ydata, c='aqua')	plt.plot(xdata, ydata, c='aqua')
code: イテラブルxdataとリストydataについての散布図をアクア色を用いて描く	plt.plot(xdata, ydata, c='aqua')	plt.plot(xdata, ydata, c='aqua')
code: アクア色でデータ列xdataとリストydataの散布図をプロットする	plt.plot(xdata, ydata, c='aqua')	plt.plot(xdata, ydata, c='aqua')
code: アクア色でデータ列xdataとイテラブルydataについての散布図を描画する	plt.plot(xdata, ydata, c='aqua')	plt.plot(xdata, ydata, c='aqua')
code: 数列xdataとデータ列ydataの散布図を描画してマーカーの色をアクアにする	plt.plot(xdata, ydata, c='aqua')	plt.plot(xdata, ydata, c='aqua')
code: イテラブルxdataとデータ列ydataの散布図を描画して、マーカーの色をアクアに指定する	plt.plot(xdata, ydata, c='aqua')	plt.plot(xdata, ydata, c='aqua')
code: 散布図にアクアマリン色のマーカーを用いる	plt.plot(xdata, ydata, c='aquamarine')	plt.plot(xdata, ydata, c='aquamarine')
code: アクアマリン色のマーカーを散布図に使用する	plt.plot(xdata, ydata, c='aquamarine')	plt.plot(xdata, ydata, c='aquamarine')
code: アクアマリン色を用いて散布図を描く	plt.plot(xdata, ydata, c='aquamarine')	plt.plot(xdata, ydata, c='aquamarine')
code: 散布図をアクアマリン色のマーカーとしてプロットする	plt.plot(xdata, ydata, c='aquamarine')	plt.plot(xdata, ydata, c='aquamarine')
code: 散布図をアクアマリン色を用いて描く	plt.plot(xdata, ydata, c='aquamarine')	plt.plot(xdata, ydata, c='aquamarine')
code: アクアマリン色を使ってリストxdataとデータ列ydataについての散布図をプロットする	plt.plot(xdata, ydata, c='aquamarine')	plt.plot(xdata, ydata, c='aquamarine')
code: アクアマリン色を使ってイテラブルxdataと配列ydataの散布図をプロットする	plt.plot(xdata, ydata, c='aquamarine')	plt.plot(xdata, ydata, c='aquamarine')
code: アクアマリン色としてデータ列xdataとイテラブルydataについての散布図をプロットする	plt.plot(xdata, ydata, c='aquamarine')	plt.plot(xdata, ydata, c='aquamarine')
code: 数列xdataとリストydataの散布図を描画して、色をアクアマリンに設定する	plt.plot(xdata, ydata, c='aquamarine')	plt.plot(xdata, ydata, c='aquamarine')
code: 配列xdataとデータ列ydataについて散布図を描画して、マーカーの色をアクアマリンに変更する	plt.plot(xdata, ydata, c='aquamarine')	plt.plot(xdata, ydata, c='aquamarine')
code: 紺碧色のマーカーを散布図に用いる	plt.plot(xdata, ydata, c='azure')	plt.plot(xdata, ydata, c='azure')
code: 散布図に紺碧色のマーカーを使用する	plt.plot(xdata, ydata, c='azure')	plt.plot(xdata, ydata, c='azure')
code: 紺碧色で散布図を描く	plt.plot(xdata, ydata, c='azure')	plt.plot(xdata, ydata, c='azure')
code: 紺碧色のマーカーを用いて散布図を描画する	plt.plot(xdata, ydata, c='azure')	plt.plot(xdata, ydata, c='azure')
code: 紺碧色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='azure')	plt.plot(xdata, ydata, c='azure')
code: 紺碧色でリストxdataと配列ydataについての散布図をプロットする	plt.plot(xdata, ydata, c='azure')	plt.plot(xdata, ydata, c='azure')
code: データ列xdataとリストydataについての散布図を紺碧色で描く	plt.plot(xdata, ydata, c='azure')	plt.plot(xdata, ydata, c='azure')
code: 紺碧色を使ってリストxdataとイテラブルydataの散布図をプロットする	plt.plot(xdata, ydata, c='azure')	plt.plot(xdata, ydata, c='azure')
code: 配列xdataと数列ydataの散布図を描画して、色を紺碧変える	plt.plot(xdata, ydata, c='azure')	plt.plot(xdata, ydata, c='azure')
code: イテラブルxdataとデータ列ydataについて散布図を描画してマーカーの色を紺碧に設定する	plt.plot(xdata, ydata, c='azure')	plt.plot(xdata, ydata, c='azure')
code: 散布図にベージュ色のマーカーを使う	plt.plot(xdata, ydata, c='beige')	plt.plot(xdata, ydata, c='beige')
code: ベージュ色のマーカーを散布図に使用する	plt.plot(xdata, ydata, c='beige')	plt.plot(xdata, ydata, c='beige')
code: ベージュ色のマーカーを用いて散布図をプロットする	plt.plot(xdata, ydata, c='beige')	plt.plot(xdata, ydata, c='beige')
code: 散布図をベージュ色を用いて描画する	plt.plot(xdata, ydata, c='beige')	plt.plot(xdata, ydata, c='beige')
code: ベージュ色として散布図をプロットする	plt.plot(xdata, ydata, c='beige')	plt.plot(xdata, ydata, c='beige')
code: ベージュ色を用いて数列xdataとデータ列ydataについての散布図をプロットする	plt.plot(xdata, ydata, c='beige')	plt.plot(xdata, ydata, c='beige')
code: ベージュ色で数列xdataと数列ydataの散布図を描画する	plt.plot(xdata, ydata, c='beige')	plt.plot(xdata, ydata, c='beige')
code: 数列xdataと配列ydataについての散布図をベージュ色で描画する	plt.plot(xdata, ydata, c='beige')	plt.plot(xdata, ydata, c='beige')
code: リストxdataとデータ列ydataの散布図を描画してマーカーの色をベージュに変更する	plt.plot(xdata, ydata, c='beige')	plt.plot(xdata, ydata, c='beige')
code: 数列xdataと配列ydataの散布図を描画して色をベージュとする	plt.plot(xdata, ydata, c='beige')	plt.plot(xdata, ydata, c='beige')
code: 散布図にビスク色のマーカーを用いる	plt.plot(xdata, ydata, c='bisque')	plt.plot(xdata, ydata, c='bisque')
code: ビスク色のマーカーを散布図に用いる	plt.plot(xdata, ydata, c='bisque')	plt.plot(xdata, ydata, c='bisque')
code: 散布図をビスク色のマーカーでプロットする	plt.plot(xdata, ydata, c='bisque')	plt.plot(xdata, ydata, c='bisque')
code: 散布図をビスク色で描く	plt.plot(xdata, ydata, c='bisque')	plt.plot(xdata, ydata, c='bisque')
code: 散布図をビスク色を用いてプロットする	plt.plot(xdata, ydata, c='bisque')	plt.plot(xdata, ydata, c='bisque')
code: 配列xdataとリストydataの散布図をビスク色で描画する	plt.plot(xdata, ydata, c='bisque')	plt.plot(xdata, ydata, c='bisque')
code: ビスク色で配列xdataと配列ydataについての散布図を描く	plt.plot(xdata, ydata, c='bisque')	plt.plot(xdata, ydata, c='bisque')
code: ビスク色でリストxdataと数列ydataの散布図を描画する	plt.plot(xdata, ydata, c='bisque')	plt.plot(xdata, ydata, c='bisque')
code: データ列xdataとリストydataについて散布図を描画して、色をビスク変える	plt.plot(xdata, ydata, c='bisque')	plt.plot(xdata, ydata, c='bisque')
code: 配列xdataとデータ列ydataの散布図を描画して、マーカーの色をビスク変える	plt.plot(xdata, ydata, c='bisque')	plt.plot(xdata, ydata, c='bisque')
code: 散布図にブラック色のマーカーを使う	plt.plot(xdata, ydata, c='black')	plt.plot(xdata, ydata, c='black')
code: ブラック色のマーカーを散布図に用いる	plt.plot(xdata, ydata, c='black')	plt.plot(xdata, ydata, c='black')
code: 散布図をブラック色のマーカーで描画する	plt.plot(xdata, ydata, c='black')	plt.plot(xdata, ydata, c='black')
code: ブラック色で散布図をプロットする	plt.plot(xdata, ydata, c='black')	plt.plot(xdata, ydata, c='black')
code: ブラック色のマーカーを用いて散布図をプロットする	plt.plot(xdata, ydata, c='black')	plt.plot(xdata, ydata, c='black')
code: ブラック色で数列xdataと数列ydataについての散布図を描画する	plt.plot(xdata, ydata, c='black')	plt.plot(xdata, ydata, c='black')
code: ブラック色で数列xdataと配列ydataについての散布図を描く	plt.plot(xdata, ydata, c='black')	plt.plot(xdata, ydata, c='black')
code: イテラブルxdataとデータ列ydataの散布図をブラック色としてプロットする	plt.plot(xdata, ydata, c='black')	plt.plot(xdata, ydata, c='black')
code: イテラブルxdataと数列ydataの散布図を描画してマーカーの色をブラックに設定する	plt.plot(xdata, ydata, c='black')	plt.plot(xdata, ydata, c='black')
code: 配列xdataと配列ydataの散布図を描画して色をブラックにセットする	plt.plot(xdata, ydata, c='black')	plt.plot(xdata, ydata, c='black')
code: ブランチドアーモンド色のマーカーを散布図に使用する	plt.plot(xdata, ydata, c='blanchedalmond')	plt.plot(xdata, ydata, c='blanchedalmond')
code: ブランチドアーモンド色のマーカーを散布図に使う	plt.plot(xdata, ydata, c='blanchedalmond')	plt.plot(xdata, ydata, c='blanchedalmond')
code: ブランチドアーモンド色のマーカーを使って散布図を描く	plt.plot(xdata, ydata, c='blanchedalmond')	plt.plot(xdata, ydata, c='blanchedalmond')
code: 散布図をブランチドアーモンド色のマーカーで描く	plt.plot(xdata, ydata, c='blanchedalmond')	plt.plot(xdata, ydata, c='blanchedalmond')
code: 散布図をブランチドアーモンド色のマーカーとしてプロットする	plt.plot(xdata, ydata, c='blanchedalmond')	plt.plot(xdata, ydata, c='blanchedalmond')
code: ブランチドアーモンド色でイテラブルxdataとデータ列ydataについての散布図を描画する	plt.plot(xdata, ydata, c='blanchedalmond')	plt.plot(xdata, ydata, c='blanchedalmond')
code: ブランチドアーモンド色を使って数列xdataと数列ydataの散布図を描く	plt.plot(xdata, ydata, c='blanchedalmond')	plt.plot(xdata, ydata, c='blanchedalmond')
code: ブランチドアーモンド色で数列xdataと数列ydataの散布図を描く	plt.plot(xdata, ydata, c='blanchedalmond')	plt.plot(xdata, ydata, c='blanchedalmond')
code: イテラブルxdataとイテラブルydataについて散布図を描画して、色をブランチドアーモンドに指定する	plt.plot(xdata, ydata, c='blanchedalmond')	plt.plot(xdata, ydata, c='blanchedalmond')
code: イテラブルxdataと配列ydataの散布図を描画して、色をブランチドアーモンドにセットする	plt.plot(xdata, ydata, c='blanchedalmond')	plt.plot(xdata, ydata, c='blanchedalmond')
code: 青色のマーカーを散布図に使用する	plt.plot(xdata, ydata, c='blue')	plt.plot(xdata, ydata, c='blue')
code: 青色のマーカーを散布図に使う	plt.plot(xdata, ydata, c='blue')	plt.plot(xdata, ydata, c='blue')
code: 散布図を青色を使って描く	plt.plot(xdata, ydata, c='blue')	plt.plot(xdata, ydata, c='blue')
code: 青色のマーカーとして散布図を描く	plt.plot(xdata, ydata, c='blue')	plt.plot(xdata, ydata, c='blue')
code: 青色のマーカーを使って散布図を描画する	plt.plot(xdata, ydata, c='blue')	plt.plot(xdata, ydata, c='blue')
code: データ列xdataとリストydataについての散布図を青色としてプロットする	plt.plot(xdata, ydata, c='blue')	plt.plot(xdata, ydata, c='blue')
code: 青色として数列xdataと数列ydataの散布図を描画する	plt.plot(xdata, ydata, c='blue')	plt.plot(xdata, ydata, c='blue')
code: 青色で数列xdataと配列ydataの散布図をプロットする	plt.plot(xdata, ydata, c='blue')	plt.plot(xdata, ydata, c='blue')
code: イテラブルxdataとリストydataについて散布図を描画して、マーカーの色を青に変更する	plt.plot(xdata, ydata, c='blue')	plt.plot(xdata, ydata, c='blue')
code: イテラブルxdataとデータ列ydataについて散布図を描画して色を青とする	plt.plot(xdata, ydata, c='blue')	plt.plot(xdata, ydata, c='blue')
code: 散布図にブルーバイオレット色のマーカーを使用する	plt.plot(xdata, ydata, c='blueviolet')	plt.plot(xdata, ydata, c='blueviolet')
code: 散布図にブルーバイオレット色のマーカーを使う	plt.plot(xdata, ydata, c='blueviolet')	plt.plot(xdata, ydata, c='blueviolet')
code: ブルーバイオレット色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='blueviolet')	plt.plot(xdata, ydata, c='blueviolet')
code: ブルーバイオレット色のマーカーとして散布図を描画する	plt.plot(xdata, ydata, c='blueviolet')	plt.plot(xdata, ydata, c='blueviolet')
code: 散布図をブルーバイオレット色のマーカーとしてプロットする	plt.plot(xdata, ydata, c='blueviolet')	plt.plot(xdata, ydata, c='blueviolet')
code: イテラブルxdataとリストydataの散布図をブルーバイオレット色で描く	plt.plot(xdata, ydata, c='blueviolet')	plt.plot(xdata, ydata, c='blueviolet')
code: ブルーバイオレット色としてイテラブルxdataとイテラブルydataについての散布図を描く	plt.plot(xdata, ydata, c='blueviolet')	plt.plot(xdata, ydata, c='blueviolet')
code: 数列xdataとリストydataの散布図をブルーバイオレット色で描く	plt.plot(xdata, ydata, c='blueviolet')	plt.plot(xdata, ydata, c='blueviolet')
code: データ列xdataとイテラブルydataについて散布図を描画して、マーカーの色をブルーバイオレットに設定する	plt.plot(xdata, ydata, c='blueviolet')	plt.plot(xdata, ydata, c='blueviolet')
code: イテラブルxdataと数列ydataについて散布図を描画してマーカーの色をブルーバイオレットに変更する	plt.plot(xdata, ydata, c='blueviolet')	plt.plot(xdata, ydata, c='blueviolet')
code: ブラウン色のマーカーを散布図に用いる	plt.plot(xdata, ydata, c='brown')	plt.plot(xdata, ydata, c='brown')
code: 散布図にブラウン色のマーカーを使う	plt.plot(xdata, ydata, c='brown')	plt.plot(xdata, ydata, c='brown')
code: ブラウン色のマーカーを用いて散布図をプロットする	plt.plot(xdata, ydata, c='brown')	plt.plot(xdata, ydata, c='brown')
code: 散布図をブラウン色のマーカーとしてプロットする	plt.plot(xdata, ydata, c='brown')	plt.plot(xdata, ydata, c='brown')
code: ブラウン色のマーカーで散布図をプロットする	plt.plot(xdata, ydata, c='brown')	plt.plot(xdata, ydata, c='brown')
code: ブラウン色を用いて数列xdataと配列ydataの散布図を描く	plt.plot(xdata, ydata, c='brown')	plt.plot(xdata, ydata, c='brown')
code: ブラウン色を使ってリストxdataとリストydataの散布図を描画する	plt.plot(xdata, ydata, c='brown')	plt.plot(xdata, ydata, c='brown')
code: 数列xdataとリストydataの散布図をブラウン色でプロットする	plt.plot(xdata, ydata, c='brown')	plt.plot(xdata, ydata, c='brown')
code: データ列xdataと配列ydataについて散布図を描画して、色をブラウンに変更する	plt.plot(xdata, ydata, c='brown')	plt.plot(xdata, ydata, c='brown')
code: 数列xdataとイテラブルydataについて散布図を描画して、色をブラウンにセットする	plt.plot(xdata, ydata, c='brown')	plt.plot(xdata, ydata, c='brown')
code: 散布図にハリウッド色のマーカーを用いる	plt.plot(xdata, ydata, c='burlywood')	plt.plot(xdata, ydata, c='burlywood')
code: 散布図にハリウッド色のマーカーを使う	plt.plot(xdata, ydata, c='burlywood')	plt.plot(xdata, ydata, c='burlywood')
code: 散布図をハリウッド色のマーカーを使ってプロットする	plt.plot(xdata, ydata, c='burlywood')	plt.plot(xdata, ydata, c='burlywood')
code: ハリウッド色のマーカーを使って散布図を描画する	plt.plot(xdata, ydata, c='burlywood')	plt.plot(xdata, ydata, c='burlywood')
code: ハリウッド色を使って散布図を描く	plt.plot(xdata, ydata, c='burlywood')	plt.plot(xdata, ydata, c='burlywood')
code: ハリウッド色として配列xdataと数列ydataの散布図を描画する	plt.plot(xdata, ydata, c='burlywood')	plt.plot(xdata, ydata, c='burlywood')
code: リストxdataと数列ydataの散布図をハリウッド色として描く	plt.plot(xdata, ydata, c='burlywood')	plt.plot(xdata, ydata, c='burlywood')
code: ハリウッド色としてリストxdataとリストydataの散布図をプロットする	plt.plot(xdata, ydata, c='burlywood')	plt.plot(xdata, ydata, c='burlywood')
code: データ列xdataとリストydataについて散布図を描画して色をハリウッドに変更する	plt.plot(xdata, ydata, c='burlywood')	plt.plot(xdata, ydata, c='burlywood')
code: 数列xdataと数列ydataの散布図を描画して色をハリウッド変える	plt.plot(xdata, ydata, c='burlywood')	plt.plot(xdata, ydata, c='burlywood')
code: 散布図にカデットブルー色のマーカーを用いる	plt.plot(xdata, ydata, c='cadetblue')	plt.plot(xdata, ydata, c='cadetblue')
code: カデットブルー色のマーカーを散布図に用いる	plt.plot(xdata, ydata, c='cadetblue')	plt.plot(xdata, ydata, c='cadetblue')
code: カデットブルー色として散布図を描画する	plt.plot(xdata, ydata, c='cadetblue')	plt.plot(xdata, ydata, c='cadetblue')
code: カデットブルー色のマーカーを使って散布図を描画する	plt.plot(xdata, ydata, c='cadetblue')	plt.plot(xdata, ydata, c='cadetblue')
code: カデットブルー色のマーカーを用いて散布図をプロットする	plt.plot(xdata, ydata, c='cadetblue')	plt.plot(xdata, ydata, c='cadetblue')
code: カデットブルー色でイテラブルxdataとリストydataについての散布図を描く	plt.plot(xdata, ydata, c='cadetblue')	plt.plot(xdata, ydata, c='cadetblue')
code: カデットブルー色として配列xdataとイテラブルydataの散布図を描画する	plt.plot(xdata, ydata, c='cadetblue')	plt.plot(xdata, ydata, c='cadetblue')
code: カデットブルー色を使って配列xdataと数列ydataについての散布図を描く	plt.plot(xdata, ydata, c='cadetblue')	plt.plot(xdata, ydata, c='cadetblue')
code: リストxdataと配列ydataについて散布図を描画して、色をカデットブルーにセットする	plt.plot(xdata, ydata, c='cadetblue')	plt.plot(xdata, ydata, c='cadetblue')
code: リストxdataとリストydataの散布図を描画して色をカデットブルー変える	plt.plot(xdata, ydata, c='cadetblue')	plt.plot(xdata, ydata, c='cadetblue')
code: シャルトルーズ色のマーカーを散布図に用いる	plt.plot(xdata, ydata, c='chartreuse')	plt.plot(xdata, ydata, c='chartreuse')
code: 散布図にシャルトルーズ色のマーカーを使う	plt.plot(xdata, ydata, c='chartreuse')	plt.plot(xdata, ydata, c='chartreuse')
code: 散布図をシャルトルーズ色のマーカーとして描画する	plt.plot(xdata, ydata, c='chartreuse')	plt.plot(xdata, ydata, c='chartreuse')
code: 散布図をシャルトルーズ色で描く	plt.plot(xdata, ydata, c='chartreuse')	plt.plot(xdata, ydata, c='chartreuse')
code: シャルトルーズ色のマーカーで散布図を描く	plt.plot(xdata, ydata, c='chartreuse')	plt.plot(xdata, ydata, c='chartreuse')
code: データ列xdataとイテラブルydataについての散布図をシャルトルーズ色としてプロットする	plt.plot(xdata, ydata, c='chartreuse')	plt.plot(xdata, ydata, c='chartreuse')
code: 配列xdataとデータ列ydataの散布図をシャルトルーズ色を用いて描画する	plt.plot(xdata, ydata, c='chartreuse')	plt.plot(xdata, ydata, c='chartreuse')
code: リストxdataとデータ列ydataの散布図をシャルトルーズ色を使って描画する	plt.plot(xdata, ydata, c='chartreuse')	plt.plot(xdata, ydata, c='chartreuse')
code: 配列xdataと配列ydataの散布図を描画して、色をシャルトルーズにセットする	plt.plot(xdata, ydata, c='chartreuse')	plt.plot(xdata, ydata, c='chartreuse')
code: データ列xdataとリストydataについて散布図を描画して色をシャルトルーズ変える	plt.plot(xdata, ydata, c='chartreuse')	plt.plot(xdata, ydata, c='chartreuse')
code: 散布図にチョコレート色のマーカーを用いる	plt.plot(xdata, ydata, c='chocolate')	plt.plot(xdata, ydata, c='chocolate')
code: チョコレート色のマーカーを散布図に使う	plt.plot(xdata, ydata, c='chocolate')	plt.plot(xdata, ydata, c='chocolate')
code: 散布図をチョコレート色のマーカーで描画する	plt.plot(xdata, ydata, c='chocolate')	plt.plot(xdata, ydata, c='chocolate')
code: チョコレート色のマーカーとして散布図をプロットする	plt.plot(xdata, ydata, c='chocolate')	plt.plot(xdata, ydata, c='chocolate')
code: 散布図をチョコレート色のマーカーを使ってプロットする	plt.plot(xdata, ydata, c='chocolate')	plt.plot(xdata, ydata, c='chocolate')
code: チョコレート色を用いてデータ列xdataと配列ydataの散布図を描く	plt.plot(xdata, ydata, c='chocolate')	plt.plot(xdata, ydata, c='chocolate')
code: 配列xdataと配列ydataの散布図をチョコレート色で描く	plt.plot(xdata, ydata, c='chocolate')	plt.plot(xdata, ydata, c='chocolate')
code: イテラブルxdataとリストydataについての散布図をチョコレート色として描画する	plt.plot(xdata, ydata, c='chocolate')	plt.plot(xdata, ydata, c='chocolate')
code: イテラブルxdataとデータ列ydataの散布図を描画して、マーカーの色をチョコレートに変更する	plt.plot(xdata, ydata, c='chocolate')	plt.plot(xdata, ydata, c='chocolate')
code: リストxdataとデータ列ydataについて散布図を描画して、色をチョコレート変える	plt.plot(xdata, ydata, c='chocolate')	plt.plot(xdata, ydata, c='chocolate')
code: 散布図にコーラル色のマーカーを使用する	plt.plot(xdata, ydata, c='coral')	plt.plot(xdata, ydata, c='coral')
code: コーラル色のマーカーを散布図に使用する	plt.plot(xdata, ydata, c='coral')	plt.plot(xdata, ydata, c='coral')
code: コーラル色のマーカーとして散布図を描く	plt.plot(xdata, ydata, c='coral')	plt.plot(xdata, ydata, c='coral')
code: 散布図をコーラル色のマーカーとしてプロットする	plt.plot(xdata, ydata, c='coral')	plt.plot(xdata, ydata, c='coral')
code: 散布図をコーラル色のマーカーでプロットする	plt.plot(xdata, ydata, c='coral')	plt.plot(xdata, ydata, c='coral')
code: 配列xdataと数列ydataの散布図をコーラル色として描画する	plt.plot(xdata, ydata, c='coral')	plt.plot(xdata, ydata, c='coral')
code: コーラル色で配列xdataと数列ydataの散布図を描く	plt.plot(xdata, ydata, c='coral')	plt.plot(xdata, ydata, c='coral')
code: コーラル色として配列xdataとデータ列ydataについての散布図をプロットする	plt.plot(xdata, ydata, c='coral')	plt.plot(xdata, ydata, c='coral')
code: 配列xdataと配列ydataの散布図を描画してマーカーの色をコーラルに設定する	plt.plot(xdata, ydata, c='coral')	plt.plot(xdata, ydata, c='coral')
code: 数列xdataとデータ列ydataの散布図を描画して、マーカーの色をコーラルに設定する	plt.plot(xdata, ydata, c='coral')	plt.plot(xdata, ydata, c='coral')
code: 散布図にコーンフラワーブルー色のマーカーを使用する	plt.plot(xdata, ydata, c='cornflowerblue')	plt.plot(xdata, ydata, c='cornflowerblue')
code: 散布図にコーンフラワーブルー色のマーカーを使用する	plt.plot(xdata, ydata, c='cornflowerblue')	plt.plot(xdata, ydata, c='cornflowerblue')
code: 散布図をコーンフラワーブルー色のマーカーとして描く	plt.plot(xdata, ydata, c='cornflowerblue')	plt.plot(xdata, ydata, c='cornflowerblue')
code: 散布図をコーンフラワーブルー色のマーカーで描画する	plt.plot(xdata, ydata, c='cornflowerblue')	plt.plot(xdata, ydata, c='cornflowerblue')
code: 散布図をコーンフラワーブルー色としてプロットする	plt.plot(xdata, ydata, c='cornflowerblue')	plt.plot(xdata, ydata, c='cornflowerblue')
code: コーンフラワーブルー色として配列xdataとデータ列ydataの散布図をプロットする	plt.plot(xdata, ydata, c='cornflowerblue')	plt.plot(xdata, ydata, c='cornflowerblue')
code: 配列xdataと配列ydataの散布図をコーンフラワーブルー色で描画する	plt.plot(xdata, ydata, c='cornflowerblue')	plt.plot(xdata, ydata, c='cornflowerblue')
code: コーンフラワーブルー色を使ってリストxdataと配列ydataの散布図を描画する	plt.plot(xdata, ydata, c='cornflowerblue')	plt.plot(xdata, ydata, c='cornflowerblue')
code: 数列xdataとデータ列ydataについて散布図を描画してマーカーの色をコーンフラワーブルーに変更する	plt.plot(xdata, ydata, c='cornflowerblue')	plt.plot(xdata, ydata, c='cornflowerblue')
code: リストxdataと数列ydataの散布図を描画して色をコーンフラワーブルーに設定する	plt.plot(xdata, ydata, c='cornflowerblue')	plt.plot(xdata, ydata, c='cornflowerblue')
code: 散布図にコーンズシルク色のマーカーを使う	plt.plot(xdata, ydata, c='cornsilk')	plt.plot(xdata, ydata, c='cornsilk')
code: コーンズシルク色のマーカーを散布図に使う	plt.plot(xdata, ydata, c='cornsilk')	plt.plot(xdata, ydata, c='cornsilk')
code: 散布図をコーンズシルク色のマーカーを使って描く	plt.plot(xdata, ydata, c='cornsilk')	plt.plot(xdata, ydata, c='cornsilk')
code: コーンズシルク色で散布図を描く	plt.plot(xdata, ydata, c='cornsilk')	plt.plot(xdata, ydata, c='cornsilk')
code: コーンズシルク色で散布図を描く	plt.plot(xdata, ydata, c='cornsilk')	plt.plot(xdata, ydata, c='cornsilk')
code: イテラブルxdataとリストydataについての散布図をコーンズシルク色として描画する	plt.plot(xdata, ydata, c='cornsilk')	plt.plot(xdata, ydata, c='cornsilk')
code: コーンズシルク色でイテラブルxdataとデータ列ydataについての散布図を描く	plt.plot(xdata, ydata, c='cornsilk')	plt.plot(xdata, ydata, c='cornsilk')
code: コーンズシルク色を用いてリストxdataと配列ydataについての散布図を描く	plt.plot(xdata, ydata, c='cornsilk')	plt.plot(xdata, ydata, c='cornsilk')
code: リストxdataとリストydataについて散布図を描画してマーカーの色をコーンズシルクに指定する	plt.plot(xdata, ydata, c='cornsilk')	plt.plot(xdata, ydata, c='cornsilk')
code: イテラブルxdataとリストydataの散布図を描画して、マーカーの色をコーンズシルクに設定する	plt.plot(xdata, ydata, c='cornsilk')	plt.plot(xdata, ydata, c='cornsilk')
code: クリムゾン色のマーカーを散布図に使う	plt.plot(xdata, ydata, c='crimson')	plt.plot(xdata, ydata, c='crimson')
code: 散布図にクリムゾン色のマーカーを用いる	plt.plot(xdata, ydata, c='crimson')	plt.plot(xdata, ydata, c='crimson')
code: 散布図をクリムゾン色のマーカーとして描く	plt.plot(xdata, ydata, c='crimson')	plt.plot(xdata, ydata, c='crimson')
code: クリムゾン色のマーカーとして散布図を描く	plt.plot(xdata, ydata, c='crimson')	plt.plot(xdata, ydata, c='crimson')
code: クリムゾン色で散布図を描画する	plt.plot(xdata, ydata, c='crimson')	plt.plot(xdata, ydata, c='crimson')
code: データ列xdataと数列ydataの散布図をクリムゾン色を使ってプロットする	plt.plot(xdata, ydata, c='crimson')	plt.plot(xdata, ydata, c='crimson')
code: 配列xdataと数列ydataの散布図をクリムゾン色を用いて描く	plt.plot(xdata, ydata, c='crimson')	plt.plot(xdata, ydata, c='crimson')
code: リストxdataと配列ydataについての散布図をクリムゾン色として描画する	plt.plot(xdata, ydata, c='crimson')	plt.plot(xdata, ydata, c='crimson')
code: イテラブルxdataと配列ydataの散布図を描画してマーカーの色をクリムゾンに設定する	plt.plot(xdata, ydata, c='crimson')	plt.plot(xdata, ydata, c='crimson')
code: 配列xdataと配列ydataについて散布図を描画して、色をクリムゾンにする	plt.plot(xdata, ydata, c='crimson')	plt.plot(xdata, ydata, c='crimson')
code: シアン色のマーカーを散布図に使う	plt.plot(xdata, ydata, c='cyan')	plt.plot(xdata, ydata, c='cyan')
code: 散布図にシアン色のマーカーを用いる	plt.plot(xdata, ydata, c='cyan')	plt.plot(xdata, ydata, c='cyan')
code: シアン色のマーカーで散布図をプロットする	plt.plot(xdata, ydata, c='cyan')	plt.plot(xdata, ydata, c='cyan')
code: 散布図をシアン色のマーカーとして描画する	plt.plot(xdata, ydata, c='cyan')	plt.plot(xdata, ydata, c='cyan')
code: シアン色のマーカーとして散布図をプロットする	plt.plot(xdata, ydata, c='cyan')	plt.plot(xdata, ydata, c='cyan')
code: シアン色としてリストxdataとイテラブルydataについての散布図を描画する	plt.plot(xdata, ydata, c='cyan')	plt.plot(xdata, ydata, c='cyan')
code: シアン色で数列xdataとリストydataの散布図をプロットする	plt.plot(xdata, ydata, c='cyan')	plt.plot(xdata, ydata, c='cyan')
code: シアン色でデータ列xdataと数列ydataについての散布図を描画する	plt.plot(xdata, ydata, c='cyan')	plt.plot(xdata, ydata, c='cyan')
code: 数列xdataと配列ydataの散布図を描画して、色をシアンに設定する	plt.plot(xdata, ydata, c='cyan')	plt.plot(xdata, ydata, c='cyan')
code: イテラブルxdataと数列ydataについて散布図を描画して色をシアンにセットする	plt.plot(xdata, ydata, c='cyan')	plt.plot(xdata, ydata, c='cyan')
code: ダークブルー色のマーカーを散布図に用いる	plt.plot(xdata, ydata, c='darkblue')	plt.plot(xdata, ydata, c='darkblue')
code: 散布図にダークブルー色のマーカーを用いる	plt.plot(xdata, ydata, c='darkblue')	plt.plot(xdata, ydata, c='darkblue')
code: 散布図をダークブルー色として描画する	plt.plot(xdata, ydata, c='darkblue')	plt.plot(xdata, ydata, c='darkblue')
code: 散布図をダークブルー色のマーカーを用いて描画する	plt.plot(xdata, ydata, c='darkblue')	plt.plot(xdata, ydata, c='darkblue')
code: ダークブルー色を使って散布図を描く	plt.plot(xdata, ydata, c='darkblue')	plt.plot(xdata, ydata, c='darkblue')
code: ダークブルー色としてイテラブルxdataとリストydataについての散布図を描画する	plt.plot(xdata, ydata, c='darkblue')	plt.plot(xdata, ydata, c='darkblue')
code: ダークブルー色でリストxdataと配列ydataの散布図を描画する	plt.plot(xdata, ydata, c='darkblue')	plt.plot(xdata, ydata, c='darkblue')
code: ダークブルー色を用いてリストxdataとイテラブルydataの散布図を描画する	plt.plot(xdata, ydata, c='darkblue')	plt.plot(xdata, ydata, c='darkblue')
code: イテラブルxdataとイテラブルydataについて散布図を描画して色をダークブルーに設定する	plt.plot(xdata, ydata, c='darkblue')	plt.plot(xdata, ydata, c='darkblue')
code: イテラブルxdataとデータ列ydataの散布図を描画して、マーカーの色をダークブルー変える	plt.plot(xdata, ydata, c='darkblue')	plt.plot(xdata, ydata, c='darkblue')
code: 散布図にダークシアン色のマーカーを使う	plt.plot(xdata, ydata, c='darkcyan')	plt.plot(xdata, ydata, c='darkcyan')
code: ダークシアン色のマーカーを散布図に使用する	plt.plot(xdata, ydata, c='darkcyan')	plt.plot(xdata, ydata, c='darkcyan')
code: 散布図をダークシアン色として描画する	plt.plot(xdata, ydata, c='darkcyan')	plt.plot(xdata, ydata, c='darkcyan')
code: ダークシアン色で散布図を描く	plt.plot(xdata, ydata, c='darkcyan')	plt.plot(xdata, ydata, c='darkcyan')
code: ダークシアン色を用いて散布図を描く	plt.plot(xdata, ydata, c='darkcyan')	plt.plot(xdata, ydata, c='darkcyan')
code: ダークシアン色としてデータ列xdataと数列ydataの散布図を描く	plt.plot(xdata, ydata, c='darkcyan')	plt.plot(xdata, ydata, c='darkcyan')
code: 数列xdataとデータ列ydataについての散布図をダークシアン色として描く	plt.plot(xdata, ydata, c='darkcyan')	plt.plot(xdata, ydata, c='darkcyan')
code: データ列xdataと数列ydataの散布図をダークシアン色として描画する	plt.plot(xdata, ydata, c='darkcyan')	plt.plot(xdata, ydata, c='darkcyan')
code: 配列xdataとリストydataの散布図を描画して、色をダークシアン変える	plt.plot(xdata, ydata, c='darkcyan')	plt.plot(xdata, ydata, c='darkcyan')
code: 配列xdataとイテラブルydataの散布図を描画して、色をダークシアンに変更する	plt.plot(xdata, ydata, c='darkcyan')	plt.plot(xdata, ydata, c='darkcyan')
code: ダークゴールデンロッド色のマーカーを散布図に使う	plt.plot(xdata, ydata, c='darkgoldenrod')	plt.plot(xdata, ydata, c='darkgoldenrod')
code: 散布図にダークゴールデンロッド色のマーカーを使用する	plt.plot(xdata, ydata, c='darkgoldenrod')	plt.plot(xdata, ydata, c='darkgoldenrod')
code: ダークゴールデンロッド色のマーカーを用いて散布図を描画する	plt.plot(xdata, ydata, c='darkgoldenrod')	plt.plot(xdata, ydata, c='darkgoldenrod')
code: 散布図をダークゴールデンロッド色として描画する	plt.plot(xdata, ydata, c='darkgoldenrod')	plt.plot(xdata, ydata, c='darkgoldenrod')
code: 散布図をダークゴールデンロッド色を使って描く	plt.plot(xdata, ydata, c='darkgoldenrod')	plt.plot(xdata, ydata, c='darkgoldenrod')
code: ダークゴールデンロッド色を使って数列xdataと配列ydataについての散布図をプロットする	plt.plot(xdata, ydata, c='darkgoldenrod')	plt.plot(xdata, ydata, c='darkgoldenrod')
code: 数列xdataとリストydataについての散布図をダークゴールデンロッド色としてプロットする	plt.plot(xdata, ydata, c='darkgoldenrod')	plt.plot(xdata, ydata, c='darkgoldenrod')
code: ダークゴールデンロッド色としてイテラブルxdataと配列ydataについての散布図をプロットする	plt.plot(xdata, ydata, c='darkgoldenrod')	plt.plot(xdata, ydata, c='darkgoldenrod')
code: 配列xdataとデータ列ydataについて散布図を描画してマーカーの色をダークゴールデンロッド変える	plt.plot(xdata, ydata, c='darkgoldenrod')	plt.plot(xdata, ydata, c='darkgoldenrod')
code: 数列xdataとデータ列ydataの散布図を描画して色をダークゴールデンロッドにする	plt.plot(xdata, ydata, c='darkgoldenrod')	plt.plot(xdata, ydata, c='darkgoldenrod')
code: 散布図にダークグレー色のマーカーを使用する	plt.plot(xdata, ydata, c='darkgray')	plt.plot(xdata, ydata, c='darkgray')
code: ダークグレー色のマーカーを散布図に使用する	plt.plot(xdata, ydata, c='darkgray')	plt.plot(xdata, ydata, c='darkgray')
code: 散布図をダークグレー色のマーカーを使って描く	plt.plot(xdata, ydata, c='darkgray')	plt.plot(xdata, ydata, c='darkgray')
code: ダークグレー色のマーカーで散布図をプロットする	plt.plot(xdata, ydata, c='darkgrey')	plt.plot(xdata, ydata, c='darkgray')
code: ダークグレー色のマーカーとして散布図を描画する	plt.plot(xdata, ydata, c='darkgrey')	plt.plot(xdata, ydata, c='darkgray')
code: ダークグレー色として配列xdataとデータ列ydataについての散布図をプロットする	plt.plot(xdata, ydata, c='darkgrey')	plt.plot(xdata, ydata, c='darkgray')
code: 数列xdataとデータ列ydataの散布図をダークグレー色として描画する	plt.plot(xdata, ydata, c='darkgrey')	plt.plot(xdata, ydata, c='darkgray')
code: ダークグレー色として配列xdataとリストydataについての散布図を描画する	plt.plot(xdata, ydata, c='darkgray')	plt.plot(xdata, ydata, c='darkgray')
code: データ列xdataとリストydataの散布図を描画して、マーカーの色をダークグレーに指定する	plt.plot(xdata, ydata, c='darkgrey')	plt.plot(xdata, ydata, c='darkgray')
code: リストxdataと数列ydataについて散布図を描画してマーカーの色をダークグレーに指定する	plt.plot(xdata, ydata, c='darkgrey')	plt.plot(xdata, ydata, c='darkgray')
code: ダークグリーン色のマーカーを散布図に使用する	plt.plot(xdata, ydata, c='darkgreen')	plt.plot(xdata, ydata, c='darkgreen')
code: ダークグリーン色のマーカーを散布図に用いる	plt.plot(xdata, ydata, c='darkgreen')	plt.plot(xdata, ydata, c='darkgreen')
code: ダークグリーン色のマーカーで散布図を描く	plt.plot(xdata, ydata, c='darkgreen')	plt.plot(xdata, ydata, c='darkgreen')
code: ダークグリーン色のマーカーを用いて散布図をプロットする	plt.plot(xdata, ydata, c='darkgreen')	plt.plot(xdata, ydata, c='darkgreen')
code: 散布図をダークグリーン色を使って描画する	plt.plot(xdata, ydata, c='darkgreen')	plt.plot(xdata, ydata, c='darkgreen')
code: リストxdataと数列ydataの散布図をダークグリーン色としてプロットする	plt.plot(xdata, ydata, c='darkgreen')	plt.plot(xdata, ydata, c='darkgreen')
code: リストxdataと配列ydataの散布図をダークグリーン色を使って描く	plt.plot(xdata, ydata, c='darkgreen')	plt.plot(xdata, ydata, c='darkgreen')
code: ダークグリーン色でデータ列xdataと数列ydataの散布図を描画する	plt.plot(xdata, ydata, c='darkgreen')	plt.plot(xdata, ydata, c='darkgreen')
code: 数列xdataと配列ydataの散布図を描画して、色をダークグリーンに設定する	plt.plot(xdata, ydata, c='darkgreen')	plt.plot(xdata, ydata, c='darkgreen')
code: データ列xdataとデータ列ydataについて散布図を描画してマーカーの色をダークグリーンにセットする	plt.plot(xdata, ydata, c='darkgreen')	plt.plot(xdata, ydata, c='darkgreen')
code: 散布図にダークグレー色のマーカーを使用する	plt.plot(xdata, ydata, c='darkgray')	plt.plot(xdata, ydata, c='darkgrey')
code: ダークグレー色のマーカーを散布図に使う	plt.plot(xdata, ydata, c='darkgrey')	plt.plot(xdata, ydata, c='darkgrey')
code: ダークグレー色を使って散布図を描画する	plt.plot(xdata, ydata, c='darkgrey')	plt.plot(xdata, ydata, c='darkgrey')
code: ダークグレー色を用いて散布図を描く	plt.plot(xdata, ydata, c='darkgray')	plt.plot(xdata, ydata, c='darkgrey')
code: ダークグレー色のマーカーとして散布図をプロットする	plt.plot(xdata, ydata, c='darkgrey')	plt.plot(xdata, ydata, c='darkgrey')
code: データ列xdataとリストydataの散布図をダークグレー色を使って描画する	plt.plot(xdata, ydata, c='darkgrey')	plt.plot(xdata, ydata, c='darkgrey')
code: ダークグレー色を用いてイテラブルxdataとリストydataについての散布図を描く	plt.plot(xdata, ydata, c='darkgray')	plt.plot(xdata, ydata, c='darkgrey')
code: ダークグレー色としてデータ列xdataと配列ydataの散布図を描く	plt.plot(xdata, ydata, c='darkgrey')	plt.plot(xdata, ydata, c='darkgrey')
code: 配列xdataと数列ydataの散布図を描画してマーカーの色をダークグレーにセットする	plt.plot(xdata, ydata, c='darkgray')	plt.plot(xdata, ydata, c='darkgrey')
code: 数列xdataと数列ydataについて散布図を描画して、色をダークグレーに変更する	plt.plot(xdata, ydata, c='darkgrey')	plt.plot(xdata, ydata, c='darkgrey')
code: ダークカーキ色のマーカーを散布図に使う	plt.plot(xdata, ydata, c='darkkhaki')	plt.plot(xdata, ydata, c='darkkhaki')
code: ダークカーキ色のマーカーを散布図に使う	plt.plot(xdata, ydata, c='darkkhaki')	plt.plot(xdata, ydata, c='darkkhaki')
code: 散布図をダークカーキ色を使って描画する	plt.plot(xdata, ydata, c='darkkhaki')	plt.plot(xdata, ydata, c='darkkhaki')
code: 散布図をダークカーキ色のマーカーとしてプロットする	plt.plot(xdata, ydata, c='darkkhaki')	plt.plot(xdata, ydata, c='darkkhaki')
code: 散布図をダークカーキ色のマーカーを使って描画する	plt.plot(xdata, ydata, c='darkkhaki')	plt.plot(xdata, ydata, c='darkkhaki')
code: 配列xdataと数列ydataの散布図をダークカーキ色を用いてプロットする	plt.plot(xdata, ydata, c='darkkhaki')	plt.plot(xdata, ydata, c='darkkhaki')
code: リストxdataと配列ydataの散布図をダークカーキ色でプロットする	plt.plot(xdata, ydata, c='darkkhaki')	plt.plot(xdata, ydata, c='darkkhaki')
code: リストxdataと配列ydataについての散布図をダークカーキ色としてプロットする	plt.plot(xdata, ydata, c='darkkhaki')	plt.plot(xdata, ydata, c='darkkhaki')
code: イテラブルxdataと数列ydataの散布図を描画して、マーカーの色をダークカーキに変更する	plt.plot(xdata, ydata, c='darkkhaki')	plt.plot(xdata, ydata, c='darkkhaki')
code: データ列xdataとデータ列ydataについて散布図を描画してマーカーの色をダークカーキ変える	plt.plot(xdata, ydata, c='darkkhaki')	plt.plot(xdata, ydata, c='darkkhaki')
code: ダークマゼンタ色のマーカーを散布図に使用する	plt.plot(xdata, ydata, c='darkmagenta')	plt.plot(xdata, ydata, c='darkmagenta')
code: 散布図にダークマゼンタ色のマーカーを使う	plt.plot(xdata, ydata, c='darkmagenta')	plt.plot(xdata, ydata, c='darkmagenta')
code: ダークマゼンタ色のマーカーとして散布図を描く	plt.plot(xdata, ydata, c='darkmagenta')	plt.plot(xdata, ydata, c='darkmagenta')
code: ダークマゼンタ色のマーカーとして散布図を描く	plt.plot(xdata, ydata, c='darkmagenta')	plt.plot(xdata, ydata, c='darkmagenta')
code: 散布図をダークマゼンタ色で描画する	plt.plot(xdata, ydata, c='darkmagenta')	plt.plot(xdata, ydata, c='darkmagenta')
code: ダークマゼンタ色を使ってイテラブルxdataと配列ydataの散布図をプロットする	plt.plot(xdata, ydata, c='darkmagenta')	plt.plot(xdata, ydata, c='darkmagenta')
code: リストxdataと数列ydataの散布図をダークマゼンタ色としてプロットする	plt.plot(xdata, ydata, c='darkmagenta')	plt.plot(xdata, ydata, c='darkmagenta')
code: ダークマゼンタ色で数列xdataと配列ydataについての散布図を描画する	plt.plot(xdata, ydata, c='darkmagenta')	plt.plot(xdata, ydata, c='darkmagenta')
code: データ列xdataと配列ydataについて散布図を描画してマーカーの色をダークマゼンタに指定する	plt.plot(xdata, ydata, c='darkmagenta')	plt.plot(xdata, ydata, c='darkmagenta')
code: データ列xdataとデータ列ydataについて散布図を描画してマーカーの色をダークマゼンタとする	plt.plot(xdata, ydata, c='darkmagenta')	plt.plot(xdata, ydata, c='darkmagenta')
code: ダークオリーブグリーン色のマーカーを散布図に使用する	plt.plot(xdata, ydata, c='darkolivegreen')	plt.plot(xdata, ydata, c='darkolivegreen')
code: ダークオリーブグリーン色のマーカーを散布図に使う	plt.plot(xdata, ydata, c='darkolivegreen')	plt.plot(xdata, ydata, c='darkolivegreen')
code: ダークオリーブグリーン色のマーカーを使って散布図を描く	plt.plot(xdata, ydata, c='darkolivegreen')	plt.plot(xdata, ydata, c='darkolivegreen')
code: 散布図をダークオリーブグリーン色のマーカーでプロットする	plt.plot(xdata, ydata, c='darkolivegreen')	plt.plot(xdata, ydata, c='darkolivegreen')
code: ダークオリーブグリーン色で散布図を描画する	plt.plot(xdata, ydata, c='darkolivegreen')	plt.plot(xdata, ydata, c='darkolivegreen')
code: 配列xdataとリストydataについての散布図をダークオリーブグリーン色を用いてプロットする	plt.plot(xdata, ydata, c='darkolivegreen')	plt.plot(xdata, ydata, c='darkolivegreen')
code: データ列xdataとイテラブルydataについての散布図をダークオリーブグリーン色として描く	plt.plot(xdata, ydata, c='darkolivegreen')	plt.plot(xdata, ydata, c='darkolivegreen')
code: ダークオリーブグリーン色を使ってリストxdataと数列ydataの散布図をプロットする	plt.plot(xdata, ydata, c='darkolivegreen')	plt.plot(xdata, ydata, c='darkolivegreen')
code: データ列xdataと数列ydataについて散布図を描画して色をダークオリーブグリーン変える	plt.plot(xdata, ydata, c='darkolivegreen')	plt.plot(xdata, ydata, c='darkolivegreen')
code: イテラブルxdataと配列ydataについて散布図を描画して、色をダークオリーブグリーン変える	plt.plot(xdata, ydata, c='darkolivegreen')	plt.plot(xdata, ydata, c='darkolivegreen')
code: 散布図にダークオレンジ色のマーカーを使用する	plt.plot(xdata, ydata, c='darkorange')	plt.plot(xdata, ydata, c='darkorange')
code: 散布図にダークオレンジ色のマーカーを使用する	plt.plot(xdata, ydata, c='darkorange')	plt.plot(xdata, ydata, c='darkorange')
code: ダークオレンジ色を使って散布図を描く	plt.plot(xdata, ydata, c='darkorange')	plt.plot(xdata, ydata, c='darkorange')
code: 散布図をダークオレンジ色で描く	plt.plot(xdata, ydata, c='darkorange')	plt.plot(xdata, ydata, c='darkorange')
code: 散布図をダークオレンジ色のマーカーを使ってプロットする	plt.plot(xdata, ydata, c='darkorange')	plt.plot(xdata, ydata, c='darkorange')
code: リストxdataと配列ydataについての散布図をダークオレンジ色としてプロットする	plt.plot(xdata, ydata, c='darkorange')	plt.plot(xdata, ydata, c='darkorange')
code: ダークオレンジ色でデータ列xdataとイテラブルydataについての散布図を描く	plt.plot(xdata, ydata, c='darkorange')	plt.plot(xdata, ydata, c='darkorange')
code: ダークオレンジ色としてリストxdataと数列ydataについての散布図を描画する	plt.plot(xdata, ydata, c='darkorange')	plt.plot(xdata, ydata, c='darkorange')
code: 配列xdataとイテラブルydataの散布図を描画して、マーカーの色をダークオレンジとする	plt.plot(xdata, ydata, c='darkorange')	plt.plot(xdata, ydata, c='darkorange')
code: 配列xdataと数列ydataの散布図を描画してマーカーの色をダークオレンジ変える	plt.plot(xdata, ydata, c='darkorange')	plt.plot(xdata, ydata, c='darkorange')
code: ダークオーキッド色のマーカーを散布図に用いる	plt.plot(xdata, ydata, c='darkorchid')	plt.plot(xdata, ydata, c='darkorchid')
code: ダークオーキッド色のマーカーを散布図に用いる	plt.plot(xdata, ydata, c='darkorchid')	plt.plot(xdata, ydata, c='darkorchid')
code: 散布図をダークオーキッド色のマーカーでプロットする	plt.plot(xdata, ydata, c='darkorchid')	plt.plot(xdata, ydata, c='darkorchid')
code: ダークオーキッド色として散布図をプロットする	plt.plot(xdata, ydata, c='darkorchid')	plt.plot(xdata, ydata, c='darkorchid')
code: 散布図をダークオーキッド色のマーカーを用いてプロットする	plt.plot(xdata, ydata, c='darkorchid')	plt.plot(xdata, ydata, c='darkorchid')
code: ダークオーキッド色でリストxdataとリストydataについての散布図をプロットする	plt.plot(xdata, ydata, c='darkorchid')	plt.plot(xdata, ydata, c='darkorchid')
code: 配列xdataとイテラブルydataの散布図をダークオーキッド色として描画する	plt.plot(xdata, ydata, c='darkorchid')	plt.plot(xdata, ydata, c='darkorchid')
code: リストxdataと数列ydataの散布図をダークオーキッド色として描く	plt.plot(xdata, ydata, c='darkorchid')	plt.plot(xdata, ydata, c='darkorchid')
code: データ列xdataとデータ列ydataの散布図を描画して色をダークオーキッドに変更する	plt.plot(xdata, ydata, c='darkorchid')	plt.plot(xdata, ydata, c='darkorchid')
code: イテラブルxdataと配列ydataの散布図を描画して色をダークオーキッドに設定する	plt.plot(xdata, ydata, c='darkorchid')	plt.plot(xdata, ydata, c='darkorchid')
code: ダークレッド色のマーカーを散布図に用いる	plt.plot(xdata, ydata, c='darkred')	plt.plot(xdata, ydata, c='darkred')
code: 散布図にダークレッド色のマーカーを用いる	plt.plot(xdata, ydata, c='darkred')	plt.plot(xdata, ydata, c='darkred')
code: ダークレッド色で散布図を描画する	plt.plot(xdata, ydata, c='darkred')	plt.plot(xdata, ydata, c='darkred')
code: 散布図をダークレッド色を使ってプロットする	plt.plot(xdata, ydata, c='darkred')	plt.plot(xdata, ydata, c='darkred')
code: ダークレッド色のマーカーとして散布図をプロットする	plt.plot(xdata, ydata, c='darkred')	plt.plot(xdata, ydata, c='darkred')
code: ダークレッド色を使って数列xdataと数列ydataについての散布図を描画する	plt.plot(xdata, ydata, c='darkred')	plt.plot(xdata, ydata, c='darkred')
code: ダークレッド色を使ってデータ列xdataとリストydataの散布図をプロットする	plt.plot(xdata, ydata, c='darkred')	plt.plot(xdata, ydata, c='darkred')
code: ダークレッド色でデータ列xdataとデータ列ydataの散布図を描く	plt.plot(xdata, ydata, c='darkred')	plt.plot(xdata, ydata, c='darkred')
code: データ列xdataと数列ydataの散布図を描画してマーカーの色をダークレッドに設定する	plt.plot(xdata, ydata, c='darkred')	plt.plot(xdata, ydata, c='darkred')
code: 配列xdataとリストydataの散布図を描画してマーカーの色をダークレッドに変更する	plt.plot(xdata, ydata, c='darkred')	plt.plot(xdata, ydata, c='darkred')
code: 散布図にダークサーモン色のマーカーを使う	plt.plot(xdata, ydata, c='darksalmon')	plt.plot(xdata, ydata, c='darksalmon')
code: ダークサーモン色のマーカーを散布図に使う	plt.plot(xdata, ydata, c='darksalmon')	plt.plot(xdata, ydata, c='darksalmon')
code: ダークサーモン色のマーカーとして散布図を描画する	plt.plot(xdata, ydata, c='darksalmon')	plt.plot(xdata, ydata, c='darksalmon')
code: ダークサーモン色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='darksalmon')	plt.plot(xdata, ydata, c='darksalmon')
code: 散布図をダークサーモン色を使って描画する	plt.plot(xdata, ydata, c='darksalmon')	plt.plot(xdata, ydata, c='darksalmon')
code: データ列xdataとデータ列ydataの散布図をダークサーモン色で描画する	plt.plot(xdata, ydata, c='darksalmon')	plt.plot(xdata, ydata, c='darksalmon')
code: ダークサーモン色としてイテラブルxdataと配列ydataについての散布図を描く	plt.plot(xdata, ydata, c='darksalmon')	plt.plot(xdata, ydata, c='darksalmon')
code: ダークサーモン色でデータ列xdataとリストydataの散布図を描く	plt.plot(xdata, ydata, c='darksalmon')	plt.plot(xdata, ydata, c='darksalmon')
code: リストxdataとイテラブルydataについて散布図を描画して色をダークサーモンにする	plt.plot(xdata, ydata, c='darksalmon')	plt.plot(xdata, ydata, c='darksalmon')
code: データ列xdataとイテラブルydataの散布図を描画して、マーカーの色をダークサーモンにセットする	plt.plot(xdata, ydata, c='darksalmon')	plt.plot(xdata, ydata, c='darksalmon')
code: 散布図にダークシアグリーン色のマーカーを用いる	plt.plot(xdata, ydata, c='darkseagreen')	plt.plot(xdata, ydata, c='darkseagreen')
code: ダークシアグリーン色のマーカーを散布図に用いる	plt.plot(xdata, ydata, c='darkseagreen')	plt.plot(xdata, ydata, c='darkseagreen')
code: 散布図をダークシアグリーン色のマーカーで描く	plt.plot(xdata, ydata, c='darkseagreen')	plt.plot(xdata, ydata, c='darkseagreen')
code: ダークシアグリーン色として散布図を描画する	plt.plot(xdata, ydata, c='darkseagreen')	plt.plot(xdata, ydata, c='darkseagreen')
code: ダークシアグリーン色として散布図をプロットする	plt.plot(xdata, ydata, c='darkseagreen')	plt.plot(xdata, ydata, c='darkseagreen')
code: ダークシアグリーン色で数列xdataとリストydataの散布図をプロットする	plt.plot(xdata, ydata, c='darkseagreen')	plt.plot(xdata, ydata, c='darkseagreen')
code: ダークシアグリーン色を使ってデータ列xdataとリストydataの散布図を描画する	plt.plot(xdata, ydata, c='darkseagreen')	plt.plot(xdata, ydata, c='darkseagreen')
code: 配列xdataとリストydataについての散布図をダークシアグリーン色としてプロットする	plt.plot(xdata, ydata, c='darkseagreen')	plt.plot(xdata, ydata, c='darkseagreen')
code: 数列xdataとイテラブルydataについて散布図を描画してマーカーの色をダークシアグリーンにセットする	plt.plot(xdata, ydata, c='darkseagreen')	plt.plot(xdata, ydata, c='darkseagreen')
code: 数列xdataと配列ydataについて散布図を描画して色をダークシアグリーンにする	plt.plot(xdata, ydata, c='darkseagreen')	plt.plot(xdata, ydata, c='darkseagreen')
code: 散布図にダークスレートブルー色のマーカーを使う	plt.plot(xdata, ydata, c='darkslateblue')	plt.plot(xdata, ydata, c='darkslateblue')
code: 散布図にダークスレートブルー色のマーカーを用いる	plt.plot(xdata, ydata, c='darkslateblue')	plt.plot(xdata, ydata, c='darkslateblue')
code: 散布図をダークスレートブルー色のマーカーを使って描く	plt.plot(xdata, ydata, c='darkslateblue')	plt.plot(xdata, ydata, c='darkslateblue')
code: ダークスレートブルー色のマーカーを使って散布図を描く	plt.plot(xdata, ydata, c='darkslateblue')	plt.plot(xdata, ydata, c='darkslateblue')
code: 散布図をダークスレートブルー色として描く	plt.plot(xdata, ydata, c='darkslateblue')	plt.plot(xdata, ydata, c='darkslateblue')
code: 配列xdataとリストydataについての散布図をダークスレートブルー色を使って描画する	plt.plot(xdata, ydata, c='darkslateblue')	plt.plot(xdata, ydata, c='darkslateblue')
code: ダークスレートブルー色としてリストxdataと配列ydataの散布図をプロットする	plt.plot(xdata, ydata, c='darkslateblue')	plt.plot(xdata, ydata, c='darkslateblue')
code: ダークスレートブルー色としてイテラブルxdataとデータ列ydataについての散布図をプロットする	plt.plot(xdata, ydata, c='darkslateblue')	plt.plot(xdata, ydata, c='darkslateblue')
code: 数列xdataと数列ydataについて散布図を描画してマーカーの色をダークスレートブルー変える	plt.plot(xdata, ydata, c='darkslateblue')	plt.plot(xdata, ydata, c='darkslateblue')
code: リストxdataとイテラブルydataについて散布図を描画して、色をダークスレートブルー変える	plt.plot(xdata, ydata, c='darkslateblue')	plt.plot(xdata, ydata, c='darkslateblue')
code: ダークスラテグレー色のマーカーを散布図に用いる	plt.plot(xdata, ydata, c='darkslategray')	plt.plot(xdata, ydata, c='darkslategray')
code: ダークスラテグレー色のマーカーを散布図に使う	plt.plot(xdata, ydata, c='darkslategray')	plt.plot(xdata, ydata, c='darkslategray')
code: ダークスラテグレー色で散布図を描く	plt.plot(xdata, ydata, c='darkslategray')	plt.plot(xdata, ydata, c='darkslategray')
code: ダークスラテグレー色で散布図を描画する	plt.plot(xdata, ydata, c='darkslategray')	plt.plot(xdata, ydata, c='darkslategray')
code: 散布図をダークスラテグレー色を使ってプロットする	plt.plot(xdata, ydata, c='darkslategray')	plt.plot(xdata, ydata, c='darkslategray')
code: データ列xdataと数列ydataについての散布図をダークスラテグレー色を使って描く	plt.plot(xdata, ydata, c='darkslategray')	plt.plot(xdata, ydata, c='darkslategray')
code: ダークスラテグレー色でリストxdataと数列ydataの散布図をプロットする	plt.plot(xdata, ydata, c='darkslategray')	plt.plot(xdata, ydata, c='darkslategray')
code: ダークスラテグレー色でリストxdataとデータ列ydataについての散布図をプロットする	plt.plot(xdata, ydata, c='darkslategray')	plt.plot(xdata, ydata, c='darkslategray')
code: データ列xdataとリストydataの散布図を描画して色をダークスラテグレーに指定する	plt.plot(xdata, ydata, c='darkslategray')	plt.plot(xdata, ydata, c='darkslategray')
code: リストxdataと配列ydataについて散布図を描画して、色をダークスラテグレー変える	plt.plot(xdata, ydata, c='darkslategray')	plt.plot(xdata, ydata, c='darkslategray')
code: 散布図にダーク・スラテグレー色のマーカーを用いる	plt.plot(xdata, ydata, c='darkslategrey')	plt.plot(xdata, ydata, c='darkslategrey')
code: ダーク・スラテグレー色のマーカーを散布図に使う	plt.plot(xdata, ydata, c='darkslategrey')	plt.plot(xdata, ydata, c='darkslategrey')
code: ダーク・スラテグレー色のマーカーで散布図を描く	plt.plot(xdata, ydata, c='darkslategrey')	plt.plot(xdata, ydata, c='darkslategrey')
code: ダーク・スラテグレー色で散布図を描く	plt.plot(xdata, ydata, c='darkslategrey')	plt.plot(xdata, ydata, c='darkslategrey')
code: 散布図をダーク・スラテグレー色のマーカーでプロットする	plt.plot(xdata, ydata, c='darkslategrey')	plt.plot(xdata, ydata, c='darkslategrey')
code: データ列xdataとイテラブルydataの散布図をダーク・スラテグレー色としてプロットする	plt.plot(xdata, ydata, c='darkslategrey')	plt.plot(xdata, ydata, c='darkslategrey')
code: ダーク・スラテグレー色でイテラブルxdataと数列ydataについての散布図をプロットする	plt.plot(xdata, ydata, c='darkslategrey')	plt.plot(xdata, ydata, c='darkslategrey')
code: ダーク・スラテグレー色で数列xdataと配列ydataについての散布図をプロットする	plt.plot(xdata, ydata, c='darkslategrey')	plt.plot(xdata, ydata, c='darkslategrey')
code: 配列xdataとデータ列ydataの散布図を描画して色をダーク・スラテグレーに変更する	plt.plot(xdata, ydata, c='darkslategrey')	plt.plot(xdata, ydata, c='darkslategrey')
code: 配列xdataと配列ydataについて散布図を描画して色をダーク・スラテグレーに設定する	plt.plot(xdata, ydata, c='darkslategrey')	plt.plot(xdata, ydata, c='darkslategrey')
code: 散布図にダークターコイズ色のマーカーを使用する	plt.plot(xdata, ydata, c='darkturquoise')	plt.plot(xdata, ydata, c='darkturquoise')
code: ダークターコイズ色のマーカーを散布図に使う	plt.plot(xdata, ydata, c='darkturquoise')	plt.plot(xdata, ydata, c='darkturquoise')
code: ダークターコイズ色として散布図を描画する	plt.plot(xdata, ydata, c='darkturquoise')	plt.plot(xdata, ydata, c='darkturquoise')
code: 散布図をダークターコイズ色で描画する	plt.plot(xdata, ydata, c='darkturquoise')	plt.plot(xdata, ydata, c='darkturquoise')
code: 散布図をダークターコイズ色でプロットする	plt.plot(xdata, ydata, c='darkturquoise')	plt.plot(xdata, ydata, c='darkturquoise')
code: ダークターコイズ色で配列xdataとリストydataについての散布図を描画する	plt.plot(xdata, ydata, c='darkturquoise')	plt.plot(xdata, ydata, c='darkturquoise')
code: ダークターコイズ色でリストxdataとデータ列ydataの散布図を描画する	plt.plot(xdata, ydata, c='darkturquoise')	plt.plot(xdata, ydata, c='darkturquoise')
code: データ列xdataと数列ydataの散布図をダークターコイズ色として描画する	plt.plot(xdata, ydata, c='darkturquoise')	plt.plot(xdata, ydata, c='darkturquoise')
code: リストxdataと数列ydataの散布図を描画して、マーカーの色をダークターコイズにする	plt.plot(xdata, ydata, c='darkturquoise')	plt.plot(xdata, ydata, c='darkturquoise')
code: 配列xdataと配列ydataについて散布図を描画して、色をダークターコイズ変える	plt.plot(xdata, ydata, c='darkturquoise')	plt.plot(xdata, ydata, c='darkturquoise')
code: ダークバイオレット色のマーカーを散布図に使う	plt.plot(xdata, ydata, c='darkviolet')	plt.plot(xdata, ydata, c='darkviolet')
code: 散布図にダークバイオレット色のマーカーを使う	plt.plot(xdata, ydata, c='darkviolet')	plt.plot(xdata, ydata, c='darkviolet')
code: 散布図をダークバイオレット色として描く	plt.plot(xdata, ydata, c='darkviolet')	plt.plot(xdata, ydata, c='darkviolet')
code: 散布図をダークバイオレット色のマーカーとして描画する	plt.plot(xdata, ydata, c='darkviolet')	plt.plot(xdata, ydata, c='darkviolet')
code: ダークバイオレット色のマーカーとして散布図をプロットする	plt.plot(xdata, ydata, c='darkviolet')	plt.plot(xdata, ydata, c='darkviolet')
code: ダークバイオレット色としてリストxdataと配列ydataについての散布図を描画する	plt.plot(xdata, ydata, c='darkviolet')	plt.plot(xdata, ydata, c='darkviolet')
code: ダークバイオレット色としてイテラブルxdataと数列ydataの散布図を描画する	plt.plot(xdata, ydata, c='darkviolet')	plt.plot(xdata, ydata, c='darkviolet')
code: 配列xdataと数列ydataについての散布図をダークバイオレット色を使って描画する	plt.plot(xdata, ydata, c='darkviolet')	plt.plot(xdata, ydata, c='darkviolet')
code: 配列xdataと配列ydataについて散布図を描画してマーカーの色をダークバイオレットに変更する	plt.plot(xdata, ydata, c='darkviolet')	plt.plot(xdata, ydata, c='darkviolet')
code: イテラブルxdataとイテラブルydataの散布図を描画して、色をダークバイオレットにする	plt.plot(xdata, ydata, c='darkviolet')	plt.plot(xdata, ydata, c='darkviolet')
code: デピンク色のマーカーを散布図に使う	plt.plot(xdata, ydata, c='deeppink')	plt.plot(xdata, ydata, c='deeppink')
code: 散布図にデピンク色のマーカーを用いる	plt.plot(xdata, ydata, c='deeppink')	plt.plot(xdata, ydata, c='deeppink')
code: 散布図をデピンク色のマーカーとしてプロットする	plt.plot(xdata, ydata, c='deeppink')	plt.plot(xdata, ydata, c='deeppink')
code: デピンク色で散布図を描画する	plt.plot(xdata, ydata, c='deeppink')	plt.plot(xdata, ydata, c='deeppink')
code: デピンク色のマーカーを使って散布図をプロットする	plt.plot(xdata, ydata, c='deeppink')	plt.plot(xdata, ydata, c='deeppink')
code: 配列xdataと配列ydataについての散布図をデピンク色で描画する	plt.plot(xdata, ydata, c='deeppink')	plt.plot(xdata, ydata, c='deeppink')
code: デピンク色としてリストxdataとイテラブルydataの散布図を描画する	plt.plot(xdata, ydata, c='deeppink')	plt.plot(xdata, ydata, c='deeppink')
code: 数列xdataとデータ列ydataの散布図をデピンク色で描画する	plt.plot(xdata, ydata, c='deeppink')	plt.plot(xdata, ydata, c='deeppink')
code: 数列xdataと数列ydataの散布図を描画してマーカーの色をデピンクとする	plt.plot(xdata, ydata, c='deeppink')	plt.plot(xdata, ydata, c='deeppink')
code: 配列xdataとイテラブルydataの散布図を描画して、マーカーの色をデピンクに設定する	plt.plot(xdata, ydata, c='deeppink')	plt.plot(xdata, ydata, c='deeppink')
code: ディープスカイブルー色のマーカーを散布図に使う	plt.plot(xdata, ydata, c='deepskyblue')	plt.plot(xdata, ydata, c='deepskyblue')
code: 散布図にディープスカイブルー色のマーカーを使用する	plt.plot(xdata, ydata, c='deepskyblue')	plt.plot(xdata, ydata, c='deepskyblue')
code: ディープスカイブルー色として散布図をプロットする	plt.plot(xdata, ydata, c='deepskyblue')	plt.plot(xdata, ydata, c='deepskyblue')
code: ディープスカイブルー色で散布図をプロットする	plt.plot(xdata, ydata, c='deepskyblue')	plt.plot(xdata, ydata, c='deepskyblue')
code: ディープスカイブルー色のマーカーを使って散布図をプロットする	plt.plot(xdata, ydata, c='deepskyblue')	plt.plot(xdata, ydata, c='deepskyblue')
code: リストxdataと配列ydataについての散布図をディープスカイブルー色でプロットする	plt.plot(xdata, ydata, c='deepskyblue')	plt.plot(xdata, ydata, c='deepskyblue')
code: イテラブルxdataとデータ列ydataの散布図をディープスカイブルー色としてプロットする	plt.plot(xdata, ydata, c='deepskyblue')	plt.plot(xdata, ydata, c='deepskyblue')
code: ディープスカイブルー色でデータ列xdataと数列ydataの散布図を描く	plt.plot(xdata, ydata, c='deepskyblue')	plt.plot(xdata, ydata, c='deepskyblue')
code: 数列xdataとイテラブルydataの散布図を描画して、マーカーの色をディープスカイブルー変える	plt.plot(xdata, ydata, c='deepskyblue')	plt.plot(xdata, ydata, c='deepskyblue')
code: イテラブルxdataと数列ydataについて散布図を描画して、マーカーの色をディープスカイブルーに設定する	plt.plot(xdata, ydata, c='deepskyblue')	plt.plot(xdata, ydata, c='deepskyblue')
code: 散布図にディムグレー色のマーカーを使用する	plt.plot(xdata, ydata, c='dimgray')	plt.plot(xdata, ydata, c='dimgray')
code: ディムグレー色のマーカーを散布図に用いる	plt.plot(xdata, ydata, c='dimgray')	plt.plot(xdata, ydata, c='dimgray')
code: 散布図をディムグレー色のマーカーとして描く	plt.plot(xdata, ydata, c='dimgray')	plt.plot(xdata, ydata, c='dimgray')
code: 散布図をディムグレー色のマーカーで描く	plt.plot(xdata, ydata, c='dimgrey')	plt.plot(xdata, ydata, c='dimgray')
code: 散布図をディムグレー色としてプロットする	plt.plot(xdata, ydata, c='dimgray')	plt.plot(xdata, ydata, c='dimgray')
code: 数列xdataと数列ydataについての散布図をディムグレー色として描画する	plt.plot(xdata, ydata, c='dimgray')	plt.plot(xdata, ydata, c='dimgray')
code: リストxdataと配列ydataについての散布図をディムグレー色でプロットする	plt.plot(xdata, ydata, c='dimgrey')	plt.plot(xdata, ydata, c='dimgray')
code: ディムグレー色を使って数列xdataと配列ydataの散布図をプロットする	plt.plot(xdata, ydata, c='dimgray')	plt.plot(xdata, ydata, c='dimgray')
code: データ列xdataと配列ydataの散布図を描画して色をディムグレー変える	plt.plot(xdata, ydata, c='dimgray')	plt.plot(xdata, ydata, c='dimgray')
code: 配列xdataと数列ydataについて散布図を描画して、色をディムグレーに指定する	plt.plot(xdata, ydata, c='dimgrey')	plt.plot(xdata, ydata, c='dimgray')
code: 散布図にディムグレー色のマーカーを使用する	plt.plot(xdata, ydata, c='dimgray')	plt.plot(xdata, ydata, c='dimgrey')
code: ディムグレー色のマーカーを散布図に用いる	plt.plot(xdata, ydata, c='dimgray')	plt.plot(xdata, ydata, c='dimgrey')
code: ディムグレー色のマーカーを用いて散布図をプロットする	plt.plot(xdata, ydata, c='dimgray')	plt.plot(xdata, ydata, c='dimgrey')
code: 散布図をディムグレー色のマーカーとして描画する	plt.plot(xdata, ydata, c='dimgrey')	plt.plot(xdata, ydata, c='dimgrey')
code: 散布図をディムグレー色のマーカーを用いて描く	plt.plot(xdata, ydata, c='dimgrey')	plt.plot(xdata, ydata, c='dimgrey')
code: 配列xdataとリストydataの散布図をディムグレー色で描画する	plt.plot(xdata, ydata, c='dimgray')	plt.plot(xdata, ydata, c='dimgrey')
code: ディムグレー色として数列xdataとデータ列ydataの散布図を描く	plt.plot(xdata, ydata, c='dimgrey')	plt.plot(xdata, ydata, c='dimgrey')
code: リストxdataと数列ydataの散布図をディムグレー色でプロットする	plt.plot(xdata, ydata, c='dimgray')	plt.plot(xdata, ydata, c='dimgrey')
code: イテラブルxdataと数列ydataの散布図を描画して、色をディムグレーに設定する	plt.plot(xdata, ydata, c='dimgrey')	plt.plot(xdata, ydata, c='dimgrey')
code: データ列xdataとリストydataの散布図を描画して、色をディムグレーに指定する	plt.plot(xdata, ydata, c='dimgrey')	plt.plot(xdata, ydata, c='dimgrey')
code: ドジャーブルー色のマーカーを散布図に使用する	plt.plot(xdata, ydata, c='dodgerblue')	plt.plot(xdata, ydata, c='dodgerblue')
code: 散布図にドジャーブルー色のマーカーを使用する	plt.plot(xdata, ydata, c='dodgerblue')	plt.plot(xdata, ydata, c='dodgerblue')
code: ドジャーブルー色として散布図を描画する	plt.plot(xdata, ydata, c='dodgerblue')	plt.plot(xdata, ydata, c='dodgerblue')
code: ドジャーブルー色のマーカーで散布図を描く	plt.plot(xdata, ydata, c='dodgerblue')	plt.plot(xdata, ydata, c='dodgerblue')
code: ドジャーブルー色で散布図を描く	plt.plot(xdata, ydata, c='dodgerblue')	plt.plot(xdata, ydata, c='dodgerblue')
code: 配列xdataとイテラブルydataについての散布図をドジャーブルー色として描く	plt.plot(xdata, ydata, c='dodgerblue')	plt.plot(xdata, ydata, c='dodgerblue')
code: ドジャーブルー色でリストxdataとイテラブルydataについての散布図をプロットする	plt.plot(xdata, ydata, c='dodgerblue')	plt.plot(xdata, ydata, c='dodgerblue')
code: ドジャーブルー色としてリストxdataとリストydataについての散布図を描く	plt.plot(xdata, ydata, c='dodgerblue')	plt.plot(xdata, ydata, c='dodgerblue')
code: イテラブルxdataと数列ydataについて散布図を描画して色をドジャーブルー変える	plt.plot(xdata, ydata, c='dodgerblue')	plt.plot(xdata, ydata, c='dodgerblue')
code: リストxdataとデータ列ydataについて散布図を描画して色をドジャーブルー変える	plt.plot(xdata, ydata, c='dodgerblue')	plt.plot(xdata, ydata, c='dodgerblue')
code: 耐火レンガ色のマーカーを散布図に使う	plt.plot(xdata, ydata, c='firebrick')	plt.plot(xdata, ydata, c='firebrick')
code: 耐火レンガ色のマーカーを散布図に使用する	plt.plot(xdata, ydata, c='firebrick')	plt.plot(xdata, ydata, c='firebrick')
code: 散布図を耐火レンガ色のマーカーとしてプロットする	plt.plot(xdata, ydata, c='firebrick')	plt.plot(xdata, ydata, c='firebrick')
code: 耐火レンガ色のマーカーとして散布図をプロットする	plt.plot(xdata, ydata, c='firebrick')	plt.plot(xdata, ydata, c='firebrick')
code: 散布図を耐火レンガ色のマーカーで描画する	plt.plot(xdata, ydata, c='firebrick')	plt.plot(xdata, ydata, c='firebrick')
code: 耐火レンガ色を使ってリストxdataとデータ列ydataについての散布図を描く	plt.plot(xdata, ydata, c='firebrick')	plt.plot(xdata, ydata, c='firebrick')
code: 耐火レンガ色で数列xdataと数列ydataについての散布図をプロットする	plt.plot(xdata, ydata, c='firebrick')	plt.plot(xdata, ydata, c='firebrick')
code: 耐火レンガ色を用いてイテラブルxdataと数列ydataについての散布図を描画する	plt.plot(xdata, ydata, c='firebrick')	plt.plot(xdata, ydata, c='firebrick')
code: データ列xdataとイテラブルydataの散布図を描画してマーカーの色を耐火レンガとする	plt.plot(xdata, ydata, c='firebrick')	plt.plot(xdata, ydata, c='firebrick')
code: リストxdataとイテラブルydataの散布図を描画して、マーカーの色を耐火レンガとする	plt.plot(xdata, ydata, c='firebrick')	plt.plot(xdata, ydata, c='firebrick')
code: 散布図にフローラルホワイト色のマーカーを使う	plt.plot(xdata, ydata, c='floralwhite')	plt.plot(xdata, ydata, c='floralwhite')
code: フローラルホワイト色のマーカーを散布図に用いる	plt.plot(xdata, ydata, c='floralwhite')	plt.plot(xdata, ydata, c='floralwhite')
code: 散布図をフローラルホワイト色のマーカーとして描く	plt.plot(xdata, ydata, c='floralwhite')	plt.plot(xdata, ydata, c='floralwhite')
code: フローラルホワイト色として散布図を描く	plt.plot(xdata, ydata, c='floralwhite')	plt.plot(xdata, ydata, c='floralwhite')
code: 散布図をフローラルホワイト色のマーカーで描画する	plt.plot(xdata, ydata, c='floralwhite')	plt.plot(xdata, ydata, c='floralwhite')
code: フローラルホワイト色で数列xdataとイテラブルydataの散布図を描く	plt.plot(xdata, ydata, c='floralwhite')	plt.plot(xdata, ydata, c='floralwhite')
code: リストxdataとリストydataの散布図をフローラルホワイト色でプロットする	plt.plot(xdata, ydata, c='floralwhite')	plt.plot(xdata, ydata, c='floralwhite')
code: 数列xdataと配列ydataの散布図をフローラルホワイト色でプロットする	plt.plot(xdata, ydata, c='floralwhite')	plt.plot(xdata, ydata, c='floralwhite')
code: 配列xdataとイテラブルydataの散布図を描画して色をフローラルホワイトに設定する	plt.plot(xdata, ydata, c='floralwhite')	plt.plot(xdata, ydata, c='floralwhite')
code: 数列xdataとイテラブルydataの散布図を描画してマーカーの色をフローラルホワイトに設定する	plt.plot(xdata, ydata, c='floralwhite')	plt.plot(xdata, ydata, c='floralwhite')
code: フォレストグリーン色のマーカーを散布図に使う	plt.plot(xdata, ydata, c='forestgreen')	plt.plot(xdata, ydata, c='forestgreen')
code: フォレストグリーン色のマーカーを散布図に使用する	plt.plot(xdata, ydata, c='forestgreen')	plt.plot(xdata, ydata, c='forestgreen')
code: 散布図をフォレストグリーン色を使って描く	plt.plot(xdata, ydata, c='forestgreen')	plt.plot(xdata, ydata, c='forestgreen')
code: 散布図をフォレストグリーン色のマーカーを使って描画する	plt.plot(xdata, ydata, c='forestgreen')	plt.plot(xdata, ydata, c='forestgreen')
code: 散布図をフォレストグリーン色のマーカーで描く	plt.plot(xdata, ydata, c='forestgreen')	plt.plot(xdata, ydata, c='forestgreen')
code: データ列xdataと配列ydataの散布図をフォレストグリーン色で描く	plt.plot(xdata, ydata, c='forestgreen')	plt.plot(xdata, ydata, c='forestgreen')
code: 数列xdataとデータ列ydataの散布図をフォレストグリーン色として描画する	plt.plot(xdata, ydata, c='forestgreen')	plt.plot(xdata, ydata, c='forestgreen')
code: 配列xdataとイテラブルydataの散布図をフォレストグリーン色で描く	plt.plot(xdata, ydata, c='forestgreen')	plt.plot(xdata, ydata, c='forestgreen')
code: 数列xdataとデータ列ydataの散布図を描画して色をフォレストグリーン変える	plt.plot(xdata, ydata, c='forestgreen')	plt.plot(xdata, ydata, c='forestgreen')
code: 配列xdataとデータ列ydataの散布図を描画してマーカーの色をフォレストグリーンにセットする	plt.plot(xdata, ydata, c='forestgreen')	plt.plot(xdata, ydata, c='forestgreen')
code: フクシア色のマーカーを散布図に使う	plt.plot(xdata, ydata, c='fuchsia')	plt.plot(xdata, ydata, c='fuchsia')
code: 散布図にフクシア色のマーカーを使う	plt.plot(xdata, ydata, c='fuchsia')	plt.plot(xdata, ydata, c='fuchsia')
code: フクシア色のマーカーとして散布図を描く	plt.plot(xdata, ydata, c='fuchsia')	plt.plot(xdata, ydata, c='fuchsia')
code: 散布図をフクシア色を用いてプロットする	plt.plot(xdata, ydata, c='fuchsia')	plt.plot(xdata, ydata, c='fuchsia')
code: フクシア色として散布図を描く	plt.plot(xdata, ydata, c='fuchsia')	plt.plot(xdata, ydata, c='fuchsia')
code: イテラブルxdataとリストydataについての散布図をフクシア色として描く	plt.plot(xdata, ydata, c='fuchsia')	plt.plot(xdata, ydata, c='fuchsia')
code: 数列xdataと配列ydataの散布図をフクシア色を用いてプロットする	plt.plot(xdata, ydata, c='fuchsia')	plt.plot(xdata, ydata, c='fuchsia')
code: 配列xdataとリストydataの散布図をフクシア色として描画する	plt.plot(xdata, ydata, c='fuchsia')	plt.plot(xdata, ydata, c='fuchsia')
code: リストxdataと数列ydataの散布図を描画してマーカーの色をフクシア変える	plt.plot(xdata, ydata, c='fuchsia')	plt.plot(xdata, ydata, c='fuchsia')
code: データ列xdataとリストydataの散布図を描画して色をフクシアにセットする	plt.plot(xdata, ydata, c='fuchsia')	plt.plot(xdata, ydata, c='fuchsia')
code: 散布図にゲインズボロ色のマーカーを用いる	plt.plot(xdata, ydata, c='gainsboro')	plt.plot(xdata, ydata, c='gainsboro')
code: ゲインズボロ色のマーカーを散布図に使う	plt.plot(xdata, ydata, c='gainsboro')	plt.plot(xdata, ydata, c='gainsboro')
code: 散布図をゲインズボロ色のマーカーを用いてプロットする	plt.plot(xdata, ydata, c='gainsboro')	plt.plot(xdata, ydata, c='gainsboro')
code: 散布図をゲインズボロ色のマーカーで描く	plt.plot(xdata, ydata, c='gainsboro')	plt.plot(xdata, ydata, c='gainsboro')
code: ゲインズボロ色のマーカーを用いて散布図をプロットする	plt.plot(xdata, ydata, c='gainsboro')	plt.plot(xdata, ydata, c='gainsboro')
code: イテラブルxdataと数列ydataについての散布図をゲインズボロ色として描く	plt.plot(xdata, ydata, c='gainsboro')	plt.plot(xdata, ydata, c='gainsboro')
code: ゲインズボロ色としてイテラブルxdataとイテラブルydataの散布図を描画する	plt.plot(xdata, ydata, c='gainsboro')	plt.plot(xdata, ydata, c='gainsboro')
code: ゲインズボロ色を用いてデータ列xdataとデータ列ydataについての散布図を描画する	plt.plot(xdata, ydata, c='gainsboro')	plt.plot(xdata, ydata, c='gainsboro')
code: リストxdataと数列ydataの散布図を描画して、色をゲインズボロにする	plt.plot(xdata, ydata, c='gainsboro')	plt.plot(xdata, ydata, c='gainsboro')
code: 数列xdataとイテラブルydataについて散布図を描画してマーカーの色をゲインズボロに変更する	plt.plot(xdata, ydata, c='gainsboro')	plt.plot(xdata, ydata, c='gainsboro')
code: ゴーストホワイト色のマーカーを散布図に使用する	plt.plot(xdata, ydata, c='ghostwhite')	plt.plot(xdata, ydata, c='ghostwhite')
code: 散布図にゴーストホワイト色のマーカーを使用する	plt.plot(xdata, ydata, c='ghostwhite')	plt.plot(xdata, ydata, c='ghostwhite')
code: 散布図をゴーストホワイト色のマーカーを使ってプロットする	plt.plot(xdata, ydata, c='ghostwhite')	plt.plot(xdata, ydata, c='ghostwhite')
code: 散布図をゴーストホワイト色のマーカーとして描く	plt.plot(xdata, ydata, c='ghostwhite')	plt.plot(xdata, ydata, c='ghostwhite')
code: 散布図をゴーストホワイト色のマーカーを用いて描画する	plt.plot(xdata, ydata, c='ghostwhite')	plt.plot(xdata, ydata, c='ghostwhite')
code: リストxdataとデータ列ydataの散布図をゴーストホワイト色で描画する	plt.plot(xdata, ydata, c='ghostwhite')	plt.plot(xdata, ydata, c='ghostwhite')
code: リストxdataと配列ydataについての散布図をゴーストホワイト色で描く	plt.plot(xdata, ydata, c='ghostwhite')	plt.plot(xdata, ydata, c='ghostwhite')
code: イテラブルxdataと配列ydataについての散布図をゴーストホワイト色を使ってプロットする	plt.plot(xdata, ydata, c='ghostwhite')	plt.plot(xdata, ydata, c='ghostwhite')
code: データ列xdataとデータ列ydataについて散布図を描画して、色をゴーストホワイトに変更する	plt.plot(xdata, ydata, c='ghostwhite')	plt.plot(xdata, ydata, c='ghostwhite')
code: イテラブルxdataとイテラブルydataについて散布図を描画してマーカーの色をゴーストホワイトにする	plt.plot(xdata, ydata, c='ghostwhite')	plt.plot(xdata, ydata, c='ghostwhite')
code: ゴールド色のマーカーを散布図に使う	plt.plot(xdata, ydata, c='gold')	plt.plot(xdata, ydata, c='gold')
code: 散布図にゴールド色のマーカーを使う	plt.plot(xdata, ydata, c='gold')	plt.plot(xdata, ydata, c='gold')
code: ゴールド色のマーカーとして散布図を描画する	plt.plot(xdata, ydata, c='gold')	plt.plot(xdata, ydata, c='gold')
code: 散布図をゴールド色を使ってプロットする	plt.plot(xdata, ydata, c='gold')	plt.plot(xdata, ydata, c='gold')
code: ゴールド色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='gold')	plt.plot(xdata, ydata, c='gold')
code: ゴールド色でデータ列xdataと数列ydataの散布図を描画する	plt.plot(xdata, ydata, c='gold')	plt.plot(xdata, ydata, c='gold')
code: ゴールド色としてイテラブルxdataとデータ列ydataの散布図を描く	plt.plot(xdata, ydata, c='gold')	plt.plot(xdata, ydata, c='gold')
code: リストxdataとデータ列ydataについての散布図をゴールド色でプロットする	plt.plot(xdata, ydata, c='gold')	plt.plot(xdata, ydata, c='gold')
code: イテラブルxdataとリストydataの散布図を描画して色をゴールドにする	plt.plot(xdata, ydata, c='gold')	plt.plot(xdata, ydata, c='gold')
code: リストxdataとデータ列ydataの散布図を描画して、色をゴールドに指定する	plt.plot(xdata, ydata, c='gold')	plt.plot(xdata, ydata, c='gold')
code: 散布図にゴールデンロッド色のマーカーを使用する	plt.plot(xdata, ydata, c='goldenrod')	plt.plot(xdata, ydata, c='goldenrod')
code: ゴールデンロッド色のマーカーを散布図に使う	plt.plot(xdata, ydata, c='goldenrod')	plt.plot(xdata, ydata, c='goldenrod')
code: ゴールデンロッド色のマーカーを使って散布図を描画する	plt.plot(xdata, ydata, c='goldenrod')	plt.plot(xdata, ydata, c='goldenrod')
code: ゴールデンロッド色として散布図を描画する	plt.plot(xdata, ydata, c='goldenrod')	plt.plot(xdata, ydata, c='goldenrod')
code: ゴールデンロッド色で散布図をプロットする	plt.plot(xdata, ydata, c='goldenrod')	plt.plot(xdata, ydata, c='goldenrod')
code: 数列xdataとリストydataについての散布図をゴールデンロッド色を用いて描画する	plt.plot(xdata, ydata, c='goldenrod')	plt.plot(xdata, ydata, c='goldenrod')
code: 数列xdataとデータ列ydataについての散布図をゴールデンロッド色を使って描く	plt.plot(xdata, ydata, c='goldenrod')	plt.plot(xdata, ydata, c='goldenrod')
code: 数列xdataとデータ列ydataの散布図をゴールデンロッド色でプロットする	plt.plot(xdata, ydata, c='goldenrod')	plt.plot(xdata, ydata, c='goldenrod')
code: 配列xdataと数列ydataについて散布図を描画して、マーカーの色をゴールデンロッドに変更する	plt.plot(xdata, ydata, c='goldenrod')	plt.plot(xdata, ydata, c='goldenrod')
code: リストxdataと配列ydataの散布図を描画して、マーカーの色をゴールデンロッドに変更する	plt.plot(xdata, ydata, c='goldenrod')	plt.plot(xdata, ydata, c='goldenrod')
code: 散布図にグレー色のマーカーを用いる	plt.plot(xdata, ydata, c='grey')	plt.plot(xdata, ydata, c='gray')
code: 散布図にグレー色のマーカーを使用する	plt.plot(xdata, ydata, c='gray')	plt.plot(xdata, ydata, c='gray')
code: 散布図をグレー色として描く	plt.plot(xdata, ydata, c='gray')	plt.plot(xdata, ydata, c='gray')
code: グレー色で散布図を描く	plt.plot(xdata, ydata, c='grey')	plt.plot(xdata, ydata, c='gray')
code: 散布図をグレー色のマーカーを用いてプロットする	plt.plot(xdata, ydata, c='gray')	plt.plot(xdata, ydata, c='gray')
code: リストxdataと数列ydataの散布図をグレー色を使ってプロットする	plt.plot(xdata, ydata, c='gray')	plt.plot(xdata, ydata, c='gray')
code: グレー色としてイテラブルxdataとデータ列ydataについての散布図を描画する	plt.plot(xdata, ydata, c='gray')	plt.plot(xdata, ydata, c='gray')
code: グレー色で配列xdataとリストydataについての散布図を描画する	plt.plot(xdata, ydata, c='gray')	plt.plot(xdata, ydata, c='gray')
code: データ列xdataと配列ydataについて散布図を描画して、色をグレーに設定する	plt.plot(xdata, ydata, c='gray')	plt.plot(xdata, ydata, c='gray')
code: 数列xdataとイテラブルydataの散布図を描画して、色をグレー変える	plt.plot(xdata, ydata, c='gray')	plt.plot(xdata, ydata, c='gray')
code: 散布図にグリーン色のマーカーを用いる	plt.plot(xdata, ydata, c='green')	plt.plot(xdata, ydata, c='green')
code: 散布図にグリーン色のマーカーを使う	plt.plot(xdata, ydata, c='green')	plt.plot(xdata, ydata, c='green')
code: 散布図をグリーン色で描画する	plt.plot(xdata, ydata, c='green')	plt.plot(xdata, ydata, c='green')
code: 散布図をグリーン色を使って描画する	plt.plot(xdata, ydata, c='green')	plt.plot(xdata, ydata, c='green')
code: 散布図をグリーン色のマーカーでプロットする	plt.plot(xdata, ydata, c='green')	plt.plot(xdata, ydata, c='green')
code: グリーン色を用いて数列xdataとリストydataの散布図を描く	plt.plot(xdata, ydata, c='green')	plt.plot(xdata, ydata, c='green')
code: リストxdataとリストydataについての散布図をグリーン色を用いてプロットする	plt.plot(xdata, ydata, c='green')	plt.plot(xdata, ydata, c='green')
code: グリーン色で数列xdataと数列ydataについての散布図を描く	plt.plot(xdata, ydata, c='green')	plt.plot(xdata, ydata, c='green')
code: リストxdataとデータ列ydataについて散布図を描画してマーカーの色をグリーンに変更する	plt.plot(xdata, ydata, c='green')	plt.plot(xdata, ydata, c='green')
code: 数列xdataとデータ列ydataについて散布図を描画して、マーカーの色をグリーンに変更する	plt.plot(xdata, ydata, c='green')	plt.plot(xdata, ydata, c='green')
code: グリーンイエロー色のマーカーを散布図に用いる	plt.plot(xdata, ydata, c='greenyellow')	plt.plot(xdata, ydata, c='greenyellow')
code: グリーンイエロー色のマーカーを散布図に用いる	plt.plot(xdata, ydata, c='yellowgreen')	plt.plot(xdata, ydata, c='greenyellow')
code: 散布図をグリーンイエロー色のマーカーとして描く	plt.plot(xdata, ydata, c='yellowgreen')	plt.plot(xdata, ydata, c='greenyellow')
code: 散布図をグリーンイエロー色のマーカーを使って描く	plt.plot(xdata, ydata, c='greenyellow')	plt.plot(xdata, ydata, c='greenyellow')
code: グリーンイエロー色を使って散布図を描く	plt.plot(xdata, ydata, c='greenyellow')	plt.plot(xdata, ydata, c='greenyellow')
code: グリーンイエロー色として数列xdataと配列ydataについての散布図をプロットする	plt.plot(xdata, ydata, c='greenyellow')	plt.plot(xdata, ydata, c='greenyellow')
code: グリーンイエロー色を用いてイテラブルxdataとデータ列ydataの散布図を描画する	plt.plot(xdata, ydata, c='greenyellow')	plt.plot(xdata, ydata, c='greenyellow')
code: データ列xdataとデータ列ydataについての散布図をグリーンイエロー色で描く	plt.plot(xdata, ydata, c='yellowgreen')	plt.plot(xdata, ydata, c='greenyellow')
code: イテラブルxdataとデータ列ydataについて散布図を描画して色をグリーンイエローに指定する	plt.plot(xdata, ydata, c='yellowgreen')	plt.plot(xdata, ydata, c='greenyellow')
code: データ列xdataとデータ列ydataの散布図を描画してマーカーの色をグリーンイエローに設定する	plt.plot(xdata, ydata, c='yellowgreen')	plt.plot(xdata, ydata, c='greenyellow')
code: グレー色のマーカーを散布図に用いる	plt.plot(xdata, ydata, c='grey')	plt.plot(xdata, ydata, c='grey')
code: 散布図にグレー色のマーカーを用いる	plt.plot(xdata, ydata, c='grey')	plt.plot(xdata, ydata, c='grey')
code: 散布図をグレー色のマーカーとして描画する	plt.plot(xdata, ydata, c='gray')	plt.plot(xdata, ydata, c='grey')
code: グレー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='grey')	plt.plot(xdata, ydata, c='grey')
code: グレー色として散布図をプロットする	plt.plot(xdata, ydata, c='gray')	plt.plot(xdata, ydata, c='grey')
code: リストxdataと配列ydataについての散布図をグレー色を用いてプロットする	plt.plot(xdata, ydata, c='gray')	plt.plot(xdata, ydata, c='grey')
code: イテラブルxdataとリストydataについての散布図をグレー色で描く	plt.plot(xdata, ydata, c='grey')	plt.plot(xdata, ydata, c='grey')
code: データ列xdataとデータ列ydataについての散布図をグレー色としてプロットする	plt.plot(xdata, ydata, c='gray')	plt.plot(xdata, ydata, c='grey')
code: データ列xdataと数列ydataについて散布図を描画して色をグレー変える	plt.plot(xdata, ydata, c='grey')	plt.plot(xdata, ydata, c='grey')
code: 数列xdataとデータ列ydataの散布図を描画して色をグレーに変更する	plt.plot(xdata, ydata, c='grey')	plt.plot(xdata, ydata, c='grey')
code: ハニーデュー色のマーカーを散布図に使う	plt.plot(xdata, ydata, c='honeydew')	plt.plot(xdata, ydata, c='honeydew')
code: 散布図にハニーデュー色のマーカーを使う	plt.plot(xdata, ydata, c='honeydew')	plt.plot(xdata, ydata, c='honeydew')
code: 散布図をハニーデュー色のマーカーを用いて描く	plt.plot(xdata, ydata, c='honeydew')	plt.plot(xdata, ydata, c='honeydew')
code: ハニーデュー色のマーカーを使って散布図をプロットする	plt.plot(xdata, ydata, c='honeydew')	plt.plot(xdata, ydata, c='honeydew')
code: ハニーデュー色のマーカーとして散布図を描く	plt.plot(xdata, ydata, c='honeydew')	plt.plot(xdata, ydata, c='honeydew')
code: ハニーデュー色でイテラブルxdataと配列ydataの散布図を描画する	plt.plot(xdata, ydata, c='honeydew')	plt.plot(xdata, ydata, c='honeydew')
code: ハニーデュー色を使って数列xdataとリストydataの散布図を描画する	plt.plot(xdata, ydata, c='honeydew')	plt.plot(xdata, ydata, c='honeydew')
code: ハニーデュー色を使ってリストxdataと配列ydataの散布図を描画する	plt.plot(xdata, ydata, c='honeydew')	plt.plot(xdata, ydata, c='honeydew')
code: イテラブルxdataとリストydataについて散布図を描画して、色をハニーデューに変更する	plt.plot(xdata, ydata, c='honeydew')	plt.plot(xdata, ydata, c='honeydew')
code: イテラブルxdataとイテラブルydataについて散布図を描画してマーカーの色をハニーデュー変える	plt.plot(xdata, ydata, c='honeydew')	plt.plot(xdata, ydata, c='honeydew')
code: ホットピンク色のマーカーを散布図に使う	plt.plot(xdata, ydata, c='hotpink')	plt.plot(xdata, ydata, c='hotpink')
code: 散布図にホットピンク色のマーカーを使う	plt.plot(xdata, ydata, c='hotpink')	plt.plot(xdata, ydata, c='hotpink')
code: 散布図をホットピンク色のマーカーとして描画する	plt.plot(xdata, ydata, c='hotpink')	plt.plot(xdata, ydata, c='hotpink')
code: 散布図をホットピンク色でプロットする	plt.plot(xdata, ydata, c='hotpink')	plt.plot(xdata, ydata, c='hotpink')
code: 散布図をホットピンク色のマーカーとしてプロットする	plt.plot(xdata, ydata, c='hotpink')	plt.plot(xdata, ydata, c='hotpink')
code: ホットピンク色を用いて数列xdataとイテラブルydataの散布図を描画する	plt.plot(xdata, ydata, c='hotpink')	plt.plot(xdata, ydata, c='hotpink')
code: ホットピンク色で配列xdataと数列ydataの散布図をプロットする	plt.plot(xdata, ydata, c='hotpink')	plt.plot(xdata, ydata, c='hotpink')
code: ホットピンク色で配列xdataとイテラブルydataの散布図をプロットする	plt.plot(xdata, ydata, c='hotpink')	plt.plot(xdata, ydata, c='hotpink')
code: データ列xdataとデータ列ydataの散布図を描画して、色をホットピンク変える	plt.plot(xdata, ydata, c='hotpink')	plt.plot(xdata, ydata, c='hotpink')
code: イテラブルxdataとリストydataの散布図を描画して色をホットピンクにする	plt.plot(xdata, ydata, c='hotpink')	plt.plot(xdata, ydata, c='hotpink')
code: インディアンレッド色のマーカーを散布図に用いる	plt.plot(xdata, ydata, c='indianred')	plt.plot(xdata, ydata, c='indianred')
code: インディアンレッド色のマーカーを散布図に用いる	plt.plot(xdata, ydata, c='indianred')	plt.plot(xdata, ydata, c='indianred')
code: インディアンレッド色のマーカーを使って散布図を描画する	plt.plot(xdata, ydata, c='indianred')	plt.plot(xdata, ydata, c='indianred')
code: 散布図をインディアンレッド色で描く	plt.plot(xdata, ydata, c='indianred')	plt.plot(xdata, ydata, c='indianred')
code: 散布図をインディアンレッド色のマーカーを用いて描画する	plt.plot(xdata, ydata, c='indianred')	plt.plot(xdata, ydata, c='indianred')
code: インディアンレッド色を使って配列xdataとイテラブルydataについての散布図を描く	plt.plot(xdata, ydata, c='indianred')	plt.plot(xdata, ydata, c='indianred')
code: 配列xdataとデータ列ydataについての散布図をインディアンレッド色として描く	plt.plot(xdata, ydata, c='indianred')	plt.plot(xdata, ydata, c='indianred')
code: イテラブルxdataと配列ydataについての散布図をインディアンレッド色として描画する	plt.plot(xdata, ydata, c='indianred')	plt.plot(xdata, ydata, c='indianred')
code: リストxdataとリストydataについて散布図を描画して、色をインディアンレッドに指定する	plt.plot(xdata, ydata, c='indianred')	plt.plot(xdata, ydata, c='indianred')
code: イテラブルxdataとデータ列ydataについて散布図を描画して、色をインディアンレッドに設定する	plt.plot(xdata, ydata, c='indianred')	plt.plot(xdata, ydata, c='indianred')
code: インディゴ色のマーカーを散布図に使用する	plt.plot(xdata, ydata, c='indigo')	plt.plot(xdata, ydata, c='indigo')
code: インディゴ色のマーカーを散布図に用いる	plt.plot(xdata, ydata, c='indigo')	plt.plot(xdata, ydata, c='indigo')
code: インディゴ色を使って散布図を描画する	plt.plot(xdata, ydata, c='indigo')	plt.plot(xdata, ydata, c='indigo')
code: 散布図をインディゴ色のマーカーを使ってプロットする	plt.plot(xdata, ydata, c='indigo')	plt.plot(xdata, ydata, c='indigo')
code: 散布図をインディゴ色で描く	plt.plot(xdata, ydata, c='indigo')	plt.plot(xdata, ydata, c='indigo')
code: データ列xdataと数列ydataについての散布図をインディゴ色として描く	plt.plot(xdata, ydata, c='indigo')	plt.plot(xdata, ydata, c='indigo')
code: データ列xdataとイテラブルydataについての散布図をインディゴ色として描画する	plt.plot(xdata, ydata, c='indigo')	plt.plot(xdata, ydata, c='indigo')
code: インディゴ色を使って数列xdataと配列ydataの散布図を描く	plt.plot(xdata, ydata, c='indigo')	plt.plot(xdata, ydata, c='indigo')
code: 数列xdataとリストydataについて散布図を描画して色をインディゴに指定する	plt.plot(xdata, ydata, c='indigo')	plt.plot(xdata, ydata, c='indigo')
code: 配列xdataとイテラブルydataの散布図を描画して、マーカーの色をインディゴに変更する	plt.plot(xdata, ydata, c='indigo')	plt.plot(xdata, ydata, c='indigo')
code: 散布図にアイボリー色のマーカーを使用する	plt.plot(xdata, ydata, c='ivory')	plt.plot(xdata, ydata, c='ivory')
code: アイボリー色のマーカーを散布図に用いる	plt.plot(xdata, ydata, c='ivory')	plt.plot(xdata, ydata, c='ivory')
code: 散布図をアイボリー色のマーカーで描画する	plt.plot(xdata, ydata, c='ivory')	plt.plot(xdata, ydata, c='ivory')
code: アイボリー色で散布図をプロットする	plt.plot(xdata, ydata, c='ivory')	plt.plot(xdata, ydata, c='ivory')
code: 散布図をアイボリー色を使って描画する	plt.plot(xdata, ydata, c='ivory')	plt.plot(xdata, ydata, c='ivory')
code: アイボリー色としてイテラブルxdataと配列ydataについての散布図を描く	plt.plot(xdata, ydata, c='ivory')	plt.plot(xdata, ydata, c='ivory')
code: データ列xdataと数列ydataについての散布図をアイボリー色でプロットする	plt.plot(xdata, ydata, c='ivory')	plt.plot(xdata, ydata, c='ivory')
code: アイボリー色でデータ列xdataとイテラブルydataの散布図をプロットする	plt.plot(xdata, ydata, c='ivory')	plt.plot(xdata, ydata, c='ivory')
code: 配列xdataと数列ydataについて散布図を描画してマーカーの色をアイボリーに変更する	plt.plot(xdata, ydata, c='ivory')	plt.plot(xdata, ydata, c='ivory')
code: 配列xdataと数列ydataについて散布図を描画して色をアイボリーに設定する	plt.plot(xdata, ydata, c='ivory')	plt.plot(xdata, ydata, c='ivory')
code: 散布図にカーキ色のマーカーを使用する	plt.plot(xdata, ydata, c='khaki')	plt.plot(xdata, ydata, c='khaki')
code: カーキ色のマーカーを散布図に使用する	plt.plot(xdata, ydata, c='khaki')	plt.plot(xdata, ydata, c='khaki')
code: 散布図をカーキ色を用いて描く	plt.plot(xdata, ydata, c='khaki')	plt.plot(xdata, ydata, c='khaki')
code: カーキ色のマーカーで散布図をプロットする	plt.plot(xdata, ydata, c='khaki')	plt.plot(xdata, ydata, c='khaki')
code: 散布図をカーキ色として描く	plt.plot(xdata, ydata, c='khaki')	plt.plot(xdata, ydata, c='khaki')
code: リストxdataとイテラブルydataの散布図をカーキ色として描く	plt.plot(xdata, ydata, c='khaki')	plt.plot(xdata, ydata, c='khaki')
code: カーキ色として数列xdataとイテラブルydataについての散布図を描画する	plt.plot(xdata, ydata, c='khaki')	plt.plot(xdata, ydata, c='khaki')
code: 配列xdataとデータ列ydataについての散布図をカーキ色として描画する	plt.plot(xdata, ydata, c='khaki')	plt.plot(xdata, ydata, c='khaki')
code: 数列xdataと数列ydataの散布図を描画して、色をカーキに指定する	plt.plot(xdata, ydata, c='khaki')	plt.plot(xdata, ydata, c='khaki')
code: リストxdataとデータ列ydataについて散布図を描画して、マーカーの色をカーキに設定する	plt.plot(xdata, ydata, c='khaki')	plt.plot(xdata, ydata, c='khaki')
code: 散布図にラベンダー色のマーカーを用いる	plt.plot(xdata, ydata, c='lavender')	plt.plot(xdata, ydata, c='lavender')
code: 散布図にラベンダー色のマーカーを用いる	plt.plot(xdata, ydata, c='lavender')	plt.plot(xdata, ydata, c='lavender')
code: 散布図をラベンダー色として描く	plt.plot(xdata, ydata, c='lavender')	plt.plot(xdata, ydata, c='lavender')
code: ラベンダー色で散布図をプロットする	plt.plot(xdata, ydata, c='lavender')	plt.plot(xdata, ydata, c='lavender')
code: 散布図をラベンダー色のマーカーとして描画する	plt.plot(xdata, ydata, c='lavender')	plt.plot(xdata, ydata, c='lavender')
code: リストxdataとイテラブルydataの散布図をラベンダー色を用いて描画する	plt.plot(xdata, ydata, c='lavender')	plt.plot(xdata, ydata, c='lavender')
code: リストxdataとデータ列ydataについての散布図をラベンダー色でプロットする	plt.plot(xdata, ydata, c='lavender')	plt.plot(xdata, ydata, c='lavender')
code: イテラブルxdataとリストydataについての散布図をラベンダー色を使って描画する	plt.plot(xdata, ydata, c='lavender')	plt.plot(xdata, ydata, c='lavender')
code: 数列xdataとデータ列ydataについて散布図を描画して、マーカーの色をラベンダーにセットする	plt.plot(xdata, ydata, c='lavender')	plt.plot(xdata, ydata, c='lavender')
code: 配列xdataと数列ydataの散布図を描画して、マーカーの色をラベンダーに設定する	plt.plot(xdata, ydata, c='lavender')	plt.plot(xdata, ydata, c='lavender')
code: 散布図にラベンダーブラッシュ色のマーカーを使う	plt.plot(xdata, ydata, c='lavenderblush')	plt.plot(xdata, ydata, c='lavenderblush')
code: ラベンダーブラッシュ色のマーカーを散布図に使う	plt.plot(xdata, ydata, c='lavenderblush')	plt.plot(xdata, ydata, c='lavenderblush')
code: ラベンダーブラッシュ色として散布図を描画する	plt.plot(xdata, ydata, c='lavenderblush')	plt.plot(xdata, ydata, c='lavenderblush')
code: 散布図をラベンダーブラッシュ色として描画する	plt.plot(xdata, ydata, c='lavenderblush')	plt.plot(xdata, ydata, c='lavenderblush')
code: ラベンダーブラッシュ色を使って散布図をプロットする	plt.plot(xdata, ydata, c='lavenderblush')	plt.plot(xdata, ydata, c='lavenderblush')
code: ラベンダーブラッシュ色を使って数列xdataと数列ydataについての散布図を描く	plt.plot(xdata, ydata, c='lavenderblush')	plt.plot(xdata, ydata, c='lavenderblush')
code: ラベンダーブラッシュ色でリストxdataとリストydataについての散布図を描く	plt.plot(xdata, ydata, c='lavenderblush')	plt.plot(xdata, ydata, c='lavenderblush')
code: 配列xdataと配列ydataについての散布図をラベンダーブラッシュ色を用いて描く	plt.plot(xdata, ydata, c='lavenderblush')	plt.plot(xdata, ydata, c='lavenderblush')
code: リストxdataとイテラブルydataの散布図を描画して、色をラベンダーブラッシュとする	plt.plot(xdata, ydata, c='lavenderblush')	plt.plot(xdata, ydata, c='lavenderblush')
code: 数列xdataとデータ列ydataの散布図を描画して色をラベンダーブラッシュに変更する	plt.plot(xdata, ydata, c='lavenderblush')	plt.plot(xdata, ydata, c='lavenderblush')
code: ローングリーン色のマーカーを散布図に使用する	plt.plot(xdata, ydata, c='lawngreen')	plt.plot(xdata, ydata, c='lawngreen')
code: ローングリーン色のマーカーを散布図に用いる	plt.plot(xdata, ydata, c='lawngreen')	plt.plot(xdata, ydata, c='lawngreen')
code: 散布図をローングリーン色を用いて描画する	plt.plot(xdata, ydata, c='lawngreen')	plt.plot(xdata, ydata, c='lawngreen')
code: ローングリーン色で散布図を描画する	plt.plot(xdata, ydata, c='lawngreen')	plt.plot(xdata, ydata, c='lawngreen')
code: ローングリーン色のマーカーとして散布図を描画する	plt.plot(xdata, ydata, c='lawngreen')	plt.plot(xdata, ydata, c='lawngreen')
code: 配列xdataと配列ydataの散布図をローングリーン色でプロットする	plt.plot(xdata, ydata, c='lawngreen')	plt.plot(xdata, ydata, c='lawngreen')
code: リストxdataと配列ydataについての散布図をローングリーン色で描く	plt.plot(xdata, ydata, c='lawngreen')	plt.plot(xdata, ydata, c='lawngreen')
code: ローングリーン色でイテラブルxdataとデータ列ydataについての散布図を描く	plt.plot(xdata, ydata, c='lawngreen')	plt.plot(xdata, ydata, c='lawngreen')
code: 配列xdataとリストydataについて散布図を描画して色をローングリーンに変更する	plt.plot(xdata, ydata, c='lawngreen')	plt.plot(xdata, ydata, c='lawngreen')
code: 数列xdataとデータ列ydataについて散布図を描画して、マーカーの色をローングリーンに変更する	plt.plot(xdata, ydata, c='lawngreen')	plt.plot(xdata, ydata, c='lawngreen')
code: レモンシフォン色のマーカーを散布図に使用する	plt.plot(xdata, ydata, c='lemonchiffon')	plt.plot(xdata, ydata, c='lemonchiffon')
code: 散布図にレモンシフォン色のマーカーを用いる	plt.plot(xdata, ydata, c='lemonchiffon')	plt.plot(xdata, ydata, c='lemonchiffon')
code: 散布図をレモンシフォン色のマーカーを用いて描画する	plt.plot(xdata, ydata, c='lemonchiffon')	plt.plot(xdata, ydata, c='lemonchiffon')
code: 散布図をレモンシフォン色でプロットする	plt.plot(xdata, ydata, c='lemonchiffon')	plt.plot(xdata, ydata, c='lemonchiffon')
code: 散布図をレモンシフォン色を用いて描く	plt.plot(xdata, ydata, c='lemonchiffon')	plt.plot(xdata, ydata, c='lemonchiffon')
code: レモンシフォン色としてデータ列xdataとデータ列ydataの散布図を描く	plt.plot(xdata, ydata, c='lemonchiffon')	plt.plot(xdata, ydata, c='lemonchiffon')
code: レモンシフォン色でリストxdataと配列ydataの散布図を描画する	plt.plot(xdata, ydata, c='lemonchiffon')	plt.plot(xdata, ydata, c='lemonchiffon')
code: 数列xdataとリストydataについての散布図をレモンシフォン色で描く	plt.plot(xdata, ydata, c='lemonchiffon')	plt.plot(xdata, ydata, c='lemonchiffon')
code: リストxdataとデータ列ydataについて散布図を描画して、マーカーの色をレモンシフォン変える	plt.plot(xdata, ydata, c='lemonchiffon')	plt.plot(xdata, ydata, c='lemonchiffon')
code: イテラブルxdataとリストydataの散布図を描画して、色をレモンシフォンにセットする	plt.plot(xdata, ydata, c='lemonchiffon')	plt.plot(xdata, ydata, c='lemonchiffon')
code: ライトブルー色のマーカーを散布図に使用する	plt.plot(xdata, ydata, c='lightblue')	plt.plot(xdata, ydata, c='lightblue')
code: 散布図にライトブルー色のマーカーを使用する	plt.plot(xdata, ydata, c='lightblue')	plt.plot(xdata, ydata, c='lightblue')
code: 散布図をライトブルー色のマーカーで描画する	plt.plot(xdata, ydata, c='lightblue')	plt.plot(xdata, ydata, c='lightblue')
code: ライトブルー色を用いて散布図を描く	plt.plot(xdata, ydata, c='lightblue')	plt.plot(xdata, ydata, c='lightblue')
code: ライトブルー色のマーカーで散布図を描く	plt.plot(xdata, ydata, c='lightblue')	plt.plot(xdata, ydata, c='lightblue')
code: データ列xdataとイテラブルydataの散布図をライトブルー色で描く	plt.plot(xdata, ydata, c='lightblue')	plt.plot(xdata, ydata, c='lightblue')
code: 配列xdataと数列ydataの散布図をライトブルー色としてプロットする	plt.plot(xdata, ydata, c='lightblue')	plt.plot(xdata, ydata, c='lightblue')
code: ライトブルー色で数列xdataとリストydataの散布図を描く	plt.plot(xdata, ydata, c='lightblue')	plt.plot(xdata, ydata, c='lightblue')
code: 数列xdataとデータ列ydataについて散布図を描画して、色をライトブルーに設定する	plt.plot(xdata, ydata, c='lightblue')	plt.plot(xdata, ydata, c='lightblue')
code: 配列xdataとリストydataの散布図を描画して、色をライトブルーに設定する	plt.plot(xdata, ydata, c='lightblue')	plt.plot(xdata, ydata, c='lightblue')
code: ライトコーラル色のマーカーを散布図に使う	plt.plot(xdata, ydata, c='lightcoral')	plt.plot(xdata, ydata, c='lightcoral')
code: ライトコーラル色のマーカーを散布図に用いる	plt.plot(xdata, ydata, c='lightcoral')	plt.plot(xdata, ydata, c='lightcoral')
code: 散布図をライトコーラル色でプロットする	plt.plot(xdata, ydata, c='lightcoral')	plt.plot(xdata, ydata, c='lightcoral')
code: 散布図をライトコーラル色で描く	plt.plot(xdata, ydata, c='lightcoral')	plt.plot(xdata, ydata, c='lightcoral')
code: ライトコーラル色のマーカーを用いて散布図を描画する	plt.plot(xdata, ydata, c='lightcoral')	plt.plot(xdata, ydata, c='lightcoral')
code: リストxdataとイテラブルydataについての散布図をライトコーラル色を使ってプロットする	plt.plot(xdata, ydata, c='lightcoral')	plt.plot(xdata, ydata, c='lightcoral')
code: ライトコーラル色でデータ列xdataと配列ydataの散布図をプロットする	plt.plot(xdata, ydata, c='lightcoral')	plt.plot(xdata, ydata, c='lightcoral')
code: 数列xdataと数列ydataの散布図をライトコーラル色で描画する	plt.plot(xdata, ydata, c='lightcoral')	plt.plot(xdata, ydata, c='lightcoral')
code: 数列xdataとリストydataについて散布図を描画して、色をライトコーラルにセットする	plt.plot(xdata, ydata, c='lightcoral')	plt.plot(xdata, ydata, c='lightcoral')
code: 配列xdataとデータ列ydataについて散布図を描画して、色をライトコーラルに変更する	plt.plot(xdata, ydata, c='lightcoral')	plt.plot(xdata, ydata, c='lightcoral')
code: ライトシアン色のマーカーを散布図に用いる	plt.plot(xdata, ydata, c='lightcyan')	plt.plot(xdata, ydata, c='lightcyan')
code: 散布図にライトシアン色のマーカーを用いる	plt.plot(xdata, ydata, c='lightcyan')	plt.plot(xdata, ydata, c='lightcyan')
code: 散布図をライトシアン色のマーカーでプロットする	plt.plot(xdata, ydata, c='lightcyan')	plt.plot(xdata, ydata, c='lightcyan')
code: ライトシアン色のマーカーを使って散布図を描画する	plt.plot(xdata, ydata, c='lightcyan')	plt.plot(xdata, ydata, c='lightcyan')
code: 散布図をライトシアン色のマーカーを使ってプロットする	plt.plot(xdata, ydata, c='lightcyan')	plt.plot(xdata, ydata, c='lightcyan')
code: イテラブルxdataと数列ydataの散布図をライトシアン色を用いてプロットする	plt.plot(xdata, ydata, c='lightcyan')	plt.plot(xdata, ydata, c='lightcyan')
code: 数列xdataと配列ydataについての散布図をライトシアン色を用いて描く	plt.plot(xdata, ydata, c='lightcyan')	plt.plot(xdata, ydata, c='lightcyan')
code: ライトシアン色を用いてイテラブルxdataと配列ydataの散布図を描く	plt.plot(xdata, ydata, c='lightcyan')	plt.plot(xdata, ydata, c='lightcyan')
code: 数列xdataとデータ列ydataについて散布図を描画して、マーカーの色をライトシアンに設定する	plt.plot(xdata, ydata, c='lightcyan')	plt.plot(xdata, ydata, c='lightcyan')
code: 数列xdataとデータ列ydataの散布図を描画して色をライトシアンに設定する	plt.plot(xdata, ydata, c='lightcyan')	plt.plot(xdata, ydata, c='lightcyan')
code: ライトゴールドロディイエロー色のマーカーを散布図に用いる	plt.plot(xdata, ydata, c='lightgoldenrodyellow')	plt.plot(xdata, ydata, c='lightgoldenrodyellow')
code: ライトゴールドロディイエロー色のマーカーを散布図に用いる	plt.plot(xdata, ydata, c='lightgoldenrodyellow')	plt.plot(xdata, ydata, c='lightgoldenrodyellow')
code: ライトゴールドロディイエロー色として散布図をプロットする	plt.plot(xdata, ydata, c='lightgoldenrodyellow')	plt.plot(xdata, ydata, c='lightgoldenrodyellow')
code: 散布図をライトゴールドロディイエロー色として描く	plt.plot(xdata, ydata, c='lightgoldenrodyellow')	plt.plot(xdata, ydata, c='lightgoldenrodyellow')
code: 散布図をライトゴールドロディイエロー色として描く	plt.plot(xdata, ydata, c='lightgoldenrodyellow')	plt.plot(xdata, ydata, c='lightgoldenrodyellow')
code: ライトゴールドロディイエロー色を用いてデータ列xdataと配列ydataの散布図を描画する	plt.plot(xdata, ydata, c='lightgoldenrodyellow')	plt.plot(xdata, ydata, c='lightgoldenrodyellow')
code: ライトゴールドロディイエロー色を使ってデータ列xdataと数列ydataの散布図をプロットする	plt.plot(xdata, ydata, c='lightgoldenrodyellow')	plt.plot(xdata, ydata, c='lightgoldenrodyellow')
code: ライトゴールドロディイエロー色を使ってイテラブルxdataと配列ydataの散布図を描く	plt.plot(xdata, ydata, c='lightgoldenrodyellow')	plt.plot(xdata, ydata, c='lightgoldenrodyellow')
code: データ列xdataとリストydataについて散布図を描画して、マーカーの色をライトゴールドロディイエローとする	plt.plot(xdata, ydata, c='lightgoldenrodyellow')	plt.plot(xdata, ydata, c='lightgoldenrodyellow')
code: リストxdataと数列ydataについて散布図を描画してマーカーの色をライトゴールドロディイエローに変更する	plt.plot(xdata, ydata, c='lightgoldenrodyellow')	plt.plot(xdata, ydata, c='lightgoldenrodyellow')
code: ライトグレー色のマーカーを散布図に用いる	plt.plot(xdata, ydata, c='lightgray')	plt.plot(xdata, ydata, c='lightgray')
code: ライトグレー色のマーカーを散布図に用いる	plt.plot(xdata, ydata, c='lightgrey')	plt.plot(xdata, ydata, c='lightgray')
code: ライトグレー色のマーカーを使って散布図を描画する	plt.plot(xdata, ydata, c='lightgrey')	plt.plot(xdata, ydata, c='lightgray')
code: ライトグレー色として散布図を描画する	plt.plot(xdata, ydata, c='lightgray')	plt.plot(xdata, ydata, c='lightgray')
code: ライトグレー色のマーカーを使って散布図を描画する	plt.plot(xdata, ydata, c='lightgrey')	plt.plot(xdata, ydata, c='lightgray')
code: 配列xdataとリストydataの散布図をライトグレー色として描画する	plt.plot(xdata, ydata, c='lightgrey')	plt.plot(xdata, ydata, c='lightgray')
code: データ列xdataと数列ydataの散布図をライトグレー色で描画する	plt.plot(xdata, ydata, c='lightgray')	plt.plot(xdata, ydata, c='lightgray')
code: 配列xdataとデータ列ydataの散布図をライトグレー色としてプロットする	plt.plot(xdata, ydata, c='lightgrey')	plt.plot(xdata, ydata, c='lightgray')
code: リストxdataと配列ydataの散布図を描画して、色をライトグレーに設定する	plt.plot(xdata, ydata, c='lightgrey')	plt.plot(xdata, ydata, c='lightgray')
code: 配列xdataとイテラブルydataの散布図を描画して、マーカーの色をライトグレー変える	plt.plot(xdata, ydata, c='lightgray')	plt.plot(xdata, ydata, c='lightgray')
code: ライトグリーン色のマーカーを散布図に使用する	plt.plot(xdata, ydata, c='lightseagreen')	plt.plot(xdata, ydata, c='lightgreen')
code: 散布図にライトグリーン色のマーカーを使う	plt.plot(xdata, ydata, c='lightgreen')	plt.plot(xdata, ydata, c='lightgreen')
code: ライトグリーン色を使って散布図を描画する	plt.plot(xdata, ydata, c='lightgreen')	plt.plot(xdata, ydata, c='lightgreen')
code: 散布図をライトグリーン色を用いて描く	plt.plot(xdata, ydata, c='lightgreen')	plt.plot(xdata, ydata, c='lightgreen')
code: 散布図をライトグリーン色として描く	plt.plot(xdata, ydata, c='lightseagreen')	plt.plot(xdata, ydata, c='lightgreen')
code: イテラブルxdataと数列ydataについての散布図をライトグリーン色でプロットする	plt.plot(xdata, ydata, c='lightseagreen')	plt.plot(xdata, ydata, c='lightgreen')
code: ライトグリーン色でイテラブルxdataとイテラブルydataについての散布図をプロットする	plt.plot(xdata, ydata, c='lightgreen')	plt.plot(xdata, ydata, c='lightgreen')
code: 配列xdataと数列ydataについての散布図をライトグリーン色で描画する	plt.plot(xdata, ydata, c='lightgreen')	plt.plot(xdata, ydata, c='lightgreen')
code: イテラブルxdataとイテラブルydataの散布図を描画して色をライトグリーンに設定する	plt.plot(xdata, ydata, c='lightgreen')	plt.plot(xdata, ydata, c='lightgreen')
code: イテラブルxdataとデータ列ydataについて散布図を描画して色をライトグリーンとする	plt.plot(xdata, ydata, c='lightseagreen')	plt.plot(xdata, ydata, c='lightgreen')
code: 散布図にライトグレー色のマーカーを使う	plt.plot(xdata, ydata, c='lightgrey')	plt.plot(xdata, ydata, c='lightgrey')
code: ライトグレー色のマーカーを散布図に使う	plt.plot(xdata, ydata, c='lightgrey')	plt.plot(xdata, ydata, c='lightgrey')
code: ライトグレー色を使って散布図を描画する	plt.plot(xdata, ydata, c='lightgrey')	plt.plot(xdata, ydata, c='lightgrey')
code: 散布図をライトグレー色のマーカーを用いて描く	plt.plot(xdata, ydata, c='lightgray')	plt.plot(xdata, ydata, c='lightgrey')
code: ライトグレー色で散布図を描く	plt.plot(xdata, ydata, c='lightgrey')	plt.plot(xdata, ydata, c='lightgrey')
code: データ列xdataとイテラブルydataについての散布図をライトグレー色を使って描く	plt.plot(xdata, ydata, c='lightgray')	plt.plot(xdata, ydata, c='lightgrey')
code: リストxdataとイテラブルydataについての散布図をライトグレー色を用いて描く	plt.plot(xdata, ydata, c='lightgrey')	plt.plot(xdata, ydata, c='lightgrey')
code: 数列xdataとデータ列ydataの散布図をライトグレー色としてプロットする	plt.plot(xdata, ydata, c='lightgrey')	plt.plot(xdata, ydata, c='lightgrey')
code: イテラブルxdataとイテラブルydataについて散布図を描画して色をライトグレーとする	plt.plot(xdata, ydata, c='lightgray')	plt.plot(xdata, ydata, c='lightgrey')
code: 配列xdataとデータ列ydataについて散布図を描画して色をライトグレーに変更する	plt.plot(xdata, ydata, c='lightgray')	plt.plot(xdata, ydata, c='lightgrey')
code: 淡いピンク色色のマーカーを散布図に使用する	plt.plot(xdata, ydata, c='lightpink')	plt.plot(xdata, ydata, c='lightpink')
code: 散布図に淡いピンク色色のマーカーを用いる	plt.plot(xdata, ydata, c='lightpink')	plt.plot(xdata, ydata, c='lightpink')
code: 散布図を淡いピンク色色のマーカーで描く	plt.plot(xdata, ydata, c='lightpink')	plt.plot(xdata, ydata, c='lightpink')
code: 淡いピンク色色で散布図を描画する	plt.plot(xdata, ydata, c='lightpink')	plt.plot(xdata, ydata, c='lightpink')
code: 淡いピンク色色として散布図をプロットする	plt.plot(xdata, ydata, c='lightpink')	plt.plot(xdata, ydata, c='lightpink')
code: イテラブルxdataと配列ydataについての散布図を淡いピンク色色として描く	plt.plot(xdata, ydata, c='lightpink')	plt.plot(xdata, ydata, c='lightpink')
code: 淡いピンク色色で配列xdataと数列ydataについての散布図をプロットする	plt.plot(xdata, ydata, c='lightpink')	plt.plot(xdata, ydata, c='lightpink')
code: データ列xdataとデータ列ydataの散布図を淡いピンク色色を使ってプロットする	plt.plot(xdata, ydata, c='lightpink')	plt.plot(xdata, ydata, c='lightpink')
code: イテラブルxdataと配列ydataの散布図を描画して色を淡いピンク色にセットする	plt.plot(xdata, ydata, c='lightpink')	plt.plot(xdata, ydata, c='lightpink')
code: イテラブルxdataとリストydataについて散布図を描画してマーカーの色を淡いピンク色に設定する	plt.plot(xdata, ydata, c='lightpink')	plt.plot(xdata, ydata, c='lightpink')
code: ライトサーモン色のマーカーを散布図に用いる	plt.plot(xdata, ydata, c='lightsalmon')	plt.plot(xdata, ydata, c='lightsalmon')
code: 散布図にライトサーモン色のマーカーを使う	plt.plot(xdata, ydata, c='lightsalmon')	plt.plot(xdata, ydata, c='lightsalmon')
code: 散布図をライトサーモン色を使ってプロットする	plt.plot(xdata, ydata, c='lightsalmon')	plt.plot(xdata, ydata, c='lightsalmon')
code: 散布図をライトサーモン色を使ってプロットする	plt.plot(xdata, ydata, c='lightsalmon')	plt.plot(xdata, ydata, c='lightsalmon')
code: ライトサーモン色のマーカーとして散布図を描画する	plt.plot(xdata, ydata, c='lightsalmon')	plt.plot(xdata, ydata, c='lightsalmon')
code: データ列xdataとイテラブルydataについての散布図をライトサーモン色を使って描く	plt.plot(xdata, ydata, c='lightsalmon')	plt.plot(xdata, ydata, c='lightsalmon')
code: データ列xdataとリストydataの散布図をライトサーモン色としてプロットする	plt.plot(xdata, ydata, c='lightsalmon')	plt.plot(xdata, ydata, c='lightsalmon')
code: ライトサーモン色としてデータ列xdataとリストydataの散布図を描画する	plt.plot(xdata, ydata, c='lightsalmon')	plt.plot(xdata, ydata, c='lightsalmon')
code: イテラブルxdataと配列ydataについて散布図を描画して、マーカーの色をライトサーモンに変更する	plt.plot(xdata, ydata, c='lightsalmon')	plt.plot(xdata, ydata, c='lightsalmon')
code: イテラブルxdataと配列ydataについて散布図を描画して色をライトサーモンに変更する	plt.plot(xdata, ydata, c='lightsalmon')	plt.plot(xdata, ydata, c='lightsalmon')
code: ライトグリーン色のマーカーを散布図に使用する	plt.plot(xdata, ydata, c='lightgreen')	plt.plot(xdata, ydata, c='lightseagreen')
code: ライトグリーン色のマーカーを散布図に用いる	plt.plot(xdata, ydata, c='lightseagreen')	plt.plot(xdata, ydata, c='lightseagreen')
code: ライトグリーン色で散布図を描画する	plt.plot(xdata, ydata, c='lightgreen')	plt.plot(xdata, ydata, c='lightseagreen')
code: ライトグリーン色のマーカーを用いて散布図をプロットする	plt.plot(xdata, ydata, c='lightgreen')	plt.plot(xdata, ydata, c='lightseagreen')
code: 散布図をライトグリーン色として描画する	plt.plot(xdata, ydata, c='lightgreen')	plt.plot(xdata, ydata, c='lightseagreen')
code: イテラブルxdataとリストydataについての散布図をライトグリーン色として描く	plt.plot(xdata, ydata, c='lightseagreen')	plt.plot(xdata, ydata, c='lightseagreen')
code: データ列xdataと数列ydataについての散布図をライトグリーン色を用いて描画する	plt.plot(xdata, ydata, c='lightseagreen')	plt.plot(xdata, ydata, c='lightseagreen')
code: ライトグリーン色としてイテラブルxdataと数列ydataの散布図をプロットする	plt.plot(xdata, ydata, c='lightseagreen')	plt.plot(xdata, ydata, c='lightseagreen')
code: 配列xdataと数列ydataの散布図を描画して色をライトグリーン変える	plt.plot(xdata, ydata, c='lightgreen')	plt.plot(xdata, ydata, c='lightseagreen')
code: 配列xdataと数列ydataの散布図を描画して、色をライトグリーンに指定する	plt.plot(xdata, ydata, c='lightseagreen')	plt.plot(xdata, ydata, c='lightseagreen')
code: 散布図にライトスカイブルー色のマーカーを使用する	plt.plot(xdata, ydata, c='lightskyblue')	plt.plot(xdata, ydata, c='lightskyblue')
code: ライトスカイブルー色のマーカーを散布図に用いる	plt.plot(xdata, ydata, c='lightskyblue')	plt.plot(xdata, ydata, c='lightskyblue')
code: 散布図をライトスカイブルー色のマーカーを使ってプロットする	plt.plot(xdata, ydata, c='lightskyblue')	plt.plot(xdata, ydata, c='lightskyblue')
code: ライトスカイブルー色のマーカーを使って散布図を描画する	plt.plot(xdata, ydata, c='lightskyblue')	plt.plot(xdata, ydata, c='lightskyblue')
code: 散布図をライトスカイブルー色を用いてプロットする	plt.plot(xdata, ydata, c='lightskyblue')	plt.plot(xdata, ydata, c='lightskyblue')
code: データ列xdataと数列ydataについての散布図をライトスカイブルー色でプロットする	plt.plot(xdata, ydata, c='lightskyblue')	plt.plot(xdata, ydata, c='lightskyblue')
code: 配列xdataとデータ列ydataについての散布図をライトスカイブルー色でプロットする	plt.plot(xdata, ydata, c='lightskyblue')	plt.plot(xdata, ydata, c='lightskyblue')
code: 配列xdataと配列ydataについての散布図をライトスカイブルー色で描画する	plt.plot(xdata, ydata, c='lightskyblue')	plt.plot(xdata, ydata, c='lightskyblue')
code: データ列xdataとリストydataの散布図を描画して、色をライトスカイブルーに設定する	plt.plot(xdata, ydata, c='lightskyblue')	plt.plot(xdata, ydata, c='lightskyblue')
code: イテラブルxdataと配列ydataの散布図を描画して色をライトスカイブルーとする	plt.plot(xdata, ydata, c='lightskyblue')	plt.plot(xdata, ydata, c='lightskyblue')
code: 散布図にライトスレイグレー色のマーカーを使用する	plt.plot(xdata, ydata, c='lightslategrey')	plt.plot(xdata, ydata, c='lightslategray')
code: ライトスレイグレー色のマーカーを散布図に用いる	plt.plot(xdata, ydata, c='lightslategray')	plt.plot(xdata, ydata, c='lightslategray')
code: ライトスレイグレー色のマーカーとして散布図をプロットする	plt.plot(xdata, ydata, c='lightslategray')	plt.plot(xdata, ydata, c='lightslategray')
code: 散布図をライトスレイグレー色として描く	plt.plot(xdata, ydata, c='lightslategray')	plt.plot(xdata, ydata, c='lightslategray')
code: ライトスレイグレー色のマーカーを使って散布図をプロットする	plt.plot(xdata, ydata, c='lightslategray')	plt.plot(xdata, ydata, c='lightslategray')
code: ライトスレイグレー色を使って配列xdataと数列ydataについての散布図をプロットする	plt.plot(xdata, ydata, c='lightslategray')	plt.plot(xdata, ydata, c='lightslategray')
code: ライトスレイグレー色としてデータ列xdataとイテラブルydataの散布図を描画する	plt.plot(xdata, ydata, c='lightslategray')	plt.plot(xdata, ydata, c='lightslategray')
code: 配列xdataと数列ydataについての散布図をライトスレイグレー色でプロットする	plt.plot(xdata, ydata, c='lightslategray')	plt.plot(xdata, ydata, c='lightslategray')
code: 配列xdataとイテラブルydataの散布図を描画して、色をライトスレイグレーに指定する	plt.plot(xdata, ydata, c='lightslategray')	plt.plot(xdata, ydata, c='lightslategray')
code: データ列xdataと数列ydataの散布図を描画して色をライトスレイグレーに設定する	plt.plot(xdata, ydata, c='lightslategrey')	plt.plot(xdata, ydata, c='lightslategray')
code: 散布図にライトスレイグレー色のマーカーを使う	plt.plot(xdata, ydata, c='lightslategray')	plt.plot(xdata, ydata, c='lightslategrey')
code: ライトスレイグレー色のマーカーを散布図に使う	plt.plot(xdata, ydata, c='lightslategrey')	plt.plot(xdata, ydata, c='lightslategrey')
code: 散布図をライトスレイグレー色を使って描く	plt.plot(xdata, ydata, c='lightslategray')	plt.plot(xdata, ydata, c='lightslategrey')
code: 散布図をライトスレイグレー色のマーカーを用いて描画する	plt.plot(xdata, ydata, c='lightslategray')	plt.plot(xdata, ydata, c='lightslategrey')
code: ライトスレイグレー色のマーカーを用いて散布図をプロットする	plt.plot(xdata, ydata, c='lightslategray')	plt.plot(xdata, ydata, c='lightslategrey')
code: ライトスレイグレー色を使ってイテラブルxdataとリストydataの散布図をプロットする	plt.plot(xdata, ydata, c='lightslategray')	plt.plot(xdata, ydata, c='lightslategrey')
code: リストxdataと数列ydataの散布図をライトスレイグレー色で描画する	plt.plot(xdata, ydata, c='lightslategrey')	plt.plot(xdata, ydata, c='lightslategrey')
code: ライトスレイグレー色を使ってリストxdataとイテラブルydataについての散布図をプロットする	plt.plot(xdata, ydata, c='lightslategray')	plt.plot(xdata, ydata, c='lightslategrey')
code: 配列xdataと配列ydataの散布図を描画して、マーカーの色をライトスレイグレーとする	plt.plot(xdata, ydata, c='lightslategray')	plt.plot(xdata, ydata, c='lightslategrey')
code: リストxdataと数列ydataについて散布図を描画してマーカーの色をライトスレイグレーとする	plt.plot(xdata, ydata, c='lightslategray')	plt.plot(xdata, ydata, c='lightslategrey')
code: ライトスチールブルー色のマーカーを散布図に使う	plt.plot(xdata, ydata, c='lightsteelblue')	plt.plot(xdata, ydata, c='lightsteelblue')
code: ライトスチールブルー色のマーカーを散布図に使用する	plt.plot(xdata, ydata, c='lightsteelblue')	plt.plot(xdata, ydata, c='lightsteelblue')
code: ライトスチールブルー色のマーカーとして散布図をプロットする	plt.plot(xdata, ydata, c='lightsteelblue')	plt.plot(xdata, ydata, c='lightsteelblue')
code: 散布図をライトスチールブルー色を使って描く	plt.plot(xdata, ydata, c='lightsteelblue')	plt.plot(xdata, ydata, c='lightsteelblue')
code: ライトスチールブルー色のマーカーとして散布図を描画する	plt.plot(xdata, ydata, c='lightsteelblue')	plt.plot(xdata, ydata, c='lightsteelblue')
code: 数列xdataとリストydataについての散布図をライトスチールブルー色でプロットする	plt.plot(xdata, ydata, c='lightsteelblue')	plt.plot(xdata, ydata, c='lightsteelblue')
code: 数列xdataと数列ydataについての散布図をライトスチールブルー色でプロットする	plt.plot(xdata, ydata, c='lightsteelblue')	plt.plot(xdata, ydata, c='lightsteelblue')
code: リストxdataと数列ydataの散布図をライトスチールブルー色で描画する	plt.plot(xdata, ydata, c='lightsteelblue')	plt.plot(xdata, ydata, c='lightsteelblue')
code: リストxdataと配列ydataの散布図を描画してマーカーの色をライトスチールブルー変える	plt.plot(xdata, ydata, c='lightsteelblue')	plt.plot(xdata, ydata, c='lightsteelblue')
code: リストxdataとリストydataについて散布図を描画してマーカーの色をライトスチールブルーに設定する	plt.plot(xdata, ydata, c='lightsteelblue')	plt.plot(xdata, ydata, c='lightsteelblue')
code: 散布図にライトイエロー色のマーカーを用いる	plt.plot(xdata, ydata, c='lightyellow')	plt.plot(xdata, ydata, c='lightyellow')
code: 散布図にライトイエロー色のマーカーを用いる	plt.plot(xdata, ydata, c='lightyellow')	plt.plot(xdata, ydata, c='lightyellow')
code: ライトイエロー色のマーカーで散布図をプロットする	plt.plot(xdata, ydata, c='lightyellow')	plt.plot(xdata, ydata, c='lightyellow')
code: ライトイエロー色のマーカーを使って散布図を描く	plt.plot(xdata, ydata, c='lightyellow')	plt.plot(xdata, ydata, c='lightyellow')
code: 散布図をライトイエロー色のマーカーとしてプロットする	plt.plot(xdata, ydata, c='lightyellow')	plt.plot(xdata, ydata, c='lightyellow')
code: 数列xdataと配列ydataの散布図をライトイエロー色を用いて描画する	plt.plot(xdata, ydata, c='lightyellow')	plt.plot(xdata, ydata, c='lightyellow')
code: ライトイエロー色でイテラブルxdataとイテラブルydataについての散布図をプロットする	plt.plot(xdata, ydata, c='lightyellow')	plt.plot(xdata, ydata, c='lightyellow')
code: イテラブルxdataと数列ydataについての散布図をライトイエロー色で描画する	plt.plot(xdata, ydata, c='lightyellow')	plt.plot(xdata, ydata, c='lightyellow')
code: データ列xdataと配列ydataの散布図を描画して色をライトイエローにセットする	plt.plot(xdata, ydata, c='lightyellow')	plt.plot(xdata, ydata, c='lightyellow')
code: データ列xdataとデータ列ydataの散布図を描画して、マーカーの色をライトイエローに設定する	plt.plot(xdata, ydata, c='lightyellow')	plt.plot(xdata, ydata, c='lightyellow')
code: 散布図にライム色のマーカーを用いる	plt.plot(xdata, ydata, c='lime')	plt.plot(xdata, ydata, c='lime')
code: 散布図にライム色のマーカーを使う	plt.plot(xdata, ydata, c='lime')	plt.plot(xdata, ydata, c='lime')
code: ライム色として散布図を描く	plt.plot(xdata, ydata, c='lime')	plt.plot(xdata, ydata, c='lime')
code: ライム色を使って散布図を描く	plt.plot(xdata, ydata, c='lime')	plt.plot(xdata, ydata, c='lime')
code: ライム色を用いて散布図をプロットする	plt.plot(xdata, ydata, c='lime')	plt.plot(xdata, ydata, c='lime')
code: ライム色を使ってデータ列xdataとイテラブルydataの散布図を描画する	plt.plot(xdata, ydata, c='lime')	plt.plot(xdata, ydata, c='lime')
code: ライム色を用いてリストxdataと数列ydataの散布図をプロットする	plt.plot(xdata, ydata, c='lime')	plt.plot(xdata, ydata, c='lime')
code: ライム色として数列xdataとリストydataについての散布図をプロットする	plt.plot(xdata, ydata, c='lime')	plt.plot(xdata, ydata, c='lime')
code: データ列xdataとリストydataの散布図を描画して色をライムにする	plt.plot(xdata, ydata, c='lime')	plt.plot(xdata, ydata, c='lime')
code: 配列xdataと配列ydataについて散布図を描画して、色をライム変える	plt.plot(xdata, ydata, c='lime')	plt.plot(xdata, ydata, c='lime')
code: 散布図にライムグリーン色のマーカーを用いる	plt.plot(xdata, ydata, c='limegreen')	plt.plot(xdata, ydata, c='limegreen')
code: ライムグリーン色のマーカーを散布図に使用する	plt.plot(xdata, ydata, c='limegreen')	plt.plot(xdata, ydata, c='limegreen')
code: ライムグリーン色のマーカーで散布図を描く	plt.plot(xdata, ydata, c='limegreen')	plt.plot(xdata, ydata, c='limegreen')
code: 散布図をライムグリーン色を用いてプロットする	plt.plot(xdata, ydata, c='limegreen')	plt.plot(xdata, ydata, c='limegreen')
code: ライムグリーン色を使って散布図を描画する	plt.plot(xdata, ydata, c='limegreen')	plt.plot(xdata, ydata, c='limegreen')
code: ライムグリーン色としてデータ列xdataと配列ydataの散布図をプロットする	plt.plot(xdata, ydata, c='limegreen')	plt.plot(xdata, ydata, c='limegreen')
code: ライムグリーン色としてイテラブルxdataとイテラブルydataの散布図を描画する	plt.plot(xdata, ydata, c='limegreen')	plt.plot(xdata, ydata, c='limegreen')
code: 数列xdataと配列ydataについての散布図をライムグリーン色で描画する	plt.plot(xdata, ydata, c='limegreen')	plt.plot(xdata, ydata, c='limegreen')
code: リストxdataとデータ列ydataについて散布図を描画して色をライムグリーンに設定する	plt.plot(xdata, ydata, c='limegreen')	plt.plot(xdata, ydata, c='limegreen')
code: イテラブルxdataとデータ列ydataの散布図を描画して、マーカーの色をライムグリーン変える	plt.plot(xdata, ydata, c='limegreen')	plt.plot(xdata, ydata, c='limegreen')
code: 散布図にリネン色のマーカーを使う	plt.plot(xdata, ydata, c='linen')	plt.plot(xdata, ydata, c='linen')
code: 散布図にリネン色のマーカーを用いる	plt.plot(xdata, ydata, c='linen')	plt.plot(xdata, ydata, c='linen')
code: リネン色のマーカーとして散布図を描画する	plt.plot(xdata, ydata, c='linen')	plt.plot(xdata, ydata, c='linen')
code: 散布図をリネン色として描画する	plt.plot(xdata, ydata, c='linen')	plt.plot(xdata, ydata, c='linen')
code: リネン色のマーカーを使って散布図をプロットする	plt.plot(xdata, ydata, c='linen')	plt.plot(xdata, ydata, c='linen')
code: リネン色を用いて数列xdataとデータ列ydataについての散布図をプロットする	plt.plot(xdata, ydata, c='linen')	plt.plot(xdata, ydata, c='linen')
code: リネン色を使ってデータ列xdataと配列ydataについての散布図を描画する	plt.plot(xdata, ydata, c='linen')	plt.plot(xdata, ydata, c='linen')
code: リストxdataと配列ydataについての散布図をリネン色としてプロットする	plt.plot(xdata, ydata, c='linen')	plt.plot(xdata, ydata, c='linen')
code: 数列xdataと数列ydataについて散布図を描画して色をリネンとする	plt.plot(xdata, ydata, c='linen')	plt.plot(xdata, ydata, c='linen')
code: データ列xdataと数列ydataについて散布図を描画して色をリネンにする	plt.plot(xdata, ydata, c='linen')	plt.plot(xdata, ydata, c='linen')
code: マゼンタ色のマーカーを散布図に用いる	plt.plot(xdata, ydata, c='magenta')	plt.plot(xdata, ydata, c='magenta')
code: 散布図にマゼンタ色のマーカーを使用する	plt.plot(xdata, ydata, c='magenta')	plt.plot(xdata, ydata, c='magenta')
code: マゼンタ色のマーカーとして散布図を描画する	plt.plot(xdata, ydata, c='magenta')	plt.plot(xdata, ydata, c='magenta')
code: 散布図をマゼンタ色を使って描く	plt.plot(xdata, ydata, c='magenta')	plt.plot(xdata, ydata, c='magenta')
code: 散布図をマゼンタ色のマーカーとして描く	plt.plot(xdata, ydata, c='magenta')	plt.plot(xdata, ydata, c='magenta')
code: マゼンタ色としてデータ列xdataとデータ列ydataの散布図を描く	plt.plot(xdata, ydata, c='magenta')	plt.plot(xdata, ydata, c='magenta')
code: リストxdataと数列ydataについての散布図をマゼンタ色でプロットする	plt.plot(xdata, ydata, c='magenta')	plt.plot(xdata, ydata, c='magenta')
code: マゼンタ色としてリストxdataとデータ列ydataの散布図を描く	plt.plot(xdata, ydata, c='magenta')	plt.plot(xdata, ydata, c='magenta')
code: 数列xdataとイテラブルydataについて散布図を描画して色をマゼンタに変更する	plt.plot(xdata, ydata, c='magenta')	plt.plot(xdata, ydata, c='magenta')
code: 数列xdataとリストydataについて散布図を描画して、マーカーの色をマゼンタにセットする	plt.plot(xdata, ydata, c='magenta')	plt.plot(xdata, ydata, c='magenta')
code: 散布図にマルーン色のマーカーを使用する	plt.plot(xdata, ydata, c='maroon')	plt.plot(xdata, ydata, c='maroon')
code: マルーン色のマーカーを散布図に用いる	plt.plot(xdata, ydata, c='maroon')	plt.plot(xdata, ydata, c='maroon')
code: 散布図をマルーン色のマーカーでプロットする	plt.plot(xdata, ydata, c='maroon')	plt.plot(xdata, ydata, c='maroon')
code: 散布図をマルーン色のマーカーとして描画する	plt.plot(xdata, ydata, c='maroon')	plt.plot(xdata, ydata, c='maroon')
code: マルーン色を使って散布図を描画する	plt.plot(xdata, ydata, c='maroon')	plt.plot(xdata, ydata, c='maroon')
code: マルーン色でイテラブルxdataと配列ydataの散布図を描画する	plt.plot(xdata, ydata, c='maroon')	plt.plot(xdata, ydata, c='maroon')
code: マルーン色として数列xdataとイテラブルydataについての散布図を描画する	plt.plot(xdata, ydata, c='maroon')	plt.plot(xdata, ydata, c='maroon')
code: マルーン色としてデータ列xdataとデータ列ydataについての散布図を描く	plt.plot(xdata, ydata, c='maroon')	plt.plot(xdata, ydata, c='maroon')
code: 配列xdataとデータ列ydataの散布図を描画して色をマルーンに設定する	plt.plot(xdata, ydata, c='maroon')	plt.plot(xdata, ydata, c='maroon')
code: 数列xdataと数列ydataについて散布図を描画して色をマルーンに設定する	plt.plot(xdata, ydata, c='maroon')	plt.plot(xdata, ydata, c='maroon')
code: ミディアムアクアマリン色のマーカーを散布図に使用する	plt.plot(xdata, ydata, c='mediumaquamarine')	plt.plot(xdata, ydata, c='mediumaquamarine')
code: ミディアムアクアマリン色のマーカーを散布図に使用する	plt.plot(xdata, ydata, c='mediumaquamarine')	plt.plot(xdata, ydata, c='mediumaquamarine')
code: ミディアムアクアマリン色として散布図をプロットする	plt.plot(xdata, ydata, c='mediumaquamarine')	plt.plot(xdata, ydata, c='mediumaquamarine')
code: ミディアムアクアマリン色のマーカーを使って散布図を描画する	plt.plot(xdata, ydata, c='mediumaquamarine')	plt.plot(xdata, ydata, c='mediumaquamarine')
code: 散布図をミディアムアクアマリン色を用いて描画する	plt.plot(xdata, ydata, c='mediumaquamarine')	plt.plot(xdata, ydata, c='mediumaquamarine')
code: リストxdataとイテラブルydataについての散布図をミディアムアクアマリン色でプロットする	plt.plot(xdata, ydata, c='mediumaquamarine')	plt.plot(xdata, ydata, c='mediumaquamarine')
code: ミディアムアクアマリン色を使って配列xdataと数列ydataについての散布図を描く	plt.plot(xdata, ydata, c='mediumaquamarine')	plt.plot(xdata, ydata, c='mediumaquamarine')
code: 配列xdataと数列ydataの散布図をミディアムアクアマリン色として描く	plt.plot(xdata, ydata, c='mediumaquamarine')	plt.plot(xdata, ydata, c='mediumaquamarine')
code: 数列xdataとリストydataについて散布図を描画して、色をミディアムアクアマリンに変更する	plt.plot(xdata, ydata, c='mediumaquamarine')	plt.plot(xdata, ydata, c='mediumaquamarine')
code: リストxdataとデータ列ydataの散布図を描画して、マーカーの色をミディアムアクアマリンに変更する	plt.plot(xdata, ydata, c='mediumaquamarine')	plt.plot(xdata, ydata, c='mediumaquamarine')
code: 散布図にミディアムブルー色のマーカーを用いる	plt.plot(xdata, ydata, c='mediumblue')	plt.plot(xdata, ydata, c='mediumblue')
code: ミディアムブルー色のマーカーを散布図に使用する	plt.plot(xdata, ydata, c='mediumblue')	plt.plot(xdata, ydata, c='mediumblue')
code: 散布図をミディアムブルー色で描く	plt.plot(xdata, ydata, c='mediumblue')	plt.plot(xdata, ydata, c='mediumblue')
code: 散布図をミディアムブルー色のマーカーを用いて描く	plt.plot(xdata, ydata, c='mediumblue')	plt.plot(xdata, ydata, c='mediumblue')
code: ミディアムブルー色のマーカーとして散布図を描画する	plt.plot(xdata, ydata, c='mediumblue')	plt.plot(xdata, ydata, c='mediumblue')
code: ミディアムブルー色としてリストxdataとデータ列ydataの散布図を描く	plt.plot(xdata, ydata, c='mediumblue')	plt.plot(xdata, ydata, c='mediumblue')
code: ミディアムブルー色としてイテラブルxdataと数列ydataの散布図を描画する	plt.plot(xdata, ydata, c='mediumblue')	plt.plot(xdata, ydata, c='mediumblue')
code: 配列xdataとデータ列ydataについての散布図をミディアムブルー色を用いて描画する	plt.plot(xdata, ydata, c='mediumblue')	plt.plot(xdata, ydata, c='mediumblue')
code: データ列xdataとイテラブルydataの散布図を描画して、色をミディアムブルーに変更する	plt.plot(xdata, ydata, c='mediumblue')	plt.plot(xdata, ydata, c='mediumblue')
code: 配列xdataと配列ydataについて散布図を描画してマーカーの色をミディアムブルーにセットする	plt.plot(xdata, ydata, c='mediumblue')	plt.plot(xdata, ydata, c='mediumblue')
code: ミディアムオーキッド色のマーカーを散布図に用いる	plt.plot(xdata, ydata, c='mediumorchid')	plt.plot(xdata, ydata, c='mediumorchid')
code: ミディアムオーキッド色のマーカーを散布図に使用する	plt.plot(xdata, ydata, c='mediumorchid')	plt.plot(xdata, ydata, c='mediumorchid')
code: ミディアムオーキッド色を使って散布図をプロットする	plt.plot(xdata, ydata, c='mediumorchid')	plt.plot(xdata, ydata, c='mediumorchid')
code: 散布図をミディアムオーキッド色を用いて描画する	plt.plot(xdata, ydata, c='mediumorchid')	plt.plot(xdata, ydata, c='mediumorchid')
code: ミディアムオーキッド色のマーカーとして散布図を描く	plt.plot(xdata, ydata, c='mediumorchid')	plt.plot(xdata, ydata, c='mediumorchid')
code: イテラブルxdataとイテラブルydataについての散布図をミディアムオーキッド色で描く	plt.plot(xdata, ydata, c='mediumorchid')	plt.plot(xdata, ydata, c='mediumorchid')
code: リストxdataとデータ列ydataの散布図をミディアムオーキッド色を使ってプロットする	plt.plot(xdata, ydata, c='mediumorchid')	plt.plot(xdata, ydata, c='mediumorchid')
code: 配列xdataと数列ydataについての散布図をミディアムオーキッド色としてプロットする	plt.plot(xdata, ydata, c='mediumorchid')	plt.plot(xdata, ydata, c='mediumorchid')
code: リストxdataと配列ydataの散布図を描画して、色をミディアムオーキッドに変更する	plt.plot(xdata, ydata, c='mediumorchid')	plt.plot(xdata, ydata, c='mediumorchid')
code: 配列xdataと数列ydataの散布図を描画して、マーカーの色をミディアムオーキッドに指定する	plt.plot(xdata, ydata, c='mediumorchid')	plt.plot(xdata, ydata, c='mediumorchid')
code: 散布図にミディアムパープル色のマーカーを使う	plt.plot(xdata, ydata, c='mediumpurple')	plt.plot(xdata, ydata, c='mediumpurple')
code: ミディアムパープル色のマーカーを散布図に用いる	plt.plot(xdata, ydata, c='mediumpurple')	plt.plot(xdata, ydata, c='mediumpurple')
code: 散布図をミディアムパープル色でプロットする	plt.plot(xdata, ydata, c='mediumpurple')	plt.plot(xdata, ydata, c='mediumpurple')
code: ミディアムパープル色で散布図をプロットする	plt.plot(xdata, ydata, c='mediumpurple')	plt.plot(xdata, ydata, c='mediumpurple')
code: ミディアムパープル色を用いて散布図をプロットする	plt.plot(xdata, ydata, c='mediumpurple')	plt.plot(xdata, ydata, c='mediumpurple')
code: ミディアムパープル色を用いてデータ列xdataと配列ydataの散布図を描画する	plt.plot(xdata, ydata, c='mediumpurple')	plt.plot(xdata, ydata, c='mediumpurple')
code: 配列xdataとイテラブルydataについての散布図をミディアムパープル色で描く	plt.plot(xdata, ydata, c='mediumpurple')	plt.plot(xdata, ydata, c='mediumpurple')
code: 配列xdataとイテラブルydataの散布図をミディアムパープル色で描く	plt.plot(xdata, ydata, c='mediumpurple')	plt.plot(xdata, ydata, c='mediumpurple')
code: リストxdataとデータ列ydataの散布図を描画して色をミディアムパープルに変更する	plt.plot(xdata, ydata, c='mediumpurple')	plt.plot(xdata, ydata, c='mediumpurple')
code: 配列xdataとリストydataの散布図を描画して、マーカーの色をミディアムパープルにする	plt.plot(xdata, ydata, c='mediumpurple')	plt.plot(xdata, ydata, c='mediumpurple')
code: ミディアムシアグリーン色のマーカーを散布図に使用する	plt.plot(xdata, ydata, c='mediumseagreen')	plt.plot(xdata, ydata, c='mediumseagreen')
code: 散布図にミディアムシアグリーン色のマーカーを用いる	plt.plot(xdata, ydata, c='mediumseagreen')	plt.plot(xdata, ydata, c='mediumseagreen')
code: ミディアムシアグリーン色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='mediumseagreen')	plt.plot(xdata, ydata, c='mediumseagreen')
code: 散布図をミディアムシアグリーン色を用いて描く	plt.plot(xdata, ydata, c='mediumseagreen')	plt.plot(xdata, ydata, c='mediumseagreen')
code: ミディアムシアグリーン色を使って散布図を描画する	plt.plot(xdata, ydata, c='mediumseagreen')	plt.plot(xdata, ydata, c='mediumseagreen')
code: 配列xdataとリストydataの散布図をミディアムシアグリーン色を使って描く	plt.plot(xdata, ydata, c='mediumseagreen')	plt.plot(xdata, ydata, c='mediumseagreen')
code: イテラブルxdataとデータ列ydataについての散布図をミディアムシアグリーン色で描く	plt.plot(xdata, ydata, c='mediumseagreen')	plt.plot(xdata, ydata, c='mediumseagreen')
code: イテラブルxdataとリストydataについての散布図をミディアムシアグリーン色として描画する	plt.plot(xdata, ydata, c='mediumseagreen')	plt.plot(xdata, ydata, c='mediumseagreen')
code: 配列xdataと配列ydataの散布図を描画してマーカーの色をミディアムシアグリーンとする	plt.plot(xdata, ydata, c='mediumseagreen')	plt.plot(xdata, ydata, c='mediumseagreen')
code: データ列xdataと数列ydataについて散布図を描画して色をミディアムシアグリーンに変更する	plt.plot(xdata, ydata, c='mediumseagreen')	plt.plot(xdata, ydata, c='mediumseagreen')
code: ミディアムスレートブルー色のマーカーを散布図に用いる	plt.plot(xdata, ydata, c='mediumslateblue')	plt.plot(xdata, ydata, c='mediumslateblue')
code: 散布図にミディアムスレートブルー色のマーカーを用いる	plt.plot(xdata, ydata, c='mediumslateblue')	plt.plot(xdata, ydata, c='mediumslateblue')
code: 散布図をミディアムスレートブルー色を用いて描く	plt.plot(xdata, ydata, c='mediumslateblue')	plt.plot(xdata, ydata, c='mediumslateblue')
code: 散布図をミディアムスレートブルー色のマーカーを使ってプロットする	plt.plot(xdata, ydata, c='mediumslateblue')	plt.plot(xdata, ydata, c='mediumslateblue')
code: 散布図をミディアムスレートブルー色で描画する	plt.plot(xdata, ydata, c='mediumslateblue')	plt.plot(xdata, ydata, c='mediumslateblue')
code: ミディアムスレートブルー色を用いて数列xdataと数列ydataの散布図をプロットする	plt.plot(xdata, ydata, c='mediumslateblue')	plt.plot(xdata, ydata, c='mediumslateblue')
code: ミディアムスレートブルー色で数列xdataと配列ydataについての散布図を描く	plt.plot(xdata, ydata, c='mediumslateblue')	plt.plot(xdata, ydata, c='mediumslateblue')
code: 配列xdataとデータ列ydataの散布図をミディアムスレートブルー色として描画する	plt.plot(xdata, ydata, c='mediumslateblue')	plt.plot(xdata, ydata, c='mediumslateblue')
code: 配列xdataと配列ydataの散布図を描画してマーカーの色をミディアムスレートブルーとする	plt.plot(xdata, ydata, c='mediumslateblue')	plt.plot(xdata, ydata, c='mediumslateblue')
code: データ列xdataと配列ydataの散布図を描画して色をミディアムスレートブルーにセットする	plt.plot(xdata, ydata, c='mediumslateblue')	plt.plot(xdata, ydata, c='mediumslateblue')
code: 散布図にミディアムスプリンググリーン色のマーカーを使用する	plt.plot(xdata, ydata, c='mediumspringgreen')	plt.plot(xdata, ydata, c='mediumspringgreen')
code: 散布図にミディアムスプリンググリーン色のマーカーを使用する	plt.plot(xdata, ydata, c='mediumspringgreen')	plt.plot(xdata, ydata, c='mediumspringgreen')
code: ミディアムスプリンググリーン色を使って散布図を描画する	plt.plot(xdata, ydata, c='mediumspringgreen')	plt.plot(xdata, ydata, c='mediumspringgreen')
code: 散布図をミディアムスプリンググリーン色のマーカーで描く	plt.plot(xdata, ydata, c='mediumspringgreen')	plt.plot(xdata, ydata, c='mediumspringgreen')
code: 散布図をミディアムスプリンググリーン色を使ってプロットする	plt.plot(xdata, ydata, c='mediumspringgreen')	plt.plot(xdata, ydata, c='mediumspringgreen')
code: ミディアムスプリンググリーン色でデータ列xdataとリストydataの散布図を描画する	plt.plot(xdata, ydata, c='mediumspringgreen')	plt.plot(xdata, ydata, c='mediumspringgreen')
code: データ列xdataとリストydataの散布図をミディアムスプリンググリーン色としてプロットする	plt.plot(xdata, ydata, c='mediumspringgreen')	plt.plot(xdata, ydata, c='mediumspringgreen')
code: ミディアムスプリンググリーン色でリストxdataとリストydataの散布図をプロットする	plt.plot(xdata, ydata, c='mediumspringgreen')	plt.plot(xdata, ydata, c='mediumspringgreen')
code: リストxdataと数列ydataについて散布図を描画して色をミディアムスプリンググリーンに設定する	plt.plot(xdata, ydata, c='mediumspringgreen')	plt.plot(xdata, ydata, c='mediumspringgreen')
code: データ列xdataと配列ydataについて散布図を描画して、マーカーの色をミディアムスプリンググリーンにセットする	plt.plot(xdata, ydata, c='mediumspringgreen')	plt.plot(xdata, ydata, c='mediumspringgreen')
code: ミディアムターコイズ色のマーカーを散布図に用いる	plt.plot(xdata, ydata, c='mediumturquoise')	plt.plot(xdata, ydata, c='mediumturquoise')
code: 散布図にミディアムターコイズ色のマーカーを使う	plt.plot(xdata, ydata, c='mediumturquoise')	plt.plot(xdata, ydata, c='mediumturquoise')
code: 散布図をミディアムターコイズ色で描く	plt.plot(xdata, ydata, c='mediumturquoise')	plt.plot(xdata, ydata, c='mediumturquoise')
code: 散布図をミディアムターコイズ色を用いてプロットする	plt.plot(xdata, ydata, c='mediumturquoise')	plt.plot(xdata, ydata, c='mediumturquoise')
code: ミディアムターコイズ色のマーカーを使って散布図をプロットする	plt.plot(xdata, ydata, c='mediumturquoise')	plt.plot(xdata, ydata, c='mediumturquoise')
code: ミディアムターコイズ色で数列xdataとイテラブルydataの散布図を描画する	plt.plot(xdata, ydata, c='mediumturquoise')	plt.plot(xdata, ydata, c='mediumturquoise')
code: ミディアムターコイズ色でリストxdataと数列ydataの散布図をプロットする	plt.plot(xdata, ydata, c='mediumturquoise')	plt.plot(xdata, ydata, c='mediumturquoise')
code: 数列xdataとデータ列ydataについての散布図をミディアムターコイズ色を用いて描画する	plt.plot(xdata, ydata, c='mediumturquoise')	plt.plot(xdata, ydata, c='mediumturquoise')
code: イテラブルxdataとイテラブルydataについて散布図を描画して、マーカーの色をミディアムターコイズに変更する	plt.plot(xdata, ydata, c='mediumturquoise')	plt.plot(xdata, ydata, c='mediumturquoise')
code: 配列xdataと配列ydataについて散布図を描画して色をミディアムターコイズにする	plt.plot(xdata, ydata, c='mediumturquoise')	plt.plot(xdata, ydata, c='mediumturquoise')
code: ミディアムバイオレットレッド色のマーカーを散布図に使う	plt.plot(xdata, ydata, c='mediumvioletred')	plt.plot(xdata, ydata, c='mediumvioletred')
code: 散布図にミディアムバイオレットレッド色のマーカーを使用する	plt.plot(xdata, ydata, c='mediumvioletred')	plt.plot(xdata, ydata, c='mediumvioletred')
code: 散布図をミディアムバイオレットレッド色のマーカーでプロットする	plt.plot(xdata, ydata, c='mediumvioletred')	plt.plot(xdata, ydata, c='mediumvioletred')
code: ミディアムバイオレットレッド色で散布図を描画する	plt.plot(xdata, ydata, c='mediumvioletred')	plt.plot(xdata, ydata, c='mediumvioletred')
code: 散布図をミディアムバイオレットレッド色でプロットする	plt.plot(xdata, ydata, c='mediumvioletred')	plt.plot(xdata, ydata, c='mediumvioletred')
code: 数列xdataとイテラブルydataの散布図をミディアムバイオレットレッド色でプロットする	plt.plot(xdata, ydata, c='mediumvioletred')	plt.plot(xdata, ydata, c='mediumvioletred')
code: リストxdataと配列ydataの散布図をミディアムバイオレットレッド色でプロットする	plt.plot(xdata, ydata, c='mediumvioletred')	plt.plot(xdata, ydata, c='mediumvioletred')
code: ミディアムバイオレットレッド色として数列xdataと数列ydataについての散布図を描く	plt.plot(xdata, ydata, c='mediumvioletred')	plt.plot(xdata, ydata, c='mediumvioletred')
code: データ列xdataとデータ列ydataについて散布図を描画して色をミディアムバイオレットレッドに設定する	plt.plot(xdata, ydata, c='mediumvioletred')	plt.plot(xdata, ydata, c='mediumvioletred')
code: 配列xdataと数列ydataの散布図を描画して、色をミディアムバイオレットレッドに設定する	plt.plot(xdata, ydata, c='mediumvioletred')	plt.plot(xdata, ydata, c='mediumvioletred')
code: ミッドナイトブルー色のマーカーを散布図に使う	plt.plot(xdata, ydata, c='midnightblue')	plt.plot(xdata, ydata, c='midnightblue')
code: ミッドナイトブルー色のマーカーを散布図に使用する	plt.plot(xdata, ydata, c='midnightblue')	plt.plot(xdata, ydata, c='midnightblue')
code: 散布図をミッドナイトブルー色のマーカーを用いてプロットする	plt.plot(xdata, ydata, c='midnightblue')	plt.plot(xdata, ydata, c='midnightblue')
code: ミッドナイトブルー色を用いて散布図を描画する	plt.plot(xdata, ydata, c='midnightblue')	plt.plot(xdata, ydata, c='midnightblue')
code: ミッドナイトブルー色を使って散布図を描画する	plt.plot(xdata, ydata, c='midnightblue')	plt.plot(xdata, ydata, c='midnightblue')
code: ミッドナイトブルー色で配列xdataとイテラブルydataについての散布図を描く	plt.plot(xdata, ydata, c='midnightblue')	plt.plot(xdata, ydata, c='midnightblue')
code: ミッドナイトブルー色を用いてデータ列xdataとデータ列ydataについての散布図を描画する	plt.plot(xdata, ydata, c='midnightblue')	plt.plot(xdata, ydata, c='midnightblue')
code: データ列xdataとイテラブルydataについての散布図をミッドナイトブルー色としてプロットする	plt.plot(xdata, ydata, c='midnightblue')	plt.plot(xdata, ydata, c='midnightblue')
code: 数列xdataとデータ列ydataについて散布図を描画して、色をミッドナイトブルー変える	plt.plot(xdata, ydata, c='midnightblue')	plt.plot(xdata, ydata, c='midnightblue')
code: リストxdataとデータ列ydataの散布図を描画して、マーカーの色をミッドナイトブルーに指定する	plt.plot(xdata, ydata, c='midnightblue')	plt.plot(xdata, ydata, c='midnightblue')
code: 散布図にミントクリーム色のマーカーを使用する	plt.plot(xdata, ydata, c='mintcream')	plt.plot(xdata, ydata, c='mintcream')
code: 散布図にミントクリーム色のマーカーを使用する	plt.plot(xdata, ydata, c='mintcream')	plt.plot(xdata, ydata, c='mintcream')
code: 散布図をミントクリーム色のマーカーを使ってプロットする	plt.plot(xdata, ydata, c='mintcream')	plt.plot(xdata, ydata, c='mintcream')
code: ミントクリーム色のマーカーを用いて散布図を描く	plt.plot(xdata, ydata, c='mintcream')	plt.plot(xdata, ydata, c='mintcream')
code: ミントクリーム色として散布図を描画する	plt.plot(xdata, ydata, c='mintcream')	plt.plot(xdata, ydata, c='mintcream')
code: ミントクリーム色で数列xdataと配列ydataについての散布図を描画する	plt.plot(xdata, ydata, c='mintcream')	plt.plot(xdata, ydata, c='mintcream')
code: ミントクリーム色で数列xdataとデータ列ydataについての散布図をプロットする	plt.plot(xdata, ydata, c='mintcream')	plt.plot(xdata, ydata, c='mintcream')
code: ミントクリーム色を使って配列xdataとデータ列ydataについての散布図を描く	plt.plot(xdata, ydata, c='mintcream')	plt.plot(xdata, ydata, c='mintcream')
code: 配列xdataとデータ列ydataの散布図を描画してマーカーの色をミントクリームに変更する	plt.plot(xdata, ydata, c='mintcream')	plt.plot(xdata, ydata, c='mintcream')
code: 数列xdataと数列ydataの散布図を描画してマーカーの色をミントクリームに設定する	plt.plot(xdata, ydata, c='mintcream')	plt.plot(xdata, ydata, c='mintcream')
code: 散布図にミスティローズ色のマーカーを用いる	plt.plot(xdata, ydata, c='mistyrose')	plt.plot(xdata, ydata, c='mistyrose')
code: 散布図にミスティローズ色のマーカーを用いる	plt.plot(xdata, ydata, c='mistyrose')	plt.plot(xdata, ydata, c='mistyrose')
code: 散布図をミスティローズ色として描く	plt.plot(xdata, ydata, c='mistyrose')	plt.plot(xdata, ydata, c='mistyrose')
code: ミスティローズ色のマーカーとして散布図をプロットする	plt.plot(xdata, ydata, c='mistyrose')	plt.plot(xdata, ydata, c='mistyrose')
code: ミスティローズ色のマーカーで散布図を描く	plt.plot(xdata, ydata, c='mistyrose')	plt.plot(xdata, ydata, c='mistyrose')
code: ミスティローズ色としてイテラブルxdataとイテラブルydataの散布図を描く	plt.plot(xdata, ydata, c='mistyrose')	plt.plot(xdata, ydata, c='mistyrose')
code: データ列xdataとイテラブルydataの散布図をミスティローズ色として描く	plt.plot(xdata, ydata, c='mistyrose')	plt.plot(xdata, ydata, c='mistyrose')
code: データ列xdataとリストydataの散布図をミスティローズ色を用いて描画する	plt.plot(xdata, ydata, c='mistyrose')	plt.plot(xdata, ydata, c='mistyrose')
code: 数列xdataとデータ列ydataの散布図を描画してマーカーの色をミスティローズ変える	plt.plot(xdata, ydata, c='mistyrose')	plt.plot(xdata, ydata, c='mistyrose')
code: リストxdataと数列ydataについて散布図を描画してマーカーの色をミスティローズ変える	plt.plot(xdata, ydata, c='mistyrose')	plt.plot(xdata, ydata, c='mistyrose')
code: 散布図にモカシン色のマーカーを用いる	plt.plot(xdata, ydata, c='moccasin')	plt.plot(xdata, ydata, c='moccasin')
code: モカシン色のマーカーを散布図に使用する	plt.plot(xdata, ydata, c='moccasin')	plt.plot(xdata, ydata, c='moccasin')
code: モカシン色として散布図を描く	plt.plot(xdata, ydata, c='moccasin')	plt.plot(xdata, ydata, c='moccasin')
code: モカシン色を使って散布図を描く	plt.plot(xdata, ydata, c='moccasin')	plt.plot(xdata, ydata, c='moccasin')
code: 散布図をモカシン色のマーカーで描画する	plt.plot(xdata, ydata, c='moccasin')	plt.plot(xdata, ydata, c='moccasin')
code: 配列xdataとリストydataについての散布図をモカシン色を用いて描く	plt.plot(xdata, ydata, c='moccasin')	plt.plot(xdata, ydata, c='moccasin')
code: モカシン色でリストxdataとイテラブルydataの散布図を描く	plt.plot(xdata, ydata, c='moccasin')	plt.plot(xdata, ydata, c='moccasin')
code: 配列xdataとデータ列ydataの散布図をモカシン色を用いてプロットする	plt.plot(xdata, ydata, c='moccasin')	plt.plot(xdata, ydata, c='moccasin')
code: リストxdataとデータ列ydataの散布図を描画して、色をモカシンにセットする	plt.plot(xdata, ydata, c='moccasin')	plt.plot(xdata, ydata, c='moccasin')
code: データ列xdataとデータ列ydataについて散布図を描画して、マーカーの色をモカシンに変更する	plt.plot(xdata, ydata, c='moccasin')	plt.plot(xdata, ydata, c='moccasin')
code: ナバホホワイト色のマーカーを散布図に用いる	plt.plot(xdata, ydata, c='navajowhite')	plt.plot(xdata, ydata, c='navajowhite')
code: ナバホホワイト色のマーカーを散布図に使う	plt.plot(xdata, ydata, c='navajowhite')	plt.plot(xdata, ydata, c='navajowhite')
code: 散布図をナバホホワイト色のマーカーで描画する	plt.plot(xdata, ydata, c='navajowhite')	plt.plot(xdata, ydata, c='navajowhite')
code: 散布図をナバホホワイト色のマーカーとしてプロットする	plt.plot(xdata, ydata, c='navajowhite')	plt.plot(xdata, ydata, c='navajowhite')
code: ナバホホワイト色を使って散布図を描く	plt.plot(xdata, ydata, c='navajowhite')	plt.plot(xdata, ydata, c='navajowhite')
code: イテラブルxdataと数列ydataについての散布図をナバホホワイト色を用いて描画する	plt.plot(xdata, ydata, c='navajowhite')	plt.plot(xdata, ydata, c='navajowhite')
code: ナバホホワイト色でデータ列xdataとリストydataについての散布図を描く	plt.plot(xdata, ydata, c='navajowhite')	plt.plot(xdata, ydata, c='navajowhite')
code: ナバホホワイト色としてイテラブルxdataとデータ列ydataの散布図をプロットする	plt.plot(xdata, ydata, c='navajowhite')	plt.plot(xdata, ydata, c='navajowhite')
code: イテラブルxdataと数列ydataの散布図を描画して、色をナバホホワイト変える	plt.plot(xdata, ydata, c='navajowhite')	plt.plot(xdata, ydata, c='navajowhite')
code: データ列xdataと数列ydataの散布図を描画して色をナバホホワイトに指定する	plt.plot(xdata, ydata, c='navajowhite')	plt.plot(xdata, ydata, c='navajowhite')
code: ネイビー色のマーカーを散布図に使う	plt.plot(xdata, ydata, c='navy')	plt.plot(xdata, ydata, c='navy')
code: ネイビー色のマーカーを散布図に使用する	plt.plot(xdata, ydata, c='navy')	plt.plot(xdata, ydata, c='navy')
code: ネイビー色として散布図を描く	plt.plot(xdata, ydata, c='navy')	plt.plot(xdata, ydata, c='navy')
code: ネイビー色で散布図をプロットする	plt.plot(xdata, ydata, c='navy')	plt.plot(xdata, ydata, c='navy')
code: ネイビー色のマーカーとして散布図をプロットする	plt.plot(xdata, ydata, c='navy')	plt.plot(xdata, ydata, c='navy')
code: 配列xdataとデータ列ydataの散布図をネイビー色を使ってプロットする	plt.plot(xdata, ydata, c='navy')	plt.plot(xdata, ydata, c='navy')
code: イテラブルxdataとデータ列ydataの散布図をネイビー色で描画する	plt.plot(xdata, ydata, c='navy')	plt.plot(xdata, ydata, c='navy')
code: ネイビー色で配列xdataとデータ列ydataについての散布図を描画する	plt.plot(xdata, ydata, c='navy')	plt.plot(xdata, ydata, c='navy')
code: 配列xdataと配列ydataについて散布図を描画して、マーカーの色をネイビーとする	plt.plot(xdata, ydata, c='navy')	plt.plot(xdata, ydata, c='navy')
code: イテラブルxdataと数列ydataについて散布図を描画して、色をネイビー変える	plt.plot(xdata, ydata, c='navy')	plt.plot(xdata, ydata, c='navy')
code: 散布図にオールドレース色のマーカーを用いる	plt.plot(xdata, ydata, c='oldlace')	plt.plot(xdata, ydata, c='oldlace')
code: 散布図にオールドレース色のマーカーを用いる	plt.plot(xdata, ydata, c='oldlace')	plt.plot(xdata, ydata, c='oldlace')
code: オールドレース色で散布図をプロットする	plt.plot(xdata, ydata, c='oldlace')	plt.plot(xdata, ydata, c='oldlace')
code: オールドレース色のマーカーを用いて散布図をプロットする	plt.plot(xdata, ydata, c='oldlace')	plt.plot(xdata, ydata, c='oldlace')
code: 散布図をオールドレース色のマーカーで描画する	plt.plot(xdata, ydata, c='oldlace')	plt.plot(xdata, ydata, c='oldlace')
code: オールドレース色を用いて数列xdataとデータ列ydataの散布図を描画する	plt.plot(xdata, ydata, c='oldlace')	plt.plot(xdata, ydata, c='oldlace')
code: リストxdataと配列ydataについての散布図をオールドレース色でプロットする	plt.plot(xdata, ydata, c='oldlace')	plt.plot(xdata, ydata, c='oldlace')
code: イテラブルxdataとイテラブルydataについての散布図をオールドレース色を用いて描く	plt.plot(xdata, ydata, c='oldlace')	plt.plot(xdata, ydata, c='oldlace')
code: リストxdataと数列ydataについて散布図を描画して、色をオールドレースにセットする	plt.plot(xdata, ydata, c='oldlace')	plt.plot(xdata, ydata, c='oldlace')
code: データ列xdataとデータ列ydataについて散布図を描画して、マーカーの色をオールドレースとする	plt.plot(xdata, ydata, c='oldlace')	plt.plot(xdata, ydata, c='oldlace')
code: 散布図にオリーブ色のマーカーを用いる	plt.plot(xdata, ydata, c='olive')	plt.plot(xdata, ydata, c='olive')
code: オリーブ色のマーカーを散布図に用いる	plt.plot(xdata, ydata, c='olive')	plt.plot(xdata, ydata, c='olive')
code: オリーブ色を用いて散布図を描画する	plt.plot(xdata, ydata, c='olive')	plt.plot(xdata, ydata, c='olive')
code: オリーブ色で散布図をプロットする	plt.plot(xdata, ydata, c='olive')	plt.plot(xdata, ydata, c='olive')
code: オリーブ色のマーカーとして散布図を描く	plt.plot(xdata, ydata, c='olive')	plt.plot(xdata, ydata, c='olive')
code: オリーブ色で配列xdataと配列ydataについての散布図を描く	plt.plot(xdata, ydata, c='olive')	plt.plot(xdata, ydata, c='olive')
code: イテラブルxdataと配列ydataについての散布図をオリーブ色を用いて描く	plt.plot(xdata, ydata, c='olive')	plt.plot(xdata, ydata, c='olive')
code: リストxdataとイテラブルydataについての散布図をオリーブ色で描く	plt.plot(xdata, ydata, c='olive')	plt.plot(xdata, ydata, c='olive')
code: 配列xdataと数列ydataについて散布図を描画して、マーカーの色をオリーブにする	plt.plot(xdata, ydata, c='olive')	plt.plot(xdata, ydata, c='olive')
code: リストxdataと配列ydataの散布図を描画して色をオリーブとする	plt.plot(xdata, ydata, c='olive')	plt.plot(xdata, ydata, c='olive')
code: 散布図にオリベドラブ色のマーカーを用いる	plt.plot(xdata, ydata, c='olivedrab')	plt.plot(xdata, ydata, c='olivedrab')
code: 散布図にオリベドラブ色のマーカーを使用する	plt.plot(xdata, ydata, c='olivedrab')	plt.plot(xdata, ydata, c='olivedrab')
code: 散布図をオリベドラブ色のマーカーを使って描く	plt.plot(xdata, ydata, c='olivedrab')	plt.plot(xdata, ydata, c='olivedrab')
code: 散布図をオリベドラブ色のマーカーとして描く	plt.plot(xdata, ydata, c='olivedrab')	plt.plot(xdata, ydata, c='olivedrab')
code: オリベドラブ色を使って散布図を描く	plt.plot(xdata, ydata, c='olivedrab')	plt.plot(xdata, ydata, c='olivedrab')
code: データ列xdataとリストydataについての散布図をオリベドラブ色を用いてプロットする	plt.plot(xdata, ydata, c='olivedrab')	plt.plot(xdata, ydata, c='olivedrab')
code: オリベドラブ色を用いて数列xdataと配列ydataについての散布図を描画する	plt.plot(xdata, ydata, c='olivedrab')	plt.plot(xdata, ydata, c='olivedrab')
code: オリベドラブ色で数列xdataとリストydataについての散布図を描画する	plt.plot(xdata, ydata, c='olivedrab')	plt.plot(xdata, ydata, c='olivedrab')
code: リストxdataと数列ydataについて散布図を描画して色をオリベドラブに指定する	plt.plot(xdata, ydata, c='olivedrab')	plt.plot(xdata, ydata, c='olivedrab')
code: 配列xdataとイテラブルydataについて散布図を描画して、マーカーの色をオリベドラブにする	plt.plot(xdata, ydata, c='olivedrab')	plt.plot(xdata, ydata, c='olivedrab')
code: 散布図にオレンジ色のマーカーを用いる	plt.plot(xdata, ydata, c='orange')	plt.plot(xdata, ydata, c='orange')
code: オレンジ色のマーカーを散布図に用いる	plt.plot(xdata, ydata, c='orange')	plt.plot(xdata, ydata, c='orange')
code: 散布図をオレンジ色として描画する	plt.plot(xdata, ydata, c='orange')	plt.plot(xdata, ydata, c='orange')
code: 散布図をオレンジ色のマーカーとしてプロットする	plt.plot(xdata, ydata, c='orange')	plt.plot(xdata, ydata, c='orange')
code: オレンジ色のマーカーとして散布図を描画する	plt.plot(xdata, ydata, c='orange')	plt.plot(xdata, ydata, c='orange')
code: オレンジ色で数列xdataと配列ydataについての散布図を描く	plt.plot(xdata, ydata, c='orange')	plt.plot(xdata, ydata, c='orange')
code: オレンジ色でデータ列xdataとリストydataについての散布図を描く	plt.plot(xdata, ydata, c='orange')	plt.plot(xdata, ydata, c='orange')
code: オレンジ色を用いてイテラブルxdataとリストydataについての散布図をプロットする	plt.plot(xdata, ydata, c='orange')	plt.plot(xdata, ydata, c='orange')
code: データ列xdataと数列ydataの散布図を描画して、色をオレンジにセットする	plt.plot(xdata, ydata, c='orange')	plt.plot(xdata, ydata, c='orange')
code: 配列xdataとイテラブルydataについて散布図を描画してマーカーの色をオレンジとする	plt.plot(xdata, ydata, c='orange')	plt.plot(xdata, ydata, c='orange')
code: 散布図にオレンジレッド色のマーカーを使う	plt.plot(xdata, ydata, c='orangered')	plt.plot(xdata, ydata, c='orangered')
code: 散布図にオレンジレッド色のマーカーを使う	plt.plot(xdata, ydata, c='orangered')	plt.plot(xdata, ydata, c='orangered')
code: オレンジレッド色のマーカーを用いて散布図を描く	plt.plot(xdata, ydata, c='orangered')	plt.plot(xdata, ydata, c='orangered')
code: オレンジレッド色のマーカーとして散布図を描画する	plt.plot(xdata, ydata, c='orangered')	plt.plot(xdata, ydata, c='orangered')
code: オレンジレッド色のマーカーで散布図をプロットする	plt.plot(xdata, ydata, c='orangered')	plt.plot(xdata, ydata, c='orangered')
code: 数列xdataと数列ydataの散布図をオレンジレッド色を使って描画する	plt.plot(xdata, ydata, c='orangered')	plt.plot(xdata, ydata, c='orangered')
code: 数列xdataとデータ列ydataの散布図をオレンジレッド色として描く	plt.plot(xdata, ydata, c='orangered')	plt.plot(xdata, ydata, c='orangered')
code: リストxdataとデータ列ydataについての散布図をオレンジレッド色として描く	plt.plot(xdata, ydata, c='orangered')	plt.plot(xdata, ydata, c='orangered')
code: リストxdataと配列ydataについて散布図を描画して色をオレンジレッドにセットする	plt.plot(xdata, ydata, c='orangered')	plt.plot(xdata, ydata, c='orangered')
code: 数列xdataと数列ydataについて散布図を描画して、色をオレンジレッドに設定する	plt.plot(xdata, ydata, c='orangered')	plt.plot(xdata, ydata, c='orangered')
code: オーキッド色のマーカーを散布図に使用する	plt.plot(xdata, ydata, c='orchid')	plt.plot(xdata, ydata, c='orchid')
code: 散布図にオーキッド色のマーカーを用いる	plt.plot(xdata, ydata, c='orchid')	plt.plot(xdata, ydata, c='orchid')
code: 散布図をオーキッド色のマーカーで描画する	plt.plot(xdata, ydata, c='orchid')	plt.plot(xdata, ydata, c='orchid')
code: オーキッド色のマーカーで散布図を描く	plt.plot(xdata, ydata, c='orchid')	plt.plot(xdata, ydata, c='orchid')
code: オーキッド色のマーカーとして散布図を描く	plt.plot(xdata, ydata, c='orchid')	plt.plot(xdata, ydata, c='orchid')
code: オーキッド色として配列xdataとイテラブルydataの散布図を描く	plt.plot(xdata, ydata, c='orchid')	plt.plot(xdata, ydata, c='orchid')
code: オーキッド色として数列xdataとイテラブルydataの散布図をプロットする	plt.plot(xdata, ydata, c='orchid')	plt.plot(xdata, ydata, c='orchid')
code: データ列xdataとデータ列ydataの散布図をオーキッド色として描画する	plt.plot(xdata, ydata, c='orchid')	plt.plot(xdata, ydata, c='orchid')
code: イテラブルxdataとデータ列ydataについて散布図を描画して、マーカーの色をオーキッドに設定する	plt.plot(xdata, ydata, c='orchid')	plt.plot(xdata, ydata, c='orchid')
code: リストxdataと配列ydataの散布図を描画してマーカーの色をオーキッドとする	plt.plot(xdata, ydata, c='orchid')	plt.plot(xdata, ydata, c='orchid')
code: 散布図にパールゴールデンロッド色のマーカーを用いる	plt.plot(xdata, ydata, c='palegoldenrod')	plt.plot(xdata, ydata, c='palegoldenrod')
code: 散布図にパールゴールデンロッド色のマーカーを使う	plt.plot(xdata, ydata, c='palegoldenrod')	plt.plot(xdata, ydata, c='palegoldenrod')
code: 散布図をパールゴールデンロッド色のマーカーで描く	plt.plot(xdata, ydata, c='palegoldenrod')	plt.plot(xdata, ydata, c='palegoldenrod')
code: パールゴールデンロッド色を用いて散布図をプロットする	plt.plot(xdata, ydata, c='palegoldenrod')	plt.plot(xdata, ydata, c='palegoldenrod')
code: 散布図をパールゴールデンロッド色で描画する	plt.plot(xdata, ydata, c='palegoldenrod')	plt.plot(xdata, ydata, c='palegoldenrod')
code: リストxdataとイテラブルydataについての散布図をパールゴールデンロッド色で描く	plt.plot(xdata, ydata, c='palegoldenrod')	plt.plot(xdata, ydata, c='palegoldenrod')
code: 数列xdataとリストydataについての散布図をパールゴールデンロッド色として描画する	plt.plot(xdata, ydata, c='palegoldenrod')	plt.plot(xdata, ydata, c='palegoldenrod')
code: パールゴールデンロッド色として数列xdataとデータ列ydataの散布図をプロットする	plt.plot(xdata, ydata, c='palegoldenrod')	plt.plot(xdata, ydata, c='palegoldenrod')
code: 配列xdataと数列ydataの散布図を描画して、マーカーの色をパールゴールデンロッド変える	plt.plot(xdata, ydata, c='palegoldenrod')	plt.plot(xdata, ydata, c='palegoldenrod')
code: 数列xdataとイテラブルydataについて散布図を描画して、色をパールゴールデンロッド変える	plt.plot(xdata, ydata, c='palegoldenrod')	plt.plot(xdata, ydata, c='palegoldenrod')
code: 散布図にペールグリーン色のマーカーを使う	plt.plot(xdata, ydata, c='palegreen')	plt.plot(xdata, ydata, c='palegreen')
code: 散布図にペールグリーン色のマーカーを使用する	plt.plot(xdata, ydata, c='palegreen')	plt.plot(xdata, ydata, c='palegreen')
code: 散布図をペールグリーン色を使って描画する	plt.plot(xdata, ydata, c='palegreen')	plt.plot(xdata, ydata, c='palegreen')
code: 散布図をペールグリーン色を使って描画する	plt.plot(xdata, ydata, c='palegreen')	plt.plot(xdata, ydata, c='palegreen')
code: ペールグリーン色で散布図を描く	plt.plot(xdata, ydata, c='palegreen')	plt.plot(xdata, ydata, c='palegreen')
code: 配列xdataと数列ydataの散布図をペールグリーン色を使って描く	plt.plot(xdata, ydata, c='palegreen')	plt.plot(xdata, ydata, c='palegreen')
code: ペールグリーン色を使ってリストxdataとリストydataについての散布図を描く	plt.plot(xdata, ydata, c='palegreen')	plt.plot(xdata, ydata, c='palegreen')
code: 配列xdataとイテラブルydataについての散布図をペールグリーン色としてプロットする	plt.plot(xdata, ydata, c='palegreen')	plt.plot(xdata, ydata, c='palegreen')
code: 数列xdataと配列ydataについて散布図を描画して、マーカーの色をペールグリーンに変更する	plt.plot(xdata, ydata, c='palegreen')	plt.plot(xdata, ydata, c='palegreen')
code: イテラブルxdataとリストydataの散布図を描画して色をペールグリーンに指定する	plt.plot(xdata, ydata, c='palegreen')	plt.plot(xdata, ydata, c='palegreen')
code: 散布図にパレットトルコイズ色のマーカーを使う	plt.plot(xdata, ydata, c='paleturquoise')	plt.plot(xdata, ydata, c='paleturquoise')
code: パレットトルコイズ色のマーカーを散布図に用いる	plt.plot(xdata, ydata, c='paleturquoise')	plt.plot(xdata, ydata, c='paleturquoise')
code: 散布図をパレットトルコイズ色のマーカーを用いてプロットする	plt.plot(xdata, ydata, c='paleturquoise')	plt.plot(xdata, ydata, c='paleturquoise')
code: 散布図をパレットトルコイズ色のマーカーで描く	plt.plot(xdata, ydata, c='paleturquoise')	plt.plot(xdata, ydata, c='paleturquoise')
code: パレットトルコイズ色を用いて散布図をプロットする	plt.plot(xdata, ydata, c='paleturquoise')	plt.plot(xdata, ydata, c='paleturquoise')
code: パレットトルコイズ色でイテラブルxdataとイテラブルydataの散布図を描く	plt.plot(xdata, ydata, c='paleturquoise')	plt.plot(xdata, ydata, c='paleturquoise')
code: パレットトルコイズ色で配列xdataとデータ列ydataの散布図を描画する	plt.plot(xdata, ydata, c='paleturquoise')	plt.plot(xdata, ydata, c='paleturquoise')
code: パレットトルコイズ色としてデータ列xdataとイテラブルydataについての散布図を描画する	plt.plot(xdata, ydata, c='paleturquoise')	plt.plot(xdata, ydata, c='paleturquoise')
code: 配列xdataと数列ydataの散布図を描画して色をパレットトルコイズに設定する	plt.plot(xdata, ydata, c='paleturquoise')	plt.plot(xdata, ydata, c='paleturquoise')
code: データ列xdataと配列ydataの散布図を描画して、マーカーの色をパレットトルコイズに変更する	plt.plot(xdata, ydata, c='paleturquoise')	plt.plot(xdata, ydata, c='paleturquoise')
code: 散布図にパールバイオレットレッド色のマーカーを用いる	plt.plot(xdata, ydata, c='palevioletred')	plt.plot(xdata, ydata, c='palevioletred')
code: パールバイオレットレッド色のマーカーを散布図に使用する	plt.plot(xdata, ydata, c='palevioletred')	plt.plot(xdata, ydata, c='palevioletred')
code: パールバイオレットレッド色で散布図を描く	plt.plot(xdata, ydata, c='palevioletred')	plt.plot(xdata, ydata, c='palevioletred')
code: 散布図をパールバイオレットレッド色のマーカーとしてプロットする	plt.plot(xdata, ydata, c='palevioletred')	plt.plot(xdata, ydata, c='palevioletred')
code: 散布図をパールバイオレットレッド色のマーカーとして描画する	plt.plot(xdata, ydata, c='palevioletred')	plt.plot(xdata, ydata, c='palevioletred')
code: リストxdataとイテラブルydataについての散布図をパールバイオレットレッド色を使って描画する	plt.plot(xdata, ydata, c='palevioletred')	plt.plot(xdata, ydata, c='palevioletred')
code: パールバイオレットレッド色を用いてデータ列xdataとリストydataについての散布図をプロットする	plt.plot(xdata, ydata, c='palevioletred')	plt.plot(xdata, ydata, c='palevioletred')
code: パールバイオレットレッド色を使って配列xdataと数列ydataについての散布図を描画する	plt.plot(xdata, ydata, c='palevioletred')	plt.plot(xdata, ydata, c='palevioletred')
code: イテラブルxdataと配列ydataの散布図を描画して、マーカーの色をパールバイオレットレッドにする	plt.plot(xdata, ydata, c='palevioletred')	plt.plot(xdata, ydata, c='palevioletred')
code: 配列xdataと配列ydataについて散布図を描画してマーカーの色をパールバイオレットレッドに設定する	plt.plot(xdata, ydata, c='palevioletred')	plt.plot(xdata, ydata, c='palevioletred')
code: パパイヤウィップ色のマーカーを散布図に用いる	plt.plot(xdata, ydata, c='papayawhip')	plt.plot(xdata, ydata, c='papayawhip')
code: 散布図にパパイヤウィップ色のマーカーを使用する	plt.plot(xdata, ydata, c='papayawhip')	plt.plot(xdata, ydata, c='papayawhip')
code: 散布図をパパイヤウィップ色を使ってプロットする	plt.plot(xdata, ydata, c='papayawhip')	plt.plot(xdata, ydata, c='papayawhip')
code: 散布図をパパイヤウィップ色として描画する	plt.plot(xdata, ydata, c='papayawhip')	plt.plot(xdata, ydata, c='papayawhip')
code: 散布図をパパイヤウィップ色でプロットする	plt.plot(xdata, ydata, c='papayawhip')	plt.plot(xdata, ydata, c='papayawhip')
code: パパイヤウィップ色でリストxdataと配列ydataの散布図を描画する	plt.plot(xdata, ydata, c='papayawhip')	plt.plot(xdata, ydata, c='papayawhip')
code: パパイヤウィップ色でリストxdataとイテラブルydataについての散布図をプロットする	plt.plot(xdata, ydata, c='papayawhip')	plt.plot(xdata, ydata, c='papayawhip')
code: パパイヤウィップ色で配列xdataとイテラブルydataの散布図を描画する	plt.plot(xdata, ydata, c='papayawhip')	plt.plot(xdata, ydata, c='papayawhip')
code: 数列xdataとイテラブルydataの散布図を描画して色をパパイヤウィップに変更する	plt.plot(xdata, ydata, c='papayawhip')	plt.plot(xdata, ydata, c='papayawhip')
code: イテラブルxdataと数列ydataについて散布図を描画してマーカーの色をパパイヤウィップに変更する	plt.plot(xdata, ydata, c='papayawhip')	plt.plot(xdata, ydata, c='papayawhip')
code: ピーチパフ色のマーカーを散布図に使用する	plt.plot(xdata, ydata, c='peachpuff')	plt.plot(xdata, ydata, c='peachpuff')
code: 散布図にピーチパフ色のマーカーを用いる	plt.plot(xdata, ydata, c='peachpuff')	plt.plot(xdata, ydata, c='peachpuff')
code: 散布図をピーチパフ色として描く	plt.plot(xdata, ydata, c='peachpuff')	plt.plot(xdata, ydata, c='peachpuff')
code: ピーチパフ色として散布図をプロットする	plt.plot(xdata, ydata, c='peachpuff')	plt.plot(xdata, ydata, c='peachpuff')
code: 散布図をピーチパフ色を使って描く	plt.plot(xdata, ydata, c='peachpuff')	plt.plot(xdata, ydata, c='peachpuff')
code: ピーチパフ色として配列xdataとリストydataの散布図を描く	plt.plot(xdata, ydata, c='peachpuff')	plt.plot(xdata, ydata, c='peachpuff')
code: ピーチパフ色でイテラブルxdataと配列ydataについての散布図を描く	plt.plot(xdata, ydata, c='peachpuff')	plt.plot(xdata, ydata, c='peachpuff')
code: ピーチパフ色でイテラブルxdataとデータ列ydataについての散布図を描画する	plt.plot(xdata, ydata, c='peachpuff')	plt.plot(xdata, ydata, c='peachpuff')
code: 数列xdataと数列ydataについて散布図を描画して、色をピーチパフに設定する	plt.plot(xdata, ydata, c='peachpuff')	plt.plot(xdata, ydata, c='peachpuff')
code: リストxdataとイテラブルydataの散布図を描画して、マーカーの色をピーチパフに設定する	plt.plot(xdata, ydata, c='peachpuff')	plt.plot(xdata, ydata, c='peachpuff')
code: 散布図にペルー色のマーカーを使用する	plt.plot(xdata, ydata, c='peru')	plt.plot(xdata, ydata, c='peru')
code: 散布図にペルー色のマーカーを用いる	plt.plot(xdata, ydata, c='peru')	plt.plot(xdata, ydata, c='peru')
code: 散布図をペルー色として描画する	plt.plot(xdata, ydata, c='peru')	plt.plot(xdata, ydata, c='peru')
code: ペルー色を用いて散布図を描く	plt.plot(xdata, ydata, c='peru')	plt.plot(xdata, ydata, c='peru')
code: ペルー色のマーカーとして散布図を描く	plt.plot(xdata, ydata, c='peru')	plt.plot(xdata, ydata, c='peru')
code: リストxdataと配列ydataの散布図をペルー色として描く	plt.plot(xdata, ydata, c='peru')	plt.plot(xdata, ydata, c='peru')
code: イテラブルxdataと配列ydataの散布図をペルー色を使って描く	plt.plot(xdata, ydata, c='peru')	plt.plot(xdata, ydata, c='peru')
code: ペルー色として数列xdataとデータ列ydataについての散布図を描く	plt.plot(xdata, ydata, c='peru')	plt.plot(xdata, ydata, c='peru')
code: イテラブルxdataとリストydataについて散布図を描画してマーカーの色をペルーに変更する	plt.plot(xdata, ydata, c='peru')	plt.plot(xdata, ydata, c='peru')
code: イテラブルxdataと配列ydataについて散布図を描画して色をペルーに変更する	plt.plot(xdata, ydata, c='peru')	plt.plot(xdata, ydata, c='peru')
code: ピンク色のマーカーを散布図に使用する	plt.plot(xdata, ydata, c='pink')	plt.plot(xdata, ydata, c='pink')
code: ピンク色のマーカーを散布図に用いる	plt.plot(xdata, ydata, c='pink')	plt.plot(xdata, ydata, c='pink')
code: ピンク色のマーカーとして散布図をプロットする	plt.plot(xdata, ydata, c='pink')	plt.plot(xdata, ydata, c='pink')
code: ピンク色のマーカーで散布図をプロットする	plt.plot(xdata, ydata, c='pink')	plt.plot(xdata, ydata, c='pink')
code: 散布図をピンク色として描く	plt.plot(xdata, ydata, c='pink')	plt.plot(xdata, ydata, c='pink')
code: ピンク色を用いて数列xdataと配列ydataの散布図を描画する	plt.plot(xdata, ydata, c='pink')	plt.plot(xdata, ydata, c='pink')
code: 数列xdataとリストydataの散布図をピンク色を用いてプロットする	plt.plot(xdata, ydata, c='pink')	plt.plot(xdata, ydata, c='pink')
code: ピンク色として配列xdataとデータ列ydataについての散布図をプロットする	plt.plot(xdata, ydata, c='pink')	plt.plot(xdata, ydata, c='pink')
code: イテラブルxdataとイテラブルydataの散布図を描画して、マーカーの色をピンクに変更する	plt.plot(xdata, ydata, c='pink')	plt.plot(xdata, ydata, c='pink')
code: イテラブルxdataとデータ列ydataについて散布図を描画して、マーカーの色をピンクとする	plt.plot(xdata, ydata, c='pink')	plt.plot(xdata, ydata, c='pink')
code: 散布図にプラム色のマーカーを用いる	plt.plot(xdata, ydata, c='plum')	plt.plot(xdata, ydata, c='plum')
code: 散布図にプラム色のマーカーを使う	plt.plot(xdata, ydata, c='plum')	plt.plot(xdata, ydata, c='plum')
code: 散布図をプラム色を使って描く	plt.plot(xdata, ydata, c='plum')	plt.plot(xdata, ydata, c='plum')
code: プラム色として散布図を描く	plt.plot(xdata, ydata, c='plum')	plt.plot(xdata, ydata, c='plum')
code: プラム色のマーカーとして散布図を描く	plt.plot(xdata, ydata, c='plum')	plt.plot(xdata, ydata, c='plum')
code: リストxdataと配列ydataの散布図をプラム色で描画する	plt.plot(xdata, ydata, c='plum')	plt.plot(xdata, ydata, c='plum')
code: データ列xdataと数列ydataについての散布図をプラム色を使ってプロットする	plt.plot(xdata, ydata, c='plum')	plt.plot(xdata, ydata, c='plum')
code: プラム色を用いてイテラブルxdataと数列ydataの散布図を描く	plt.plot(xdata, ydata, c='plum')	plt.plot(xdata, ydata, c='plum')
code: イテラブルxdataとイテラブルydataについて散布図を描画して、マーカーの色をプラムに変更する	plt.plot(xdata, ydata, c='plum')	plt.plot(xdata, ydata, c='plum')
code: イテラブルxdataと数列ydataの散布図を描画して、色をプラムに設定する	plt.plot(xdata, ydata, c='plum')	plt.plot(xdata, ydata, c='plum')
code: 散布図にパウダーブルー色のマーカーを用いる	plt.plot(xdata, ydata, c='powderblue')	plt.plot(xdata, ydata, c='powderblue')
code: 散布図にパウダーブルー色のマーカーを用いる	plt.plot(xdata, ydata, c='powderblue')	plt.plot(xdata, ydata, c='powderblue')
code: 散布図をパウダーブルー色でプロットする	plt.plot(xdata, ydata, c='powderblue')	plt.plot(xdata, ydata, c='powderblue')
code: パウダーブルー色を用いて散布図を描く	plt.plot(xdata, ydata, c='powderblue')	plt.plot(xdata, ydata, c='powderblue')
code: パウダーブルー色のマーカーで散布図をプロットする	plt.plot(xdata, ydata, c='powderblue')	plt.plot(xdata, ydata, c='powderblue')
code: 配列xdataと配列ydataについての散布図をパウダーブルー色で描画する	plt.plot(xdata, ydata, c='powderblue')	plt.plot(xdata, ydata, c='powderblue')
code: データ列xdataとリストydataの散布図をパウダーブルー色として描画する	plt.plot(xdata, ydata, c='powderblue')	plt.plot(xdata, ydata, c='powderblue')
code: パウダーブルー色を使って数列xdataとデータ列ydataの散布図をプロットする	plt.plot(xdata, ydata, c='powderblue')	plt.plot(xdata, ydata, c='powderblue')
code: イテラブルxdataとリストydataについて散布図を描画して、色をパウダーブルーにセットする	plt.plot(xdata, ydata, c='powderblue')	plt.plot(xdata, ydata, c='powderblue')
code: イテラブルxdataとイテラブルydataの散布図を描画して色をパウダーブルーにする	plt.plot(xdata, ydata, c='powderblue')	plt.plot(xdata, ydata, c='powderblue')
code: 散布図にパープル色のマーカーを使用する	plt.plot(xdata, ydata, c='purple')	plt.plot(xdata, ydata, c='purple')
code: 散布図にパープル色のマーカーを使う	plt.plot(xdata, ydata, c='purple')	plt.plot(xdata, ydata, c='purple')
code: パープル色のマーカーで散布図をプロットする	plt.plot(xdata, ydata, c='purple')	plt.plot(xdata, ydata, c='purple')
code: パープル色のマーカーとして散布図を描画する	plt.plot(xdata, ydata, c='purple')	plt.plot(xdata, ydata, c='purple')
code: パープル色のマーカーとして散布図をプロットする	plt.plot(xdata, ydata, c='purple')	plt.plot(xdata, ydata, c='purple')
code: データ列xdataとイテラブルydataについての散布図をパープル色でプロットする	plt.plot(xdata, ydata, c='purple')	plt.plot(xdata, ydata, c='purple')
code: 数列xdataとリストydataの散布図をパープル色で描画する	plt.plot(xdata, ydata, c='purple')	plt.plot(xdata, ydata, c='purple')
code: パープル色として数列xdataと配列ydataの散布図を描く	plt.plot(xdata, ydata, c='purple')	plt.plot(xdata, ydata, c='purple')
code: リストxdataと配列ydataの散布図を描画して色をパープルにする	plt.plot(xdata, ydata, c='purple')	plt.plot(xdata, ydata, c='purple')
code: リストxdataとイテラブルydataについて散布図を描画して、マーカーの色をパープルとする	plt.plot(xdata, ydata, c='purple')	plt.plot(xdata, ydata, c='purple')
code: 散布図にレベッカパープル色のマーカーを使用する	plt.plot(xdata, ydata, c='rebeccapurple')	plt.plot(xdata, ydata, c='rebeccapurple')
code: レベッカパープル色のマーカーを散布図に使う	plt.plot(xdata, ydata, c='rebeccapurple')	plt.plot(xdata, ydata, c='rebeccapurple')
code: 散布図をレベッカパープル色で描画する	plt.plot(xdata, ydata, c='rebeccapurple')	plt.plot(xdata, ydata, c='rebeccapurple')
code: 散布図をレベッカパープル色のマーカーを用いて描く	plt.plot(xdata, ydata, c='rebeccapurple')	plt.plot(xdata, ydata, c='rebeccapurple')
code: 散布図をレベッカパープル色を使って描く	plt.plot(xdata, ydata, c='rebeccapurple')	plt.plot(xdata, ydata, c='rebeccapurple')
code: レベッカパープル色としてイテラブルxdataとリストydataの散布図を描く	plt.plot(xdata, ydata, c='rebeccapurple')	plt.plot(xdata, ydata, c='rebeccapurple')
code: 配列xdataとイテラブルydataの散布図をレベッカパープル色で描く	plt.plot(xdata, ydata, c='rebeccapurple')	plt.plot(xdata, ydata, c='rebeccapurple')
code: 数列xdataと配列ydataの散布図をレベッカパープル色として描画する	plt.plot(xdata, ydata, c='rebeccapurple')	plt.plot(xdata, ydata, c='rebeccapurple')
code: 数列xdataと数列ydataの散布図を描画して色をレベッカパープルとする	plt.plot(xdata, ydata, c='rebeccapurple')	plt.plot(xdata, ydata, c='rebeccapurple')
code: データ列xdataとデータ列ydataについて散布図を描画して、色をレベッカパープル変える	plt.plot(xdata, ydata, c='rebeccapurple')	plt.plot(xdata, ydata, c='rebeccapurple')
code: 散布図に赤色のマーカーを用いる	plt.plot(xdata, ydata, c='red')	plt.plot(xdata, ydata, c='red')
code: 散布図に赤色のマーカーを使用する	plt.plot(xdata, ydata, c='red')	plt.plot(xdata, ydata, c='red')
code: 赤色のマーカーを用いて散布図を描く	plt.plot(xdata, ydata, c='red')	plt.plot(xdata, ydata, c='red')
code: 赤色を用いて散布図をプロットする	plt.plot(xdata, ydata, c='red')	plt.plot(xdata, ydata, c='red')
code: 赤色で散布図をプロットする	plt.plot(xdata, ydata, c='red')	plt.plot(xdata, ydata, c='red')
code: 数列xdataとイテラブルydataの散布図を赤色としてプロットする	plt.plot(xdata, ydata, c='red')	plt.plot(xdata, ydata, c='red')
code: 赤色として配列xdataと配列ydataについての散布図をプロットする	plt.plot(xdata, ydata, c='red')	plt.plot(xdata, ydata, c='red')
code: 赤色を用いて数列xdataとリストydataについての散布図をプロットする	plt.plot(xdata, ydata, c='red')	plt.plot(xdata, ydata, c='red')
code: イテラブルxdataと配列ydataの散布図を描画して色を赤に変更する	plt.plot(xdata, ydata, c='red')	plt.plot(xdata, ydata, c='red')
code: リストxdataとデータ列ydataについて散布図を描画して、マーカーの色を赤に指定する	plt.plot(xdata, ydata, c='red')	plt.plot(xdata, ydata, c='red')
code: 散布図にロージーブラウン色のマーカーを使う	plt.plot(xdata, ydata, c='rosybrown')	plt.plot(xdata, ydata, c='rosybrown')
code: ロージーブラウン色のマーカーを散布図に用いる	plt.plot(xdata, ydata, c='rosybrown')	plt.plot(xdata, ydata, c='rosybrown')
code: 散布図をロージーブラウン色のマーカーで描く	plt.plot(xdata, ydata, c='rosybrown')	plt.plot(xdata, ydata, c='rosybrown')
code: ロージーブラウン色で散布図を描く	plt.plot(xdata, ydata, c='rosybrown')	plt.plot(xdata, ydata, c='rosybrown')
code: 散布図をロージーブラウン色として描く	plt.plot(xdata, ydata, c='rosybrown')	plt.plot(xdata, ydata, c='rosybrown')
code: 数列xdataと数列ydataについての散布図をロージーブラウン色を使って描く	plt.plot(xdata, ydata, c='rosybrown')	plt.plot(xdata, ydata, c='rosybrown')
code: ロージーブラウン色としてイテラブルxdataとイテラブルydataの散布図を描く	plt.plot(xdata, ydata, c='rosybrown')	plt.plot(xdata, ydata, c='rosybrown')
code: 数列xdataと数列ydataについての散布図をロージーブラウン色としてプロットする	plt.plot(xdata, ydata, c='rosybrown')	plt.plot(xdata, ydata, c='rosybrown')
code: データ列xdataと配列ydataについて散布図を描画してマーカーの色をロージーブラウンにする	plt.plot(xdata, ydata, c='rosybrown')	plt.plot(xdata, ydata, c='rosybrown')
code: リストxdataと配列ydataの散布図を描画して、マーカーの色をロージーブラウン変える	plt.plot(xdata, ydata, c='rosybrown')	plt.plot(xdata, ydata, c='rosybrown')
code: ロイヤルブルー色のマーカーを散布図に用いる	plt.plot(xdata, ydata, c='royalblue')	plt.plot(xdata, ydata, c='royalblue')
code: 散布図にロイヤルブルー色のマーカーを使う	plt.plot(xdata, ydata, c='royalblue')	plt.plot(xdata, ydata, c='royalblue')
code: 散布図をロイヤルブルー色として描く	plt.plot(xdata, ydata, c='royalblue')	plt.plot(xdata, ydata, c='royalblue')
code: 散布図をロイヤルブルー色のマーカーを使って描画する	plt.plot(xdata, ydata, c='royalblue')	plt.plot(xdata, ydata, c='royalblue')
code: ロイヤルブルー色のマーカーを使って散布図を描画する	plt.plot(xdata, ydata, c='royalblue')	plt.plot(xdata, ydata, c='royalblue')
code: リストxdataとデータ列ydataの散布図をロイヤルブルー色でプロットする	plt.plot(xdata, ydata, c='royalblue')	plt.plot(xdata, ydata, c='royalblue')
code: データ列xdataと配列ydataについての散布図をロイヤルブルー色を用いて描画する	plt.plot(xdata, ydata, c='royalblue')	plt.plot(xdata, ydata, c='royalblue')
code: 数列xdataと配列ydataの散布図をロイヤルブルー色としてプロットする	plt.plot(xdata, ydata, c='royalblue')	plt.plot(xdata, ydata, c='royalblue')
code: イテラブルxdataと数列ydataの散布図を描画してマーカーの色をロイヤルブルーとする	plt.plot(xdata, ydata, c='royalblue')	plt.plot(xdata, ydata, c='royalblue')
code: リストxdataと数列ydataの散布図を描画してマーカーの色をロイヤルブルーにする	plt.plot(xdata, ydata, c='royalblue')	plt.plot(xdata, ydata, c='royalblue')
code: 散布図にサドルブラウン色のマーカーを使用する	plt.plot(xdata, ydata, c='saddlebrown')	plt.plot(xdata, ydata, c='saddlebrown')
code: 散布図にサドルブラウン色のマーカーを使う	plt.plot(xdata, ydata, c='saddlebrown')	plt.plot(xdata, ydata, c='saddlebrown')
code: サドルブラウン色で散布図をプロットする	plt.plot(xdata, ydata, c='saddlebrown')	plt.plot(xdata, ydata, c='saddlebrown')
code: サドルブラウン色のマーカーで散布図をプロットする	plt.plot(xdata, ydata, c='saddlebrown')	plt.plot(xdata, ydata, c='saddlebrown')
code: 散布図をサドルブラウン色のマーカーを使って描く	plt.plot(xdata, ydata, c='saddlebrown')	plt.plot(xdata, ydata, c='saddlebrown')
code: サドルブラウン色としてイテラブルxdataと配列ydataの散布図を描画する	plt.plot(xdata, ydata, c='saddlebrown')	plt.plot(xdata, ydata, c='saddlebrown')
code: イテラブルxdataとデータ列ydataの散布図をサドルブラウン色を用いて描画する	plt.plot(xdata, ydata, c='saddlebrown')	plt.plot(xdata, ydata, c='saddlebrown')
code: サドルブラウン色として数列xdataとイテラブルydataの散布図をプロットする	plt.plot(xdata, ydata, c='saddlebrown')	plt.plot(xdata, ydata, c='saddlebrown')
code: リストxdataと配列ydataの散布図を描画してマーカーの色をサドルブラウンに設定する	plt.plot(xdata, ydata, c='saddlebrown')	plt.plot(xdata, ydata, c='saddlebrown')
code: リストxdataとリストydataの散布図を描画してマーカーの色をサドルブラウンに変更する	plt.plot(xdata, ydata, c='saddlebrown')	plt.plot(xdata, ydata, c='saddlebrown')
code: サーモン色のマーカーを散布図に使う	plt.plot(xdata, ydata, c='salmon')	plt.plot(xdata, ydata, c='salmon')
code: サーモン色のマーカーを散布図に使用する	plt.plot(xdata, ydata, c='salmon')	plt.plot(xdata, ydata, c='salmon')
code: サーモン色を使って散布図をプロットする	plt.plot(xdata, ydata, c='salmon')	plt.plot(xdata, ydata, c='salmon')
code: 散布図をサーモン色のマーカーとしてプロットする	plt.plot(xdata, ydata, c='salmon')	plt.plot(xdata, ydata, c='salmon')
code: サーモン色のマーカーで散布図をプロットする	plt.plot(xdata, ydata, c='salmon')	plt.plot(xdata, ydata, c='salmon')
code: リストxdataとイテラブルydataについての散布図をサーモン色で描く	plt.plot(xdata, ydata, c='salmon')	plt.plot(xdata, ydata, c='salmon')
code: サーモン色を使ってイテラブルxdataとリストydataの散布図をプロットする	plt.plot(xdata, ydata, c='salmon')	plt.plot(xdata, ydata, c='salmon')
code: 数列xdataとデータ列ydataの散布図をサーモン色として描画する	plt.plot(xdata, ydata, c='salmon')	plt.plot(xdata, ydata, c='salmon')
code: リストxdataとデータ列ydataについて散布図を描画して色をサーモンに設定する	plt.plot(xdata, ydata, c='salmon')	plt.plot(xdata, ydata, c='salmon')
code: データ列xdataとデータ列ydataについて散布図を描画して、マーカーの色をサーモンとする	plt.plot(xdata, ydata, c='salmon')	plt.plot(xdata, ydata, c='salmon')
code: サンディーブラウン色のマーカーを散布図に使う	plt.plot(xdata, ydata, c='sandybrown')	plt.plot(xdata, ydata, c='sandybrown')
code: サンディーブラウン色のマーカーを散布図に使用する	plt.plot(xdata, ydata, c='sandybrown')	plt.plot(xdata, ydata, c='sandybrown')
code: 散布図をサンディーブラウン色を使って描く	plt.plot(xdata, ydata, c='sandybrown')	plt.plot(xdata, ydata, c='sandybrown')
code: サンディーブラウン色のマーカーで散布図をプロットする	plt.plot(xdata, ydata, c='sandybrown')	plt.plot(xdata, ydata, c='sandybrown')
code: 散布図をサンディーブラウン色で描画する	plt.plot(xdata, ydata, c='sandybrown')	plt.plot(xdata, ydata, c='sandybrown')
code: イテラブルxdataとリストydataについての散布図をサンディーブラウン色として描く	plt.plot(xdata, ydata, c='sandybrown')	plt.plot(xdata, ydata, c='sandybrown')
code: サンディーブラウン色として配列xdataとリストydataについての散布図を描画する	plt.plot(xdata, ydata, c='sandybrown')	plt.plot(xdata, ydata, c='sandybrown')
code: サンディーブラウン色で数列xdataと配列ydataについての散布図を描く	plt.plot(xdata, ydata, c='sandybrown')	plt.plot(xdata, ydata, c='sandybrown')
code: 数列xdataとデータ列ydataについて散布図を描画して、マーカーの色をサンディーブラウンに変更する	plt.plot(xdata, ydata, c='sandybrown')	plt.plot(xdata, ydata, c='sandybrown')
code: 配列xdataと数列ydataの散布図を描画して色をサンディーブラウンに設定する	plt.plot(xdata, ydata, c='sandybrown')	plt.plot(xdata, ydata, c='sandybrown')
code: シーグリーン色のマーカーを散布図に使用する	plt.plot(xdata, ydata, c='seagreen')	plt.plot(xdata, ydata, c='seagreen')
code: シーグリーン色のマーカーを散布図に用いる	plt.plot(xdata, ydata, c='seagreen')	plt.plot(xdata, ydata, c='seagreen')
code: 散布図をシーグリーン色のマーカーで描く	plt.plot(xdata, ydata, c='seagreen')	plt.plot(xdata, ydata, c='seagreen')
code: シーグリーン色のマーカーで散布図を描く	plt.plot(xdata, ydata, c='seagreen')	plt.plot(xdata, ydata, c='seagreen')
code: 散布図をシーグリーン色を用いて描画する	plt.plot(xdata, ydata, c='seagreen')	plt.plot(xdata, ydata, c='seagreen')
code: シーグリーン色を使ってデータ列xdataとデータ列ydataについての散布図を描画する	plt.plot(xdata, ydata, c='seagreen')	plt.plot(xdata, ydata, c='seagreen')
code: 数列xdataとデータ列ydataについての散布図をシーグリーン色を使って描画する	plt.plot(xdata, ydata, c='seagreen')	plt.plot(xdata, ydata, c='seagreen')
code: シーグリーン色で数列xdataとイテラブルydataについての散布図をプロットする	plt.plot(xdata, ydata, c='seagreen')	plt.plot(xdata, ydata, c='seagreen')
code: 数列xdataとデータ列ydataの散布図を描画してマーカーの色をシーグリーン変える	plt.plot(xdata, ydata, c='seagreen')	plt.plot(xdata, ydata, c='seagreen')
code: 数列xdataとイテラブルydataの散布図を描画して、色をシーグリーンに変更する	plt.plot(xdata, ydata, c='seagreen')	plt.plot(xdata, ydata, c='seagreen')
code: 散布図に貝殻色のマーカーを用いる	plt.plot(xdata, ydata, c='seashell')	plt.plot(xdata, ydata, c='seashell')
code: 貝殻色のマーカーを散布図に使用する	plt.plot(xdata, ydata, c='seashell')	plt.plot(xdata, ydata, c='seashell')
code: 貝殻色を使って散布図を描画する	plt.plot(xdata, ydata, c='seashell')	plt.plot(xdata, ydata, c='seashell')
code: 貝殻色として散布図を描画する	plt.plot(xdata, ydata, c='seashell')	plt.plot(xdata, ydata, c='seashell')
code: 貝殻色で散布図をプロットする	plt.plot(xdata, ydata, c='seashell')	plt.plot(xdata, ydata, c='seashell')
code: 貝殻色でイテラブルxdataと数列ydataについての散布図をプロットする	plt.plot(xdata, ydata, c='seashell')	plt.plot(xdata, ydata, c='seashell')
code: 数列xdataと配列ydataの散布図を貝殻色を用いて描画する	plt.plot(xdata, ydata, c='seashell')	plt.plot(xdata, ydata, c='seashell')
code: リストxdataとイテラブルydataの散布図を貝殻色として描く	plt.plot(xdata, ydata, c='seashell')	plt.plot(xdata, ydata, c='seashell')
code: リストxdataと配列ydataについて散布図を描画してマーカーの色を貝殻にセットする	plt.plot(xdata, ydata, c='seashell')	plt.plot(xdata, ydata, c='seashell')
code: 配列xdataと配列ydataの散布図を描画してマーカーの色を貝殻に変更する	plt.plot(xdata, ydata, c='seashell')	plt.plot(xdata, ydata, c='seashell')
code: シエナ色のマーカーを散布図に用いる	plt.plot(xdata, ydata, c='sienna')	plt.plot(xdata, ydata, c='sienna')
code: シエナ色のマーカーを散布図に使う	plt.plot(xdata, ydata, c='sienna')	plt.plot(xdata, ydata, c='sienna')
code: 散布図をシエナ色を使ってプロットする	plt.plot(xdata, ydata, c='sienna')	plt.plot(xdata, ydata, c='sienna')
code: 散布図をシエナ色のマーカーを使ってプロットする	plt.plot(xdata, ydata, c='sienna')	plt.plot(xdata, ydata, c='sienna')
code: 散布図をシエナ色でプロットする	plt.plot(xdata, ydata, c='sienna')	plt.plot(xdata, ydata, c='sienna')
code: シエナ色としてリストxdataとデータ列ydataの散布図をプロットする	plt.plot(xdata, ydata, c='sienna')	plt.plot(xdata, ydata, c='sienna')
code: 配列xdataと数列ydataの散布図をシエナ色で描く	plt.plot(xdata, ydata, c='sienna')	plt.plot(xdata, ydata, c='sienna')
code: シエナ色としてリストxdataとイテラブルydataについての散布図を描画する	plt.plot(xdata, ydata, c='sienna')	plt.plot(xdata, ydata, c='sienna')
code: リストxdataと数列ydataの散布図を描画して色をシエナに指定する	plt.plot(xdata, ydata, c='sienna')	plt.plot(xdata, ydata, c='sienna')
code: 数列xdataとリストydataについて散布図を描画して、マーカーの色をシエナに変更する	plt.plot(xdata, ydata, c='sienna')	plt.plot(xdata, ydata, c='sienna')
code: 散布図にシルバー色のマーカーを用いる	plt.plot(xdata, ydata, c='silver')	plt.plot(xdata, ydata, c='silver')
code: 散布図にシルバー色のマーカーを使用する	plt.plot(xdata, ydata, c='silver')	plt.plot(xdata, ydata, c='silver')
code: シルバー色のマーカーを用いて散布図を描画する	plt.plot(xdata, ydata, c='silver')	plt.plot(xdata, ydata, c='silver')
code: 散布図をシルバー色としてプロットする	plt.plot(xdata, ydata, c='silver')	plt.plot(xdata, ydata, c='silver')
code: シルバー色のマーカーを用いて散布図を描画する	plt.plot(xdata, ydata, c='silver')	plt.plot(xdata, ydata, c='silver')
code: シルバー色で配列xdataとリストydataについての散布図をプロットする	plt.plot(xdata, ydata, c='silver')	plt.plot(xdata, ydata, c='silver')
code: リストxdataとリストydataについての散布図をシルバー色として描く	plt.plot(xdata, ydata, c='silver')	plt.plot(xdata, ydata, c='silver')
code: イテラブルxdataと配列ydataについての散布図をシルバー色でプロットする	plt.plot(xdata, ydata, c='silver')	plt.plot(xdata, ydata, c='silver')
code: イテラブルxdataと数列ydataの散布図を描画してマーカーの色をシルバーにする	plt.plot(xdata, ydata, c='silver')	plt.plot(xdata, ydata, c='silver')
code: イテラブルxdataと配列ydataの散布図を描画して、色をシルバーとする	plt.plot(xdata, ydata, c='silver')	plt.plot(xdata, ydata, c='silver')
code: スカイブルー色のマーカーを散布図に使う	plt.plot(xdata, ydata, c='skyblue')	plt.plot(xdata, ydata, c='skyblue')
code: 散布図にスカイブルー色のマーカーを使う	plt.plot(xdata, ydata, c='skyblue')	plt.plot(xdata, ydata, c='skyblue')
code: スカイブルー色のマーカーを使って散布図を描画する	plt.plot(xdata, ydata, c='skyblue')	plt.plot(xdata, ydata, c='skyblue')
code: 散布図をスカイブルー色でプロットする	plt.plot(xdata, ydata, c='skyblue')	plt.plot(xdata, ydata, c='skyblue')
code: 散布図をスカイブルー色のマーカーで描く	plt.plot(xdata, ydata, c='skyblue')	plt.plot(xdata, ydata, c='skyblue')
code: 配列xdataとデータ列ydataについての散布図をスカイブルー色を用いてプロットする	plt.plot(xdata, ydata, c='skyblue')	plt.plot(xdata, ydata, c='skyblue')
code: スカイブルー色を使ってリストxdataとデータ列ydataの散布図をプロットする	plt.plot(xdata, ydata, c='skyblue')	plt.plot(xdata, ydata, c='skyblue')
code: スカイブルー色としてデータ列xdataとデータ列ydataについての散布図を描画する	plt.plot(xdata, ydata, c='skyblue')	plt.plot(xdata, ydata, c='skyblue')
code: イテラブルxdataとリストydataの散布図を描画してマーカーの色をスカイブルーとする	plt.plot(xdata, ydata, c='skyblue')	plt.plot(xdata, ydata, c='skyblue')
code: データ列xdataと配列ydataの散布図を描画して、マーカーの色をスカイブルー変える	plt.plot(xdata, ydata, c='skyblue')	plt.plot(xdata, ydata, c='skyblue')
code: スレートブルー色のマーカーを散布図に使う	plt.plot(xdata, ydata, c='slateblue')	plt.plot(xdata, ydata, c='slateblue')
code: 散布図にスレートブルー色のマーカーを使用する	plt.plot(xdata, ydata, c='slateblue')	plt.plot(xdata, ydata, c='slateblue')
code: スレートブルー色のマーカーを用いて散布図を描画する	plt.plot(xdata, ydata, c='slateblue')	plt.plot(xdata, ydata, c='slateblue')
code: 散布図をスレートブルー色で描画する	plt.plot(xdata, ydata, c='slateblue')	plt.plot(xdata, ydata, c='slateblue')
code: スレートブルー色を用いて散布図をプロットする	plt.plot(xdata, ydata, c='slateblue')	plt.plot(xdata, ydata, c='slateblue')
code: 配列xdataと配列ydataについての散布図をスレートブルー色を用いて描画する	plt.plot(xdata, ydata, c='slateblue')	plt.plot(xdata, ydata, c='slateblue')
code: スレートブルー色としてリストxdataとイテラブルydataの散布図を描く	plt.plot(xdata, ydata, c='slateblue')	plt.plot(xdata, ydata, c='slateblue')
code: スレートブルー色で数列xdataとデータ列ydataについての散布図をプロットする	plt.plot(xdata, ydata, c='slateblue')	plt.plot(xdata, ydata, c='slateblue')
code: 数列xdataと配列ydataの散布図を描画して色をスレートブルーにセットする	plt.plot(xdata, ydata, c='slateblue')	plt.plot(xdata, ydata, c='slateblue')
code: 配列xdataと配列ydataについて散布図を描画して色をスレートブルーにする	plt.plot(xdata, ydata, c='slateblue')	plt.plot(xdata, ydata, c='slateblue')
code: スラグレー色のマーカーを散布図に使う	plt.plot(xdata, ydata, c='slategray')	plt.plot(xdata, ydata, c='slategray')
code: スラグレー色のマーカーを散布図に使う	plt.plot(xdata, ydata, c='slategray')	plt.plot(xdata, ydata, c='slategray')
code: スラグレー色のマーカーを使って散布図を描く	plt.plot(xdata, ydata, c='slategray')	plt.plot(xdata, ydata, c='slategray')
code: スラグレー色を用いて散布図をプロットする	plt.plot(xdata, ydata, c='slategray')	plt.plot(xdata, ydata, c='slategray')
code: 散布図をスラグレー色を用いて描画する	plt.plot(xdata, ydata, c='slategray')	plt.plot(xdata, ydata, c='slategray')
code: 数列xdataと数列ydataについての散布図をスラグレー色として描画する	plt.plot(xdata, ydata, c='slategray')	plt.plot(xdata, ydata, c='slategray')
code: リストxdataとデータ列ydataについての散布図をスラグレー色でプロットする	plt.plot(xdata, ydata, c='slategray')	plt.plot(xdata, ydata, c='slategray')
code: スラグレー色を用いて配列xdataと配列ydataの散布図を描画する	plt.plot(xdata, ydata, c='slategrey')	plt.plot(xdata, ydata, c='slategray')
code: 数列xdataとイテラブルydataについて散布図を描画して、色をスラグレーにセットする	plt.plot(xdata, ydata, c='slategray')	plt.plot(xdata, ydata, c='slategray')
code: 数列xdataとデータ列ydataについて散布図を描画して、マーカーの色をスラグレー変える	plt.plot(xdata, ydata, c='slategray')	plt.plot(xdata, ydata, c='slategray')
code: 散布図にスラグレー色のマーカーを使用する	plt.plot(xdata, ydata, c='slategray')	plt.plot(xdata, ydata, c='slategrey')
code: スラグレー色のマーカーを散布図に使う	plt.plot(xdata, ydata, c='slategray')	plt.plot(xdata, ydata, c='slategrey')
code: 散布図をスラグレー色でプロットする	plt.plot(xdata, ydata, c='slategray')	plt.plot(xdata, ydata, c='slategrey')
code: スラグレー色で散布図を描画する	plt.plot(xdata, ydata, c='slategray')	plt.plot(xdata, ydata, c='slategrey')
code: スラグレー色として散布図を描く	plt.plot(xdata, ydata, c='slategray')	plt.plot(xdata, ydata, c='slategrey')
code: スラグレー色としてリストxdataと配列ydataについての散布図をプロットする	plt.plot(xdata, ydata, c='slategray')	plt.plot(xdata, ydata, c='slategrey')
code: 数列xdataとリストydataについての散布図をスラグレー色でプロットする	plt.plot(xdata, ydata, c='slategrey')	plt.plot(xdata, ydata, c='slategrey')
code: スラグレー色としてリストxdataとリストydataの散布図を描く	plt.plot(xdata, ydata, c='slategrey')	plt.plot(xdata, ydata, c='slategrey')
code: データ列xdataと数列ydataについて散布図を描画してマーカーの色をスラグレーに変更する	plt.plot(xdata, ydata, c='slategray')	plt.plot(xdata, ydata, c='slategrey')
code: データ列xdataと配列ydataの散布図を描画してマーカーの色をスラグレーに設定する	plt.plot(xdata, ydata, c='slategray')	plt.plot(xdata, ydata, c='slategrey')
code: スノー色のマーカーを散布図に使用する	plt.plot(xdata, ydata, c='snow')	plt.plot(xdata, ydata, c='snow')
code: スノー色のマーカーを散布図に使う	plt.plot(xdata, ydata, c='snow')	plt.plot(xdata, ydata, c='snow')
code: スノー色で散布図を描く	plt.plot(xdata, ydata, c='snow')	plt.plot(xdata, ydata, c='snow')
code: スノー色で散布図を描く	plt.plot(xdata, ydata, c='snow')	plt.plot(xdata, ydata, c='snow')
code: 散布図をスノー色として描画する	plt.plot(xdata, ydata, c='snow')	plt.plot(xdata, ydata, c='snow')
code: スノー色としてリストxdataとデータ列ydataの散布図を描画する	plt.plot(xdata, ydata, c='snow')	plt.plot(xdata, ydata, c='snow')
code: スノー色としてイテラブルxdataとイテラブルydataについての散布図をプロットする	plt.plot(xdata, ydata, c='snow')	plt.plot(xdata, ydata, c='snow')
code: 配列xdataと配列ydataの散布図をスノー色で描画する	plt.plot(xdata, ydata, c='snow')	plt.plot(xdata, ydata, c='snow')
code: データ列xdataとリストydataの散布図を描画してマーカーの色をスノーにする	plt.plot(xdata, ydata, c='snow')	plt.plot(xdata, ydata, c='snow')
code: データ列xdataと数列ydataについて散布図を描画して色をスノーに変更する	plt.plot(xdata, ydata, c='snow')	plt.plot(xdata, ydata, c='snow')
code: 散布図にスプリンググリーン色のマーカーを用いる	plt.plot(xdata, ydata, c='springgreen')	plt.plot(xdata, ydata, c='springgreen')
code: 散布図にスプリンググリーン色のマーカーを使用する	plt.plot(xdata, ydata, c='springgreen')	plt.plot(xdata, ydata, c='springgreen')
code: スプリンググリーン色を使って散布図を描画する	plt.plot(xdata, ydata, c='springgreen')	plt.plot(xdata, ydata, c='springgreen')
code: 散布図をスプリンググリーン色でプロットする	plt.plot(xdata, ydata, c='springgreen')	plt.plot(xdata, ydata, c='springgreen')
code: スプリンググリーン色のマーカーとして散布図を描画する	plt.plot(xdata, ydata, c='springgreen')	plt.plot(xdata, ydata, c='springgreen')
code: スプリンググリーン色でイテラブルxdataとリストydataの散布図をプロットする	plt.plot(xdata, ydata, c='springgreen')	plt.plot(xdata, ydata, c='springgreen')
code: データ列xdataと数列ydataについての散布図をスプリンググリーン色を使って描画する	plt.plot(xdata, ydata, c='springgreen')	plt.plot(xdata, ydata, c='springgreen')
code: イテラブルxdataとデータ列ydataの散布図をスプリンググリーン色として描画する	plt.plot(xdata, ydata, c='springgreen')	plt.plot(xdata, ydata, c='springgreen')
code: リストxdataと数列ydataの散布図を描画して、色をスプリンググリーンに設定する	plt.plot(xdata, ydata, c='springgreen')	plt.plot(xdata, ydata, c='springgreen')
code: リストxdataと配列ydataの散布図を描画して色をスプリンググリーン変える	plt.plot(xdata, ydata, c='springgreen')	plt.plot(xdata, ydata, c='springgreen')
code: スチールブルー色のマーカーを散布図に使用する	plt.plot(xdata, ydata, c='steelblue')	plt.plot(xdata, ydata, c='steelblue')
code: 散布図にスチールブルー色のマーカーを用いる	plt.plot(xdata, ydata, c='steelblue')	plt.plot(xdata, ydata, c='steelblue')
code: 散布図をスチールブルー色のマーカーとしてプロットする	plt.plot(xdata, ydata, c='steelblue')	plt.plot(xdata, ydata, c='steelblue')
code: スチールブルー色のマーカーを用いて散布図を描画する	plt.plot(xdata, ydata, c='steelblue')	plt.plot(xdata, ydata, c='steelblue')
code: 散布図をスチールブルー色のマーカーとしてプロットする	plt.plot(xdata, ydata, c='steelblue')	plt.plot(xdata, ydata, c='steelblue')
code: スチールブルー色を用いて数列xdataとリストydataについての散布図をプロットする	plt.plot(xdata, ydata, c='steelblue')	plt.plot(xdata, ydata, c='steelblue')
code: スチールブルー色を使ってイテラブルxdataとリストydataについての散布図を描く	plt.plot(xdata, ydata, c='steelblue')	plt.plot(xdata, ydata, c='steelblue')
code: スチールブルー色として配列xdataと配列ydataについての散布図を描画する	plt.plot(xdata, ydata, c='steelblue')	plt.plot(xdata, ydata, c='steelblue')
code: 数列xdataとデータ列ydataについて散布図を描画して、色をスチールブルーとする	plt.plot(xdata, ydata, c='steelblue')	plt.plot(xdata, ydata, c='steelblue')
code: リストxdataとリストydataについて散布図を描画して、マーカーの色をスチールブルーに指定する	plt.plot(xdata, ydata, c='steelblue')	plt.plot(xdata, ydata, c='steelblue')
code: 散布図にタン色のマーカーを用いる	plt.plot(xdata, ydata, c='tan')	plt.plot(xdata, ydata, c='tan')
code: タン色のマーカーを散布図に使う	plt.plot(xdata, ydata, c='tan')	plt.plot(xdata, ydata, c='tan')
code: タン色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='tan')	plt.plot(xdata, ydata, c='tan')
code: 散布図をタン色で描く	plt.plot(xdata, ydata, c='tan')	plt.plot(xdata, ydata, c='tan')
code: タン色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='tan')	plt.plot(xdata, ydata, c='tan')
code: タン色を用いてデータ列xdataと数列ydataの散布図を描画する	plt.plot(xdata, ydata, c='tan')	plt.plot(xdata, ydata, c='tan')
code: タン色を用いて数列xdataと数列ydataについての散布図を描画する	plt.plot(xdata, ydata, c='tan')	plt.plot(xdata, ydata, c='tan')
code: リストxdataとイテラブルydataについての散布図をタン色を使って描く	plt.plot(xdata, ydata, c='tan')	plt.plot(xdata, ydata, c='tan')
code: データ列xdataとイテラブルydataについて散布図を描画して、色をタン変える	plt.plot(xdata, ydata, c='tan')	plt.plot(xdata, ydata, c='tan')
code: リストxdataとリストydataの散布図を描画して色をタンとする	plt.plot(xdata, ydata, c='tan')	plt.plot(xdata, ydata, c='tan')
code: ティール色のマーカーを散布図に使う	plt.plot(xdata, ydata, c='teal')	plt.plot(xdata, ydata, c='teal')
code: 散布図にティール色のマーカーを用いる	plt.plot(xdata, ydata, c='teal')	plt.plot(xdata, ydata, c='teal')
code: 散布図をティール色のマーカーでプロットする	plt.plot(xdata, ydata, c='teal')	plt.plot(xdata, ydata, c='teal')
code: 散布図をティール色のマーカーで描く	plt.plot(xdata, ydata, c='teal')	plt.plot(xdata, ydata, c='teal')
code: 散布図をティール色を用いてプロットする	plt.plot(xdata, ydata, c='teal')	plt.plot(xdata, ydata, c='teal')
code: データ列xdataとイテラブルydataについての散布図をティール色を使って描画する	plt.plot(xdata, ydata, c='teal')	plt.plot(xdata, ydata, c='teal')
code: 数列xdataとデータ列ydataの散布図をティール色を用いて描く	plt.plot(xdata, ydata, c='teal')	plt.plot(xdata, ydata, c='teal')
code: ティール色で数列xdataと配列ydataについての散布図を描画する	plt.plot(xdata, ydata, c='teal')	plt.plot(xdata, ydata, c='teal')
code: イテラブルxdataと配列ydataの散布図を描画して、マーカーの色をティールとする	plt.plot(xdata, ydata, c='teal')	plt.plot(xdata, ydata, c='teal')
code: データ列xdataとイテラブルydataについて散布図を描画して、マーカーの色をティールに指定する	plt.plot(xdata, ydata, c='teal')	plt.plot(xdata, ydata, c='teal')
code: 散布図にアザミ色のマーカーを使う	plt.plot(xdata, ydata, c='thistle')	plt.plot(xdata, ydata, c='thistle')
code: アザミ色のマーカーを散布図に使用する	plt.plot(xdata, ydata, c='thistle')	plt.plot(xdata, ydata, c='thistle')
code: 散布図をアザミ色のマーカーを使って描画する	plt.plot(xdata, ydata, c='thistle')	plt.plot(xdata, ydata, c='thistle')
code: 散布図をアザミ色として描く	plt.plot(xdata, ydata, c='thistle')	plt.plot(xdata, ydata, c='thistle')
code: アザミ色を用いて散布図を描画する	plt.plot(xdata, ydata, c='thistle')	plt.plot(xdata, ydata, c='thistle')
code: データ列xdataと配列ydataについての散布図をアザミ色として描画する	plt.plot(xdata, ydata, c='thistle')	plt.plot(xdata, ydata, c='thistle')
code: アザミ色を用いてイテラブルxdataとリストydataについての散布図を描く	plt.plot(xdata, ydata, c='thistle')	plt.plot(xdata, ydata, c='thistle')
code: アザミ色でデータ列xdataとデータ列ydataの散布図を描く	plt.plot(xdata, ydata, c='thistle')	plt.plot(xdata, ydata, c='thistle')
code: 数列xdataと配列ydataについて散布図を描画して、マーカーの色をアザミとする	plt.plot(xdata, ydata, c='thistle')	plt.plot(xdata, ydata, c='thistle')
code: データ列xdataと配列ydataの散布図を描画して色をアザミに指定する	plt.plot(xdata, ydata, c='thistle')	plt.plot(xdata, ydata, c='thistle')
code: 散布図にトマト色のマーカーを使う	plt.plot(xdata, ydata, c='tomato')	plt.plot(xdata, ydata, c='tomato')
code: 散布図にトマト色のマーカーを用いる	plt.plot(xdata, ydata, c='tomato')	plt.plot(xdata, ydata, c='tomato')
code: トマト色のマーカーを用いて散布図を描画する	plt.plot(xdata, ydata, c='tomato')	plt.plot(xdata, ydata, c='tomato')
code: トマト色で散布図を描く	plt.plot(xdata, ydata, c='tomato')	plt.plot(xdata, ydata, c='tomato')
code: トマト色で散布図を描画する	plt.plot(xdata, ydata, c='tomato')	plt.plot(xdata, ydata, c='tomato')
code: トマト色として数列xdataと数列ydataについての散布図を描画する	plt.plot(xdata, ydata, c='tomato')	plt.plot(xdata, ydata, c='tomato')
code: データ列xdataと配列ydataの散布図をトマト色で描画する	plt.plot(xdata, ydata, c='tomato')	plt.plot(xdata, ydata, c='tomato')
code: 配列xdataと数列ydataの散布図をトマト色でプロットする	plt.plot(xdata, ydata, c='tomato')	plt.plot(xdata, ydata, c='tomato')
code: リストxdataと配列ydataについて散布図を描画して色をトマトに指定する	plt.plot(xdata, ydata, c='tomato')	plt.plot(xdata, ydata, c='tomato')
code: データ列xdataとリストydataについて散布図を描画して、色をトマトとする	plt.plot(xdata, ydata, c='tomato')	plt.plot(xdata, ydata, c='tomato')
code: ターコイズ色のマーカーを散布図に使う	plt.plot(xdata, ydata, c='turquoise')	plt.plot(xdata, ydata, c='turquoise')
code: 散布図にターコイズ色のマーカーを使用する	plt.plot(xdata, ydata, c='turquoise')	plt.plot(xdata, ydata, c='turquoise')
code: ターコイズ色のマーカーとして散布図をプロットする	plt.plot(xdata, ydata, c='turquoise')	plt.plot(xdata, ydata, c='turquoise')
code: ターコイズ色のマーカーで散布図を描く	plt.plot(xdata, ydata, c='turquoise')	plt.plot(xdata, ydata, c='turquoise')
code: ターコイズ色のマーカーで散布図をプロットする	plt.plot(xdata, ydata, c='turquoise')	plt.plot(xdata, ydata, c='turquoise')
code: 配列xdataと配列ydataについての散布図をターコイズ色で描く	plt.plot(xdata, ydata, c='turquoise')	plt.plot(xdata, ydata, c='turquoise')
code: 配列xdataとイテラブルydataの散布図をターコイズ色で描画する	plt.plot(xdata, ydata, c='turquoise')	plt.plot(xdata, ydata, c='turquoise')
code: ターコイズ色としてイテラブルxdataと配列ydataについての散布図をプロットする	plt.plot(xdata, ydata, c='turquoise')	plt.plot(xdata, ydata, c='turquoise')
code: 数列xdataと配列ydataについて散布図を描画して、マーカーの色をターコイズに指定する	plt.plot(xdata, ydata, c='turquoise')	plt.plot(xdata, ydata, c='turquoise')
code: リストxdataと数列ydataについて散布図を描画してマーカーの色をターコイズに変更する	plt.plot(xdata, ydata, c='turquoise')	plt.plot(xdata, ydata, c='turquoise')
code: 散布図にバイオレット色のマーカーを用いる	plt.plot(xdata, ydata, c='violet')	plt.plot(xdata, ydata, c='violet')
code: 散布図にバイオレット色のマーカーを使う	plt.plot(xdata, ydata, c='violet')	plt.plot(xdata, ydata, c='violet')
code: 散布図をバイオレット色のマーカーとして描画する	plt.plot(xdata, ydata, c='violet')	plt.plot(xdata, ydata, c='violet')
code: バイオレット色として散布図をプロットする	plt.plot(xdata, ydata, c='violet')	plt.plot(xdata, ydata, c='violet')
code: バイオレット色で散布図を描く	plt.plot(xdata, ydata, c='violet')	plt.plot(xdata, ydata, c='violet')
code: 数列xdataとデータ列ydataの散布図をバイオレット色で描画する	plt.plot(xdata, ydata, c='violet')	plt.plot(xdata, ydata, c='violet')
code: データ列xdataとイテラブルydataについての散布図をバイオレット色として描く	plt.plot(xdata, ydata, c='violet')	plt.plot(xdata, ydata, c='violet')
code: バイオレット色としてイテラブルxdataとイテラブルydataについての散布図を描画する	plt.plot(xdata, ydata, c='violet')	plt.plot(xdata, ydata, c='violet')
code: 数列xdataとリストydataについて散布図を描画してマーカーの色をバイオレット変える	plt.plot(xdata, ydata, c='violet')	plt.plot(xdata, ydata, c='violet')
code: イテラブルxdataと配列ydataの散布図を描画して、マーカーの色をバイオレットにする	plt.plot(xdata, ydata, c='violet')	plt.plot(xdata, ydata, c='violet')
code: 小麦色のマーカーを散布図に使用する	plt.plot(xdata, ydata, c='wheat')	plt.plot(xdata, ydata, c='wheat')
code: 小麦色のマーカーを散布図に用いる	plt.plot(xdata, ydata, c='wheat')	plt.plot(xdata, ydata, c='wheat')
code: 小麦色で散布図を描く	plt.plot(xdata, ydata, c='wheat')	plt.plot(xdata, ydata, c='wheat')
code: 小麦色を使って散布図を描く	plt.plot(xdata, ydata, c='wheat')	plt.plot(xdata, ydata, c='wheat')
code: 小麦色で散布図を描画する	plt.plot(xdata, ydata, c='wheat')	plt.plot(xdata, ydata, c='wheat')
code: データ列xdataとデータ列ydataの散布図を小麦色で描画する	plt.plot(xdata, ydata, c='wheat')	plt.plot(xdata, ydata, c='wheat')
code: 数列xdataとデータ列ydataについての散布図を小麦色として描画する	plt.plot(xdata, ydata, c='wheat')	plt.plot(xdata, ydata, c='wheat')
code: イテラブルxdataと配列ydataの散布図を小麦色でプロットする	plt.plot(xdata, ydata, c='wheat')	plt.plot(xdata, ydata, c='wheat')
code: リストxdataとリストydataについて散布図を描画して色を小麦変える	plt.plot(xdata, ydata, c='wheat')	plt.plot(xdata, ydata, c='wheat')
code: リストxdataとイテラブルydataの散布図を描画して色を小麦に変更する	plt.plot(xdata, ydata, c='wheat')	plt.plot(xdata, ydata, c='wheat')
code: ホワイト色のマーカーを散布図に使用する	plt.plot(xdata, ydata, c='white')	plt.plot(xdata, ydata, c='white')
code: ホワイト色のマーカーを散布図に使用する	plt.plot(xdata, ydata, c='white')	plt.plot(xdata, ydata, c='white')
code: ホワイト色のマーカーとして散布図を描画する	plt.plot(xdata, ydata, c='white')	plt.plot(xdata, ydata, c='white')
code: ホワイト色で散布図をプロットする	plt.plot(xdata, ydata, c='white')	plt.plot(xdata, ydata, c='white')
code: ホワイト色のマーカーを使って散布図を描く	plt.plot(xdata, ydata, c='white')	plt.plot(xdata, ydata, c='white')
code: ホワイト色としてイテラブルxdataと数列ydataの散布図を描画する	plt.plot(xdata, ydata, c='white')	plt.plot(xdata, ydata, c='white')
code: 配列xdataと配列ydataについての散布図をホワイト色としてプロットする	plt.plot(xdata, ydata, c='white')	plt.plot(xdata, ydata, c='white')
code: 配列xdataとイテラブルydataについての散布図をホワイト色を用いてプロットする	plt.plot(xdata, ydata, c='white')	plt.plot(xdata, ydata, c='white')
code: 配列xdataと配列ydataについて散布図を描画してマーカーの色をホワイトとする	plt.plot(xdata, ydata, c='white')	plt.plot(xdata, ydata, c='white')
code: イテラブルxdataとイテラブルydataについて散布図を描画して、色をホワイト変える	plt.plot(xdata, ydata, c='white')	plt.plot(xdata, ydata, c='white')
code: 散布図にホワイトスモーク色のマーカーを使用する	plt.plot(xdata, ydata, c='whitesmoke')	plt.plot(xdata, ydata, c='whitesmoke')
code: 散布図にホワイトスモーク色のマーカーを用いる	plt.plot(xdata, ydata, c='whitesmoke')	plt.plot(xdata, ydata, c='whitesmoke')
code: 散布図をホワイトスモーク色のマーカーとして描画する	plt.plot(xdata, ydata, c='whitesmoke')	plt.plot(xdata, ydata, c='whitesmoke')
code: ホワイトスモーク色として散布図を描画する	plt.plot(xdata, ydata, c='whitesmoke')	plt.plot(xdata, ydata, c='whitesmoke')
code: ホワイトスモーク色を用いて散布図を描画する	plt.plot(xdata, ydata, c='whitesmoke')	plt.plot(xdata, ydata, c='whitesmoke')
code: 数列xdataと数列ydataについての散布図をホワイトスモーク色としてプロットする	plt.plot(xdata, ydata, c='whitesmoke')	plt.plot(xdata, ydata, c='whitesmoke')
code: リストxdataと配列ydataの散布図をホワイトスモーク色としてプロットする	plt.plot(xdata, ydata, c='whitesmoke')	plt.plot(xdata, ydata, c='whitesmoke')
code: 配列xdataとイテラブルydataについての散布図をホワイトスモーク色で描画する	plt.plot(xdata, ydata, c='whitesmoke')	plt.plot(xdata, ydata, c='whitesmoke')
code: 配列xdataと数列ydataの散布図を描画して、色をホワイトスモークにセットする	plt.plot(xdata, ydata, c='whitesmoke')	plt.plot(xdata, ydata, c='whitesmoke')
code: データ列xdataと配列ydataの散布図を描画して色をホワイトスモーク変える	plt.plot(xdata, ydata, c='whitesmoke')	plt.plot(xdata, ydata, c='whitesmoke')
code: 散布図に黄色色のマーカーを使う	plt.plot(xdata, ydata, c='yellow')	plt.plot(xdata, ydata, c='yellow')
code: 黄色色のマーカーを散布図に使用する	plt.plot(xdata, ydata, c='yellow')	plt.plot(xdata, ydata, c='yellow')
code: 黄色色として散布図をプロットする	plt.plot(xdata, ydata, c='yellow')	plt.plot(xdata, ydata, c='yellow')
code: 黄色色のマーカーを用いて散布図を描く	plt.plot(xdata, ydata, c='yellow')	plt.plot(xdata, ydata, c='yellow')
code: 黄色色として散布図をプロットする	plt.plot(xdata, ydata, c='yellow')	plt.plot(xdata, ydata, c='yellow')
code: 黄色色としてイテラブルxdataとリストydataの散布図を描く	plt.plot(xdata, ydata, c='yellow')	plt.plot(xdata, ydata, c='yellow')
code: 黄色色としてイテラブルxdataと配列ydataについての散布図を描く	plt.plot(xdata, ydata, c='yellow')	plt.plot(xdata, ydata, c='yellow')
code: 黄色色を使って配列xdataと配列ydataの散布図を描く	plt.plot(xdata, ydata, c='yellow')	plt.plot(xdata, ydata, c='yellow')
code: データ列xdataと配列ydataの散布図を描画して、色を黄色変える	plt.plot(xdata, ydata, c='yellow')	plt.plot(xdata, ydata, c='yellow')
code: 配列xdataとイテラブルydataの散布図を描画して色を黄色にセットする	plt.plot(xdata, ydata, c='yellow')	plt.plot(xdata, ydata, c='yellow')
code: イエローグリーン色のマーカーを散布図に使う	plt.plot(xdata, ydata, c='greenyellow')	plt.plot(xdata, ydata, c='yellowgreen')
code: イエローグリーン色のマーカーを散布図に使う	plt.plot(xdata, ydata, c='greenyellow')	plt.plot(xdata, ydata, c='yellowgreen')
code: 散布図をイエローグリーン色のマーカーで描画する	plt.plot(xdata, ydata, c='greenyellow')	plt.plot(xdata, ydata, c='yellowgreen')
code: 散布図をイエローグリーン色のマーカーとして描く	plt.plot(xdata, ydata, c='greenyellow')	plt.plot(xdata, ydata, c='yellowgreen')
code: 散布図をイエローグリーン色のマーカーとして描く	plt.plot(xdata, ydata, c='yellowgreen')	plt.plot(xdata, ydata, c='yellowgreen')
code: 数列xdataと配列ydataの散布図をイエローグリーン色で描く	plt.plot(xdata, ydata, c='greenyellow')	plt.plot(xdata, ydata, c='yellowgreen')
code: イエローグリーン色で数列xdataとデータ列ydataの散布図を描画する	plt.plot(xdata, ydata, c='yellowgreen')	plt.plot(xdata, ydata, c='yellowgreen')
code: イエローグリーン色として配列xdataとデータ列ydataの散布図を描画する	plt.plot(xdata, ydata, c='yellowgreen')	plt.plot(xdata, ydata, c='yellowgreen')
code: イテラブルxdataと配列ydataについて散布図を描画して色をイエローグリーンにセットする	plt.plot(xdata, ydata, c='yellowgreen')	plt.plot(xdata, ydata, c='yellowgreen')
code: 数列xdataとイテラブルydataについて散布図を描画して、色をイエローグリーン変える	plt.plot(xdata, ydata, c='yellowgreen')	plt.plot(xdata, ydata, c='yellowgreen')
code: アリスブルー色のマーカーで重なりを見やすく散布図を描く	plt.plot(xdata, ydata, c='aliceblue', alpha=0.5)	plt.plot(xdata, ydata, c='aliceblue', alpha=0.5)
code: アリスブルー色のマーカーで重なりを見やすく散布図を描く	plt.plot(xdata, ydata, c='aliceblue', alpha=0.5)	plt.plot(xdata, ydata, c='aliceblue', alpha=0.5)
code: アリスブルー色のマーカーを用いて散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='aliceblue', alpha=0.5)	plt.plot(xdata, ydata, c='aliceblue', alpha=0.5)
code: アリスブルー色を用いて重なりを見やすく配列xdataと数列ydataについての散布図を描画する	plt.plot(xdata, ydata, c='aliceblue', alpha=0.5)	plt.plot(xdata, ydata, c='aliceblue', alpha=0.5)
code: アリスブルー色として重なりを見やすくデータ列xdataとデータ列ydataの散布図をプロットする	plt.plot(xdata, ydata, c='aliceblue', alpha=0.5)	plt.plot(xdata, ydata, c='aliceblue', alpha=0.5)
code: データ列xdataとデータ列ydataについての散布図を重なりを見やすくアリスブルー色でプロットする	plt.plot(xdata, ydata, c='aliceblue', alpha=0.5)	plt.plot(xdata, ydata, c='aliceblue', alpha=0.5)
code: 重なりを見やすくアンティークホワイト色で散布図を描画する	plt.plot(xdata, ydata, c='antiquewhite', alpha=0.5)	plt.plot(xdata, ydata, c='antiquewhite', alpha=0.5)
code: 重なりを見やすくアンティークホワイト色のマーカーとして散布図をプロットする	plt.plot(xdata, ydata, c='antiquewhite', alpha=0.5)	plt.plot(xdata, ydata, c='antiquewhite', alpha=0.5)
code: アンティークホワイト色のマーカーで重なりを見やすく散布図を描く	plt.plot(xdata, ydata, c='antiquewhite', alpha=0.5)	plt.plot(xdata, ydata, c='antiquewhite', alpha=0.5)
code: アンティークホワイト色を使って重なりを見やすくデータ列xdataとデータ列ydataについての散布図を描画する	plt.plot(xdata, ydata, c='antiquewhite', alpha=0.5)	plt.plot(xdata, ydata, c='antiquewhite', alpha=0.5)
code: 重なりを見やすく数列xdataとデータ列ydataの散布図をアンティークホワイト色を用いて描く	plt.plot(xdata, ydata, c='antiquewhite', alpha=0.5)	plt.plot(xdata, ydata, c='antiquewhite', alpha=0.5)
code: イテラブルxdataとイテラブルydataの散布図をアンティークホワイト色として重なりを見やすく描く	plt.plot(xdata, ydata, c='antiquewhite', alpha=0.5)	plt.plot(xdata, ydata, c='antiquewhite', alpha=0.5)
code: 散布図をアクア色を用いて重なりを見やすくプロットする	plt.plot(xdata, ydata, c='aqua', alpha=0.5)	plt.plot(xdata, ydata, c='aqua', alpha=0.5)
code: 重なりを見やすくアクア色を使って散布図をプロットする	plt.plot(xdata, ydata, c='aqua', alpha=0.5)	plt.plot(xdata, ydata, c='aqua', alpha=0.5)
code: アクア色のマーカーを使って散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='aqua', alpha=0.5)	plt.plot(xdata, ydata, c='aqua', alpha=0.5)
code: イテラブルxdataと数列ydataの散布図をアクア色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='aqua', alpha=0.5)	plt.plot(xdata, ydata, c='aqua', alpha=0.5)
code: 重なりを見やすくアクア色としてイテラブルxdataとデータ列ydataについての散布図をプロットする	plt.plot(xdata, ydata, c='aqua', alpha=0.5)	plt.plot(xdata, ydata, c='aqua', alpha=0.5)
code: 配列xdataと配列ydataの散布図を重なりを見やすくアクア色でプロットする	plt.plot(xdata, ydata, c='aqua', alpha=0.5)	plt.plot(xdata, ydata, c='aqua', alpha=0.5)
code: 散布図をアクアマリン色のマーカーとして重なりを見やすくプロットする	plt.plot(xdata, ydata, c='aquamarine', alpha=0.5)	plt.plot(xdata, ydata, c='aquamarine', alpha=0.5)
code: アクアマリン色のマーカーを使って散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='aquamarine', alpha=0.5)	plt.plot(xdata, ydata, c='aquamarine', alpha=0.5)
code: 重なりを見やすく散布図をアクアマリン色のマーカーを用いて描く	plt.plot(xdata, ydata, c='aquamarine', alpha=0.5)	plt.plot(xdata, ydata, c='aquamarine', alpha=0.5)
code: データ列xdataと配列ydataについての散布図をアクアマリン色として重なりを見やすく描く	plt.plot(xdata, ydata, c='aquamarine', alpha=0.5)	plt.plot(xdata, ydata, c='aquamarine', alpha=0.5)
code: 数列xdataと配列ydataの散布図を重なりを見やすくアクアマリン色を用いて描画する	plt.plot(xdata, ydata, c='aquamarine', alpha=0.5)	plt.plot(xdata, ydata, c='aquamarine', alpha=0.5)
code: アクアマリン色でデータ列xdataとイテラブルydataについての散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='aquamarine', alpha=0.5)	plt.plot(xdata, ydata, c='aquamarine', alpha=0.5)
code: 重なりを見やすく紺碧色のマーカーを使って散布図を描く	plt.plot(xdata, ydata, c='azure', alpha=0.5)	plt.plot(xdata, ydata, c='azure', alpha=0.5)
code: 散布図を重なりを見やすく紺碧色のマーカーで描く	plt.plot(xdata, ydata, c='azure', alpha=0.5)	plt.plot(xdata, ydata, c='azure', alpha=0.5)
code: 重なりを見やすく散布図を紺碧色のマーカーとしてプロットする	plt.plot(xdata, ydata, c='azure', alpha=0.5)	plt.plot(xdata, ydata, c='azure', alpha=0.5)
code: 紺碧色として重なりを見やすくイテラブルxdataとデータ列ydataの散布図を描画する	plt.plot(xdata, ydata, c='azure', alpha=0.5)	plt.plot(xdata, ydata, c='azure', alpha=0.5)
code: 紺碧色で配列xdataと数列ydataについての散布図を重なりを見やすくプロットする	plt.plot(xdata, ydata, c='azure', alpha=0.5)	plt.plot(xdata, ydata, c='azure', alpha=0.5)
code: 紺碧色を使ってイテラブルxdataとイテラブルydataについての散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='azure', alpha=0.5)	plt.plot(xdata, ydata, c='azure', alpha=0.5)
code: 散布図をベージュ色のマーカーを用いて重なりを見やすくプロットする	plt.plot(xdata, ydata, c='beige', alpha=0.5)	plt.plot(xdata, ydata, c='beige', alpha=0.5)
code: 散布図を重なりを見やすくベージュ色のマーカーとして描画する	plt.plot(xdata, ydata, c='beige', alpha=0.5)	plt.plot(xdata, ydata, c='beige', alpha=0.5)
code: 重なりを見やすくベージュ色で散布図を描画する	plt.plot(xdata, ydata, c='beige', alpha=0.5)	plt.plot(xdata, ydata, c='beige', alpha=0.5)
code: ベージュ色で配列xdataと配列ydataについての散布図を重なりを見やすくプロットする	plt.plot(xdata, ydata, c='beige', alpha=0.5)	plt.plot(xdata, ydata, c='beige', alpha=0.5)
code: リストxdataとデータ列ydataについての散布図をベージュ色として重なりを見やすくプロットする	plt.plot(xdata, ydata, c='beige', alpha=0.5)	plt.plot(xdata, ydata, c='beige', alpha=0.5)
code: 重なりを見やすくベージュ色でイテラブルxdataと配列ydataの散布図をプロットする	plt.plot(xdata, ydata, c='beige', alpha=0.5)	plt.plot(xdata, ydata, c='beige', alpha=0.5)
code: 重なりを見やすくビスク色のマーカーで散布図をプロットする	plt.plot(xdata, ydata, c='bisque', alpha=0.5)	plt.plot(xdata, ydata, c='bisque', alpha=0.5)
code: 重なりを見やすく散布図をビスク色を使ってプロットする	plt.plot(xdata, ydata, c='bisque', alpha=0.5)	plt.plot(xdata, ydata, c='bisque', alpha=0.5)
code: ビスク色のマーカーで散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='bisque', alpha=0.5)	plt.plot(xdata, ydata, c='bisque', alpha=0.5)
code: ビスク色で重なりを見やすく数列xdataと配列ydataについての散布図を描画する	plt.plot(xdata, ydata, c='bisque', alpha=0.5)	plt.plot(xdata, ydata, c='bisque', alpha=0.5)
code: 配列xdataとイテラブルydataの散布図を重なりを見やすくビスク色で描画する	plt.plot(xdata, ydata, c='bisque', alpha=0.5)	plt.plot(xdata, ydata, c='bisque', alpha=0.5)
code: リストxdataとデータ列ydataの散布図をビスク色として重なりを見やすく描画する	plt.plot(xdata, ydata, c='bisque', alpha=0.5)	plt.plot(xdata, ydata, c='bisque', alpha=0.5)
code: 散布図を重なりを見やすくブラック色として描画する	plt.plot(xdata, ydata, c='black', alpha=0.5)	plt.plot(xdata, ydata, c='black', alpha=0.5)
code: 散布図を重なりを見やすくブラック色としてプロットする	plt.plot(xdata, ydata, c='black', alpha=0.5)	plt.plot(xdata, ydata, c='black', alpha=0.5)
code: 重なりを見やすくブラック色として散布図をプロットする	plt.plot(xdata, ydata, c='black', alpha=0.5)	plt.plot(xdata, ydata, c='black', alpha=0.5)
code: ブラック色として重なりを見やすく数列xdataとリストydataの散布図を描画する	plt.plot(xdata, ydata, c='black', alpha=0.5)	plt.plot(xdata, ydata, c='black', alpha=0.5)
code: ブラック色として重なりを見やすくイテラブルxdataとリストydataについての散布図をプロットする	plt.plot(xdata, ydata, c='black', alpha=0.5)	plt.plot(xdata, ydata, c='black', alpha=0.5)
code: ブラック色として重なりを見やすくイテラブルxdataと数列ydataの散布図を描画する	plt.plot(xdata, ydata, c='black', alpha=0.5)	plt.plot(xdata, ydata, c='black', alpha=0.5)
code: 重なりを見やすくブランチドアーモンド色で散布図をプロットする	plt.plot(xdata, ydata, c='blanchedalmond', alpha=0.5)	plt.plot(xdata, ydata, c='blanchedalmond', alpha=0.5)
code: ブランチドアーモンド色を使って重なりを見やすく散布図をプロットする	plt.plot(xdata, ydata, c='blanchedalmond', alpha=0.5)	plt.plot(xdata, ydata, c='blanchedalmond', alpha=0.5)
code: ブランチドアーモンド色のマーカーを使って散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='blanchedalmond', alpha=0.5)	plt.plot(xdata, ydata, c='blanchedalmond', alpha=0.5)
code: 重なりを見やすくブランチドアーモンド色としてデータ列xdataと配列ydataの散布図を描く	plt.plot(xdata, ydata, c='blanchedalmond', alpha=0.5)	plt.plot(xdata, ydata, c='blanchedalmond', alpha=0.5)
code: 重なりを見やすくブランチドアーモンド色を使ってリストxdataとデータ列ydataの散布図を描く	plt.plot(xdata, ydata, c='blanchedalmond', alpha=0.5)	plt.plot(xdata, ydata, c='blanchedalmond', alpha=0.5)
code: 配列xdataと数列ydataの散布図を重なりを見やすくブランチドアーモンド色で描く	plt.plot(xdata, ydata, c='blanchedalmond', alpha=0.5)	plt.plot(xdata, ydata, c='blanchedalmond', alpha=0.5)
code: 散布図を重なりを見やすく青色のマーカーとして描画する	plt.plot(xdata, ydata, c='blue', alpha=0.5)	plt.plot(xdata, ydata, c='blue', alpha=0.5)
code: 重なりを見やすく散布図を青色のマーカーでプロットする	plt.plot(xdata, ydata, c='blue', alpha=0.5)	plt.plot(xdata, ydata, c='blue', alpha=0.5)
code: 青色のマーカーとして重なりを見やすく散布図を描画する	plt.plot(xdata, ydata, c='blue', alpha=0.5)	plt.plot(xdata, ydata, c='blue', alpha=0.5)
code: 重なりを見やすく青色でリストxdataと数列ydataの散布図を描画する	plt.plot(xdata, ydata, c='blue', alpha=0.5)	plt.plot(xdata, ydata, c='blue', alpha=0.5)
code: リストxdataとリストydataの散布図を青色として重なりを見やすくプロットする	plt.plot(xdata, ydata, c='blue', alpha=0.5)	plt.plot(xdata, ydata, c='blue', alpha=0.5)
code: リストxdataとイテラブルydataについての散布図を青色を用いて重なりを見やすく描く	plt.plot(xdata, ydata, c='blue', alpha=0.5)	plt.plot(xdata, ydata, c='blue', alpha=0.5)
code: 散布図を重なりを見やすくブルーバイオレット色として描画する	plt.plot(xdata, ydata, c='blueviolet', alpha=0.5)	plt.plot(xdata, ydata, c='blueviolet', alpha=0.5)
code: ブルーバイオレット色を用いて散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='blueviolet', alpha=0.5)	plt.plot(xdata, ydata, c='blueviolet', alpha=0.5)
code: 散布図をブルーバイオレット色を用いて重なりを見やすくプロットする	plt.plot(xdata, ydata, c='blueviolet', alpha=0.5)	plt.plot(xdata, ydata, c='blueviolet', alpha=0.5)
code: ブルーバイオレット色を使って数列xdataとデータ列ydataの散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='blueviolet', alpha=0.5)	plt.plot(xdata, ydata, c='blueviolet', alpha=0.5)
code: イテラブルxdataとイテラブルydataについての散布図を重なりを見やすくブルーバイオレット色を用いて描画する	plt.plot(xdata, ydata, c='blueviolet', alpha=0.5)	plt.plot(xdata, ydata, c='blueviolet', alpha=0.5)
code: ブルーバイオレット色を使って重なりを見やすくデータ列xdataとリストydataについての散布図をプロットする	plt.plot(xdata, ydata, c='blueviolet', alpha=0.5)	plt.plot(xdata, ydata, c='blueviolet', alpha=0.5)
code: 散布図をブラウン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='brown', alpha=0.5)	plt.plot(xdata, ydata, c='brown', alpha=0.5)
code: 重なりを見やすく散布図をブラウン色で描画する	plt.plot(xdata, ydata, c='brown', alpha=0.5)	plt.plot(xdata, ydata, c='brown', alpha=0.5)
code: 散布図をブラウン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='brown', alpha=0.5)	plt.plot(xdata, ydata, c='brown', alpha=0.5)
code: イテラブルxdataとデータ列ydataの散布図を重なりを見やすくブラウン色を用いて描画する	plt.plot(xdata, ydata, c='brown', alpha=0.5)	plt.plot(xdata, ydata, c='brown', alpha=0.5)
code: ブラウン色としてイテラブルxdataと配列ydataについての散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='brown', alpha=0.5)	plt.plot(xdata, ydata, c='brown', alpha=0.5)
code: リストxdataと配列ydataの散布図をブラウン色として重なりを見やすくプロットする	plt.plot(xdata, ydata, c='brown', alpha=0.5)	plt.plot(xdata, ydata, c='brown', alpha=0.5)
code: ハリウッド色を使って重なりを見やすく散布図を描く	plt.plot(xdata, ydata, c='burlywood', alpha=0.5)	plt.plot(xdata, ydata, c='burlywood', alpha=0.5)
code: 散布図をハリウッド色を用いて重なりを見やすくプロットする	plt.plot(xdata, ydata, c='burlywood', alpha=0.5)	plt.plot(xdata, ydata, c='burlywood', alpha=0.5)
code: 散布図を重なりを見やすくハリウッド色のマーカーで描画する	plt.plot(xdata, ydata, c='burlywood', alpha=0.5)	plt.plot(xdata, ydata, c='burlywood', alpha=0.5)
code: データ列xdataと配列ydataの散布図を重なりを見やすくハリウッド色を用いて描く	plt.plot(xdata, ydata, c='burlywood', alpha=0.5)	plt.plot(xdata, ydata, c='burlywood', alpha=0.5)
code: ハリウッド色で重なりを見やすくイテラブルxdataとイテラブルydataについての散布図を描く	plt.plot(xdata, ydata, c='burlywood', alpha=0.5)	plt.plot(xdata, ydata, c='burlywood', alpha=0.5)
code: ハリウッド色を使って配列xdataと配列ydataについての散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='burlywood', alpha=0.5)	plt.plot(xdata, ydata, c='burlywood', alpha=0.5)
code: カデットブルー色として重なりを見やすく散布図を描く	plt.plot(xdata, ydata, c='cadetblue', alpha=0.5)	plt.plot(xdata, ydata, c='cadetblue', alpha=0.5)
code: 散布図をカデットブルー色のマーカーとして重なりを見やすく描画する	plt.plot(xdata, ydata, c='cadetblue', alpha=0.5)	plt.plot(xdata, ydata, c='cadetblue', alpha=0.5)
code: カデットブルー色のマーカーとして散布図を重なりを見やすくプロットする	plt.plot(xdata, ydata, c='cadetblue', alpha=0.5)	plt.plot(xdata, ydata, c='cadetblue', alpha=0.5)
code: 重なりを見やすくカデットブルー色でデータ列xdataとデータ列ydataについての散布図をプロットする	plt.plot(xdata, ydata, c='cadetblue', alpha=0.5)	plt.plot(xdata, ydata, c='cadetblue', alpha=0.5)
code: カデットブルー色でイテラブルxdataと配列ydataについての散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='cadetblue', alpha=0.5)	plt.plot(xdata, ydata, c='cadetblue', alpha=0.5)
code: リストxdataと数列ydataの散布図を重なりを見やすくカデットブルー色を用いてプロットする	plt.plot(xdata, ydata, c='cadetblue', alpha=0.5)	plt.plot(xdata, ydata, c='cadetblue', alpha=0.5)
code: シャルトルーズ色のマーカーで散布図を重なりを見やすくプロットする	plt.plot(xdata, ydata, c='chartreuse', alpha=0.5)	plt.plot(xdata, ydata, c='chartreuse', alpha=0.5)
code: シャルトルーズ色のマーカーとして重なりを見やすく散布図を描く	plt.plot(xdata, ydata, c='chartreuse', alpha=0.5)	plt.plot(xdata, ydata, c='chartreuse', alpha=0.5)
code: 散布図をシャルトルーズ色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='chartreuse', alpha=0.5)	plt.plot(xdata, ydata, c='chartreuse', alpha=0.5)
code: データ列xdataとデータ列ydataについての散布図をシャルトルーズ色として重なりを見やすくプロットする	plt.plot(xdata, ydata, c='chartreuse', alpha=0.5)	plt.plot(xdata, ydata, c='chartreuse', alpha=0.5)
code: シャルトルーズ色としてデータ列xdataとデータ列ydataについての散布図を重なりを見やすくプロットする	plt.plot(xdata, ydata, c='chartreuse', alpha=0.5)	plt.plot(xdata, ydata, c='chartreuse', alpha=0.5)
code: 重なりを見やすくシャルトルーズ色としてイテラブルxdataとデータ列ydataの散布図をプロットする	plt.plot(xdata, ydata, c='chartreuse', alpha=0.5)	plt.plot(xdata, ydata, c='chartreuse', alpha=0.5)
code: 重なりを見やすく散布図をチョコレート色で描く	plt.plot(xdata, ydata, c='chocolate', alpha=0.5)	plt.plot(xdata, ydata, c='chocolate', alpha=0.5)
code: チョコレート色として重なりを見やすく散布図を描く	plt.plot(xdata, ydata, c='chocolate', alpha=0.5)	plt.plot(xdata, ydata, c='chocolate', alpha=0.5)
code: 重なりを見やすくチョコレート色のマーカーを用いて散布図をプロットする	plt.plot(xdata, ydata, c='chocolate', alpha=0.5)	plt.plot(xdata, ydata, c='chocolate', alpha=0.5)
code: データ列xdataと数列ydataの散布図を重なりを見やすくチョコレート色として描画する	plt.plot(xdata, ydata, c='chocolate', alpha=0.5)	plt.plot(xdata, ydata, c='chocolate', alpha=0.5)
code: 数列xdataとイテラブルydataの散布図をチョコレート色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='chocolate', alpha=0.5)	plt.plot(xdata, ydata, c='chocolate', alpha=0.5)
code: データ列xdataと数列ydataについての散布図をチョコレート色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='chocolate', alpha=0.5)	plt.plot(xdata, ydata, c='chocolate', alpha=0.5)
code: コーラル色のマーカーを用いて重なりを見やすく散布図を描く	plt.plot(xdata, ydata, c='coral', alpha=0.5)	plt.plot(xdata, ydata, c='coral', alpha=0.5)
code: 散布図を重なりを見やすくコーラル色を使ってプロットする	plt.plot(xdata, ydata, c='coral', alpha=0.5)	plt.plot(xdata, ydata, c='coral', alpha=0.5)
code: コーラル色のマーカーを用いて散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='coral', alpha=0.5)	plt.plot(xdata, ydata, c='coral', alpha=0.5)
code: コーラル色を用いて数列xdataとイテラブルydataについての散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='coral', alpha=0.5)	plt.plot(xdata, ydata, c='coral', alpha=0.5)
code: 重なりを見やすくイテラブルxdataと配列ydataについての散布図をコーラル色を用いて描く	plt.plot(xdata, ydata, c='coral', alpha=0.5)	plt.plot(xdata, ydata, c='coral', alpha=0.5)
code: コーラル色を用いてリストxdataと配列ydataの散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='coral', alpha=0.5)	plt.plot(xdata, ydata, c='coral', alpha=0.5)
code: 散布図を重なりを見やすくコーンフラワーブルー色で描画する	plt.plot(xdata, ydata, c='cornflowerblue', alpha=0.5)	plt.plot(xdata, ydata, c='cornflowerblue', alpha=0.5)
code: 重なりを見やすくコーンフラワーブルー色のマーカーを用いて散布図を描画する	plt.plot(xdata, ydata, c='cornflowerblue', alpha=0.5)	plt.plot(xdata, ydata, c='cornflowerblue', alpha=0.5)
code: 重なりを見やすく散布図をコーンフラワーブルー色のマーカーを用いて描画する	plt.plot(xdata, ydata, c='cornflowerblue', alpha=0.5)	plt.plot(xdata, ydata, c='cornflowerblue', alpha=0.5)
code: 重なりを見やすくコーンフラワーブルー色として数列xdataとデータ列ydataの散布図をプロットする	plt.plot(xdata, ydata, c='cornflowerblue', alpha=0.5)	plt.plot(xdata, ydata, c='cornflowerblue', alpha=0.5)
code: 配列xdataとイテラブルydataの散布図を重なりを見やすくコーンフラワーブルー色で描画する	plt.plot(xdata, ydata, c='cornflowerblue', alpha=0.5)	plt.plot(xdata, ydata, c='cornflowerblue', alpha=0.5)
code: コーンフラワーブルー色を用いて重なりを見やすくイテラブルxdataとデータ列ydataの散布図をプロットする	plt.plot(xdata, ydata, c='cornflowerblue', alpha=0.5)	plt.plot(xdata, ydata, c='cornflowerblue', alpha=0.5)
code: 散布図を重なりを見やすくコーンズシルク色を使って描く	plt.plot(xdata, ydata, c='cornsilk', alpha=0.5)	plt.plot(xdata, ydata, c='cornsilk', alpha=0.5)
code: コーンズシルク色を使って重なりを見やすく散布図をプロットする	plt.plot(xdata, ydata, c='cornsilk', alpha=0.5)	plt.plot(xdata, ydata, c='cornsilk', alpha=0.5)
code: 重なりを見やすくコーンズシルク色のマーカーで散布図を描く	plt.plot(xdata, ydata, c='cornsilk', alpha=0.5)	plt.plot(xdata, ydata, c='cornsilk', alpha=0.5)
code: 配列xdataとデータ列ydataについての散布図を重なりを見やすくコーンズシルク色を使ってプロットする	plt.plot(xdata, ydata, c='cornsilk', alpha=0.5)	plt.plot(xdata, ydata, c='cornsilk', alpha=0.5)
code: コーンズシルク色を使って重なりを見やすくデータ列xdataとイテラブルydataの散布図をプロットする	plt.plot(xdata, ydata, c='cornsilk', alpha=0.5)	plt.plot(xdata, ydata, c='cornsilk', alpha=0.5)
code: 重なりを見やすくコーンズシルク色として配列xdataとデータ列ydataについての散布図をプロットする	plt.plot(xdata, ydata, c='cornsilk', alpha=0.5)	plt.plot(xdata, ydata, c='cornsilk', alpha=0.5)
code: クリムゾン色のマーカーとして散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='crimson', alpha=0.5)	plt.plot(xdata, ydata, c='crimson', alpha=0.5)
code: 散布図を重なりを見やすくクリムゾン色として描画する	plt.plot(xdata, ydata, c='crimson', alpha=0.5)	plt.plot(xdata, ydata, c='crimson', alpha=0.5)
code: 重なりを見やすくクリムゾン色で散布図を描画する	plt.plot(xdata, ydata, c='crimson', alpha=0.5)	plt.plot(xdata, ydata, c='crimson', alpha=0.5)
code: 重なりを見やすくクリムゾン色でイテラブルxdataと数列ydataについての散布図を描く	plt.plot(xdata, ydata, c='crimson', alpha=0.5)	plt.plot(xdata, ydata, c='crimson', alpha=0.5)
code: 配列xdataと数列ydataの散布図を重なりを見やすくクリムゾン色で描画する	plt.plot(xdata, ydata, c='crimson', alpha=0.5)	plt.plot(xdata, ydata, c='crimson', alpha=0.5)
code: クリムゾン色として重なりを見やすくリストxdataとリストydataについての散布図を描画する	plt.plot(xdata, ydata, c='crimson', alpha=0.5)	plt.plot(xdata, ydata, c='crimson', alpha=0.5)
code: シアン色として散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='cyan', alpha=0.5)	plt.plot(xdata, ydata, c='cyan', alpha=0.5)
code: 重なりを見やすくシアン色として散布図を描画する	plt.plot(xdata, ydata, c='cyan', alpha=0.5)	plt.plot(xdata, ydata, c='cyan', alpha=0.5)
code: 散布図を重なりを見やすくシアン色として描画する	plt.plot(xdata, ydata, c='cyan', alpha=0.5)	plt.plot(xdata, ydata, c='cyan', alpha=0.5)
code: イテラブルxdataとリストydataの散布図を重なりを見やすくシアン色として描く	plt.plot(xdata, ydata, c='cyan', alpha=0.5)	plt.plot(xdata, ydata, c='cyan', alpha=0.5)
code: 重なりを見やすくシアン色としてリストxdataとデータ列ydataの散布図を描画する	plt.plot(xdata, ydata, c='cyan', alpha=0.5)	plt.plot(xdata, ydata, c='cyan', alpha=0.5)
code: 重なりを見やすくシアン色でリストxdataとデータ列ydataについての散布図をプロットする	plt.plot(xdata, ydata, c='cyan', alpha=0.5)	plt.plot(xdata, ydata, c='cyan', alpha=0.5)
code: 重なりを見やすく散布図をダークブルー色を用いて描く	plt.plot(xdata, ydata, c='darkblue', alpha=0.5)	plt.plot(xdata, ydata, c='darkblue', alpha=0.5)
code: 散布図をダークブルー色を用いて重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkblue', alpha=0.5)	plt.plot(xdata, ydata, c='darkblue', alpha=0.5)
code: 重なりを見やすく散布図をダークブルー色として描画する	plt.plot(xdata, ydata, c='darkblue', alpha=0.5)	plt.plot(xdata, ydata, c='darkblue', alpha=0.5)
code: ダークブルー色でリストxdataとリストydataについての散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkblue', alpha=0.5)	plt.plot(xdata, ydata, c='darkblue', alpha=0.5)
code: 重なりを見やすくリストxdataと配列ydataについての散布図をダークブルー色で描画する	plt.plot(xdata, ydata, c='darkblue', alpha=0.5)	plt.plot(xdata, ydata, c='darkblue', alpha=0.5)
code: 重なりを見やすくイテラブルxdataと配列ydataの散布図をダークブルー色で描画する	plt.plot(xdata, ydata, c='darkblue', alpha=0.5)	plt.plot(xdata, ydata, c='darkblue', alpha=0.5)
code: 重なりを見やすく散布図をダークシアン色のマーカーを用いて描画する	plt.plot(xdata, ydata, c='darkcyan', alpha=0.5)	plt.plot(xdata, ydata, c='darkcyan', alpha=0.5)
code: 散布図を重なりを見やすくダークシアン色のマーカーとして描く	plt.plot(xdata, ydata, c='darkcyan', alpha=0.5)	plt.plot(xdata, ydata, c='darkcyan', alpha=0.5)
code: ダークシアン色のマーカーで重なりを見やすく散布図をプロットする	plt.plot(xdata, ydata, c='darkcyan', alpha=0.5)	plt.plot(xdata, ydata, c='darkcyan', alpha=0.5)
code: ダークシアン色を使って重なりを見やすくイテラブルxdataとリストydataの散布図を描く	plt.plot(xdata, ydata, c='darkcyan', alpha=0.5)	plt.plot(xdata, ydata, c='darkcyan', alpha=0.5)
code: 重なりを見やすくデータ列xdataと数列ydataの散布図をダークシアン色でプロットする	plt.plot(xdata, ydata, c='darkcyan', alpha=0.5)	plt.plot(xdata, ydata, c='darkcyan', alpha=0.5)
code: ダークシアン色を用いてデータ列xdataとリストydataの散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='darkcyan', alpha=0.5)	plt.plot(xdata, ydata, c='darkcyan', alpha=0.5)
code: 散布図を重なりを見やすくダークゴールデンロッド色を用いてプロットする	plt.plot(xdata, ydata, c='darkgoldenrod', alpha=0.5)	plt.plot(xdata, ydata, c='darkgoldenrod', alpha=0.5)
code: ダークゴールデンロッド色のマーカーを使って重なりを見やすく散布図を描画する	plt.plot(xdata, ydata, c='darkgoldenrod', alpha=0.5)	plt.plot(xdata, ydata, c='darkgoldenrod', alpha=0.5)
code: 散布図をダークゴールデンロッド色で重なりを見やすくプロットする	plt.plot(xdata, ydata, c='darkgoldenrod', alpha=0.5)	plt.plot(xdata, ydata, c='darkgoldenrod', alpha=0.5)
code: 重なりを見やすくイテラブルxdataと配列ydataの散布図をダークゴールデンロッド色として描画する	plt.plot(xdata, ydata, c='darkgoldenrod', alpha=0.5)	plt.plot(xdata, ydata, c='darkgoldenrod', alpha=0.5)
code: ダークゴールデンロッド色を用いてリストxdataと配列ydataの散布図を重なりを見やすくプロットする	plt.plot(xdata, ydata, c='darkgoldenrod', alpha=0.5)	plt.plot(xdata, ydata, c='darkgoldenrod', alpha=0.5)
code: 数列xdataとデータ列ydataの散布図を重なりを見やすくダークゴールデンロッド色として描画する	plt.plot(xdata, ydata, c='darkgoldenrod', alpha=0.5)	plt.plot(xdata, ydata, c='darkgoldenrod', alpha=0.5)
code: 散布図をダークグレー色で重なりを見やすくプロットする	plt.plot(xdata, ydata, c='darkgray', alpha=0.5)	plt.plot(xdata, ydata, c='darkgray', alpha=0.5)
code: ダークグレー色で散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='darkgray', alpha=0.5)	plt.plot(xdata, ydata, c='darkgray', alpha=0.5)
code: 散布図をダークグレー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkgray', alpha=0.5)	plt.plot(xdata, ydata, c='darkgray', alpha=0.5)
code: データ列xdataとデータ列ydataの散布図をダークグレー色として重なりを見やすくプロットする	plt.plot(xdata, ydata, c='darkgrey', alpha=0.5)	plt.plot(xdata, ydata, c='darkgray', alpha=0.5)
code: 数列xdataとデータ列ydataについての散布図を重なりを見やすくダークグレー色として描画する	plt.plot(xdata, ydata, c='darkgrey', alpha=0.5)	plt.plot(xdata, ydata, c='darkgray', alpha=0.5)
code: 重なりを見やすくダークグレー色を使って配列xdataとイテラブルydataの散布図を描く	plt.plot(xdata, ydata, c='darkgrey', alpha=0.5)	plt.plot(xdata, ydata, c='darkgray', alpha=0.5)
code: 重なりを見やすくダークグリーン色を使って散布図を描く	plt.plot(xdata, ydata, c='darkgreen', alpha=0.5)	plt.plot(xdata, ydata, c='darkgreen', alpha=0.5)
code: 散布図をダークグリーン色のマーカーを用いて重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkgreen', alpha=0.5)	plt.plot(xdata, ydata, c='darkgreen', alpha=0.5)
code: ダークグリーン色として重なりを見やすく散布図を描画する	plt.plot(xdata, ydata, c='darkgreen', alpha=0.5)	plt.plot(xdata, ydata, c='darkgreen', alpha=0.5)
code: 重なりを見やすく数列xdataと数列ydataの散布図をダークグリーン色として描く	plt.plot(xdata, ydata, c='darkgreen', alpha=0.5)	plt.plot(xdata, ydata, c='darkgreen', alpha=0.5)
code: ダークグリーン色として重なりを見やすく配列xdataと数列ydataの散布図を描画する	plt.plot(xdata, ydata, c='darkgreen', alpha=0.5)	plt.plot(xdata, ydata, c='darkgreen', alpha=0.5)
code: リストxdataとリストydataの散布図をダークグリーン色を用いて重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkgreen', alpha=0.5)	plt.plot(xdata, ydata, c='darkgreen', alpha=0.5)
code: ダークグレー色のマーカーで重なりを見やすく散布図を描画する	plt.plot(xdata, ydata, c='darkgray', alpha=0.5)	plt.plot(xdata, ydata, c='darkgrey', alpha=0.5)
code: ダークグレー色として重なりを見やすく散布図を描く	plt.plot(xdata, ydata, c='darkgrey', alpha=0.5)	plt.plot(xdata, ydata, c='darkgrey', alpha=0.5)
code: 散布図をダークグレー色を用いて重なりを見やすく描く	plt.plot(xdata, ydata, c='darkgray', alpha=0.5)	plt.plot(xdata, ydata, c='darkgrey', alpha=0.5)
code: 数列xdataと数列ydataの散布図をダークグレー色を用いて重なりを見やすくプロットする	plt.plot(xdata, ydata, c='darkgrey', alpha=0.5)	plt.plot(xdata, ydata, c='darkgrey', alpha=0.5)
code: データ列xdataと数列ydataの散布図を重なりを見やすくダークグレー色として描く	plt.plot(xdata, ydata, c='darkgrey', alpha=0.5)	plt.plot(xdata, ydata, c='darkgrey', alpha=0.5)
code: 重なりを見やすくデータ列xdataとリストydataの散布図をダークグレー色で描画する	plt.plot(xdata, ydata, c='darkgray', alpha=0.5)	plt.plot(xdata, ydata, c='darkgrey', alpha=0.5)
code: ダークカーキ色のマーカーを使って散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='darkkhaki', alpha=0.5)	plt.plot(xdata, ydata, c='darkkhaki', alpha=0.5)
code: 重なりを見やすく散布図をダークカーキ色で描画する	plt.plot(xdata, ydata, c='darkkhaki', alpha=0.5)	plt.plot(xdata, ydata, c='darkkhaki', alpha=0.5)
code: ダークカーキ色として散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkkhaki', alpha=0.5)	plt.plot(xdata, ydata, c='darkkhaki', alpha=0.5)
code: ダークカーキ色として重なりを見やすくリストxdataとイテラブルydataの散布図をプロットする	plt.plot(xdata, ydata, c='darkkhaki', alpha=0.5)	plt.plot(xdata, ydata, c='darkkhaki', alpha=0.5)
code: 数列xdataと配列ydataについての散布図をダークカーキ色として重なりを見やすく描く	plt.plot(xdata, ydata, c='darkkhaki', alpha=0.5)	plt.plot(xdata, ydata, c='darkkhaki', alpha=0.5)
code: 重なりを見やすく数列xdataとリストydataについての散布図をダークカーキ色として描画する	plt.plot(xdata, ydata, c='darkkhaki', alpha=0.5)	plt.plot(xdata, ydata, c='darkkhaki', alpha=0.5)
code: 散布図を重なりを見やすくダークマゼンタ色としてプロットする	plt.plot(xdata, ydata, c='darkmagenta', alpha=0.5)	plt.plot(xdata, ydata, c='darkmagenta', alpha=0.5)
code: 重なりを見やすく散布図をダークマゼンタ色でプロットする	plt.plot(xdata, ydata, c='darkmagenta', alpha=0.5)	plt.plot(xdata, ydata, c='darkmagenta', alpha=0.5)
code: 重なりを見やすく散布図をダークマゼンタ色を用いて描画する	plt.plot(xdata, ydata, c='darkmagenta', alpha=0.5)	plt.plot(xdata, ydata, c='darkmagenta', alpha=0.5)
code: ダークマゼンタ色として重なりを見やすく数列xdataと配列ydataの散布図を描く	plt.plot(xdata, ydata, c='darkmagenta', alpha=0.5)	plt.plot(xdata, ydata, c='darkmagenta', alpha=0.5)
code: ダークマゼンタ色として配列xdataとリストydataについての散布図を重なりを見やすくプロットする	plt.plot(xdata, ydata, c='darkmagenta', alpha=0.5)	plt.plot(xdata, ydata, c='darkmagenta', alpha=0.5)
code: 重なりを見やすくダークマゼンタ色でイテラブルxdataとイテラブルydataについての散布図を描画する	plt.plot(xdata, ydata, c='darkmagenta', alpha=0.5)	plt.plot(xdata, ydata, c='darkmagenta', alpha=0.5)
code: 重なりを見やすくダークオリーブグリーン色で散布図をプロットする	plt.plot(xdata, ydata, c='darkolivegreen', alpha=0.5)	plt.plot(xdata, ydata, c='darkolivegreen', alpha=0.5)
code: 重なりを見やすくダークオリーブグリーン色のマーカーとして散布図を描く	plt.plot(xdata, ydata, c='darkolivegreen', alpha=0.5)	plt.plot(xdata, ydata, c='darkolivegreen', alpha=0.5)
code: 散布図を重なりを見やすくダークオリーブグリーン色としてプロットする	plt.plot(xdata, ydata, c='darkolivegreen', alpha=0.5)	plt.plot(xdata, ydata, c='darkolivegreen', alpha=0.5)
code: 重なりを見やすくデータ列xdataと数列ydataについての散布図をダークオリーブグリーン色として描く	plt.plot(xdata, ydata, c='darkolivegreen', alpha=0.5)	plt.plot(xdata, ydata, c='darkolivegreen', alpha=0.5)
code: ダークオリーブグリーン色でデータ列xdataとデータ列ydataの散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='darkolivegreen', alpha=0.5)	plt.plot(xdata, ydata, c='darkolivegreen', alpha=0.5)
code: 重なりを見やすくリストxdataと数列ydataの散布図をダークオリーブグリーン色として描く	plt.plot(xdata, ydata, c='darkolivegreen', alpha=0.5)	plt.plot(xdata, ydata, c='darkolivegreen', alpha=0.5)
code: 散布図をダークオレンジ色のマーカーとして重なりを見やすくプロットする	plt.plot(xdata, ydata, c='darkorange', alpha=0.5)	plt.plot(xdata, ydata, c='darkorange', alpha=0.5)
code: 散布図を重なりを見やすくダークオレンジ色で描く	plt.plot(xdata, ydata, c='darkorange', alpha=0.5)	plt.plot(xdata, ydata, c='darkorange', alpha=0.5)
code: ダークオレンジ色で散布図を重なりを見やすくプロットする	plt.plot(xdata, ydata, c='darkorange', alpha=0.5)	plt.plot(xdata, ydata, c='darkorange', alpha=0.5)
code: リストxdataとデータ列ydataの散布図をダークオレンジ色として重なりを見やすくプロットする	plt.plot(xdata, ydata, c='darkorange', alpha=0.5)	plt.plot(xdata, ydata, c='darkorange', alpha=0.5)
code: 配列xdataとデータ列ydataについての散布図をダークオレンジ色を用いて重なりを見やすくプロットする	plt.plot(xdata, ydata, c='darkorange', alpha=0.5)	plt.plot(xdata, ydata, c='darkorange', alpha=0.5)
code: 数列xdataとデータ列ydataの散布図を重なりを見やすくダークオレンジ色で描画する	plt.plot(xdata, ydata, c='darkorange', alpha=0.5)	plt.plot(xdata, ydata, c='darkorange', alpha=0.5)
code: ダークオーキッド色のマーカーとして散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='darkorchid', alpha=0.5)	plt.plot(xdata, ydata, c='darkorchid', alpha=0.5)
code: 散布図を重なりを見やすくダークオーキッド色のマーカーで描く	plt.plot(xdata, ydata, c='darkorchid', alpha=0.5)	plt.plot(xdata, ydata, c='darkorchid', alpha=0.5)
code: 散布図を重なりを見やすくダークオーキッド色として描画する	plt.plot(xdata, ydata, c='darkorchid', alpha=0.5)	plt.plot(xdata, ydata, c='darkorchid', alpha=0.5)
code: ダークオーキッド色として重なりを見やすくイテラブルxdataと数列ydataについての散布図を描画する	plt.plot(xdata, ydata, c='darkorchid', alpha=0.5)	plt.plot(xdata, ydata, c='darkorchid', alpha=0.5)
code: 重なりを見やすく配列xdataと数列ydataについての散布図をダークオーキッド色として描画する	plt.plot(xdata, ydata, c='darkorchid', alpha=0.5)	plt.plot(xdata, ydata, c='darkorchid', alpha=0.5)
code: 重なりを見やすくデータ列xdataとデータ列ydataの散布図をダークオーキッド色を使って描画する	plt.plot(xdata, ydata, c='darkorchid', alpha=0.5)	plt.plot(xdata, ydata, c='darkorchid', alpha=0.5)
code: 重なりを見やすく散布図をダークレッド色のマーカーとして描画する	plt.plot(xdata, ydata, c='darkred', alpha=0.5)	plt.plot(xdata, ydata, c='darkred', alpha=0.5)
code: 重なりを見やすくダークレッド色を使って散布図を描く	plt.plot(xdata, ydata, c='darkred', alpha=0.5)	plt.plot(xdata, ydata, c='darkred', alpha=0.5)
code: 散布図を重なりを見やすくダークレッド色で描く	plt.plot(xdata, ydata, c='darkred', alpha=0.5)	plt.plot(xdata, ydata, c='darkred', alpha=0.5)
code: ダークレッド色を用いて重なりを見やすく数列xdataとデータ列ydataについての散布図を描画する	plt.plot(xdata, ydata, c='darkred', alpha=0.5)	plt.plot(xdata, ydata, c='darkred', alpha=0.5)
code: リストxdataとイテラブルydataの散布図を重なりを見やすくダークレッド色を用いて描画する	plt.plot(xdata, ydata, c='darkred', alpha=0.5)	plt.plot(xdata, ydata, c='darkred', alpha=0.5)
code: リストxdataとリストydataの散布図を重なりを見やすくダークレッド色を用いて描画する	plt.plot(xdata, ydata, c='darkred', alpha=0.5)	plt.plot(xdata, ydata, c='darkred', alpha=0.5)
code: 散布図を重なりを見やすくダークサーモン色のマーカーとしてプロットする	plt.plot(xdata, ydata, c='darksalmon', alpha=0.5)	plt.plot(xdata, ydata, c='darksalmon', alpha=0.5)
code: 重なりを見やすく散布図をダークサーモン色のマーカーとして描く	plt.plot(xdata, ydata, c='darksalmon', alpha=0.5)	plt.plot(xdata, ydata, c='darksalmon', alpha=0.5)
code: ダークサーモン色のマーカーを用いて重なりを見やすく散布図を描画する	plt.plot(xdata, ydata, c='darksalmon', alpha=0.5)	plt.plot(xdata, ydata, c='darksalmon', alpha=0.5)
code: イテラブルxdataと配列ydataについての散布図を重なりを見やすくダークサーモン色でプロットする	plt.plot(xdata, ydata, c='darksalmon', alpha=0.5)	plt.plot(xdata, ydata, c='darksalmon', alpha=0.5)
code: 配列xdataと配列ydataについての散布図をダークサーモン色で重なりを見やすくプロットする	plt.plot(xdata, ydata, c='darksalmon', alpha=0.5)	plt.plot(xdata, ydata, c='darksalmon', alpha=0.5)
code: ダークサーモン色で重なりを見やすくイテラブルxdataとイテラブルydataについての散布図をプロットする	plt.plot(xdata, ydata, c='darksalmon', alpha=0.5)	plt.plot(xdata, ydata, c='darksalmon', alpha=0.5)
code: 散布図を重なりを見やすくダークシアグリーン色で描く	plt.plot(xdata, ydata, c='darkseagreen', alpha=0.5)	plt.plot(xdata, ydata, c='darkseagreen', alpha=0.5)
code: 重なりを見やすくダークシアグリーン色を使って散布図を描画する	plt.plot(xdata, ydata, c='darkseagreen', alpha=0.5)	plt.plot(xdata, ydata, c='darkseagreen', alpha=0.5)
code: 重なりを見やすくダークシアグリーン色として散布図を描画する	plt.plot(xdata, ydata, c='darkseagreen', alpha=0.5)	plt.plot(xdata, ydata, c='darkseagreen', alpha=0.5)
code: 重なりを見やすくダークシアグリーン色でリストxdataと配列ydataについての散布図を描画する	plt.plot(xdata, ydata, c='darkseagreen', alpha=0.5)	plt.plot(xdata, ydata, c='darkseagreen', alpha=0.5)
code: 配列xdataと数列ydataについての散布図を重なりを見やすくダークシアグリーン色を使ってプロットする	plt.plot(xdata, ydata, c='darkseagreen', alpha=0.5)	plt.plot(xdata, ydata, c='darkseagreen', alpha=0.5)
code: ダークシアグリーン色として数列xdataと数列ydataの散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='darkseagreen', alpha=0.5)	plt.plot(xdata, ydata, c='darkseagreen', alpha=0.5)
code: 重なりを見やすくダークスレートブルー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='darkslateblue', alpha=0.5)	plt.plot(xdata, ydata, c='darkslateblue', alpha=0.5)
code: 重なりを見やすく散布図をダークスレートブルー色として描く	plt.plot(xdata, ydata, c='darkslateblue', alpha=0.5)	plt.plot(xdata, ydata, c='darkslateblue', alpha=0.5)
code: 重なりを見やすく散布図をダークスレートブルー色のマーカーを用いてプロットする	plt.plot(xdata, ydata, c='darkslateblue', alpha=0.5)	plt.plot(xdata, ydata, c='darkslateblue', alpha=0.5)
code: 数列xdataと数列ydataについての散布図をダークスレートブルー色で重なりを見やすく描く	plt.plot(xdata, ydata, c='darkslateblue', alpha=0.5)	plt.plot(xdata, ydata, c='darkslateblue', alpha=0.5)
code: イテラブルxdataとイテラブルydataの散布図をダークスレートブルー色で重なりを見やすく描く	plt.plot(xdata, ydata, c='darkslateblue', alpha=0.5)	plt.plot(xdata, ydata, c='darkslateblue', alpha=0.5)
code: ダークスレートブルー色として数列xdataと数列ydataについての散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkslateblue', alpha=0.5)	plt.plot(xdata, ydata, c='darkslateblue', alpha=0.5)
code: 散布図を重なりを見やすくダークスラテグレー色のマーカーを用いて描く	plt.plot(xdata, ydata, c='darkslategray', alpha=0.5)	plt.plot(xdata, ydata, c='darkslategray', alpha=0.5)
code: ダークスラテグレー色として散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='darkslategray', alpha=0.5)	plt.plot(xdata, ydata, c='darkslategray', alpha=0.5)
code: 散布図を重なりを見やすくダークスラテグレー色としてプロットする	plt.plot(xdata, ydata, c='darkslategray', alpha=0.5)	plt.plot(xdata, ydata, c='darkslategray', alpha=0.5)
code: 重なりを見やすく配列xdataとイテラブルydataの散布図をダークスラテグレー色を使って描く	plt.plot(xdata, ydata, c='darkslategray', alpha=0.5)	plt.plot(xdata, ydata, c='darkslategray', alpha=0.5)
code: 配列xdataと配列ydataについての散布図をダークスラテグレー色を用いて重なりを見やすく描く	plt.plot(xdata, ydata, c='darkslategray', alpha=0.5)	plt.plot(xdata, ydata, c='darkslategray', alpha=0.5)
code: データ列xdataとイテラブルydataについての散布図を重なりを見やすくダークスラテグレー色で描く	plt.plot(xdata, ydata, c='darkslategray', alpha=0.5)	plt.plot(xdata, ydata, c='darkslategray', alpha=0.5)
code: 重なりを見やすくダーク・スラテグレー色のマーカーを使って散布図を描く	plt.plot(xdata, ydata, c='darkslategrey', alpha=0.5)	plt.plot(xdata, ydata, c='darkslategrey', alpha=0.5)
code: ダーク・スラテグレー色のマーカーとして散布図を重なりを見やすくプロットする	plt.plot(xdata, ydata, c='darkslategrey', alpha=0.5)	plt.plot(xdata, ydata, c='darkslategrey', alpha=0.5)
code: ダーク・スラテグレー色のマーカーとして重なりを見やすく散布図を描く	plt.plot(xdata, ydata, c='darkslategrey', alpha=0.5)	plt.plot(xdata, ydata, c='darkslategrey', alpha=0.5)
code: ダーク・スラテグレー色としてイテラブルxdataと配列ydataについての散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkslategrey', alpha=0.5)	plt.plot(xdata, ydata, c='darkslategrey', alpha=0.5)
code: ダーク・スラテグレー色として重なりを見やすくリストxdataとイテラブルydataの散布図を描画する	plt.plot(xdata, ydata, c='darkslategrey', alpha=0.5)	plt.plot(xdata, ydata, c='darkslategrey', alpha=0.5)
code: 数列xdataと数列ydataについての散布図を重なりを見やすくダーク・スラテグレー色で描画する	plt.plot(xdata, ydata, c='darkslategrey', alpha=0.5)	plt.plot(xdata, ydata, c='darkslategrey', alpha=0.5)
code: ダークターコイズ色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='darkturquoise', alpha=0.5)	plt.plot(xdata, ydata, c='darkturquoise', alpha=0.5)
code: ダークターコイズ色のマーカーとして散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='darkturquoise', alpha=0.5)	plt.plot(xdata, ydata, c='darkturquoise', alpha=0.5)
code: ダークターコイズ色のマーカーで重なりを見やすく散布図を描画する	plt.plot(xdata, ydata, c='darkturquoise', alpha=0.5)	plt.plot(xdata, ydata, c='darkturquoise', alpha=0.5)
code: 配列xdataとイテラブルydataについての散布図を重なりを見やすくダークターコイズ色を使って描画する	plt.plot(xdata, ydata, c='darkturquoise', alpha=0.5)	plt.plot(xdata, ydata, c='darkturquoise', alpha=0.5)
code: 重なりを見やすくダークターコイズ色でデータ列xdataと配列ydataの散布図を描画する	plt.plot(xdata, ydata, c='darkturquoise', alpha=0.5)	plt.plot(xdata, ydata, c='darkturquoise', alpha=0.5)
code: 重なりを見やすくデータ列xdataと数列ydataの散布図をダークターコイズ色を使って描く	plt.plot(xdata, ydata, c='darkturquoise', alpha=0.5)	plt.plot(xdata, ydata, c='darkturquoise', alpha=0.5)
code: ダークバイオレット色のマーカーとして重なりを見やすく散布図を描画する	plt.plot(xdata, ydata, c='darkviolet', alpha=0.5)	plt.plot(xdata, ydata, c='darkviolet', alpha=0.5)
code: ダークバイオレット色として散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='darkviolet', alpha=0.5)	plt.plot(xdata, ydata, c='darkviolet', alpha=0.5)
code: ダークバイオレット色で重なりを見やすく散布図を描画する	plt.plot(xdata, ydata, c='darkviolet', alpha=0.5)	plt.plot(xdata, ydata, c='darkviolet', alpha=0.5)
code: ダークバイオレット色で重なりを見やすく配列xdataと配列ydataについての散布図を描画する	plt.plot(xdata, ydata, c='darkviolet', alpha=0.5)	plt.plot(xdata, ydata, c='darkviolet', alpha=0.5)
code: ダークバイオレット色として重なりを見やすくリストxdataと数列ydataについての散布図をプロットする	plt.plot(xdata, ydata, c='darkviolet', alpha=0.5)	plt.plot(xdata, ydata, c='darkviolet', alpha=0.5)
code: 重なりを見やすくイテラブルxdataとデータ列ydataの散布図をダークバイオレット色でプロットする	plt.plot(xdata, ydata, c='darkviolet', alpha=0.5)	plt.plot(xdata, ydata, c='darkviolet', alpha=0.5)
code: 散布図を重なりを見やすくデピンク色を用いてプロットする	plt.plot(xdata, ydata, c='deeppink', alpha=0.5)	plt.plot(xdata, ydata, c='deeppink', alpha=0.5)
code: デピンク色として重なりを見やすく散布図を描く	plt.plot(xdata, ydata, c='deeppink', alpha=0.5)	plt.plot(xdata, ydata, c='deeppink', alpha=0.5)
code: 重なりを見やすく散布図をデピンク色として描画する	plt.plot(xdata, ydata, c='deeppink', alpha=0.5)	plt.plot(xdata, ydata, c='deeppink', alpha=0.5)
code: 配列xdataとイテラブルydataについての散布図をデピンク色として重なりを見やすく描く	plt.plot(xdata, ydata, c='deeppink', alpha=0.5)	plt.plot(xdata, ydata, c='deeppink', alpha=0.5)
code: 数列xdataと配列ydataの散布図を重なりを見やすくデピンク色を使ってプロットする	plt.plot(xdata, ydata, c='deeppink', alpha=0.5)	plt.plot(xdata, ydata, c='deeppink', alpha=0.5)
code: 重なりを見やすく数列xdataと配列ydataについての散布図をデピンク色を使って描く	plt.plot(xdata, ydata, c='deeppink', alpha=0.5)	plt.plot(xdata, ydata, c='deeppink', alpha=0.5)
code: ディープスカイブルー色で散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='deepskyblue', alpha=0.5)	plt.plot(xdata, ydata, c='deepskyblue', alpha=0.5)
code: 散布図を重なりを見やすくディープスカイブルー色として描画する	plt.plot(xdata, ydata, c='deepskyblue', alpha=0.5)	plt.plot(xdata, ydata, c='deepskyblue', alpha=0.5)
code: 散布図を重なりを見やすくディープスカイブルー色として描く	plt.plot(xdata, ydata, c='deepskyblue', alpha=0.5)	plt.plot(xdata, ydata, c='deepskyblue', alpha=0.5)
code: ディープスカイブルー色で重なりを見やすくイテラブルxdataと配列ydataの散布図をプロットする	plt.plot(xdata, ydata, c='deepskyblue', alpha=0.5)	plt.plot(xdata, ydata, c='deepskyblue', alpha=0.5)
code: ディープスカイブルー色としてイテラブルxdataとリストydataについての散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='deepskyblue', alpha=0.5)	plt.plot(xdata, ydata, c='deepskyblue', alpha=0.5)
code: 重なりを見やすくディープスカイブルー色でリストxdataとイテラブルydataについての散布図を描画する	plt.plot(xdata, ydata, c='deepskyblue', alpha=0.5)	plt.plot(xdata, ydata, c='deepskyblue', alpha=0.5)
code: 散布図を重なりを見やすくディムグレー色のマーカーで描画する	plt.plot(xdata, ydata, c='dimgray', alpha=0.5)	plt.plot(xdata, ydata, c='dimgray', alpha=0.5)
code: 散布図をディムグレー色のマーカーとして重なりを見やすく描く	plt.plot(xdata, ydata, c='dimgrey', alpha=0.5)	plt.plot(xdata, ydata, c='dimgray', alpha=0.5)
code: 散布図を重なりを見やすくディムグレー色のマーカーでプロットする	plt.plot(xdata, ydata, c='dimgrey', alpha=0.5)	plt.plot(xdata, ydata, c='dimgray', alpha=0.5)
code: 重なりを見やすくリストxdataと配列ydataについての散布図をディムグレー色でプロットする	plt.plot(xdata, ydata, c='dimgray', alpha=0.5)	plt.plot(xdata, ydata, c='dimgray', alpha=0.5)
code: 数列xdataと数列ydataについての散布図を重なりを見やすくディムグレー色で描画する	plt.plot(xdata, ydata, c='dimgray', alpha=0.5)	plt.plot(xdata, ydata, c='dimgray', alpha=0.5)
code: イテラブルxdataと配列ydataについての散布図をディムグレー色を用いて重なりを見やすくプロットする	plt.plot(xdata, ydata, c='dimgrey', alpha=0.5)	plt.plot(xdata, ydata, c='dimgray', alpha=0.5)
code: 散布図を重なりを見やすくディムグレー色のマーカーで描画する	plt.plot(xdata, ydata, c='dimgray', alpha=0.5)	plt.plot(xdata, ydata, c='dimgrey', alpha=0.5)
code: ディムグレー色のマーカーを使って散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='dimgray', alpha=0.5)	plt.plot(xdata, ydata, c='dimgrey', alpha=0.5)
code: 散布図をディムグレー色のマーカーとして重なりを見やすく描画する	plt.plot(xdata, ydata, c='dimgrey', alpha=0.5)	plt.plot(xdata, ydata, c='dimgrey', alpha=0.5)
code: 重なりを見やすくディムグレー色でデータ列xdataとリストydataの散布図を描画する	plt.plot(xdata, ydata, c='dimgray', alpha=0.5)	plt.plot(xdata, ydata, c='dimgrey', alpha=0.5)
code: ディムグレー色で重なりを見やすくリストxdataとリストydataの散布図を描画する	plt.plot(xdata, ydata, c='dimgray', alpha=0.5)	plt.plot(xdata, ydata, c='dimgrey', alpha=0.5)
code: 重なりを見やすくディムグレー色として配列xdataとイテラブルydataについての散布図を描画する	plt.plot(xdata, ydata, c='dimgray', alpha=0.5)	plt.plot(xdata, ydata, c='dimgrey', alpha=0.5)
code: 散布図をドジャーブルー色を用いて重なりを見やすく描く	plt.plot(xdata, ydata, c='dodgerblue', alpha=0.5)	plt.plot(xdata, ydata, c='dodgerblue', alpha=0.5)
code: ドジャーブルー色を使って散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='dodgerblue', alpha=0.5)	plt.plot(xdata, ydata, c='dodgerblue', alpha=0.5)
code: 重なりを見やすくドジャーブルー色を用いて散布図を描く	plt.plot(xdata, ydata, c='dodgerblue', alpha=0.5)	plt.plot(xdata, ydata, c='dodgerblue', alpha=0.5)
code: 重なりを見やすくデータ列xdataとリストydataの散布図をドジャーブルー色を使って描く	plt.plot(xdata, ydata, c='dodgerblue', alpha=0.5)	plt.plot(xdata, ydata, c='dodgerblue', alpha=0.5)
code: 重なりを見やすくデータ列xdataとリストydataについての散布図をドジャーブルー色を使ってプロットする	plt.plot(xdata, ydata, c='dodgerblue', alpha=0.5)	plt.plot(xdata, ydata, c='dodgerblue', alpha=0.5)
code: リストxdataと配列ydataについての散布図をドジャーブルー色で重なりを見やすく描く	plt.plot(xdata, ydata, c='dodgerblue', alpha=0.5)	plt.plot(xdata, ydata, c='dodgerblue', alpha=0.5)
code: 重なりを見やすく散布図を耐火レンガ色のマーカーとして描画する	plt.plot(xdata, ydata, c='firebrick', alpha=0.5)	plt.plot(xdata, ydata, c='firebrick', alpha=0.5)
code: 散布図を重なりを見やすく耐火レンガ色のマーカーを用いて描く	plt.plot(xdata, ydata, c='firebrick', alpha=0.5)	plt.plot(xdata, ydata, c='firebrick', alpha=0.5)
code: 耐火レンガ色のマーカーを用いて重なりを見やすく散布図をプロットする	plt.plot(xdata, ydata, c='firebrick', alpha=0.5)	plt.plot(xdata, ydata, c='firebrick', alpha=0.5)
code: 耐火レンガ色としてリストxdataと配列ydataの散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='firebrick', alpha=0.5)	plt.plot(xdata, ydata, c='firebrick', alpha=0.5)
code: 重なりを見やすくイテラブルxdataと配列ydataの散布図を耐火レンガ色で描画する	plt.plot(xdata, ydata, c='firebrick', alpha=0.5)	plt.plot(xdata, ydata, c='firebrick', alpha=0.5)
code: 耐火レンガ色でデータ列xdataとデータ列ydataの散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='firebrick', alpha=0.5)	plt.plot(xdata, ydata, c='firebrick', alpha=0.5)
code: 重なりを見やすく散布図をフローラルホワイト色を使って描画する	plt.plot(xdata, ydata, c='floralwhite', alpha=0.5)	plt.plot(xdata, ydata, c='floralwhite', alpha=0.5)
code: 散布図を重なりを見やすくフローラルホワイト色で描く	plt.plot(xdata, ydata, c='floralwhite', alpha=0.5)	plt.plot(xdata, ydata, c='floralwhite', alpha=0.5)
code: 散布図をフローラルホワイト色のマーカーで重なりを見やすく描く	plt.plot(xdata, ydata, c='floralwhite', alpha=0.5)	plt.plot(xdata, ydata, c='floralwhite', alpha=0.5)
code: 重なりを見やすく数列xdataと配列ydataについての散布図をフローラルホワイト色で描画する	plt.plot(xdata, ydata, c='floralwhite', alpha=0.5)	plt.plot(xdata, ydata, c='floralwhite', alpha=0.5)
code: フローラルホワイト色として重なりを見やすくデータ列xdataとリストydataの散布図をプロットする	plt.plot(xdata, ydata, c='floralwhite', alpha=0.5)	plt.plot(xdata, ydata, c='floralwhite', alpha=0.5)
code: リストxdataとイテラブルydataについての散布図を重なりを見やすくフローラルホワイト色として描画する	plt.plot(xdata, ydata, c='floralwhite', alpha=0.5)	plt.plot(xdata, ydata, c='floralwhite', alpha=0.5)
code: フォレストグリーン色を使って重なりを見やすく散布図をプロットする	plt.plot(xdata, ydata, c='forestgreen', alpha=0.5)	plt.plot(xdata, ydata, c='forestgreen', alpha=0.5)
code: フォレストグリーン色のマーカーで散布図を重なりを見やすくプロットする	plt.plot(xdata, ydata, c='forestgreen', alpha=0.5)	plt.plot(xdata, ydata, c='forestgreen', alpha=0.5)
code: フォレストグリーン色を使って散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='forestgreen', alpha=0.5)	plt.plot(xdata, ydata, c='forestgreen', alpha=0.5)
code: フォレストグリーン色としてリストxdataとリストydataの散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='forestgreen', alpha=0.5)	plt.plot(xdata, ydata, c='forestgreen', alpha=0.5)
code: 配列xdataとデータ列ydataの散布図を重なりを見やすくフォレストグリーン色で描画する	plt.plot(xdata, ydata, c='forestgreen', alpha=0.5)	plt.plot(xdata, ydata, c='forestgreen', alpha=0.5)
code: データ列xdataと数列ydataについての散布図を重なりを見やすくフォレストグリーン色として描く	plt.plot(xdata, ydata, c='forestgreen', alpha=0.5)	plt.plot(xdata, ydata, c='forestgreen', alpha=0.5)
code: 重なりを見やすく散布図をフクシア色のマーカーでプロットする	plt.plot(xdata, ydata, c='fuchsia', alpha=0.5)	plt.plot(xdata, ydata, c='fuchsia', alpha=0.5)
code: 散布図をフクシア色を用いて重なりを見やすく描く	plt.plot(xdata, ydata, c='fuchsia', alpha=0.5)	plt.plot(xdata, ydata, c='fuchsia', alpha=0.5)
code: 散布図をフクシア色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='fuchsia', alpha=0.5)	plt.plot(xdata, ydata, c='fuchsia', alpha=0.5)
code: フクシア色で数列xdataとデータ列ydataについての散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='fuchsia', alpha=0.5)	plt.plot(xdata, ydata, c='fuchsia', alpha=0.5)
code: 重なりを見やすくデータ列xdataとリストydataの散布図をフクシア色で描く	plt.plot(xdata, ydata, c='fuchsia', alpha=0.5)	plt.plot(xdata, ydata, c='fuchsia', alpha=0.5)
code: フクシア色でイテラブルxdataと数列ydataの散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='fuchsia', alpha=0.5)	plt.plot(xdata, ydata, c='fuchsia', alpha=0.5)
code: 散布図をゲインズボロ色のマーカーで重なりを見やすく描く	plt.plot(xdata, ydata, c='gainsboro', alpha=0.5)	plt.plot(xdata, ydata, c='gainsboro', alpha=0.5)
code: ゲインズボロ色のマーカーとして重なりを見やすく散布図をプロットする	plt.plot(xdata, ydata, c='gainsboro', alpha=0.5)	plt.plot(xdata, ydata, c='gainsboro', alpha=0.5)
code: 散布図を重なりを見やすくゲインズボロ色のマーカーで描画する	plt.plot(xdata, ydata, c='gainsboro', alpha=0.5)	plt.plot(xdata, ydata, c='gainsboro', alpha=0.5)
code: 重なりを見やすくデータ列xdataと数列ydataについての散布図をゲインズボロ色として描く	plt.plot(xdata, ydata, c='gainsboro', alpha=0.5)	plt.plot(xdata, ydata, c='gainsboro', alpha=0.5)
code: イテラブルxdataと配列ydataの散布図をゲインズボロ色を用いて重なりを見やすく描画する	plt.plot(xdata, ydata, c='gainsboro', alpha=0.5)	plt.plot(xdata, ydata, c='gainsboro', alpha=0.5)
code: 重なりを見やすくデータ列xdataとデータ列ydataの散布図をゲインズボロ色で描画する	plt.plot(xdata, ydata, c='gainsboro', alpha=0.5)	plt.plot(xdata, ydata, c='gainsboro', alpha=0.5)
code: 散布図を重なりを見やすくゴーストホワイト色で描画する	plt.plot(xdata, ydata, c='ghostwhite', alpha=0.5)	plt.plot(xdata, ydata, c='ghostwhite', alpha=0.5)
code: 散布図をゴーストホワイト色のマーカーとして重なりを見やすく描く	plt.plot(xdata, ydata, c='ghostwhite', alpha=0.5)	plt.plot(xdata, ydata, c='ghostwhite', alpha=0.5)
code: 重なりを見やすく散布図をゴーストホワイト色のマーカーを用いて描画する	plt.plot(xdata, ydata, c='ghostwhite', alpha=0.5)	plt.plot(xdata, ydata, c='ghostwhite', alpha=0.5)
code: イテラブルxdataとイテラブルydataについての散布図をゴーストホワイト色で重なりを見やすく描く	plt.plot(xdata, ydata, c='ghostwhite', alpha=0.5)	plt.plot(xdata, ydata, c='ghostwhite', alpha=0.5)
code: 重なりを見やすくゴーストホワイト色で数列xdataとリストydataについての散布図を描画する	plt.plot(xdata, ydata, c='ghostwhite', alpha=0.5)	plt.plot(xdata, ydata, c='ghostwhite', alpha=0.5)
code: 配列xdataと数列ydataについての散布図を重なりを見やすくゴーストホワイト色で描画する	plt.plot(xdata, ydata, c='ghostwhite', alpha=0.5)	plt.plot(xdata, ydata, c='ghostwhite', alpha=0.5)
code: ゴールド色のマーカーとして散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='gold', alpha=0.5)	plt.plot(xdata, ydata, c='gold', alpha=0.5)
code: ゴールド色のマーカーを使って散布図を重なりを見やすくプロットする	plt.plot(xdata, ydata, c='gold', alpha=0.5)	plt.plot(xdata, ydata, c='gold', alpha=0.5)
code: 重なりを見やすく散布図をゴールド色を用いてプロットする	plt.plot(xdata, ydata, c='gold', alpha=0.5)	plt.plot(xdata, ydata, c='gold', alpha=0.5)
code: ゴールド色で重なりを見やすくイテラブルxdataとリストydataの散布図をプロットする	plt.plot(xdata, ydata, c='gold', alpha=0.5)	plt.plot(xdata, ydata, c='gold', alpha=0.5)
code: 重なりを見やすくゴールド色として配列xdataとデータ列ydataの散布図を描画する	plt.plot(xdata, ydata, c='gold', alpha=0.5)	plt.plot(xdata, ydata, c='gold', alpha=0.5)
code: イテラブルxdataとイテラブルydataの散布図を重なりを見やすくゴールド色を用いて描画する	plt.plot(xdata, ydata, c='gold', alpha=0.5)	plt.plot(xdata, ydata, c='gold', alpha=0.5)
code: 重なりを見やすく散布図をゴールデンロッド色を用いてプロットする	plt.plot(xdata, ydata, c='goldenrod', alpha=0.5)	plt.plot(xdata, ydata, c='goldenrod', alpha=0.5)
code: 散布図を重なりを見やすくゴールデンロッド色として描画する	plt.plot(xdata, ydata, c='goldenrod', alpha=0.5)	plt.plot(xdata, ydata, c='goldenrod', alpha=0.5)
code: 散布図をゴールデンロッド色で重なりを見やすくプロットする	plt.plot(xdata, ydata, c='goldenrod', alpha=0.5)	plt.plot(xdata, ydata, c='goldenrod', alpha=0.5)
code: ゴールデンロッド色を用いて数列xdataと数列ydataについての散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='goldenrod', alpha=0.5)	plt.plot(xdata, ydata, c='goldenrod', alpha=0.5)
code: ゴールデンロッド色として重なりを見やすく数列xdataと配列ydataについての散布図を描画する	plt.plot(xdata, ydata, c='goldenrod', alpha=0.5)	plt.plot(xdata, ydata, c='goldenrod', alpha=0.5)
code: 重なりを見やすくゴールデンロッド色として配列xdataと数列ydataについての散布図を描画する	plt.plot(xdata, ydata, c='goldenrod', alpha=0.5)	plt.plot(xdata, ydata, c='goldenrod', alpha=0.5)
code: 重なりを見やすく散布図をグレー色を用いてプロットする	plt.plot(xdata, ydata, c='grey', alpha=0.5)	plt.plot(xdata, ydata, c='gray', alpha=0.5)
code: 重なりを見やすく散布図をグレー色を用いて描く	plt.plot(xdata, ydata, c='grey', alpha=0.5)	plt.plot(xdata, ydata, c='gray', alpha=0.5)
code: 重なりを見やすく散布図をグレー色のマーカーとしてプロットする	plt.plot(xdata, ydata, c='grey', alpha=0.5)	plt.plot(xdata, ydata, c='gray', alpha=0.5)
code: 重なりを見やすく数列xdataとイテラブルydataについての散布図をグレー色として描画する	plt.plot(xdata, ydata, c='grey', alpha=0.5)	plt.plot(xdata, ydata, c='gray', alpha=0.5)
code: 重なりを見やすく数列xdataとデータ列ydataについての散布図をグレー色で描く	plt.plot(xdata, ydata, c='grey', alpha=0.5)	plt.plot(xdata, ydata, c='gray', alpha=0.5)
code: グレー色を用いて重なりを見やすく配列xdataとリストydataについての散布図を描画する	plt.plot(xdata, ydata, c='gray', alpha=0.5)	plt.plot(xdata, ydata, c='gray', alpha=0.5)
code: 重なりを見やすくグリーン色を使って散布図を描画する	plt.plot(xdata, ydata, c='green', alpha=0.5)	plt.plot(xdata, ydata, c='green', alpha=0.5)
code: グリーン色のマーカーで散布図を重なりを見やすくプロットする	plt.plot(xdata, ydata, c='green', alpha=0.5)	plt.plot(xdata, ydata, c='green', alpha=0.5)
code: グリーン色で重なりを見やすく散布図を描画する	plt.plot(xdata, ydata, c='green', alpha=0.5)	plt.plot(xdata, ydata, c='green', alpha=0.5)
code: グリーン色として配列xdataとイテラブルydataについての散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='green', alpha=0.5)	plt.plot(xdata, ydata, c='green', alpha=0.5)
code: グリーン色として数列xdataとイテラブルydataについての散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='green', alpha=0.5)	plt.plot(xdata, ydata, c='green', alpha=0.5)
code: 数列xdataとイテラブルydataの散布図を重なりを見やすくグリーン色を使って描く	plt.plot(xdata, ydata, c='green', alpha=0.5)	plt.plot(xdata, ydata, c='green', alpha=0.5)
code: 重なりを見やすく散布図をグリーンイエロー色のマーカーを使って描画する	plt.plot(xdata, ydata, c='greenyellow', alpha=0.5)	plt.plot(xdata, ydata, c='greenyellow', alpha=0.5)
code: 重なりを見やすくグリーンイエロー色を使って散布図をプロットする	plt.plot(xdata, ydata, c='yellowgreen', alpha=0.5)	plt.plot(xdata, ydata, c='greenyellow', alpha=0.5)
code: 散布図をグリーンイエロー色で重なりを見やすくプロットする	plt.plot(xdata, ydata, c='greenyellow', alpha=0.5)	plt.plot(xdata, ydata, c='greenyellow', alpha=0.5)
code: リストxdataとイテラブルydataについての散布図をグリーンイエロー色で重なりを見やすく描く	plt.plot(xdata, ydata, c='greenyellow', alpha=0.5)	plt.plot(xdata, ydata, c='greenyellow', alpha=0.5)
code: 重なりを見やすく数列xdataとデータ列ydataについての散布図をグリーンイエロー色として描く	plt.plot(xdata, ydata, c='yellowgreen', alpha=0.5)	plt.plot(xdata, ydata, c='greenyellow', alpha=0.5)
code: 重なりを見やすくグリーンイエロー色で数列xdataとリストydataの散布図を描画する	plt.plot(xdata, ydata, c='yellowgreen', alpha=0.5)	plt.plot(xdata, ydata, c='greenyellow', alpha=0.5)
code: 重なりを見やすくグレー色で散布図を描く	plt.plot(xdata, ydata, c='grey', alpha=0.5)	plt.plot(xdata, ydata, c='grey', alpha=0.5)
code: グレー色として重なりを見やすく散布図を描画する	plt.plot(xdata, ydata, c='gray', alpha=0.5)	plt.plot(xdata, ydata, c='grey', alpha=0.5)
code: 散布図を重なりを見やすくグレー色のマーカーとして描く	plt.plot(xdata, ydata, c='grey', alpha=0.5)	plt.plot(xdata, ydata, c='grey', alpha=0.5)
code: イテラブルxdataとデータ列ydataについての散布図を重なりを見やすくグレー色で描く	plt.plot(xdata, ydata, c='grey', alpha=0.5)	plt.plot(xdata, ydata, c='grey', alpha=0.5)
code: 数列xdataとリストydataについての散布図を重なりを見やすくグレー色を用いて描く	plt.plot(xdata, ydata, c='grey', alpha=0.5)	plt.plot(xdata, ydata, c='grey', alpha=0.5)
code: 重なりを見やすくグレー色を用いてイテラブルxdataと配列ydataについての散布図をプロットする	plt.plot(xdata, ydata, c='grey', alpha=0.5)	plt.plot(xdata, ydata, c='grey', alpha=0.5)
code: ハニーデュー色を用いて散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='honeydew', alpha=0.5)	plt.plot(xdata, ydata, c='honeydew', alpha=0.5)
code: 重なりを見やすく散布図をハニーデュー色のマーカーとして描く	plt.plot(xdata, ydata, c='honeydew', alpha=0.5)	plt.plot(xdata, ydata, c='honeydew', alpha=0.5)
code: 重なりを見やすく散布図をハニーデュー色のマーカーを用いて描く	plt.plot(xdata, ydata, c='honeydew', alpha=0.5)	plt.plot(xdata, ydata, c='honeydew', alpha=0.5)
code: イテラブルxdataと配列ydataの散布図を重なりを見やすくハニーデュー色として描く	plt.plot(xdata, ydata, c='honeydew', alpha=0.5)	plt.plot(xdata, ydata, c='honeydew', alpha=0.5)
code: 重なりを見やすくハニーデュー色を使ってデータ列xdataと配列ydataの散布図を描画する	plt.plot(xdata, ydata, c='honeydew', alpha=0.5)	plt.plot(xdata, ydata, c='honeydew', alpha=0.5)
code: ハニーデュー色を使ってイテラブルxdataとデータ列ydataの散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='honeydew', alpha=0.5)	plt.plot(xdata, ydata, c='honeydew', alpha=0.5)
code: 重なりを見やすくホットピンク色として散布図をプロットする	plt.plot(xdata, ydata, c='hotpink', alpha=0.5)	plt.plot(xdata, ydata, c='hotpink', alpha=0.5)
code: ホットピンク色で散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='hotpink', alpha=0.5)	plt.plot(xdata, ydata, c='hotpink', alpha=0.5)
code: ホットピンク色のマーカーを用いて重なりを見やすく散布図を描く	plt.plot(xdata, ydata, c='hotpink', alpha=0.5)	plt.plot(xdata, ydata, c='hotpink', alpha=0.5)
code: ホットピンク色として重なりを見やすく配列xdataと数列ydataの散布図をプロットする	plt.plot(xdata, ydata, c='hotpink', alpha=0.5)	plt.plot(xdata, ydata, c='hotpink', alpha=0.5)
code: 重なりを見やすくホットピンク色として数列xdataと数列ydataについての散布図を描く	plt.plot(xdata, ydata, c='hotpink', alpha=0.5)	plt.plot(xdata, ydata, c='hotpink', alpha=0.5)
code: 重なりを見やすくホットピンク色を使ってデータ列xdataとデータ列ydataについての散布図を描く	plt.plot(xdata, ydata, c='hotpink', alpha=0.5)	plt.plot(xdata, ydata, c='hotpink', alpha=0.5)
code: 重なりを見やすくインディアンレッド色のマーカーとして散布図を描く	plt.plot(xdata, ydata, c='indianred', alpha=0.5)	plt.plot(xdata, ydata, c='indianred', alpha=0.5)
code: 重なりを見やすく散布図をインディアンレッド色を使って描く	plt.plot(xdata, ydata, c='indianred', alpha=0.5)	plt.plot(xdata, ydata, c='indianred', alpha=0.5)
code: インディアンレッド色のマーカーとして散布図を重なりを見やすくプロットする	plt.plot(xdata, ydata, c='indianred', alpha=0.5)	plt.plot(xdata, ydata, c='indianred', alpha=0.5)
code: 重なりを見やすくデータ列xdataと配列ydataの散布図をインディアンレッド色を用いて描画する	plt.plot(xdata, ydata, c='indianred', alpha=0.5)	plt.plot(xdata, ydata, c='indianred', alpha=0.5)
code: インディアンレッド色で数列xdataとリストydataの散布図を重なりを見やすくプロットする	plt.plot(xdata, ydata, c='indianred', alpha=0.5)	plt.plot(xdata, ydata, c='indianred', alpha=0.5)
code: インディアンレッド色を用いて数列xdataとイテラブルydataの散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='indianred', alpha=0.5)	plt.plot(xdata, ydata, c='indianred', alpha=0.5)
code: 重なりを見やすく散布図をインディゴ色のマーカーでプロットする	plt.plot(xdata, ydata, c='indigo', alpha=0.5)	plt.plot(xdata, ydata, c='indigo', alpha=0.5)
code: 重なりを見やすくインディゴ色を用いて散布図をプロットする	plt.plot(xdata, ydata, c='indigo', alpha=0.5)	plt.plot(xdata, ydata, c='indigo', alpha=0.5)
code: 重なりを見やすく散布図をインディゴ色で描画する	plt.plot(xdata, ydata, c='indigo', alpha=0.5)	plt.plot(xdata, ydata, c='indigo', alpha=0.5)
code: 重なりを見やすくデータ列xdataと数列ydataの散布図をインディゴ色でプロットする	plt.plot(xdata, ydata, c='indigo', alpha=0.5)	plt.plot(xdata, ydata, c='indigo', alpha=0.5)
code: 数列xdataとイテラブルydataについての散布図を重なりを見やすくインディゴ色を用いて描画する	plt.plot(xdata, ydata, c='indigo', alpha=0.5)	plt.plot(xdata, ydata, c='indigo', alpha=0.5)
code: 重なりを見やすく配列xdataとイテラブルydataの散布図をインディゴ色で描画する	plt.plot(xdata, ydata, c='indigo', alpha=0.5)	plt.plot(xdata, ydata, c='indigo', alpha=0.5)
code: 重なりを見やすく散布図をアイボリー色を使って描く	plt.plot(xdata, ydata, c='ivory', alpha=0.5)	plt.plot(xdata, ydata, c='ivory', alpha=0.5)
code: アイボリー色のマーカーを使って散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='ivory', alpha=0.5)	plt.plot(xdata, ydata, c='ivory', alpha=0.5)
code: 散布図を重なりを見やすくアイボリー色を用いてプロットする	plt.plot(xdata, ydata, c='ivory', alpha=0.5)	plt.plot(xdata, ydata, c='ivory', alpha=0.5)
code: 数列xdataと数列ydataについての散布図を重なりを見やすくアイボリー色でプロットする	plt.plot(xdata, ydata, c='ivory', alpha=0.5)	plt.plot(xdata, ydata, c='ivory', alpha=0.5)
code: 配列xdataと配列ydataについての散布図をアイボリー色で重なりを見やすくプロットする	plt.plot(xdata, ydata, c='ivory', alpha=0.5)	plt.plot(xdata, ydata, c='ivory', alpha=0.5)
code: 重なりを見やすくアイボリー色として配列xdataと配列ydataの散布図を描く	plt.plot(xdata, ydata, c='ivory', alpha=0.5)	plt.plot(xdata, ydata, c='ivory', alpha=0.5)
code: 重なりを見やすく散布図をカーキ色のマーカーとして描画する	plt.plot(xdata, ydata, c='khaki', alpha=0.5)	plt.plot(xdata, ydata, c='khaki', alpha=0.5)
code: 重なりを見やすく散布図をカーキ色のマーカーとして描画する	plt.plot(xdata, ydata, c='khaki', alpha=0.5)	plt.plot(xdata, ydata, c='khaki', alpha=0.5)
code: カーキ色を使って重なりを見やすく散布図をプロットする	plt.plot(xdata, ydata, c='khaki', alpha=0.5)	plt.plot(xdata, ydata, c='khaki', alpha=0.5)
code: 重なりを見やすくカーキ色として数列xdataと配列ydataの散布図をプロットする	plt.plot(xdata, ydata, c='khaki', alpha=0.5)	plt.plot(xdata, ydata, c='khaki', alpha=0.5)
code: 配列xdataと配列ydataの散布図を重なりを見やすくカーキ色を使って描く	plt.plot(xdata, ydata, c='khaki', alpha=0.5)	plt.plot(xdata, ydata, c='khaki', alpha=0.5)
code: カーキ色で重なりを見やすくイテラブルxdataと配列ydataについての散布図をプロットする	plt.plot(xdata, ydata, c='khaki', alpha=0.5)	plt.plot(xdata, ydata, c='khaki', alpha=0.5)
code: 散布図を重なりを見やすくラベンダー色のマーカーで描画する	plt.plot(xdata, ydata, c='lavender', alpha=0.5)	plt.plot(xdata, ydata, c='lavender', alpha=0.5)
code: ラベンダー色として散布図を重なりを見やすくプロットする	plt.plot(xdata, ydata, c='lavender', alpha=0.5)	plt.plot(xdata, ydata, c='lavender', alpha=0.5)
code: 散布図を重なりを見やすくラベンダー色としてプロットする	plt.plot(xdata, ydata, c='lavender', alpha=0.5)	plt.plot(xdata, ydata, c='lavender', alpha=0.5)
code: ラベンダー色として重なりを見やすく配列xdataとイテラブルydataについての散布図を描く	plt.plot(xdata, ydata, c='lavender', alpha=0.5)	plt.plot(xdata, ydata, c='lavender', alpha=0.5)
code: ラベンダー色で重なりを見やすくイテラブルxdataとリストydataの散布図を描く	plt.plot(xdata, ydata, c='lavender', alpha=0.5)	plt.plot(xdata, ydata, c='lavender', alpha=0.5)
code: ラベンダー色を用いて数列xdataとリストydataの散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='lavender', alpha=0.5)	plt.plot(xdata, ydata, c='lavender', alpha=0.5)
code: ラベンダーブラッシュ色で重なりを見やすく散布図を描く	plt.plot(xdata, ydata, c='lavenderblush', alpha=0.5)	plt.plot(xdata, ydata, c='lavenderblush', alpha=0.5)
code: 重なりを見やすく散布図をラベンダーブラッシュ色のマーカーを使って描画する	plt.plot(xdata, ydata, c='lavenderblush', alpha=0.5)	plt.plot(xdata, ydata, c='lavenderblush', alpha=0.5)
code: ラベンダーブラッシュ色のマーカーを使って散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='lavenderblush', alpha=0.5)	plt.plot(xdata, ydata, c='lavenderblush', alpha=0.5)
code: リストxdataとリストydataの散布図をラベンダーブラッシュ色を使って重なりを見やすく描く	plt.plot(xdata, ydata, c='lavenderblush', alpha=0.5)	plt.plot(xdata, ydata, c='lavenderblush', alpha=0.5)
code: 重なりを見やすくイテラブルxdataとデータ列ydataの散布図をラベンダーブラッシュ色を使って描画する	plt.plot(xdata, ydata, c='lavenderblush', alpha=0.5)	plt.plot(xdata, ydata, c='lavenderblush', alpha=0.5)
code: ラベンダーブラッシュ色で配列xdataとリストydataについての散布図を重なりを見やすくプロットする	plt.plot(xdata, ydata, c='lavenderblush', alpha=0.5)	plt.plot(xdata, ydata, c='lavenderblush', alpha=0.5)
code: 散布図をローングリーン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='lawngreen', alpha=0.5)	plt.plot(xdata, ydata, c='lawngreen', alpha=0.5)
code: 重なりを見やすくローングリーン色のマーカーを使って散布図を描く	plt.plot(xdata, ydata, c='lawngreen', alpha=0.5)	plt.plot(xdata, ydata, c='lawngreen', alpha=0.5)
code: ローングリーン色のマーカーとして重なりを見やすく散布図を描く	plt.plot(xdata, ydata, c='lawngreen', alpha=0.5)	plt.plot(xdata, ydata, c='lawngreen', alpha=0.5)
code: 重なりを見やすくデータ列xdataとデータ列ydataの散布図をローングリーン色を使って描く	plt.plot(xdata, ydata, c='lawngreen', alpha=0.5)	plt.plot(xdata, ydata, c='lawngreen', alpha=0.5)
code: 重なりを見やすくローングリーン色を用いてリストxdataと配列ydataについての散布図を描く	plt.plot(xdata, ydata, c='lawngreen', alpha=0.5)	plt.plot(xdata, ydata, c='lawngreen', alpha=0.5)
code: イテラブルxdataと数列ydataについての散布図を重なりを見やすくローングリーン色で描く	plt.plot(xdata, ydata, c='lawngreen', alpha=0.5)	plt.plot(xdata, ydata, c='lawngreen', alpha=0.5)
code: 重なりを見やすく散布図をレモンシフォン色を使って描画する	plt.plot(xdata, ydata, c='lemonchiffon', alpha=0.5)	plt.plot(xdata, ydata, c='lemonchiffon', alpha=0.5)
code: 重なりを見やすくレモンシフォン色を用いて散布図をプロットする	plt.plot(xdata, ydata, c='lemonchiffon', alpha=0.5)	plt.plot(xdata, ydata, c='lemonchiffon', alpha=0.5)
code: 散布図を重なりを見やすくレモンシフォン色のマーカーを用いてプロットする	plt.plot(xdata, ydata, c='lemonchiffon', alpha=0.5)	plt.plot(xdata, ydata, c='lemonchiffon', alpha=0.5)
code: レモンシフォン色としてデータ列xdataとイテラブルydataの散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='lemonchiffon', alpha=0.5)	plt.plot(xdata, ydata, c='lemonchiffon', alpha=0.5)
code: 重なりを見やすくリストxdataとリストydataについての散布図をレモンシフォン色を使って描く	plt.plot(xdata, ydata, c='lemonchiffon', alpha=0.5)	plt.plot(xdata, ydata, c='lemonchiffon', alpha=0.5)
code: レモンシフォン色を使って重なりを見やすくリストxdataとリストydataの散布図をプロットする	plt.plot(xdata, ydata, c='lemonchiffon', alpha=0.5)	plt.plot(xdata, ydata, c='lemonchiffon', alpha=0.5)
code: 重なりを見やすく散布図をライトブルー色のマーカーとして描画する	plt.plot(xdata, ydata, c='lightblue', alpha=0.5)	plt.plot(xdata, ydata, c='lightblue', alpha=0.5)
code: 散布図を重なりを見やすくライトブルー色のマーカーでプロットする	plt.plot(xdata, ydata, c='lightblue', alpha=0.5)	plt.plot(xdata, ydata, c='lightblue', alpha=0.5)
code: 重なりを見やすく散布図をライトブルー色のマーカーで描画する	plt.plot(xdata, ydata, c='lightblue', alpha=0.5)	plt.plot(xdata, ydata, c='lightblue', alpha=0.5)
code: データ列xdataとデータ列ydataについての散布図を重なりを見やすくライトブルー色でプロットする	plt.plot(xdata, ydata, c='lightblue', alpha=0.5)	plt.plot(xdata, ydata, c='lightblue', alpha=0.5)
code: イテラブルxdataと配列ydataについての散布図をライトブルー色として重なりを見やすく描く	plt.plot(xdata, ydata, c='lightblue', alpha=0.5)	plt.plot(xdata, ydata, c='lightblue', alpha=0.5)
code: データ列xdataとリストydataについての散布図をライトブルー色を使って重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightblue', alpha=0.5)	plt.plot(xdata, ydata, c='lightblue', alpha=0.5)
code: ライトコーラル色で散布図を重なりを見やすくプロットする	plt.plot(xdata, ydata, c='lightcoral', alpha=0.5)	plt.plot(xdata, ydata, c='lightcoral', alpha=0.5)
code: 重なりを見やすく散布図をライトコーラル色で描く	plt.plot(xdata, ydata, c='lightcoral', alpha=0.5)	plt.plot(xdata, ydata, c='lightcoral', alpha=0.5)
code: 散布図を重なりを見やすくライトコーラル色で描く	plt.plot(xdata, ydata, c='lightcoral', alpha=0.5)	plt.plot(xdata, ydata, c='lightcoral', alpha=0.5)
code: 数列xdataとリストydataについての散布図をライトコーラル色として重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightcoral', alpha=0.5)	plt.plot(xdata, ydata, c='lightcoral', alpha=0.5)
code: イテラブルxdataと数列ydataについての散布図をライトコーラル色を使って重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightcoral', alpha=0.5)	plt.plot(xdata, ydata, c='lightcoral', alpha=0.5)
code: ライトコーラル色を使って数列xdataとイテラブルydataの散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightcoral', alpha=0.5)	plt.plot(xdata, ydata, c='lightcoral', alpha=0.5)
code: 散布図をライトシアン色のマーカーとして重なりを見やすく描く	plt.plot(xdata, ydata, c='lightcyan', alpha=0.5)	plt.plot(xdata, ydata, c='lightcyan', alpha=0.5)
code: 散布図をライトシアン色として重なりを見やすく描く	plt.plot(xdata, ydata, c='lightcyan', alpha=0.5)	plt.plot(xdata, ydata, c='lightcyan', alpha=0.5)
code: 散布図を重なりを見やすくライトシアン色で描画する	plt.plot(xdata, ydata, c='lightcyan', alpha=0.5)	plt.plot(xdata, ydata, c='lightcyan', alpha=0.5)
code: ライトシアン色で重なりを見やすくイテラブルxdataとリストydataについての散布図をプロットする	plt.plot(xdata, ydata, c='lightcyan', alpha=0.5)	plt.plot(xdata, ydata, c='lightcyan', alpha=0.5)
code: ライトシアン色でイテラブルxdataとイテラブルydataについての散布図を重なりを見やすくプロットする	plt.plot(xdata, ydata, c='lightcyan', alpha=0.5)	plt.plot(xdata, ydata, c='lightcyan', alpha=0.5)
code: イテラブルxdataとリストydataについての散布図を重なりを見やすくライトシアン色として描画する	plt.plot(xdata, ydata, c='lightcyan', alpha=0.5)	plt.plot(xdata, ydata, c='lightcyan', alpha=0.5)
code: 重なりを見やすく散布図をライトゴールドロディイエロー色のマーカーで描画する	plt.plot(xdata, ydata, c='lightgoldenrodyellow', alpha=0.5)	plt.plot(xdata, ydata, c='lightgoldenrodyellow', alpha=0.5)
code: ライトゴールドロディイエロー色のマーカーで重なりを見やすく散布図を描画する	plt.plot(xdata, ydata, c='lightgoldenrodyellow', alpha=0.5)	plt.plot(xdata, ydata, c='lightgoldenrodyellow', alpha=0.5)
code: ライトゴールドロディイエロー色を使って重なりを見やすく散布図をプロットする	plt.plot(xdata, ydata, c='lightgoldenrodyellow', alpha=0.5)	plt.plot(xdata, ydata, c='lightgoldenrodyellow', alpha=0.5)
code: リストxdataと配列ydataについての散布図を重なりを見やすくライトゴールドロディイエロー色でプロットする	plt.plot(xdata, ydata, c='lightgoldenrodyellow', alpha=0.5)	plt.plot(xdata, ydata, c='lightgoldenrodyellow', alpha=0.5)
code: 重なりを見やすくイテラブルxdataと配列ydataの散布図をライトゴールドロディイエロー色としてプロットする	plt.plot(xdata, ydata, c='lightgoldenrodyellow', alpha=0.5)	plt.plot(xdata, ydata, c='lightgoldenrodyellow', alpha=0.5)
code: リストxdataと配列ydataについての散布図を重なりを見やすくライトゴールドロディイエロー色を用いてプロットする	plt.plot(xdata, ydata, c='lightgoldenrodyellow', alpha=0.5)	plt.plot(xdata, ydata, c='lightgoldenrodyellow', alpha=0.5)
code: 重なりを見やすく散布図をライトグレー色のマーカーで描く	plt.plot(xdata, ydata, c='lightgrey', alpha=0.5)	plt.plot(xdata, ydata, c='lightgray', alpha=0.5)
code: 散布図をライトグレー色で重なりを見やすく描く	plt.plot(xdata, ydata, c='lightgray', alpha=0.5)	plt.plot(xdata, ydata, c='lightgray', alpha=0.5)
code: 散布図をライトグレー色のマーカーを使って重なりを見やすくプロットする	plt.plot(xdata, ydata, c='lightgray', alpha=0.5)	plt.plot(xdata, ydata, c='lightgray', alpha=0.5)
code: 重なりを見やすくライトグレー色として配列xdataとデータ列ydataの散布図をプロットする	plt.plot(xdata, ydata, c='lightgrey', alpha=0.5)	plt.plot(xdata, ydata, c='lightgray', alpha=0.5)
code: 配列xdataとデータ列ydataについての散布図をライトグレー色を用いて重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightgray', alpha=0.5)	plt.plot(xdata, ydata, c='lightgray', alpha=0.5)
code: 重なりを見やすく数列xdataとリストydataについての散布図をライトグレー色を用いて描画する	plt.plot(xdata, ydata, c='lightgrey', alpha=0.5)	plt.plot(xdata, ydata, c='lightgray', alpha=0.5)
code: 散布図をライトグリーン色として重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightseagreen', alpha=0.5)	plt.plot(xdata, ydata, c='lightgreen', alpha=0.5)
code: 散布図をライトグリーン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightgreen', alpha=0.5)	plt.plot(xdata, ydata, c='lightgreen', alpha=0.5)
code: 散布図をライトグリーン色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightgreen', alpha=0.5)	plt.plot(xdata, ydata, c='lightgreen', alpha=0.5)
code: ライトグリーン色で配列xdataと数列ydataの散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='lightgreen', alpha=0.5)	plt.plot(xdata, ydata, c='lightgreen', alpha=0.5)
code: 重なりを見やすくライトグリーン色でデータ列xdataとリストydataについての散布図を描画する	plt.plot(xdata, ydata, c='lightgreen', alpha=0.5)	plt.plot(xdata, ydata, c='lightgreen', alpha=0.5)
code: ライトグリーン色でリストxdataと配列ydataの散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightgreen', alpha=0.5)	plt.plot(xdata, ydata, c='lightgreen', alpha=0.5)
code: 重なりを見やすくライトグレー色を用いて散布図を描画する	plt.plot(xdata, ydata, c='lightgrey', alpha=0.5)	plt.plot(xdata, ydata, c='lightgrey', alpha=0.5)
code: 散布図をライトグレー色として重なりを見やすくプロットする	plt.plot(xdata, ydata, c='lightgray', alpha=0.5)	plt.plot(xdata, ydata, c='lightgrey', alpha=0.5)
code: ライトグレー色を使って散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='lightgrey', alpha=0.5)	plt.plot(xdata, ydata, c='lightgrey', alpha=0.5)
code: データ列xdataと数列ydataについての散布図をライトグレー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightgrey', alpha=0.5)	plt.plot(xdata, ydata, c='lightgrey', alpha=0.5)
code: リストxdataとデータ列ydataの散布図をライトグレー色として重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightgray', alpha=0.5)	plt.plot(xdata, ydata, c='lightgrey', alpha=0.5)
code: データ列xdataと配列ydataについての散布図をライトグレー色で重なりを見やすく描く	plt.plot(xdata, ydata, c='lightgray', alpha=0.5)	plt.plot(xdata, ydata, c='lightgrey', alpha=0.5)
code: 重なりを見やすく散布図を淡いピンク色色のマーカーを使ってプロットする	plt.plot(xdata, ydata, c='lightpink', alpha=0.5)	plt.plot(xdata, ydata, c='lightpink', alpha=0.5)
code: 散布図を淡いピンク色色で重なりを見やすく描く	plt.plot(xdata, ydata, c='lightpink', alpha=0.5)	plt.plot(xdata, ydata, c='lightpink', alpha=0.5)
code: 淡いピンク色色のマーカーで重なりを見やすく散布図をプロットする	plt.plot(xdata, ydata, c='lightpink', alpha=0.5)	plt.plot(xdata, ydata, c='lightpink', alpha=0.5)
code: 淡いピンク色色で重なりを見やすくイテラブルxdataと数列ydataについての散布図を描く	plt.plot(xdata, ydata, c='lightpink', alpha=0.5)	plt.plot(xdata, ydata, c='lightpink', alpha=0.5)
code: 重なりを見やすく数列xdataとイテラブルydataの散布図を淡いピンク色色で描画する	plt.plot(xdata, ydata, c='lightpink', alpha=0.5)	plt.plot(xdata, ydata, c='lightpink', alpha=0.5)
code: 数列xdataとリストydataの散布図を淡いピンク色色として重なりを見やすくプロットする	plt.plot(xdata, ydata, c='lightpink', alpha=0.5)	plt.plot(xdata, ydata, c='lightpink', alpha=0.5)
code: 重なりを見やすくライトサーモン色のマーカーを使って散布図を描く	plt.plot(xdata, ydata, c='lightsalmon', alpha=0.5)	plt.plot(xdata, ydata, c='lightsalmon', alpha=0.5)
code: 散布図を重なりを見やすくライトサーモン色を用いて描く	plt.plot(xdata, ydata, c='lightsalmon', alpha=0.5)	plt.plot(xdata, ydata, c='lightsalmon', alpha=0.5)
code: 散布図を重なりを見やすくライトサーモン色で描画する	plt.plot(xdata, ydata, c='lightsalmon', alpha=0.5)	plt.plot(xdata, ydata, c='lightsalmon', alpha=0.5)
code: ライトサーモン色として数列xdataと数列ydataの散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='lightsalmon', alpha=0.5)	plt.plot(xdata, ydata, c='lightsalmon', alpha=0.5)
code: 重なりを見やすくライトサーモン色を用いてイテラブルxdataとデータ列ydataについての散布図を描く	plt.plot(xdata, ydata, c='lightsalmon', alpha=0.5)	plt.plot(xdata, ydata, c='lightsalmon', alpha=0.5)
code: 重なりを見やすくイテラブルxdataと数列ydataの散布図をライトサーモン色で描画する	plt.plot(xdata, ydata, c='lightsalmon', alpha=0.5)	plt.plot(xdata, ydata, c='lightsalmon', alpha=0.5)
code: ライトグリーン色のマーカーで重なりを見やすく散布図をプロットする	plt.plot(xdata, ydata, c='lightgreen', alpha=0.5)	plt.plot(xdata, ydata, c='lightseagreen', alpha=0.5)
code: 重なりを見やすく散布図をライトグリーン色のマーカーとしてプロットする	plt.plot(xdata, ydata, c='lightgreen', alpha=0.5)	plt.plot(xdata, ydata, c='lightseagreen', alpha=0.5)
code: ライトグリーン色のマーカーで散布図を重なりを見やすくプロットする	plt.plot(xdata, ydata, c='lightseagreen', alpha=0.5)	plt.plot(xdata, ydata, c='lightseagreen', alpha=0.5)
code: 重なりを見やすく配列xdataと配列ydataについての散布図をライトグリーン色でプロットする	plt.plot(xdata, ydata, c='lightgreen', alpha=0.5)	plt.plot(xdata, ydata, c='lightseagreen', alpha=0.5)
code: 配列xdataとリストydataの散布図をライトグリーン色として重なりを見やすく描く	plt.plot(xdata, ydata, c='lightseagreen', alpha=0.5)	plt.plot(xdata, ydata, c='lightseagreen', alpha=0.5)
code: 数列xdataとイテラブルydataについての散布図を重なりを見やすくライトグリーン色として描画する	plt.plot(xdata, ydata, c='lightseagreen', alpha=0.5)	plt.plot(xdata, ydata, c='lightseagreen', alpha=0.5)
code: 重なりを見やすく散布図をライトスカイブルー色のマーカーとしてプロットする	plt.plot(xdata, ydata, c='lightskyblue', alpha=0.5)	plt.plot(xdata, ydata, c='lightskyblue', alpha=0.5)
code: 重なりを見やすくライトスカイブルー色を使って散布図を描く	plt.plot(xdata, ydata, c='lightskyblue', alpha=0.5)	plt.plot(xdata, ydata, c='lightskyblue', alpha=0.5)
code: ライトスカイブルー色を使って重なりを見やすく散布図をプロットする	plt.plot(xdata, ydata, c='lightskyblue', alpha=0.5)	plt.plot(xdata, ydata, c='lightskyblue', alpha=0.5)
code: 重なりを見やすくライトスカイブルー色を用いてデータ列xdataと数列ydataの散布図を描く	plt.plot(xdata, ydata, c='lightskyblue', alpha=0.5)	plt.plot(xdata, ydata, c='lightskyblue', alpha=0.5)
code: データ列xdataとリストydataについての散布図をライトスカイブルー色で重なりを見やすく描く	plt.plot(xdata, ydata, c='lightskyblue', alpha=0.5)	plt.plot(xdata, ydata, c='lightskyblue', alpha=0.5)
code: 重なりを見やすくライトスカイブルー色として数列xdataと配列ydataの散布図を描く	plt.plot(xdata, ydata, c='lightskyblue', alpha=0.5)	plt.plot(xdata, ydata, c='lightskyblue', alpha=0.5)
code: ライトスレイグレー色のマーカーとして散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightslategray', alpha=0.5)	plt.plot(xdata, ydata, c='lightslategray', alpha=0.5)
code: 重なりを見やすく散布図をライトスレイグレー色のマーカーを使ってプロットする	plt.plot(xdata, ydata, c='lightslategray', alpha=0.5)	plt.plot(xdata, ydata, c='lightslategray', alpha=0.5)
code: ライトスレイグレー色のマーカーで散布図を重なりを見やすくプロットする	plt.plot(xdata, ydata, c='lightslategrey', alpha=0.5)	plt.plot(xdata, ydata, c='lightslategray', alpha=0.5)
code: 重なりを見やすくライトスレイグレー色を用いて配列xdataとイテラブルydataの散布図をプロットする	plt.plot(xdata, ydata, c='lightslategrey', alpha=0.5)	plt.plot(xdata, ydata, c='lightslategray', alpha=0.5)
code: ライトスレイグレー色で重なりを見やすく配列xdataとリストydataの散布図を描画する	plt.plot(xdata, ydata, c='lightslategray', alpha=0.5)	plt.plot(xdata, ydata, c='lightslategray', alpha=0.5)
code: 重なりを見やすくライトスレイグレー色を使って数列xdataとデータ列ydataの散布図を描く	plt.plot(xdata, ydata, c='lightslategray', alpha=0.5)	plt.plot(xdata, ydata, c='lightslategray', alpha=0.5)
code: 重なりを見やすく散布図をライトスレイグレー色でプロットする	plt.plot(xdata, ydata, c='lightslategray', alpha=0.5)	plt.plot(xdata, ydata, c='lightslategrey', alpha=0.5)
code: 重なりを見やすく散布図をライトスレイグレー色のマーカーとしてプロットする	plt.plot(xdata, ydata, c='lightslategray', alpha=0.5)	plt.plot(xdata, ydata, c='lightslategrey', alpha=0.5)
code: ライトスレイグレー色のマーカーで重なりを見やすく散布図を描く	plt.plot(xdata, ydata, c='lightslategrey', alpha=0.5)	plt.plot(xdata, ydata, c='lightslategrey', alpha=0.5)
code: 重なりを見やすくライトスレイグレー色でイテラブルxdataとイテラブルydataの散布図を描く	plt.plot(xdata, ydata, c='lightslategray', alpha=0.5)	plt.plot(xdata, ydata, c='lightslategrey', alpha=0.5)
code: データ列xdataとデータ列ydataの散布図を重なりを見やすくライトスレイグレー色を用いて描画する	plt.plot(xdata, ydata, c='lightslategray', alpha=0.5)	plt.plot(xdata, ydata, c='lightslategrey', alpha=0.5)
code: イテラブルxdataと配列ydataについての散布図をライトスレイグレー色を使って重なりを見やすくプロットする	plt.plot(xdata, ydata, c='lightslategray', alpha=0.5)	plt.plot(xdata, ydata, c='lightslategrey', alpha=0.5)
code: 散布図をライトスチールブルー色として重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightsteelblue', alpha=0.5)	plt.plot(xdata, ydata, c='lightsteelblue', alpha=0.5)
code: ライトスチールブルー色のマーカーを用いて散布図を重なりを見やすくプロットする	plt.plot(xdata, ydata, c='lightsteelblue', alpha=0.5)	plt.plot(xdata, ydata, c='lightsteelblue', alpha=0.5)
code: ライトスチールブルー色として重なりを見やすく散布図を描画する	plt.plot(xdata, ydata, c='lightsteelblue', alpha=0.5)	plt.plot(xdata, ydata, c='lightsteelblue', alpha=0.5)
code: 重なりを見やすくライトスチールブルー色でデータ列xdataとデータ列ydataについての散布図を描画する	plt.plot(xdata, ydata, c='lightsteelblue', alpha=0.5)	plt.plot(xdata, ydata, c='lightsteelblue', alpha=0.5)
code: 重なりを見やすくライトスチールブルー色で配列xdataとイテラブルydataについての散布図を描画する	plt.plot(xdata, ydata, c='lightsteelblue', alpha=0.5)	plt.plot(xdata, ydata, c='lightsteelblue', alpha=0.5)
code: イテラブルxdataと数列ydataについての散布図を重なりを見やすくライトスチールブルー色で描画する	plt.plot(xdata, ydata, c='lightsteelblue', alpha=0.5)	plt.plot(xdata, ydata, c='lightsteelblue', alpha=0.5)
code: 重なりを見やすく散布図をライトイエロー色のマーカーを用いて描画する	plt.plot(xdata, ydata, c='lightyellow', alpha=0.5)	plt.plot(xdata, ydata, c='lightyellow', alpha=0.5)
code: 散布図をライトイエロー色のマーカーとして重なりを見やすく描画する	plt.plot(xdata, ydata, c='lightyellow', alpha=0.5)	plt.plot(xdata, ydata, c='lightyellow', alpha=0.5)
code: ライトイエロー色のマーカーとして重なりを見やすく散布図をプロットする	plt.plot(xdata, ydata, c='lightyellow', alpha=0.5)	plt.plot(xdata, ydata, c='lightyellow', alpha=0.5)
code: データ列xdataとデータ列ydataについての散布図を重なりを見やすくライトイエロー色を使って描く	plt.plot(xdata, ydata, c='lightyellow', alpha=0.5)	plt.plot(xdata, ydata, c='lightyellow', alpha=0.5)
code: 重なりを見やすくデータ列xdataとイテラブルydataの散布図をライトイエロー色で描画する	plt.plot(xdata, ydata, c='lightyellow', alpha=0.5)	plt.plot(xdata, ydata, c='lightyellow', alpha=0.5)
code: ライトイエロー色でリストxdataとリストydataの散布図を重なりを見やすくプロットする	plt.plot(xdata, ydata, c='lightyellow', alpha=0.5)	plt.plot(xdata, ydata, c='lightyellow', alpha=0.5)
code: ライム色のマーカーとして重なりを見やすく散布図を描画する	plt.plot(xdata, ydata, c='lime', alpha=0.5)	plt.plot(xdata, ydata, c='lime', alpha=0.5)
code: 重なりを見やすくライム色のマーカーを使って散布図を描く	plt.plot(xdata, ydata, c='lime', alpha=0.5)	plt.plot(xdata, ydata, c='lime', alpha=0.5)
code: 重なりを見やすく散布図をライム色として描く	plt.plot(xdata, ydata, c='lime', alpha=0.5)	plt.plot(xdata, ydata, c='lime', alpha=0.5)
code: 重なりを見やすくライム色としてイテラブルxdataとイテラブルydataについての散布図をプロットする	plt.plot(xdata, ydata, c='lime', alpha=0.5)	plt.plot(xdata, ydata, c='lime', alpha=0.5)
code: ライム色でリストxdataと配列ydataの散布図を重なりを見やすくプロットする	plt.plot(xdata, ydata, c='lime', alpha=0.5)	plt.plot(xdata, ydata, c='lime', alpha=0.5)
code: ライム色で重なりを見やすく配列xdataと数列ydataについての散布図をプロットする	plt.plot(xdata, ydata, c='lime', alpha=0.5)	plt.plot(xdata, ydata, c='lime', alpha=0.5)
code: ライムグリーン色で散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='limegreen', alpha=0.5)	plt.plot(xdata, ydata, c='limegreen', alpha=0.5)
code: ライムグリーン色のマーカーを用いて重なりを見やすく散布図をプロットする	plt.plot(xdata, ydata, c='limegreen', alpha=0.5)	plt.plot(xdata, ydata, c='limegreen', alpha=0.5)
code: 散布図を重なりを見やすくライムグリーン色のマーカーで描く	plt.plot(xdata, ydata, c='limegreen', alpha=0.5)	plt.plot(xdata, ydata, c='limegreen', alpha=0.5)
code: 重なりを見やすくライムグリーン色を用いて数列xdataと数列ydataについての散布図をプロットする	plt.plot(xdata, ydata, c='limegreen', alpha=0.5)	plt.plot(xdata, ydata, c='limegreen', alpha=0.5)
code: 重なりを見やすくライムグリーン色でデータ列xdataとデータ列ydataについての散布図を描画する	plt.plot(xdata, ydata, c='limegreen', alpha=0.5)	plt.plot(xdata, ydata, c='limegreen', alpha=0.5)
code: 重なりを見やすくイテラブルxdataとイテラブルydataの散布図をライムグリーン色で描く	plt.plot(xdata, ydata, c='limegreen', alpha=0.5)	plt.plot(xdata, ydata, c='limegreen', alpha=0.5)
code: 散布図を重なりを見やすくリネン色のマーカーを用いて描画する	plt.plot(xdata, ydata, c='linen', alpha=0.5)	plt.plot(xdata, ydata, c='linen', alpha=0.5)
code: 重なりを見やすく散布図をリネン色でプロットする	plt.plot(xdata, ydata, c='linen', alpha=0.5)	plt.plot(xdata, ydata, c='linen', alpha=0.5)
code: 重なりを見やすく散布図をリネン色のマーカーでプロットする	plt.plot(xdata, ydata, c='linen', alpha=0.5)	plt.plot(xdata, ydata, c='linen', alpha=0.5)
code: イテラブルxdataと数列ydataの散布図をリネン色として重なりを見やすく描く	plt.plot(xdata, ydata, c='linen', alpha=0.5)	plt.plot(xdata, ydata, c='linen', alpha=0.5)
code: 重なりを見やすくデータ列xdataとリストydataについての散布図をリネン色を用いて描画する	plt.plot(xdata, ydata, c='linen', alpha=0.5)	plt.plot(xdata, ydata, c='linen', alpha=0.5)
code: リネン色でデータ列xdataとデータ列ydataについての散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='linen', alpha=0.5)	plt.plot(xdata, ydata, c='linen', alpha=0.5)
code: マゼンタ色を使って散布図を重なりを見やすくプロットする	plt.plot(xdata, ydata, c='magenta', alpha=0.5)	plt.plot(xdata, ydata, c='magenta', alpha=0.5)
code: マゼンタ色のマーカーとして散布図を重なりを見やすくプロットする	plt.plot(xdata, ydata, c='magenta', alpha=0.5)	plt.plot(xdata, ydata, c='magenta', alpha=0.5)
code: 散布図を重なりを見やすくマゼンタ色のマーカーで描く	plt.plot(xdata, ydata, c='magenta', alpha=0.5)	plt.plot(xdata, ydata, c='magenta', alpha=0.5)
code: 重なりを見やすくマゼンタ色でイテラブルxdataと数列ydataの散布図をプロットする	plt.plot(xdata, ydata, c='magenta', alpha=0.5)	plt.plot(xdata, ydata, c='magenta', alpha=0.5)
code: 配列xdataと数列ydataについての散布図をマゼンタ色として重なりを見やすくプロットする	plt.plot(xdata, ydata, c='magenta', alpha=0.5)	plt.plot(xdata, ydata, c='magenta', alpha=0.5)
code: 配列xdataとイテラブルydataの散布図をマゼンタ色を使って重なりを見やすく描画する	plt.plot(xdata, ydata, c='magenta', alpha=0.5)	plt.plot(xdata, ydata, c='magenta', alpha=0.5)
code: 重なりを見やすく散布図をマルーン色を使って描画する	plt.plot(xdata, ydata, c='maroon', alpha=0.5)	plt.plot(xdata, ydata, c='maroon', alpha=0.5)
code: 重なりを見やすくマルーン色のマーカーとして散布図を描く	plt.plot(xdata, ydata, c='maroon', alpha=0.5)	plt.plot(xdata, ydata, c='maroon', alpha=0.5)
code: 重なりを見やすくマルーン色を用いて散布図をプロットする	plt.plot(xdata, ydata, c='maroon', alpha=0.5)	plt.plot(xdata, ydata, c='maroon', alpha=0.5)
code: マルーン色でイテラブルxdataと配列ydataの散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='maroon', alpha=0.5)	plt.plot(xdata, ydata, c='maroon', alpha=0.5)
code: マルーン色で配列xdataと数列ydataについての散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='maroon', alpha=0.5)	plt.plot(xdata, ydata, c='maroon', alpha=0.5)
code: 重なりを見やすくマルーン色で配列xdataとリストydataについての散布図をプロットする	plt.plot(xdata, ydata, c='maroon', alpha=0.5)	plt.plot(xdata, ydata, c='maroon', alpha=0.5)
code: 重なりを見やすくミディアムアクアマリン色を用いて散布図を描画する	plt.plot(xdata, ydata, c='mediumaquamarine', alpha=0.5)	plt.plot(xdata, ydata, c='mediumaquamarine', alpha=0.5)
code: 散布図を重なりを見やすくミディアムアクアマリン色としてプロットする	plt.plot(xdata, ydata, c='mediumaquamarine', alpha=0.5)	plt.plot(xdata, ydata, c='mediumaquamarine', alpha=0.5)
code: ミディアムアクアマリン色のマーカーを使って散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='mediumaquamarine', alpha=0.5)	plt.plot(xdata, ydata, c='mediumaquamarine', alpha=0.5)
code: 重なりを見やすくミディアムアクアマリン色でイテラブルxdataとデータ列ydataについての散布図をプロットする	plt.plot(xdata, ydata, c='mediumaquamarine', alpha=0.5)	plt.plot(xdata, ydata, c='mediumaquamarine', alpha=0.5)
code: ミディアムアクアマリン色を用いて重なりを見やすく配列xdataと配列ydataについての散布図を描く	plt.plot(xdata, ydata, c='mediumaquamarine', alpha=0.5)	plt.plot(xdata, ydata, c='mediumaquamarine', alpha=0.5)
code: イテラブルxdataとリストydataの散布図を重なりを見やすくミディアムアクアマリン色として描く	plt.plot(xdata, ydata, c='mediumaquamarine', alpha=0.5)	plt.plot(xdata, ydata, c='mediumaquamarine', alpha=0.5)
code: 散布図を重なりを見やすくミディアムブルー色のマーカーを使ってプロットする	plt.plot(xdata, ydata, c='mediumblue', alpha=0.5)	plt.plot(xdata, ydata, c='mediumblue', alpha=0.5)
code: 重なりを見やすくミディアムブルー色として散布図をプロットする	plt.plot(xdata, ydata, c='mediumblue', alpha=0.5)	plt.plot(xdata, ydata, c='mediumblue', alpha=0.5)
code: 散布図を重なりを見やすくミディアムブルー色を使って描く	plt.plot(xdata, ydata, c='mediumblue', alpha=0.5)	plt.plot(xdata, ydata, c='mediumblue', alpha=0.5)
code: ミディアムブルー色でイテラブルxdataと配列ydataの散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='mediumblue', alpha=0.5)	plt.plot(xdata, ydata, c='mediumblue', alpha=0.5)
code: ミディアムブルー色を用いて重なりを見やすく配列xdataとイテラブルydataの散布図を描く	plt.plot(xdata, ydata, c='mediumblue', alpha=0.5)	plt.plot(xdata, ydata, c='mediumblue', alpha=0.5)
code: リストxdataと数列ydataについての散布図を重なりを見やすくミディアムブルー色でプロットする	plt.plot(xdata, ydata, c='mediumblue', alpha=0.5)	plt.plot(xdata, ydata, c='mediumblue', alpha=0.5)
code: 散布図をミディアムオーキッド色として重なりを見やすく描く	plt.plot(xdata, ydata, c='mediumorchid', alpha=0.5)	plt.plot(xdata, ydata, c='mediumorchid', alpha=0.5)
code: ミディアムオーキッド色のマーカーで重なりを見やすく散布図を描く	plt.plot(xdata, ydata, c='mediumorchid', alpha=0.5)	plt.plot(xdata, ydata, c='mediumorchid', alpha=0.5)
code: ミディアムオーキッド色のマーカーで重なりを見やすく散布図をプロットする	plt.plot(xdata, ydata, c='mediumorchid', alpha=0.5)	plt.plot(xdata, ydata, c='mediumorchid', alpha=0.5)
code: ミディアムオーキッド色で重なりを見やすくリストxdataとリストydataの散布図を描く	plt.plot(xdata, ydata, c='mediumorchid', alpha=0.5)	plt.plot(xdata, ydata, c='mediumorchid', alpha=0.5)
code: 配列xdataとイテラブルydataの散布図をミディアムオーキッド色を使って重なりを見やすく描画する	plt.plot(xdata, ydata, c='mediumorchid', alpha=0.5)	plt.plot(xdata, ydata, c='mediumorchid', alpha=0.5)
code: データ列xdataとリストydataについての散布図を重なりを見やすくミディアムオーキッド色としてプロットする	plt.plot(xdata, ydata, c='mediumorchid', alpha=0.5)	plt.plot(xdata, ydata, c='mediumorchid', alpha=0.5)
code: ミディアムパープル色のマーカーを用いて重なりを見やすく散布図を描画する	plt.plot(xdata, ydata, c='mediumpurple', alpha=0.5)	plt.plot(xdata, ydata, c='mediumpurple', alpha=0.5)
code: ミディアムパープル色で散布図を重なりを見やすくプロットする	plt.plot(xdata, ydata, c='mediumpurple', alpha=0.5)	plt.plot(xdata, ydata, c='mediumpurple', alpha=0.5)
code: ミディアムパープル色のマーカーとして重なりを見やすく散布図を描画する	plt.plot(xdata, ydata, c='mediumpurple', alpha=0.5)	plt.plot(xdata, ydata, c='mediumpurple', alpha=0.5)
code: 重なりを見やすくイテラブルxdataと数列ydataの散布図をミディアムパープル色としてプロットする	plt.plot(xdata, ydata, c='mediumpurple', alpha=0.5)	plt.plot(xdata, ydata, c='mediumpurple', alpha=0.5)
code: 重なりを見やすくリストxdataと配列ydataについての散布図をミディアムパープル色を用いて描画する	plt.plot(xdata, ydata, c='mediumpurple', alpha=0.5)	plt.plot(xdata, ydata, c='mediumpurple', alpha=0.5)
code: 重なりを見やすく数列xdataとリストydataについての散布図をミディアムパープル色を用いて描画する	plt.plot(xdata, ydata, c='mediumpurple', alpha=0.5)	plt.plot(xdata, ydata, c='mediumpurple', alpha=0.5)
code: 散布図をミディアムシアグリーン色で重なりを見やすくプロットする	plt.plot(xdata, ydata, c='mediumseagreen', alpha=0.5)	plt.plot(xdata, ydata, c='mediumseagreen', alpha=0.5)
code: 散布図をミディアムシアグリーン色のマーカーとして重なりを見やすく描画する	plt.plot(xdata, ydata, c='mediumseagreen', alpha=0.5)	plt.plot(xdata, ydata, c='mediumseagreen', alpha=0.5)
code: 重なりを見やすくミディアムシアグリーン色のマーカーで散布図を描く	plt.plot(xdata, ydata, c='mediumseagreen', alpha=0.5)	plt.plot(xdata, ydata, c='mediumseagreen', alpha=0.5)
code: ミディアムシアグリーン色を用いて重なりを見やすくイテラブルxdataとリストydataの散布図を描く	plt.plot(xdata, ydata, c='mediumseagreen', alpha=0.5)	plt.plot(xdata, ydata, c='mediumseagreen', alpha=0.5)
code: データ列xdataとデータ列ydataの散布図を重なりを見やすくミディアムシアグリーン色を使ってプロットする	plt.plot(xdata, ydata, c='mediumseagreen', alpha=0.5)	plt.plot(xdata, ydata, c='mediumseagreen', alpha=0.5)
code: 重なりを見やすくミディアムシアグリーン色を用いて配列xdataと配列ydataについての散布図を描く	plt.plot(xdata, ydata, c='mediumseagreen', alpha=0.5)	plt.plot(xdata, ydata, c='mediumseagreen', alpha=0.5)
code: 散布図を重なりを見やすくミディアムスレートブルー色のマーカーを用いてプロットする	plt.plot(xdata, ydata, c='mediumslateblue', alpha=0.5)	plt.plot(xdata, ydata, c='mediumslateblue', alpha=0.5)
code: ミディアムスレートブルー色を使って重なりを見やすく散布図を描画する	plt.plot(xdata, ydata, c='mediumslateblue', alpha=0.5)	plt.plot(xdata, ydata, c='mediumslateblue', alpha=0.5)
code: 散布図を重なりを見やすくミディアムスレートブルー色でプロットする	plt.plot(xdata, ydata, c='mediumslateblue', alpha=0.5)	plt.plot(xdata, ydata, c='mediumslateblue', alpha=0.5)
code: 重なりを見やすく配列xdataと配列ydataの散布図をミディアムスレートブルー色としてプロットする	plt.plot(xdata, ydata, c='mediumslateblue', alpha=0.5)	plt.plot(xdata, ydata, c='mediumslateblue', alpha=0.5)
code: 重なりを見やすくミディアムスレートブルー色としてデータ列xdataとリストydataの散布図をプロットする	plt.plot(xdata, ydata, c='mediumslateblue', alpha=0.5)	plt.plot(xdata, ydata, c='mediumslateblue', alpha=0.5)
code: リストxdataとデータ列ydataの散布図をミディアムスレートブルー色を用いて重なりを見やすくプロットする	plt.plot(xdata, ydata, c='mediumslateblue', alpha=0.5)	plt.plot(xdata, ydata, c='mediumslateblue', alpha=0.5)
code: 散布図を重なりを見やすくミディアムスプリンググリーン色のマーカーを用いて描く	plt.plot(xdata, ydata, c='mediumspringgreen', alpha=0.5)	plt.plot(xdata, ydata, c='mediumspringgreen', alpha=0.5)
code: ミディアムスプリンググリーン色のマーカーとして重なりを見やすく散布図をプロットする	plt.plot(xdata, ydata, c='mediumspringgreen', alpha=0.5)	plt.plot(xdata, ydata, c='mediumspringgreen', alpha=0.5)
code: ミディアムスプリンググリーン色として重なりを見やすく散布図をプロットする	plt.plot(xdata, ydata, c='mediumspringgreen', alpha=0.5)	plt.plot(xdata, ydata, c='mediumspringgreen', alpha=0.5)
code: 重なりを見やすくミディアムスプリンググリーン色でリストxdataとデータ列ydataについての散布図を描画する	plt.plot(xdata, ydata, c='mediumspringgreen', alpha=0.5)	plt.plot(xdata, ydata, c='mediumspringgreen', alpha=0.5)
code: イテラブルxdataと数列ydataについての散布図をミディアムスプリンググリーン色で重なりを見やすく描く	plt.plot(xdata, ydata, c='mediumspringgreen', alpha=0.5)	plt.plot(xdata, ydata, c='mediumspringgreen', alpha=0.5)
code: 配列xdataと数列ydataの散布図を重なりを見やすくミディアムスプリンググリーン色としてプロットする	plt.plot(xdata, ydata, c='mediumspringgreen', alpha=0.5)	plt.plot(xdata, ydata, c='mediumspringgreen', alpha=0.5)
code: 重なりを見やすくミディアムターコイズ色のマーカーとして散布図を描く	plt.plot(xdata, ydata, c='mediumturquoise', alpha=0.5)	plt.plot(xdata, ydata, c='mediumturquoise', alpha=0.5)
code: 散布図を重なりを見やすくミディアムターコイズ色のマーカーを使って描く	plt.plot(xdata, ydata, c='mediumturquoise', alpha=0.5)	plt.plot(xdata, ydata, c='mediumturquoise', alpha=0.5)
code: ミディアムターコイズ色で散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='mediumturquoise', alpha=0.5)	plt.plot(xdata, ydata, c='mediumturquoise', alpha=0.5)
code: ミディアムターコイズ色でデータ列xdataとイテラブルydataの散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='mediumturquoise', alpha=0.5)	plt.plot(xdata, ydata, c='mediumturquoise', alpha=0.5)
code: 配列xdataとイテラブルydataの散布図を重なりを見やすくミディアムターコイズ色を使って描画する	plt.plot(xdata, ydata, c='mediumturquoise', alpha=0.5)	plt.plot(xdata, ydata, c='mediumturquoise', alpha=0.5)
code: 重なりを見やすくイテラブルxdataとリストydataの散布図をミディアムターコイズ色としてプロットする	plt.plot(xdata, ydata, c='mediumturquoise', alpha=0.5)	plt.plot(xdata, ydata, c='mediumturquoise', alpha=0.5)
code: 重なりを見やすくミディアムバイオレットレッド色のマーカーとして散布図を描画する	plt.plot(xdata, ydata, c='mediumvioletred', alpha=0.5)	plt.plot(xdata, ydata, c='mediumvioletred', alpha=0.5)
code: 散布図を重なりを見やすくミディアムバイオレットレッド色を用いて描く	plt.plot(xdata, ydata, c='mediumvioletred', alpha=0.5)	plt.plot(xdata, ydata, c='mediumvioletred', alpha=0.5)
code: 重なりを見やすく散布図をミディアムバイオレットレッド色を使って描く	plt.plot(xdata, ydata, c='mediumvioletred', alpha=0.5)	plt.plot(xdata, ydata, c='mediumvioletred', alpha=0.5)
code: データ列xdataとデータ列ydataの散布図を重なりを見やすくミディアムバイオレットレッド色として描く	plt.plot(xdata, ydata, c='mediumvioletred', alpha=0.5)	plt.plot(xdata, ydata, c='mediumvioletred', alpha=0.5)
code: ミディアムバイオレットレッド色として数列xdataと配列ydataについての散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='mediumvioletred', alpha=0.5)	plt.plot(xdata, ydata, c='mediumvioletred', alpha=0.5)
code: ミディアムバイオレットレッド色を使って重なりを見やすくイテラブルxdataとデータ列ydataの散布図を描く	plt.plot(xdata, ydata, c='mediumvioletred', alpha=0.5)	plt.plot(xdata, ydata, c='mediumvioletred', alpha=0.5)
code: 重なりを見やすく散布図をミッドナイトブルー色を使って描く	plt.plot(xdata, ydata, c='midnightblue', alpha=0.5)	plt.plot(xdata, ydata, c='midnightblue', alpha=0.5)
code: ミッドナイトブルー色のマーカーを用いて重なりを見やすく散布図を描く	plt.plot(xdata, ydata, c='midnightblue', alpha=0.5)	plt.plot(xdata, ydata, c='midnightblue', alpha=0.5)
code: ミッドナイトブルー色を使って散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='midnightblue', alpha=0.5)	plt.plot(xdata, ydata, c='midnightblue', alpha=0.5)
code: 重なりを見やすくリストxdataと配列ydataについての散布図をミッドナイトブルー色で描く	plt.plot(xdata, ydata, c='midnightblue', alpha=0.5)	plt.plot(xdata, ydata, c='midnightblue', alpha=0.5)
code: 重なりを見やすくデータ列xdataと数列ydataについての散布図をミッドナイトブルー色を用いて描画する	plt.plot(xdata, ydata, c='midnightblue', alpha=0.5)	plt.plot(xdata, ydata, c='midnightblue', alpha=0.5)
code: 重なりを見やすく数列xdataと配列ydataについての散布図をミッドナイトブルー色でプロットする	plt.plot(xdata, ydata, c='midnightblue', alpha=0.5)	plt.plot(xdata, ydata, c='midnightblue', alpha=0.5)
code: 散布図を重なりを見やすくミントクリーム色のマーカーを使って描画する	plt.plot(xdata, ydata, c='mintcream', alpha=0.5)	plt.plot(xdata, ydata, c='mintcream', alpha=0.5)
code: 重なりを見やすくミントクリーム色を使って散布図をプロットする	plt.plot(xdata, ydata, c='mintcream', alpha=0.5)	plt.plot(xdata, ydata, c='mintcream', alpha=0.5)
code: ミントクリーム色で散布図を重なりを見やすくプロットする	plt.plot(xdata, ydata, c='mintcream', alpha=0.5)	plt.plot(xdata, ydata, c='mintcream', alpha=0.5)
code: ミントクリーム色でデータ列xdataとイテラブルydataについての散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='mintcream', alpha=0.5)	plt.plot(xdata, ydata, c='mintcream', alpha=0.5)
code: ミントクリーム色で重なりを見やすくイテラブルxdataとリストydataについての散布図を描く	plt.plot(xdata, ydata, c='mintcream', alpha=0.5)	plt.plot(xdata, ydata, c='mintcream', alpha=0.5)
code: 重なりを見やすくミントクリーム色を用いて配列xdataとデータ列ydataについての散布図を描画する	plt.plot(xdata, ydata, c='mintcream', alpha=0.5)	plt.plot(xdata, ydata, c='mintcream', alpha=0.5)
code: 重なりを見やすくミスティローズ色として散布図を描画する	plt.plot(xdata, ydata, c='mistyrose', alpha=0.5)	plt.plot(xdata, ydata, c='mistyrose', alpha=0.5)
code: 重なりを見やすく散布図をミスティローズ色を用いてプロットする	plt.plot(xdata, ydata, c='mistyrose', alpha=0.5)	plt.plot(xdata, ydata, c='mistyrose', alpha=0.5)
code: 散布図を重なりを見やすくミスティローズ色で描く	plt.plot(xdata, ydata, c='mistyrose', alpha=0.5)	plt.plot(xdata, ydata, c='mistyrose', alpha=0.5)
code: リストxdataと配列ydataの散布図を重なりを見やすくミスティローズ色として描く	plt.plot(xdata, ydata, c='mistyrose', alpha=0.5)	plt.plot(xdata, ydata, c='mistyrose', alpha=0.5)
code: 重なりを見やすくミスティローズ色として配列xdataとリストydataについての散布図をプロットする	plt.plot(xdata, ydata, c='mistyrose', alpha=0.5)	plt.plot(xdata, ydata, c='mistyrose', alpha=0.5)
code: ミスティローズ色として重なりを見やすくイテラブルxdataと配列ydataについての散布図を描く	plt.plot(xdata, ydata, c='mistyrose', alpha=0.5)	plt.plot(xdata, ydata, c='mistyrose', alpha=0.5)
code: モカシン色のマーカーとして散布図を重なりを見やすくプロットする	plt.plot(xdata, ydata, c='moccasin', alpha=0.5)	plt.plot(xdata, ydata, c='moccasin', alpha=0.5)
code: モカシン色で散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='moccasin', alpha=0.5)	plt.plot(xdata, ydata, c='moccasin', alpha=0.5)
code: 重なりを見やすくモカシン色を使って散布図を描画する	plt.plot(xdata, ydata, c='moccasin', alpha=0.5)	plt.plot(xdata, ydata, c='moccasin', alpha=0.5)
code: 重なりを見やすくリストxdataと数列ydataの散布図をモカシン色で描く	plt.plot(xdata, ydata, c='moccasin', alpha=0.5)	plt.plot(xdata, ydata, c='moccasin', alpha=0.5)
code: データ列xdataとイテラブルydataの散布図を重なりを見やすくモカシン色として描画する	plt.plot(xdata, ydata, c='moccasin', alpha=0.5)	plt.plot(xdata, ydata, c='moccasin', alpha=0.5)
code: モカシン色として配列xdataとリストydataについての散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='moccasin', alpha=0.5)	plt.plot(xdata, ydata, c='moccasin', alpha=0.5)
code: ナバホホワイト色のマーカーとして重なりを見やすく散布図を描画する	plt.plot(xdata, ydata, c='navajowhite', alpha=0.5)	plt.plot(xdata, ydata, c='navajowhite', alpha=0.5)
code: 散布図をナバホホワイト色のマーカーで重なりを見やすく描く	plt.plot(xdata, ydata, c='navajowhite', alpha=0.5)	plt.plot(xdata, ydata, c='navajowhite', alpha=0.5)
code: 重なりを見やすくナバホホワイト色で散布図をプロットする	plt.plot(xdata, ydata, c='navajowhite', alpha=0.5)	plt.plot(xdata, ydata, c='navajowhite', alpha=0.5)
code: 重なりを見やすくナバホホワイト色でデータ列xdataと配列ydataの散布図をプロットする	plt.plot(xdata, ydata, c='navajowhite', alpha=0.5)	plt.plot(xdata, ydata, c='navajowhite', alpha=0.5)
code: 重なりを見やすくナバホホワイト色を使ってイテラブルxdataとイテラブルydataについての散布図を描画する	plt.plot(xdata, ydata, c='navajowhite', alpha=0.5)	plt.plot(xdata, ydata, c='navajowhite', alpha=0.5)
code: 重なりを見やすくナバホホワイト色を使ってリストxdataと数列ydataの散布図をプロットする	plt.plot(xdata, ydata, c='navajowhite', alpha=0.5)	plt.plot(xdata, ydata, c='navajowhite', alpha=0.5)
code: 重なりを見やすく散布図をネイビー色のマーカーとしてプロットする	plt.plot(xdata, ydata, c='navy', alpha=0.5)	plt.plot(xdata, ydata, c='navy', alpha=0.5)
code: ネイビー色を使って散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='navy', alpha=0.5)	plt.plot(xdata, ydata, c='navy', alpha=0.5)
code: 散布図を重なりを見やすくネイビー色を使って描画する	plt.plot(xdata, ydata, c='navy', alpha=0.5)	plt.plot(xdata, ydata, c='navy', alpha=0.5)
code: 重なりを見やすくネイビー色としてリストxdataとリストydataについての散布図を描画する	plt.plot(xdata, ydata, c='navy', alpha=0.5)	plt.plot(xdata, ydata, c='navy', alpha=0.5)
code: データ列xdataと数列ydataについての散布図を重なりを見やすくネイビー色としてプロットする	plt.plot(xdata, ydata, c='navy', alpha=0.5)	plt.plot(xdata, ydata, c='navy', alpha=0.5)
code: データ列xdataとイテラブルydataの散布図を重なりを見やすくネイビー色でプロットする	plt.plot(xdata, ydata, c='navy', alpha=0.5)	plt.plot(xdata, ydata, c='navy', alpha=0.5)
code: 重なりを見やすくオールドレース色を使って散布図をプロットする	plt.plot(xdata, ydata, c='oldlace', alpha=0.5)	plt.plot(xdata, ydata, c='oldlace', alpha=0.5)
code: 散布図を重なりを見やすくオールドレース色のマーカーを使って描く	plt.plot(xdata, ydata, c='oldlace', alpha=0.5)	plt.plot(xdata, ydata, c='oldlace', alpha=0.5)
code: 散布図をオールドレース色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='oldlace', alpha=0.5)	plt.plot(xdata, ydata, c='oldlace', alpha=0.5)
code: 重なりを見やすくイテラブルxdataとイテラブルydataの散布図をオールドレース色で描く	plt.plot(xdata, ydata, c='oldlace', alpha=0.5)	plt.plot(xdata, ydata, c='oldlace', alpha=0.5)
code: 数列xdataと数列ydataについての散布図を重なりを見やすくオールドレース色を用いてプロットする	plt.plot(xdata, ydata, c='oldlace', alpha=0.5)	plt.plot(xdata, ydata, c='oldlace', alpha=0.5)
code: 配列xdataとリストydataについての散布図をオールドレース色で重なりを見やすく描く	plt.plot(xdata, ydata, c='oldlace', alpha=0.5)	plt.plot(xdata, ydata, c='oldlace', alpha=0.5)
code: 散布図を重なりを見やすくオリーブ色を用いて描く	plt.plot(xdata, ydata, c='olive', alpha=0.5)	plt.plot(xdata, ydata, c='olive', alpha=0.5)
code: オリーブ色として散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='olive', alpha=0.5)	plt.plot(xdata, ydata, c='olive', alpha=0.5)
code: オリーブ色で重なりを見やすく散布図を描画する	plt.plot(xdata, ydata, c='olive', alpha=0.5)	plt.plot(xdata, ydata, c='olive', alpha=0.5)
code: データ列xdataとリストydataについての散布図をオリーブ色として重なりを見やすく描画する	plt.plot(xdata, ydata, c='olive', alpha=0.5)	plt.plot(xdata, ydata, c='olive', alpha=0.5)
code: データ列xdataと数列ydataの散布図をオリーブ色として重なりを見やすくプロットする	plt.plot(xdata, ydata, c='olive', alpha=0.5)	plt.plot(xdata, ydata, c='olive', alpha=0.5)
code: 重なりを見やすくデータ列xdataと数列ydataの散布図をオリーブ色を用いてプロットする	plt.plot(xdata, ydata, c='olive', alpha=0.5)	plt.plot(xdata, ydata, c='olive', alpha=0.5)
code: オリベドラブ色のマーカーとして重なりを見やすく散布図を描く	plt.plot(xdata, ydata, c='olivedrab', alpha=0.5)	plt.plot(xdata, ydata, c='olivedrab', alpha=0.5)
code: 散布図をオリベドラブ色のマーカーとして重なりを見やすく描画する	plt.plot(xdata, ydata, c='olivedrab', alpha=0.5)	plt.plot(xdata, ydata, c='olivedrab', alpha=0.5)
code: 重なりを見やすく散布図をオリベドラブ色のマーカーを用いて描画する	plt.plot(xdata, ydata, c='olivedrab', alpha=0.5)	plt.plot(xdata, ydata, c='olivedrab', alpha=0.5)
code: 重なりを見やすくオリベドラブ色を用いてイテラブルxdataとイテラブルydataについての散布図を描く	plt.plot(xdata, ydata, c='olivedrab', alpha=0.5)	plt.plot(xdata, ydata, c='olivedrab', alpha=0.5)
code: オリベドラブ色で数列xdataとデータ列ydataについての散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='olivedrab', alpha=0.5)	plt.plot(xdata, ydata, c='olivedrab', alpha=0.5)
code: 重なりを見やすくオリベドラブ色として数列xdataと配列ydataの散布図を描画する	plt.plot(xdata, ydata, c='olivedrab', alpha=0.5)	plt.plot(xdata, ydata, c='olivedrab', alpha=0.5)
code: 散布図を重なりを見やすくオレンジ色として描く	plt.plot(xdata, ydata, c='orange', alpha=0.5)	plt.plot(xdata, ydata, c='orange', alpha=0.5)
code: オレンジ色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='orange', alpha=0.5)	plt.plot(xdata, ydata, c='orange', alpha=0.5)
code: オレンジ色で散布図を重なりを見やすくプロットする	plt.plot(xdata, ydata, c='orange', alpha=0.5)	plt.plot(xdata, ydata, c='orange', alpha=0.5)
code: オレンジ色で重なりを見やすくイテラブルxdataと配列ydataについての散布図をプロットする	plt.plot(xdata, ydata, c='orange', alpha=0.5)	plt.plot(xdata, ydata, c='orange', alpha=0.5)
code: リストxdataとデータ列ydataの散布図をオレンジ色として重なりを見やすく描く	plt.plot(xdata, ydata, c='orange', alpha=0.5)	plt.plot(xdata, ydata, c='orange', alpha=0.5)
code: 重なりを見やすくオレンジ色を用いて数列xdataと数列ydataについての散布図をプロットする	plt.plot(xdata, ydata, c='orange', alpha=0.5)	plt.plot(xdata, ydata, c='orange', alpha=0.5)
code: オレンジレッド色として散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='orangered', alpha=0.5)	plt.plot(xdata, ydata, c='orangered', alpha=0.5)
code: 重なりを見やすくオレンジレッド色のマーカーを使って散布図を描く	plt.plot(xdata, ydata, c='orangered', alpha=0.5)	plt.plot(xdata, ydata, c='orangered', alpha=0.5)
code: オレンジレッド色のマーカーとして散布図を重なりを見やすくプロットする	plt.plot(xdata, ydata, c='orangered', alpha=0.5)	plt.plot(xdata, ydata, c='orangered', alpha=0.5)
code: イテラブルxdataとデータ列ydataの散布図を重なりを見やすくオレンジレッド色を用いてプロットする	plt.plot(xdata, ydata, c='orangered', alpha=0.5)	plt.plot(xdata, ydata, c='orangered', alpha=0.5)
code: リストxdataとイテラブルydataについての散布図を重なりを見やすくオレンジレッド色を用いて描く	plt.plot(xdata, ydata, c='orangered', alpha=0.5)	plt.plot(xdata, ydata, c='orangered', alpha=0.5)
code: オレンジレッド色で数列xdataと数列ydataについての散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='orangered', alpha=0.5)	plt.plot(xdata, ydata, c='orangered', alpha=0.5)
code: 重なりを見やすくオーキッド色として散布図を描く	plt.plot(xdata, ydata, c='orchid', alpha=0.5)	plt.plot(xdata, ydata, c='orchid', alpha=0.5)
code: 散布図をオーキッド色のマーカーを用いて重なりを見やすく描画する	plt.plot(xdata, ydata, c='orchid', alpha=0.5)	plt.plot(xdata, ydata, c='orchid', alpha=0.5)
code: 重なりを見やすくオーキッド色のマーカーを使って散布図をプロットする	plt.plot(xdata, ydata, c='orchid', alpha=0.5)	plt.plot(xdata, ydata, c='orchid', alpha=0.5)
code: 重なりを見やすくオーキッド色を使ってイテラブルxdataとイテラブルydataについての散布図を描く	plt.plot(xdata, ydata, c='orchid', alpha=0.5)	plt.plot(xdata, ydata, c='orchid', alpha=0.5)
code: 配列xdataとイテラブルydataの散布図をオーキッド色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='orchid', alpha=0.5)	plt.plot(xdata, ydata, c='orchid', alpha=0.5)
code: オーキッド色を用いて重なりを見やすく配列xdataとリストydataについての散布図を描画する	plt.plot(xdata, ydata, c='orchid', alpha=0.5)	plt.plot(xdata, ydata, c='orchid', alpha=0.5)
code: 散布図をパールゴールデンロッド色を用いて重なりを見やすくプロットする	plt.plot(xdata, ydata, c='palegoldenrod', alpha=0.5)	plt.plot(xdata, ydata, c='palegoldenrod', alpha=0.5)
code: 散布図をパールゴールデンロッド色のマーカーを用いて重なりを見やすく描画する	plt.plot(xdata, ydata, c='palegoldenrod', alpha=0.5)	plt.plot(xdata, ydata, c='palegoldenrod', alpha=0.5)
code: パールゴールデンロッド色のマーカーとして散布図を重なりを見やすくプロットする	plt.plot(xdata, ydata, c='palegoldenrod', alpha=0.5)	plt.plot(xdata, ydata, c='palegoldenrod', alpha=0.5)
code: 数列xdataと数列ydataについての散布図をパールゴールデンロッド色として重なりを見やすくプロットする	plt.plot(xdata, ydata, c='palegoldenrod', alpha=0.5)	plt.plot(xdata, ydata, c='palegoldenrod', alpha=0.5)
code: リストxdataと数列ydataの散布図をパールゴールデンロッド色を用いて重なりを見やすくプロットする	plt.plot(xdata, ydata, c='palegoldenrod', alpha=0.5)	plt.plot(xdata, ydata, c='palegoldenrod', alpha=0.5)
code: イテラブルxdataと配列ydataについての散布図をパールゴールデンロッド色として重なりを見やすく描く	plt.plot(xdata, ydata, c='palegoldenrod', alpha=0.5)	plt.plot(xdata, ydata, c='palegoldenrod', alpha=0.5)
code: ペールグリーン色を用いて散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='palegreen', alpha=0.5)	plt.plot(xdata, ydata, c='palegreen', alpha=0.5)
code: 散布図をペールグリーン色を用いて重なりを見やすくプロットする	plt.plot(xdata, ydata, c='palegreen', alpha=0.5)	plt.plot(xdata, ydata, c='palegreen', alpha=0.5)
code: 散布図をペールグリーン色のマーカーとして重なりを見やすく描く	plt.plot(xdata, ydata, c='palegreen', alpha=0.5)	plt.plot(xdata, ydata, c='palegreen', alpha=0.5)
code: 数列xdataとデータ列ydataについての散布図を重なりを見やすくペールグリーン色でプロットする	plt.plot(xdata, ydata, c='palegreen', alpha=0.5)	plt.plot(xdata, ydata, c='palegreen', alpha=0.5)
code: イテラブルxdataと配列ydataの散布図を重なりを見やすくペールグリーン色を用いて描画する	plt.plot(xdata, ydata, c='palegreen', alpha=0.5)	plt.plot(xdata, ydata, c='palegreen', alpha=0.5)
code: 重なりを見やすく配列xdataと数列ydataの散布図をペールグリーン色で描く	plt.plot(xdata, ydata, c='palegreen', alpha=0.5)	plt.plot(xdata, ydata, c='palegreen', alpha=0.5)
code: 散布図をパレットトルコイズ色で重なりを見やすくプロットする	plt.plot(xdata, ydata, c='paleturquoise', alpha=0.5)	plt.plot(xdata, ydata, c='paleturquoise', alpha=0.5)
code: パレットトルコイズ色のマーカーとして重なりを見やすく散布図をプロットする	plt.plot(xdata, ydata, c='paleturquoise', alpha=0.5)	plt.plot(xdata, ydata, c='paleturquoise', alpha=0.5)
code: 重なりを見やすく散布図をパレットトルコイズ色として描画する	plt.plot(xdata, ydata, c='paleturquoise', alpha=0.5)	plt.plot(xdata, ydata, c='paleturquoise', alpha=0.5)
code: 重なりを見やすくパレットトルコイズ色でリストxdataとリストydataの散布図を描画する	plt.plot(xdata, ydata, c='paleturquoise', alpha=0.5)	plt.plot(xdata, ydata, c='paleturquoise', alpha=0.5)
code: パレットトルコイズ色を用いて重なりを見やすくイテラブルxdataとリストydataの散布図をプロットする	plt.plot(xdata, ydata, c='paleturquoise', alpha=0.5)	plt.plot(xdata, ydata, c='paleturquoise', alpha=0.5)
code: パレットトルコイズ色を使って重なりを見やすくイテラブルxdataとイテラブルydataについての散布図をプロットする	plt.plot(xdata, ydata, c='paleturquoise', alpha=0.5)	plt.plot(xdata, ydata, c='paleturquoise', alpha=0.5)
code: 重なりを見やすく散布図をパールバイオレットレッド色のマーカーを使ってプロットする	plt.plot(xdata, ydata, c='palevioletred', alpha=0.5)	plt.plot(xdata, ydata, c='palevioletred', alpha=0.5)
code: パールバイオレットレッド色のマーカーで散布図を重なりを見やすくプロットする	plt.plot(xdata, ydata, c='palevioletred', alpha=0.5)	plt.plot(xdata, ydata, c='palevioletred', alpha=0.5)
code: パールバイオレットレッド色のマーカーとして散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='palevioletred', alpha=0.5)	plt.plot(xdata, ydata, c='palevioletred', alpha=0.5)
code: パールバイオレットレッド色で配列xdataとリストydataについての散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='palevioletred', alpha=0.5)	plt.plot(xdata, ydata, c='palevioletred', alpha=0.5)
code: パールバイオレットレッド色としてイテラブルxdataとデータ列ydataについての散布図を重なりを見やすくプロットする	plt.plot(xdata, ydata, c='palevioletred', alpha=0.5)	plt.plot(xdata, ydata, c='palevioletred', alpha=0.5)
code: イテラブルxdataとデータ列ydataの散布図を重なりを見やすくパールバイオレットレッド色でプロットする	plt.plot(xdata, ydata, c='palevioletred', alpha=0.5)	plt.plot(xdata, ydata, c='palevioletred', alpha=0.5)
code: 重なりを見やすくパパイヤウィップ色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='papayawhip', alpha=0.5)	plt.plot(xdata, ydata, c='papayawhip', alpha=0.5)
code: パパイヤウィップ色で散布図を重なりを見やすくプロットする	plt.plot(xdata, ydata, c='papayawhip', alpha=0.5)	plt.plot(xdata, ydata, c='papayawhip', alpha=0.5)
code: 重なりを見やすく散布図をパパイヤウィップ色のマーカーでプロットする	plt.plot(xdata, ydata, c='papayawhip', alpha=0.5)	plt.plot(xdata, ydata, c='papayawhip', alpha=0.5)
code: パパイヤウィップ色としてイテラブルxdataとイテラブルydataについての散布図を重なりを見やすくプロットする	plt.plot(xdata, ydata, c='papayawhip', alpha=0.5)	plt.plot(xdata, ydata, c='papayawhip', alpha=0.5)
code: 重なりを見やすくイテラブルxdataとデータ列ydataの散布図をパパイヤウィップ色を使ってプロットする	plt.plot(xdata, ydata, c='papayawhip', alpha=0.5)	plt.plot(xdata, ydata, c='papayawhip', alpha=0.5)
code: パパイヤウィップ色として重なりを見やすくデータ列xdataとリストydataの散布図を描く	plt.plot(xdata, ydata, c='papayawhip', alpha=0.5)	plt.plot(xdata, ydata, c='papayawhip', alpha=0.5)
code: ピーチパフ色で重なりを見やすく散布図をプロットする	plt.plot(xdata, ydata, c='peachpuff', alpha=0.5)	plt.plot(xdata, ydata, c='peachpuff', alpha=0.5)
code: 散布図をピーチパフ色のマーカーを使って重なりを見やすく描く	plt.plot(xdata, ydata, c='peachpuff', alpha=0.5)	plt.plot(xdata, ydata, c='peachpuff', alpha=0.5)
code: 重なりを見やすくピーチパフ色で散布図を描画する	plt.plot(xdata, ydata, c='peachpuff', alpha=0.5)	plt.plot(xdata, ydata, c='peachpuff', alpha=0.5)
code: ピーチパフ色を用いて配列xdataと数列ydataの散布図を重なりを見やすくプロットする	plt.plot(xdata, ydata, c='peachpuff', alpha=0.5)	plt.plot(xdata, ydata, c='peachpuff', alpha=0.5)
code: リストxdataと配列ydataの散布図をピーチパフ色として重なりを見やすく描く	plt.plot(xdata, ydata, c='peachpuff', alpha=0.5)	plt.plot(xdata, ydata, c='peachpuff', alpha=0.5)
code: 数列xdataと数列ydataの散布図をピーチパフ色を用いて重なりを見やすく描く	plt.plot(xdata, ydata, c='peachpuff', alpha=0.5)	plt.plot(xdata, ydata, c='peachpuff', alpha=0.5)
code: 重なりを見やすく散布図をペルー色を使ってプロットする	plt.plot(xdata, ydata, c='peru', alpha=0.5)	plt.plot(xdata, ydata, c='peru', alpha=0.5)
code: 散布図をペルー色として重なりを見やすく描画する	plt.plot(xdata, ydata, c='peru', alpha=0.5)	plt.plot(xdata, ydata, c='peru', alpha=0.5)
code: ペルー色を使って散布図を重なりを見やすくプロットする	plt.plot(xdata, ydata, c='peru', alpha=0.5)	plt.plot(xdata, ydata, c='peru', alpha=0.5)
code: 配列xdataとリストydataの散布図を重なりを見やすくペルー色で描く	plt.plot(xdata, ydata, c='peru', alpha=0.5)	plt.plot(xdata, ydata, c='peru', alpha=0.5)
code: ペルー色として配列xdataとデータ列ydataについての散布図を重なりを見やすくプロットする	plt.plot(xdata, ydata, c='peru', alpha=0.5)	plt.plot(xdata, ydata, c='peru', alpha=0.5)
code: ペルー色としてデータ列xdataと配列ydataについての散布図を重なりを見やすくプロットする	plt.plot(xdata, ydata, c='peru', alpha=0.5)	plt.plot(xdata, ydata, c='peru', alpha=0.5)
code: 散布図をピンク色として重なりを見やすく描画する	plt.plot(xdata, ydata, c='pink', alpha=0.5)	plt.plot(xdata, ydata, c='pink', alpha=0.5)
code: 重なりを見やすくピンク色のマーカーとして散布図をプロットする	plt.plot(xdata, ydata, c='pink', alpha=0.5)	plt.plot(xdata, ydata, c='pink', alpha=0.5)
code: 重なりを見やすくピンク色として散布図を描画する	plt.plot(xdata, ydata, c='pink', alpha=0.5)	plt.plot(xdata, ydata, c='pink', alpha=0.5)
code: 重なりを見やすくピンク色としてイテラブルxdataとイテラブルydataについての散布図を描画する	plt.plot(xdata, ydata, c='pink', alpha=0.5)	plt.plot(xdata, ydata, c='pink', alpha=0.5)
code: リストxdataとデータ列ydataの散布図を重なりを見やすくピンク色でプロットする	plt.plot(xdata, ydata, c='pink', alpha=0.5)	plt.plot(xdata, ydata, c='pink', alpha=0.5)
code: 重なりを見やすくピンク色を使って数列xdataとリストydataの散布図をプロットする	plt.plot(xdata, ydata, c='pink', alpha=0.5)	plt.plot(xdata, ydata, c='pink', alpha=0.5)
code: 散布図をプラム色として重なりを見やすくプロットする	plt.plot(xdata, ydata, c='plum', alpha=0.5)	plt.plot(xdata, ydata, c='plum', alpha=0.5)
code: 重なりを見やすくプラム色のマーカーを用いて散布図をプロットする	plt.plot(xdata, ydata, c='plum', alpha=0.5)	plt.plot(xdata, ydata, c='plum', alpha=0.5)
code: 散布図を重なりを見やすくプラム色のマーカーでプロットする	plt.plot(xdata, ydata, c='plum', alpha=0.5)	plt.plot(xdata, ydata, c='plum', alpha=0.5)
code: 重なりを見やすくプラム色としてリストxdataとイテラブルydataの散布図をプロットする	plt.plot(xdata, ydata, c='plum', alpha=0.5)	plt.plot(xdata, ydata, c='plum', alpha=0.5)
code: 重なりを見やすく数列xdataと数列ydataの散布図をプラム色を使って描画する	plt.plot(xdata, ydata, c='plum', alpha=0.5)	plt.plot(xdata, ydata, c='plum', alpha=0.5)
code: プラム色を使って配列xdataと配列ydataについての散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='plum', alpha=0.5)	plt.plot(xdata, ydata, c='plum', alpha=0.5)
code: 重なりを見やすくパウダーブルー色のマーカーとして散布図をプロットする	plt.plot(xdata, ydata, c='powderblue', alpha=0.5)	plt.plot(xdata, ydata, c='powderblue', alpha=0.5)
code: パウダーブルー色のマーカーを使って重なりを見やすく散布図を描く	plt.plot(xdata, ydata, c='powderblue', alpha=0.5)	plt.plot(xdata, ydata, c='powderblue', alpha=0.5)
code: パウダーブルー色のマーカーとして散布図を重なりを見やすくプロットする	plt.plot(xdata, ydata, c='powderblue', alpha=0.5)	plt.plot(xdata, ydata, c='powderblue', alpha=0.5)
code: 重なりを見やすくパウダーブルー色を用いて数列xdataと配列ydataについての散布図をプロットする	plt.plot(xdata, ydata, c='powderblue', alpha=0.5)	plt.plot(xdata, ydata, c='powderblue', alpha=0.5)
code: 重なりを見やすくパウダーブルー色でイテラブルxdataとデータ列ydataについての散布図を描く	plt.plot(xdata, ydata, c='powderblue', alpha=0.5)	plt.plot(xdata, ydata, c='powderblue', alpha=0.5)
code: パウダーブルー色で重なりを見やすくデータ列xdataとイテラブルydataの散布図を描く	plt.plot(xdata, ydata, c='powderblue', alpha=0.5)	plt.plot(xdata, ydata, c='powderblue', alpha=0.5)
code: パープル色で散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='purple', alpha=0.5)	plt.plot(xdata, ydata, c='purple', alpha=0.5)
code: 散布図をパープル色のマーカーで重なりを見やすく描画する	plt.plot(xdata, ydata, c='purple', alpha=0.5)	plt.plot(xdata, ydata, c='purple', alpha=0.5)
code: パープル色のマーカーを使って重なりを見やすく散布図を描く	plt.plot(xdata, ydata, c='purple', alpha=0.5)	plt.plot(xdata, ydata, c='purple', alpha=0.5)
code: 重なりを見やすく数列xdataとイテラブルydataについての散布図をパープル色を使って描画する	plt.plot(xdata, ydata, c='purple', alpha=0.5)	plt.plot(xdata, ydata, c='purple', alpha=0.5)
code: パープル色として重なりを見やすくデータ列xdataと配列ydataについての散布図を描く	plt.plot(xdata, ydata, c='purple', alpha=0.5)	plt.plot(xdata, ydata, c='purple', alpha=0.5)
code: 配列xdataとリストydataについての散布図を重なりを見やすくパープル色を使って描画する	plt.plot(xdata, ydata, c='purple', alpha=0.5)	plt.plot(xdata, ydata, c='purple', alpha=0.5)
code: レベッカパープル色として重なりを見やすく散布図を描く	plt.plot(xdata, ydata, c='rebeccapurple', alpha=0.5)	plt.plot(xdata, ydata, c='rebeccapurple', alpha=0.5)
code: レベッカパープル色のマーカーで散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='rebeccapurple', alpha=0.5)	plt.plot(xdata, ydata, c='rebeccapurple', alpha=0.5)
code: 散布図をレベッカパープル色のマーカーを用いて重なりを見やすくプロットする	plt.plot(xdata, ydata, c='rebeccapurple', alpha=0.5)	plt.plot(xdata, ydata, c='rebeccapurple', alpha=0.5)
code: 重なりを見やすく数列xdataとイテラブルydataの散布図をレベッカパープル色としてプロットする	plt.plot(xdata, ydata, c='rebeccapurple', alpha=0.5)	plt.plot(xdata, ydata, c='rebeccapurple', alpha=0.5)
code: データ列xdataとリストydataの散布図を重なりを見やすくレベッカパープル色でプロットする	plt.plot(xdata, ydata, c='rebeccapurple', alpha=0.5)	plt.plot(xdata, ydata, c='rebeccapurple', alpha=0.5)
code: レベッカパープル色を用いて数列xdataとリストydataの散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='rebeccapurple', alpha=0.5)	plt.plot(xdata, ydata, c='rebeccapurple', alpha=0.5)
code: 赤色で散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='red', alpha=0.5)	plt.plot(xdata, ydata, c='red', alpha=0.5)
code: 赤色のマーカーを使って重なりを見やすく散布図を描く	plt.plot(xdata, ydata, c='red', alpha=0.5)	plt.plot(xdata, ydata, c='red', alpha=0.5)
code: 散布図を重なりを見やすく赤色のマーカーでプロットする	plt.plot(xdata, ydata, c='red', alpha=0.5)	plt.plot(xdata, ydata, c='red', alpha=0.5)
code: 数列xdataと配列ydataの散布図を重なりを見やすく赤色として描画する	plt.plot(xdata, ydata, c='red', alpha=0.5)	plt.plot(xdata, ydata, c='red', alpha=0.5)
code: 重なりを見やすく赤色を用いて配列xdataとイテラブルydataの散布図をプロットする	plt.plot(xdata, ydata, c='red', alpha=0.5)	plt.plot(xdata, ydata, c='red', alpha=0.5)
code: データ列xdataとリストydataの散布図を赤色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='red', alpha=0.5)	plt.plot(xdata, ydata, c='red', alpha=0.5)
code: ロージーブラウン色のマーカーで散布図を重なりを見やすくプロットする	plt.plot(xdata, ydata, c='rosybrown', alpha=0.5)	plt.plot(xdata, ydata, c='rosybrown', alpha=0.5)
code: 重なりを見やすく散布図をロージーブラウン色を用いてプロットする	plt.plot(xdata, ydata, c='rosybrown', alpha=0.5)	plt.plot(xdata, ydata, c='rosybrown', alpha=0.5)
code: ロージーブラウン色のマーカーとして重なりを見やすく散布図をプロットする	plt.plot(xdata, ydata, c='rosybrown', alpha=0.5)	plt.plot(xdata, ydata, c='rosybrown', alpha=0.5)
code: ロージーブラウン色で重なりを見やすくイテラブルxdataと数列ydataについての散布図を描画する	plt.plot(xdata, ydata, c='rosybrown', alpha=0.5)	plt.plot(xdata, ydata, c='rosybrown', alpha=0.5)
code: 重なりを見やすくイテラブルxdataと配列ydataの散布図をロージーブラウン色で描く	plt.plot(xdata, ydata, c='rosybrown', alpha=0.5)	plt.plot(xdata, ydata, c='rosybrown', alpha=0.5)
code: 重なりを見やすく配列xdataとイテラブルydataの散布図をロージーブラウン色として描画する	plt.plot(xdata, ydata, c='rosybrown', alpha=0.5)	plt.plot(xdata, ydata, c='rosybrown', alpha=0.5)
code: ロイヤルブルー色を用いて重なりを見やすく散布図を描画する	plt.plot(xdata, ydata, c='royalblue', alpha=0.5)	plt.plot(xdata, ydata, c='royalblue', alpha=0.5)
code: ロイヤルブルー色のマーカーとして重なりを見やすく散布図を描く	plt.plot(xdata, ydata, c='royalblue', alpha=0.5)	plt.plot(xdata, ydata, c='royalblue', alpha=0.5)
code: 重なりを見やすくロイヤルブルー色のマーカーで散布図を描画する	plt.plot(xdata, ydata, c='royalblue', alpha=0.5)	plt.plot(xdata, ydata, c='royalblue', alpha=0.5)
code: イテラブルxdataと数列ydataの散布図をロイヤルブルー色として重なりを見やすく描画する	plt.plot(xdata, ydata, c='royalblue', alpha=0.5)	plt.plot(xdata, ydata, c='royalblue', alpha=0.5)
code: 重なりを見やすくロイヤルブルー色でデータ列xdataと数列ydataについての散布図をプロットする	plt.plot(xdata, ydata, c='royalblue', alpha=0.5)	plt.plot(xdata, ydata, c='royalblue', alpha=0.5)
code: 重なりを見やすくロイヤルブルー色で配列xdataとデータ列ydataの散布図をプロットする	plt.plot(xdata, ydata, c='royalblue', alpha=0.5)	plt.plot(xdata, ydata, c='royalblue', alpha=0.5)
code: 重なりを見やすくサドルブラウン色で散布図をプロットする	plt.plot(xdata, ydata, c='saddlebrown', alpha=0.5)	plt.plot(xdata, ydata, c='saddlebrown', alpha=0.5)
code: 重なりを見やすく散布図をサドルブラウン色のマーカーで描く	plt.plot(xdata, ydata, c='saddlebrown', alpha=0.5)	plt.plot(xdata, ydata, c='saddlebrown', alpha=0.5)
code: 重なりを見やすく散布図をサドルブラウン色で描く	plt.plot(xdata, ydata, c='saddlebrown', alpha=0.5)	plt.plot(xdata, ydata, c='saddlebrown', alpha=0.5)
code: 重なりを見やすく配列xdataとイテラブルydataについての散布図をサドルブラウン色を使って描画する	plt.plot(xdata, ydata, c='saddlebrown', alpha=0.5)	plt.plot(xdata, ydata, c='saddlebrown', alpha=0.5)
code: 重なりを見やすくイテラブルxdataと配列ydataの散布図をサドルブラウン色を用いて描く	plt.plot(xdata, ydata, c='saddlebrown', alpha=0.5)	plt.plot(xdata, ydata, c='saddlebrown', alpha=0.5)
code: 重なりを見やすくサドルブラウン色としてデータ列xdataとデータ列ydataの散布図を描く	plt.plot(xdata, ydata, c='saddlebrown', alpha=0.5)	plt.plot(xdata, ydata, c='saddlebrown', alpha=0.5)
code: サーモン色を使って重なりを見やすく散布図を描く	plt.plot(xdata, ydata, c='salmon', alpha=0.5)	plt.plot(xdata, ydata, c='salmon', alpha=0.5)
code: 重なりを見やすくサーモン色として散布図をプロットする	plt.plot(xdata, ydata, c='salmon', alpha=0.5)	plt.plot(xdata, ydata, c='salmon', alpha=0.5)
code: 重なりを見やすく散布図をサーモン色のマーカーとしてプロットする	plt.plot(xdata, ydata, c='salmon', alpha=0.5)	plt.plot(xdata, ydata, c='salmon', alpha=0.5)
code: 重なりを見やすくデータ列xdataとリストydataの散布図をサーモン色で描く	plt.plot(xdata, ydata, c='salmon', alpha=0.5)	plt.plot(xdata, ydata, c='salmon', alpha=0.5)
code: データ列xdataと数列ydataについての散布図をサーモン色を用いて重なりを見やすくプロットする	plt.plot(xdata, ydata, c='salmon', alpha=0.5)	plt.plot(xdata, ydata, c='salmon', alpha=0.5)
code: サーモン色で数列xdataとイテラブルydataの散布図を重なりを見やすくプロットする	plt.plot(xdata, ydata, c='salmon', alpha=0.5)	plt.plot(xdata, ydata, c='salmon', alpha=0.5)
code: サンディーブラウン色のマーカーとして重なりを見やすく散布図を描く	plt.plot(xdata, ydata, c='sandybrown', alpha=0.5)	plt.plot(xdata, ydata, c='sandybrown', alpha=0.5)
code: 散布図をサンディーブラウン色のマーカーとして重なりを見やすくプロットする	plt.plot(xdata, ydata, c='sandybrown', alpha=0.5)	plt.plot(xdata, ydata, c='sandybrown', alpha=0.5)
code: サンディーブラウン色を使って散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='sandybrown', alpha=0.5)	plt.plot(xdata, ydata, c='sandybrown', alpha=0.5)
code: 重なりを見やすくサンディーブラウン色で配列xdataとリストydataの散布図を描く	plt.plot(xdata, ydata, c='sandybrown', alpha=0.5)	plt.plot(xdata, ydata, c='sandybrown', alpha=0.5)
code: サンディーブラウン色で重なりを見やすく数列xdataとリストydataについての散布図を描画する	plt.plot(xdata, ydata, c='sandybrown', alpha=0.5)	plt.plot(xdata, ydata, c='sandybrown', alpha=0.5)
code: サンディーブラウン色を用いてデータ列xdataとリストydataの散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='sandybrown', alpha=0.5)	plt.plot(xdata, ydata, c='sandybrown', alpha=0.5)
code: 散布図を重なりを見やすくシーグリーン色でプロットする	plt.plot(xdata, ydata, c='seagreen', alpha=0.5)	plt.plot(xdata, ydata, c='seagreen', alpha=0.5)
code: シーグリーン色のマーカーを用いて散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='seagreen', alpha=0.5)	plt.plot(xdata, ydata, c='seagreen', alpha=0.5)
code: 散布図を重なりを見やすくシーグリーン色のマーカーを使って描く	plt.plot(xdata, ydata, c='seagreen', alpha=0.5)	plt.plot(xdata, ydata, c='seagreen', alpha=0.5)
code: シーグリーン色として重なりを見やすくイテラブルxdataとイテラブルydataの散布図を描く	plt.plot(xdata, ydata, c='seagreen', alpha=0.5)	plt.plot(xdata, ydata, c='seagreen', alpha=0.5)
code: 重なりを見やすくリストxdataとリストydataの散布図をシーグリーン色として描く	plt.plot(xdata, ydata, c='seagreen', alpha=0.5)	plt.plot(xdata, ydata, c='seagreen', alpha=0.5)
code: シーグリーン色で重なりを見やすくイテラブルxdataとリストydataの散布図を描画する	plt.plot(xdata, ydata, c='seagreen', alpha=0.5)	plt.plot(xdata, ydata, c='seagreen', alpha=0.5)
code: 散布図を貝殻色を使って重なりを見やすく描画する	plt.plot(xdata, ydata, c='seashell', alpha=0.5)	plt.plot(xdata, ydata, c='seashell', alpha=0.5)
code: 貝殻色を使って散布図を重なりを見やすくプロットする	plt.plot(xdata, ydata, c='seashell', alpha=0.5)	plt.plot(xdata, ydata, c='seashell', alpha=0.5)
code: 散布図を重なりを見やすく貝殻色としてプロットする	plt.plot(xdata, ydata, c='seashell', alpha=0.5)	plt.plot(xdata, ydata, c='seashell', alpha=0.5)
code: 数列xdataとイテラブルydataについての散布図を貝殻色を使って重なりを見やすく描画する	plt.plot(xdata, ydata, c='seashell', alpha=0.5)	plt.plot(xdata, ydata, c='seashell', alpha=0.5)
code: 重なりを見やすく貝殻色として配列xdataと配列ydataについての散布図をプロットする	plt.plot(xdata, ydata, c='seashell', alpha=0.5)	plt.plot(xdata, ydata, c='seashell', alpha=0.5)
code: 貝殻色で重なりを見やすくイテラブルxdataと配列ydataについての散布図を描く	plt.plot(xdata, ydata, c='seashell', alpha=0.5)	plt.plot(xdata, ydata, c='seashell', alpha=0.5)
code: シエナ色のマーカーとして重なりを見やすく散布図を描く	plt.plot(xdata, ydata, c='sienna', alpha=0.5)	plt.plot(xdata, ydata, c='sienna', alpha=0.5)
code: シエナ色のマーカーで重なりを見やすく散布図をプロットする	plt.plot(xdata, ydata, c='sienna', alpha=0.5)	plt.plot(xdata, ydata, c='sienna', alpha=0.5)
code: シエナ色として重なりを見やすく散布図を描く	plt.plot(xdata, ydata, c='sienna', alpha=0.5)	plt.plot(xdata, ydata, c='sienna', alpha=0.5)
code: 重なりを見やすく数列xdataとリストydataの散布図をシエナ色で描く	plt.plot(xdata, ydata, c='sienna', alpha=0.5)	plt.plot(xdata, ydata, c='sienna', alpha=0.5)
code: シエナ色を用いて重なりを見やすくデータ列xdataとデータ列ydataについての散布図を描画する	plt.plot(xdata, ydata, c='sienna', alpha=0.5)	plt.plot(xdata, ydata, c='sienna', alpha=0.5)
code: シエナ色を使ってイテラブルxdataと配列ydataについての散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='sienna', alpha=0.5)	plt.plot(xdata, ydata, c='sienna', alpha=0.5)
code: 散布図を重なりを見やすくシルバー色を用いて描く	plt.plot(xdata, ydata, c='silver', alpha=0.5)	plt.plot(xdata, ydata, c='silver', alpha=0.5)
code: 散布図をシルバー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='silver', alpha=0.5)	plt.plot(xdata, ydata, c='silver', alpha=0.5)
code: 散布図を重なりを見やすくシルバー色のマーカーとして描く	plt.plot(xdata, ydata, c='silver', alpha=0.5)	plt.plot(xdata, ydata, c='silver', alpha=0.5)
code: シルバー色を用いて数列xdataとリストydataについての散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='silver', alpha=0.5)	plt.plot(xdata, ydata, c='silver', alpha=0.5)
code: シルバー色を使って重なりを見やすくイテラブルxdataとリストydataの散布図を描画する	plt.plot(xdata, ydata, c='silver', alpha=0.5)	plt.plot(xdata, ydata, c='silver', alpha=0.5)
code: 重なりを見やすくシルバー色を用いてリストxdataと数列ydataについての散布図をプロットする	plt.plot(xdata, ydata, c='silver', alpha=0.5)	plt.plot(xdata, ydata, c='silver', alpha=0.5)
code: 重なりを見やすくスカイブルー色のマーカーで散布図をプロットする	plt.plot(xdata, ydata, c='skyblue', alpha=0.5)	plt.plot(xdata, ydata, c='skyblue', alpha=0.5)
code: スカイブルー色のマーカーとして重なりを見やすく散布図を描く	plt.plot(xdata, ydata, c='skyblue', alpha=0.5)	plt.plot(xdata, ydata, c='skyblue', alpha=0.5)
code: 重なりを見やすく散布図をスカイブルー色を用いて描く	plt.plot(xdata, ydata, c='skyblue', alpha=0.5)	plt.plot(xdata, ydata, c='skyblue', alpha=0.5)
code: リストxdataと数列ydataについての散布図をスカイブルー色を用いて重なりを見やすくプロットする	plt.plot(xdata, ydata, c='skyblue', alpha=0.5)	plt.plot(xdata, ydata, c='skyblue', alpha=0.5)
code: スカイブルー色を使ってデータ列xdataとイテラブルydataについての散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='skyblue', alpha=0.5)	plt.plot(xdata, ydata, c='skyblue', alpha=0.5)
code: 重なりを見やすくスカイブルー色でリストxdataと数列ydataについての散布図を描画する	plt.plot(xdata, ydata, c='skyblue', alpha=0.5)	plt.plot(xdata, ydata, c='skyblue', alpha=0.5)
code: 散布図をスレートブルー色のマーカーを使って重なりを見やすく描画する	plt.plot(xdata, ydata, c='slateblue', alpha=0.5)	plt.plot(xdata, ydata, c='slateblue', alpha=0.5)
code: スレートブルー色のマーカーとして重なりを見やすく散布図を描く	plt.plot(xdata, ydata, c='slateblue', alpha=0.5)	plt.plot(xdata, ydata, c='slateblue', alpha=0.5)
code: 散布図をスレートブルー色のマーカーで重なりを見やすくプロットする	plt.plot(xdata, ydata, c='slateblue', alpha=0.5)	plt.plot(xdata, ydata, c='slateblue', alpha=0.5)
code: スレートブルー色を用いて重なりを見やすくイテラブルxdataとリストydataの散布図を描く	plt.plot(xdata, ydata, c='slateblue', alpha=0.5)	plt.plot(xdata, ydata, c='slateblue', alpha=0.5)
code: スレートブルー色を用いてリストxdataとリストydataの散布図を重なりを見やすくプロットする	plt.plot(xdata, ydata, c='slateblue', alpha=0.5)	plt.plot(xdata, ydata, c='slateblue', alpha=0.5)
code: スレートブルー色でリストxdataと数列ydataの散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='slateblue', alpha=0.5)	plt.plot(xdata, ydata, c='slateblue', alpha=0.5)
code: 重なりを見やすく散布図をスラグレー色を使って描く	plt.plot(xdata, ydata, c='slategray', alpha=0.5)	plt.plot(xdata, ydata, c='slategray', alpha=0.5)
code: スラグレー色のマーカーで散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='slategray', alpha=0.5)	plt.plot(xdata, ydata, c='slategray', alpha=0.5)
code: スラグレー色のマーカーを使って重なりを見やすく散布図を描く	plt.plot(xdata, ydata, c='slategray', alpha=0.5)	plt.plot(xdata, ydata, c='slategray', alpha=0.5)
code: 数列xdataとリストydataについての散布図をスラグレー色で重なりを見やすく描画する	plt.plot(xdata, ydata, c='slategray', alpha=0.5)	plt.plot(xdata, ydata, c='slategray', alpha=0.5)
code: スラグレー色で重なりを見やすく配列xdataとリストydataについての散布図をプロットする	plt.plot(xdata, ydata, c='slategray', alpha=0.5)	plt.plot(xdata, ydata, c='slategray', alpha=0.5)
code: 重なりを見やすくリストxdataとイテラブルydataについての散布図をスラグレー色として描画する	plt.plot(xdata, ydata, c='slategray', alpha=0.5)	plt.plot(xdata, ydata, c='slategray', alpha=0.5)
code: スラグレー色のマーカーを用いて重なりを見やすく散布図を描画する	plt.plot(xdata, ydata, c='slategrey', alpha=0.5)	plt.plot(xdata, ydata, c='slategrey', alpha=0.5)
code: スラグレー色で重なりを見やすく散布図を描く	plt.plot(xdata, ydata, c='slategrey', alpha=0.5)	plt.plot(xdata, ydata, c='slategrey', alpha=0.5)
code: 散布図を重なりを見やすくスラグレー色としてプロットする	plt.plot(xdata, ydata, c='slategrey', alpha=0.5)	plt.plot(xdata, ydata, c='slategrey', alpha=0.5)
code: 重なりを見やすくデータ列xdataとリストydataについての散布図をスラグレー色でプロットする	plt.plot(xdata, ydata, c='slategray', alpha=0.5)	plt.plot(xdata, ydata, c='slategrey', alpha=0.5)
code: 重なりを見やすくスラグレー色を用いてイテラブルxdataとイテラブルydataについての散布図をプロットする	plt.plot(xdata, ydata, c='slategray', alpha=0.5)	plt.plot(xdata, ydata, c='slategrey', alpha=0.5)
code: イテラブルxdataと数列ydataについての散布図をスラグレー色として重なりを見やすく描画する	plt.plot(xdata, ydata, c='slategray', alpha=0.5)	plt.plot(xdata, ydata, c='slategrey', alpha=0.5)
code: 重なりを見やすくスノー色を用いて散布図を描く	plt.plot(xdata, ydata, c='snow', alpha=0.5)	plt.plot(xdata, ydata, c='snow', alpha=0.5)
code: 重なりを見やすくスノー色を使って散布図を描画する	plt.plot(xdata, ydata, c='snow', alpha=0.5)	plt.plot(xdata, ydata, c='snow', alpha=0.5)
code: 重なりを見やすく散布図をスノー色のマーカーを用いて描画する	plt.plot(xdata, ydata, c='snow', alpha=0.5)	plt.plot(xdata, ydata, c='snow', alpha=0.5)
code: スノー色を使って重なりを見やすくリストxdataとイテラブルydataについての散布図をプロットする	plt.plot(xdata, ydata, c='snow', alpha=0.5)	plt.plot(xdata, ydata, c='snow', alpha=0.5)
code: リストxdataと配列ydataについての散布図を重なりを見やすくスノー色で描く	plt.plot(xdata, ydata, c='snow', alpha=0.5)	plt.plot(xdata, ydata, c='snow', alpha=0.5)
code: 重なりを見やすくスノー色でイテラブルxdataとイテラブルydataの散布図をプロットする	plt.plot(xdata, ydata, c='snow', alpha=0.5)	plt.plot(xdata, ydata, c='snow', alpha=0.5)
code: 散布図を重なりを見やすくスプリンググリーン色で描く	plt.plot(xdata, ydata, c='springgreen', alpha=0.5)	plt.plot(xdata, ydata, c='springgreen', alpha=0.5)
code: 重なりを見やすくスプリンググリーン色で散布図を描画する	plt.plot(xdata, ydata, c='springgreen', alpha=0.5)	plt.plot(xdata, ydata, c='springgreen', alpha=0.5)
code: 重なりを見やすく散布図をスプリンググリーン色として描く	plt.plot(xdata, ydata, c='springgreen', alpha=0.5)	plt.plot(xdata, ydata, c='springgreen', alpha=0.5)
code: 重なりを見やすくスプリンググリーン色を用いてデータ列xdataとリストydataの散布図を描画する	plt.plot(xdata, ydata, c='springgreen', alpha=0.5)	plt.plot(xdata, ydata, c='springgreen', alpha=0.5)
code: リストxdataとリストydataについての散布図を重なりを見やすくスプリンググリーン色として描く	plt.plot(xdata, ydata, c='springgreen', alpha=0.5)	plt.plot(xdata, ydata, c='springgreen', alpha=0.5)
code: 重なりを見やすくスプリンググリーン色で配列xdataと配列ydataについての散布図を描画する	plt.plot(xdata, ydata, c='springgreen', alpha=0.5)	plt.plot(xdata, ydata, c='springgreen', alpha=0.5)
code: スチールブルー色のマーカーで重なりを見やすく散布図を描く	plt.plot(xdata, ydata, c='steelblue', alpha=0.5)	plt.plot(xdata, ydata, c='steelblue', alpha=0.5)
code: 重なりを見やすくスチールブルー色のマーカーとして散布図を描画する	plt.plot(xdata, ydata, c='steelblue', alpha=0.5)	plt.plot(xdata, ydata, c='steelblue', alpha=0.5)
code: 散布図を重なりを見やすくスチールブルー色のマーカーでプロットする	plt.plot(xdata, ydata, c='steelblue', alpha=0.5)	plt.plot(xdata, ydata, c='steelblue', alpha=0.5)
code: 重なりを見やすくスチールブルー色で数列xdataとデータ列ydataについての散布図を描く	plt.plot(xdata, ydata, c='steelblue', alpha=0.5)	plt.plot(xdata, ydata, c='steelblue', alpha=0.5)
code: 配列xdataとイテラブルydataについての散布図をスチールブルー色として重なりを見やすくプロットする	plt.plot(xdata, ydata, c='steelblue', alpha=0.5)	plt.plot(xdata, ydata, c='steelblue', alpha=0.5)
code: スチールブルー色で重なりを見やすく配列xdataと数列ydataの散布図をプロットする	plt.plot(xdata, ydata, c='steelblue', alpha=0.5)	plt.plot(xdata, ydata, c='steelblue', alpha=0.5)
code: 散布図をタン色のマーカーとして重なりを見やすくプロットする	plt.plot(xdata, ydata, c='tan', alpha=0.5)	plt.plot(xdata, ydata, c='tan', alpha=0.5)
code: タン色のマーカーを使って重なりを見やすく散布図を描く	plt.plot(xdata, ydata, c='tan', alpha=0.5)	plt.plot(xdata, ydata, c='tan', alpha=0.5)
code: タン色を用いて重なりを見やすく散布図を描く	plt.plot(xdata, ydata, c='tan', alpha=0.5)	plt.plot(xdata, ydata, c='tan', alpha=0.5)
code: 配列xdataとデータ列ydataについての散布図を重なりを見やすくタン色としてプロットする	plt.plot(xdata, ydata, c='tan', alpha=0.5)	plt.plot(xdata, ydata, c='tan', alpha=0.5)
code: データ列xdataと数列ydataの散布図を重なりを見やすくタン色で描画する	plt.plot(xdata, ydata, c='tan', alpha=0.5)	plt.plot(xdata, ydata, c='tan', alpha=0.5)
code: タン色としてデータ列xdataと数列ydataについての散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='tan', alpha=0.5)	plt.plot(xdata, ydata, c='tan', alpha=0.5)
code: 散布図を重なりを見やすくティール色のマーカーとして描く	plt.plot(xdata, ydata, c='teal', alpha=0.5)	plt.plot(xdata, ydata, c='teal', alpha=0.5)
code: 重なりを見やすくティール色を使って散布図を描画する	plt.plot(xdata, ydata, c='teal', alpha=0.5)	plt.plot(xdata, ydata, c='teal', alpha=0.5)
code: 重なりを見やすく散布図をティール色を使ってプロットする	plt.plot(xdata, ydata, c='teal', alpha=0.5)	plt.plot(xdata, ydata, c='teal', alpha=0.5)
code: 配列xdataと配列ydataについての散布図を重なりを見やすくティール色で描く	plt.plot(xdata, ydata, c='teal', alpha=0.5)	plt.plot(xdata, ydata, c='teal', alpha=0.5)
code: ティール色で重なりを見やすく配列xdataとデータ列ydataについての散布図を描く	plt.plot(xdata, ydata, c='teal', alpha=0.5)	plt.plot(xdata, ydata, c='teal', alpha=0.5)
code: 数列xdataと数列ydataの散布図を重なりを見やすくティール色で描く	plt.plot(xdata, ydata, c='teal', alpha=0.5)	plt.plot(xdata, ydata, c='teal', alpha=0.5)
code: 散布図をアザミ色のマーカーで重なりを見やすく描画する	plt.plot(xdata, ydata, c='thistle', alpha=0.5)	plt.plot(xdata, ydata, c='thistle', alpha=0.5)
code: アザミ色として重なりを見やすく散布図をプロットする	plt.plot(xdata, ydata, c='thistle', alpha=0.5)	plt.plot(xdata, ydata, c='thistle', alpha=0.5)
code: 重なりを見やすくアザミ色のマーカーで散布図をプロットする	plt.plot(xdata, ydata, c='thistle', alpha=0.5)	plt.plot(xdata, ydata, c='thistle', alpha=0.5)
code: 重なりを見やすくリストxdataと数列ydataについての散布図をアザミ色として描く	plt.plot(xdata, ydata, c='thistle', alpha=0.5)	plt.plot(xdata, ydata, c='thistle', alpha=0.5)
code: アザミ色を使ってイテラブルxdataと数列ydataの散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='thistle', alpha=0.5)	plt.plot(xdata, ydata, c='thistle', alpha=0.5)
code: 配列xdataと配列ydataについての散布図をアザミ色として重なりを見やすくプロットする	plt.plot(xdata, ydata, c='thistle', alpha=0.5)	plt.plot(xdata, ydata, c='thistle', alpha=0.5)
code: 重なりを見やすくトマト色のマーカーで散布図をプロットする	plt.plot(xdata, ydata, c='tomato', alpha=0.5)	plt.plot(xdata, ydata, c='tomato', alpha=0.5)
code: 重なりを見やすくトマト色を使って散布図を描画する	plt.plot(xdata, ydata, c='tomato', alpha=0.5)	plt.plot(xdata, ydata, c='tomato', alpha=0.5)
code: トマト色で散布図を重なりを見やすくプロットする	plt.plot(xdata, ydata, c='tomato', alpha=0.5)	plt.plot(xdata, ydata, c='tomato', alpha=0.5)
code: データ列xdataとリストydataの散布図を重なりを見やすくトマト色でプロットする	plt.plot(xdata, ydata, c='tomato', alpha=0.5)	plt.plot(xdata, ydata, c='tomato', alpha=0.5)
code: トマト色としてイテラブルxdataと配列ydataの散布図を重なりを見やすくプロットする	plt.plot(xdata, ydata, c='tomato', alpha=0.5)	plt.plot(xdata, ydata, c='tomato', alpha=0.5)
code: 重なりを見やすくイテラブルxdataとデータ列ydataの散布図をトマト色として描画する	plt.plot(xdata, ydata, c='tomato', alpha=0.5)	plt.plot(xdata, ydata, c='tomato', alpha=0.5)
code: ターコイズ色のマーカーで重なりを見やすく散布図を描く	plt.plot(xdata, ydata, c='turquoise', alpha=0.5)	plt.plot(xdata, ydata, c='turquoise', alpha=0.5)
code: ターコイズ色のマーカーを使って重なりを見やすく散布図を描画する	plt.plot(xdata, ydata, c='turquoise', alpha=0.5)	plt.plot(xdata, ydata, c='turquoise', alpha=0.5)
code: 重なりを見やすくターコイズ色のマーカーで散布図を描く	plt.plot(xdata, ydata, c='turquoise', alpha=0.5)	plt.plot(xdata, ydata, c='turquoise', alpha=0.5)
code: ターコイズ色を使ってデータ列xdataとイテラブルydataの散布図を重なりを見やすくプロットする	plt.plot(xdata, ydata, c='turquoise', alpha=0.5)	plt.plot(xdata, ydata, c='turquoise', alpha=0.5)
code: 重なりを見やすくターコイズ色でリストxdataとリストydataの散布図を描く	plt.plot(xdata, ydata, c='turquoise', alpha=0.5)	plt.plot(xdata, ydata, c='turquoise', alpha=0.5)
code: ターコイズ色でリストxdataと数列ydataについての散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='turquoise', alpha=0.5)	plt.plot(xdata, ydata, c='turquoise', alpha=0.5)
code: 重なりを見やすく散布図をバイオレット色のマーカーを用いて描く	plt.plot(xdata, ydata, c='violet', alpha=0.5)	plt.plot(xdata, ydata, c='violet', alpha=0.5)
code: バイオレット色のマーカーとして散布図を重なりを見やすくプロットする	plt.plot(xdata, ydata, c='violet', alpha=0.5)	plt.plot(xdata, ydata, c='violet', alpha=0.5)
code: 重なりを見やすく散布図をバイオレット色のマーカーを用いて描画する	plt.plot(xdata, ydata, c='violet', alpha=0.5)	plt.plot(xdata, ydata, c='violet', alpha=0.5)
code: データ列xdataと配列ydataの散布図を重なりを見やすくバイオレット色として描く	plt.plot(xdata, ydata, c='violet', alpha=0.5)	plt.plot(xdata, ydata, c='violet', alpha=0.5)
code: 配列xdataとデータ列ydataの散布図をバイオレット色として重なりを見やすくプロットする	plt.plot(xdata, ydata, c='violet', alpha=0.5)	plt.plot(xdata, ydata, c='violet', alpha=0.5)
code: バイオレット色を用いて重なりを見やすくリストxdataとデータ列ydataの散布図をプロットする	plt.plot(xdata, ydata, c='violet', alpha=0.5)	plt.plot(xdata, ydata, c='violet', alpha=0.5)
code: 小麦色を用いて重なりを見やすく散布図をプロットする	plt.plot(xdata, ydata, c='wheat', alpha=0.5)	plt.plot(xdata, ydata, c='wheat', alpha=0.5)
code: 散布図を小麦色を用いて重なりを見やすく描画する	plt.plot(xdata, ydata, c='wheat', alpha=0.5)	plt.plot(xdata, ydata, c='wheat', alpha=0.5)
code: 重なりを見やすく小麦色で散布図を描く	plt.plot(xdata, ydata, c='wheat', alpha=0.5)	plt.plot(xdata, ydata, c='wheat', alpha=0.5)
code: 小麦色でイテラブルxdataとデータ列ydataについての散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='wheat', alpha=0.5)	plt.plot(xdata, ydata, c='wheat', alpha=0.5)
code: 重なりを見やすくデータ列xdataとイテラブルydataの散布図を小麦色として描く	plt.plot(xdata, ydata, c='wheat', alpha=0.5)	plt.plot(xdata, ydata, c='wheat', alpha=0.5)
code: 小麦色を用いて重なりを見やすくデータ列xdataと数列ydataの散布図をプロットする	plt.plot(xdata, ydata, c='wheat', alpha=0.5)	plt.plot(xdata, ydata, c='wheat', alpha=0.5)
code: 散布図を重なりを見やすくホワイト色を使って描く	plt.plot(xdata, ydata, c='white', alpha=0.5)	plt.plot(xdata, ydata, c='white', alpha=0.5)
code: 重なりを見やすく散布図をホワイト色のマーカーとしてプロットする	plt.plot(xdata, ydata, c='white', alpha=0.5)	plt.plot(xdata, ydata, c='white', alpha=0.5)
code: ホワイト色のマーカーを用いて散布図を重なりを見やすくプロットする	plt.plot(xdata, ydata, c='white', alpha=0.5)	plt.plot(xdata, ydata, c='white', alpha=0.5)
code: ホワイト色を用いて数列xdataと配列ydataの散布図を重なりを見やすくプロットする	plt.plot(xdata, ydata, c='white', alpha=0.5)	plt.plot(xdata, ydata, c='white', alpha=0.5)
code: ホワイト色としてイテラブルxdataと配列ydataの散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='white', alpha=0.5)	plt.plot(xdata, ydata, c='white', alpha=0.5)
code: ホワイト色として数列xdataと数列ydataについての散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='white', alpha=0.5)	plt.plot(xdata, ydata, c='white', alpha=0.5)
code: 散布図をホワイトスモーク色として重なりを見やすく描く	plt.plot(xdata, ydata, c='whitesmoke', alpha=0.5)	plt.plot(xdata, ydata, c='whitesmoke', alpha=0.5)
code: 重なりを見やすく散布図をホワイトスモーク色を使って描画する	plt.plot(xdata, ydata, c='whitesmoke', alpha=0.5)	plt.plot(xdata, ydata, c='whitesmoke', alpha=0.5)
code: 散布図をホワイトスモーク色のマーカーとして重なりを見やすく描く	plt.plot(xdata, ydata, c='whitesmoke', alpha=0.5)	plt.plot(xdata, ydata, c='whitesmoke', alpha=0.5)
code: 重なりを見やすく配列xdataと配列ydataについての散布図をホワイトスモーク色を使ってプロットする	plt.plot(xdata, ydata, c='whitesmoke', alpha=0.5)	plt.plot(xdata, ydata, c='whitesmoke', alpha=0.5)
code: ホワイトスモーク色として重なりを見やすくリストxdataとリストydataについての散布図を描画する	plt.plot(xdata, ydata, c='whitesmoke', alpha=0.5)	plt.plot(xdata, ydata, c='whitesmoke', alpha=0.5)
code: 配列xdataとイテラブルydataの散布図を重なりを見やすくホワイトスモーク色としてプロットする	plt.plot(xdata, ydata, c='whitesmoke', alpha=0.5)	plt.plot(xdata, ydata, c='whitesmoke', alpha=0.5)
code: 散布図を黄色色のマーカーで重なりを見やすくプロットする	plt.plot(xdata, ydata, c='yellow', alpha=0.5)	plt.plot(xdata, ydata, c='yellow', alpha=0.5)
code: 黄色色のマーカーを用いて散布図を重なりを見やすく描く	plt.plot(xdata, ydata, c='yellow', alpha=0.5)	plt.plot(xdata, ydata, c='yellow', alpha=0.5)
code: 黄色色を使って重なりを見やすく散布図をプロットする	plt.plot(xdata, ydata, c='yellow', alpha=0.5)	plt.plot(xdata, ydata, c='yellow', alpha=0.5)
code: 配列xdataと数列ydataについての散布図を重なりを見やすく黄色色で描く	plt.plot(xdata, ydata, c='yellow', alpha=0.5)	plt.plot(xdata, ydata, c='yellow', alpha=0.5)
code: 数列xdataと配列ydataについての散布図を黄色色を用いて重なりを見やすく描く	plt.plot(xdata, ydata, c='yellow', alpha=0.5)	plt.plot(xdata, ydata, c='yellow', alpha=0.5)
code: 配列xdataと数列ydataの散布図を黄色色を用いて重なりを見やすく描く	plt.plot(xdata, ydata, c='yellow', alpha=0.5)	plt.plot(xdata, ydata, c='yellow', alpha=0.5)
code: イエローグリーン色を使って散布図を重なりを見やすく描画する	plt.plot(xdata, ydata, c='yellowgreen', alpha=0.5)	plt.plot(xdata, ydata, c='yellowgreen', alpha=0.5)
code: 重なりを見やすく散布図をイエローグリーン色のマーカーとして描く	plt.plot(xdata, ydata, c='greenyellow', alpha=0.5)	plt.plot(xdata, ydata, c='yellowgreen', alpha=0.5)
code: 散布図を重なりを見やすくイエローグリーン色のマーカーで描く	plt.plot(xdata, ydata, c='yellowgreen', alpha=0.5)	plt.plot(xdata, ydata, c='yellowgreen', alpha=0.5)
code: データ列xdataとイテラブルydataについての散布図を重なりを見やすくイエローグリーン色でプロットする	plt.plot(xdata, ydata, c='yellowgreen', alpha=0.5)	plt.plot(xdata, ydata, c='yellowgreen', alpha=0.5)
code: 数列xdataとリストydataについての散布図を重なりを見やすくイエローグリーン色として描画する	plt.plot(xdata, ydata, c='greenyellow', alpha=0.5)	plt.plot(xdata, ydata, c='yellowgreen', alpha=0.5)
code: 配列xdataと数列ydataについての散布図を重なりを見やすくイエローグリーン色で描く	plt.plot(xdata, ydata, c='greenyellow', alpha=0.5)	plt.plot(xdata, ydata, c='yellowgreen', alpha=0.5)
code: アリスブルー色でイテラブルxdataについてのヒストグラムを描画する	plt.hist(xdata, color='aliceblue')	plt.hist(xdata, color='aliceblue')
code: アリスブルーでイテラブルxdataについての柱状図を描画する	plt.hist(xdata, color='aliceblue')	plt.hist(xdata, color='aliceblue')
code: 度数分布図をアリスブルー色として描く	plt.hist(xdata, color='aliceblue')	plt.hist(xdata, color='aliceblue')
code: リストxdataをアリスブルー色の柱状グラフで描画する	plt.hist(xdata, color='aliceblue')	plt.hist(xdata, color='aliceblue')
code: アリスブルー色の度数分布図で数列xdataを描く	plt.hist(xdata, color='aliceblue')	plt.hist(xdata, color='aliceblue')
code: アリスブルー色の柱状グラフで数列xdataを描画する	plt.hist(xdata, color='aliceblue')	plt.hist(xdata, color='aliceblue')
code: アンティークホワイト色を用いてデータ列xdataについてのヒストグラムを描く	plt.hist(xdata, color='antiquewhite')	plt.hist(xdata, color='antiquewhite')
code: リストxdataについてのヒストグラムをアンティークホワイト色でプロットする	plt.hist(xdata, color='antiquewhite')	plt.hist(xdata, color='antiquewhite')
code: アンティークホワイト色を用いて度数分布図を描画する	plt.hist(xdata, color='antiquewhite')	plt.hist(xdata, color='antiquewhite')
code: アンティークホワイト色の柱状図を使ってデータ列xdataを描く	plt.hist(xdata, color='antiquewhite')	plt.hist(xdata, color='antiquewhite')
code: アンティークホワイト色のヒストグラムとしてデータ列xdataをプロットする	plt.hist(xdata, color='antiquewhite')	plt.hist(xdata, color='antiquewhite')
code: 配列xdataをアンティークホワイト色の柱状図で描画する	plt.hist(xdata, color='antiquewhite')	plt.hist(xdata, color='antiquewhite')
code: アクア色で配列xdataについての柱状図を描画する	plt.hist(xdata, color='aqua')	plt.hist(xdata, color='aqua')
code: アクアとして柱状グラフをプロットする	plt.hist(xdata, color='aqua')	plt.hist(xdata, color='aqua')
code: 度数分布図をアクア色でプロットする	plt.hist(xdata, color='aqua')	plt.hist(xdata, color='aqua')
code: アクア色のヒストグラムを用いてイテラブルxdataを描画する	plt.hist(xdata, color='aqua')	plt.hist(xdata, color='aqua')
code: データ列xdataをアクア色のヒストグラムとして描画する	plt.hist(xdata, color='aqua')	plt.hist(xdata, color='aqua')
code: データ列xdataをアクア色の柱状図を用いてプロットする	plt.hist(xdata, color='aqua')	plt.hist(xdata, color='aqua')
code: ヒストグラムをアクアマリンでプロットする	plt.hist(xdata, color='aquamarine')	plt.hist(xdata, color='aquamarine')
code: アクアマリンを用いて柱状グラフをプロットする	plt.hist(xdata, color='aquamarine')	plt.hist(xdata, color='aquamarine')
code: 度数分布図をアクアマリン色を用いてプロットする	plt.hist(xdata, color='aquamarine')	plt.hist(xdata, color='aquamarine')
code: アクアマリン色のヒストグラムとしてデータ列xdataを描く	plt.hist(xdata, color='aquamarine')	plt.hist(xdata, color='aquamarine')
code: アクアマリン色のヒストグラムとしてイテラブルxdataをプロットする	plt.hist(xdata, color='aquamarine')	plt.hist(xdata, color='aquamarine')
code: アクアマリン色のヒストグラムを使ってデータ列xdataを描画する	plt.hist(xdata, color='aquamarine')	plt.hist(xdata, color='aquamarine')
code: 紺碧色を用いて配列xdataについての柱状図をプロットする	plt.hist(xdata, color='azure')	plt.hist(xdata, color='azure')
code: 紺碧でヒストグラムを描く	plt.hist(xdata, color='azure')	plt.hist(xdata, color='azure')
code: 紺碧色で数列xdataについての度数分布図をプロットする	plt.hist(xdata, color='azure')	plt.hist(xdata, color='azure')
code: 紺碧色のヒストグラムでリストxdataを描く	plt.hist(xdata, color='azure')	plt.hist(xdata, color='azure')
code: 紺碧色のヒストグラムでデータ列xdataを描く	plt.hist(xdata, color='azure')	plt.hist(xdata, color='azure')
code: 紺碧色のヒストグラムを使って数列xdataをプロットする	plt.hist(xdata, color='azure')	plt.hist(xdata, color='azure')
code: 柱状図をベージュとして描く	plt.hist(xdata, color='beige')	plt.hist(xdata, color='beige')
code: ベージュ色を使ってヒストグラムを描画する	plt.hist(xdata, color='beige')	plt.hist(xdata, color='beige')
code: 数列xdataについての柱状図をベージュ色を使って描く	plt.hist(xdata, color='beige')	plt.hist(xdata, color='beige')
code: ベージュ色の度数分布図を用いて配列xdataをプロットする	plt.hist(xdata, color='beige')	plt.hist(xdata, color='beige')
code: ベージュ色のヒストグラムとしてイテラブルxdataを描く	plt.hist(xdata, color='beige')	plt.hist(xdata, color='beige')
code: ベージュ色の度数分布図でリストxdataを描画する	plt.hist(xdata, color='beige')	plt.hist(xdata, color='beige')
code: ビスクとしてデータ列xdataについての度数分布図を描く	plt.hist(xdata, color='bisque')	plt.hist(xdata, color='bisque')
code: ビスクを用いてヒストグラムをプロットする	plt.hist(xdata, color='bisque')	plt.hist(xdata, color='bisque')
code: ビスク色を用いてデータ列xdataについてのヒストグラムをプロットする	plt.hist(xdata, color='bisque')	plt.hist(xdata, color='bisque')
code: ビスク色のヒストグラムで配列xdataをプロットする	plt.hist(xdata, color='bisque')	plt.hist(xdata, color='bisque')
code: ビスク色のヒストグラムでリストxdataを描く	plt.hist(xdata, color='bisque')	plt.hist(xdata, color='bisque')
code: ビスク色の度数分布図を用いて数列xdataを描画する	plt.hist(xdata, color='bisque')	plt.hist(xdata, color='bisque')
code: ヒストグラムをブラック色としてプロットする	plt.hist(xdata, color='black')	plt.hist(xdata, color='black')
code: 度数分布図をブラックを使ってプロットする	plt.hist(xdata, color='black')	plt.hist(xdata, color='black')
code: イテラブルxdataについてのヒストグラムをブラックを使って描く	plt.hist(xdata, color='black')	plt.hist(xdata, color='black')
code: ブラック色のヒストグラムとしてリストxdataをプロットする	plt.hist(xdata, color='black')	plt.hist(xdata, color='black')
code: 配列xdataをブラック色のヒストグラムを用いて描く	plt.hist(xdata, color='black')	plt.hist(xdata, color='black')
code: リストxdataをブラック色のヒストグラムでプロットする	plt.hist(xdata, color='black')	plt.hist(xdata, color='black')
code: 配列xdataについてのヒストグラムをブランチドアーモンド色として描画する	plt.hist(xdata, color='blanchedalmond')	plt.hist(xdata, color='blanchedalmond')
code: ブランチドアーモンドを用いてデータ列xdataについての度数分布図を描く	plt.hist(xdata, color='blanchedalmond')	plt.hist(xdata, color='blanchedalmond')
code: ブランチドアーモンド色としてヒストグラムをプロットする	plt.hist(xdata, color='blanchedalmond')	plt.hist(xdata, color='blanchedalmond')
code: ブランチドアーモンド色のヒストグラムを用いて配列xdataをプロットする	plt.hist(xdata, color='blanchedalmond')	plt.hist(xdata, color='blanchedalmond')
code: イテラブルxdataをブランチドアーモンド色のヒストグラムとして描画する	plt.hist(xdata, color='blanchedalmond')	plt.hist(xdata, color='blanchedalmond')
code: 配列xdataをブランチドアーモンド色の柱状図としてプロットする	plt.hist(xdata, color='blanchedalmond')	plt.hist(xdata, color='blanchedalmond')
code: 青色を使って柱状グラフを描画する	plt.hist(xdata, color='blue')	plt.hist(xdata, color='blue')
code: 青色でデータ列xdataについての柱状グラフを描く	plt.hist(xdata, color='blue')	plt.hist(xdata, color='blue')
code: 青色で柱状図を描画する	plt.hist(xdata, color='blue')	plt.hist(xdata, color='blue')
code: 数列xdataを青色の柱状図を使って描画する	plt.hist(xdata, color='blue')	plt.hist(xdata, color='blue')
code: 青色のヒストグラムを用いてリストxdataを描く	plt.hist(xdata, color='blue')	plt.hist(xdata, color='blue')
code: 青色の柱状図でデータ列xdataを描画する	plt.hist(xdata, color='blue')	plt.hist(xdata, color='blue')
code: ブルーバイオレット色として柱状グラフを描く	plt.hist(xdata, color='blueviolet')	plt.hist(xdata, color='blueviolet')
code: データ列xdataについての度数分布図をブルーバイオレット色として描く	plt.hist(xdata, color='blueviolet')	plt.hist(xdata, color='blueviolet')
code: ブルーバイオレットでリストxdataについての柱状図をプロットする	plt.hist(xdata, color='blueviolet')	plt.hist(xdata, color='blueviolet')
code: 数列xdataをブルーバイオレット色のヒストグラムとして描く	plt.hist(xdata, color='blueviolet')	plt.hist(xdata, color='blueviolet')
code: データ列xdataをブルーバイオレット色の柱状図として描画する	plt.hist(xdata, color='blueviolet')	plt.hist(xdata, color='blueviolet')
code: ブルーバイオレット色のヒストグラムを用いてイテラブルxdataをプロットする	plt.hist(xdata, color='blueviolet')	plt.hist(xdata, color='blueviolet')
code: 柱状図をブラウン色として描画する	plt.hist(xdata, color='brown')	plt.hist(xdata, color='brown')
code: ヒストグラムをブラウンとして描く	plt.hist(xdata, color='brown')	plt.hist(xdata, color='brown')
code: ブラウンとしてヒストグラムをプロットする	plt.hist(xdata, color='brown')	plt.hist(xdata, color='brown')
code: イテラブルxdataをブラウン色の柱状図を用いて描画する	plt.hist(xdata, color='brown')	plt.hist(xdata, color='brown')
code: ブラウン色の柱状グラフで配列xdataを描く	plt.hist(xdata, color='brown')	plt.hist(xdata, color='brown')
code: イテラブルxdataをブラウン色の柱状図を使って描画する	plt.hist(xdata, color='brown')	plt.hist(xdata, color='brown')
code: ハリウッドを使って柱状図を描く	plt.hist(xdata, color='burlywood')	plt.hist(xdata, color='burlywood')
code: 数列xdataについての柱状図をハリウッド色として描画する	plt.hist(xdata, color='burlywood')	plt.hist(xdata, color='burlywood')
code: ハリウッドとしてヒストグラムを描画する	plt.hist(xdata, color='burlywood')	plt.hist(xdata, color='burlywood')
code: ハリウッド色の柱状グラフとして配列xdataをプロットする	plt.hist(xdata, color='burlywood')	plt.hist(xdata, color='burlywood')
code: 数列xdataをハリウッド色のヒストグラムでプロットする	plt.hist(xdata, color='burlywood')	plt.hist(xdata, color='burlywood')
code: ハリウッド色の柱状グラフで配列xdataをプロットする	plt.hist(xdata, color='burlywood')	plt.hist(xdata, color='burlywood')
code: データ列xdataについての柱状グラフをカデットブルーとして描く	plt.hist(xdata, color='cadetblue')	plt.hist(xdata, color='cadetblue')
code: カデットブルーを用いてイテラブルxdataについてのヒストグラムをプロットする	plt.hist(xdata, color='cadetblue')	plt.hist(xdata, color='cadetblue')
code: ヒストグラムをカデットブルーを使ってプロットする	plt.hist(xdata, color='cadetblue')	plt.hist(xdata, color='cadetblue')
code: カデットブルー色のヒストグラムを使って数列xdataをプロットする	plt.hist(xdata, color='cadetblue')	plt.hist(xdata, color='cadetblue')
code: イテラブルxdataをカデットブルー色の柱状図としてプロットする	plt.hist(xdata, color='cadetblue')	plt.hist(xdata, color='cadetblue')
code: カデットブルー色のヒストグラムを用いてリストxdataをプロットする	plt.hist(xdata, color='cadetblue')	plt.hist(xdata, color='cadetblue')
code: ヒストグラムをシャルトルーズ色として描く	plt.hist(xdata, color='chartreuse')	plt.hist(xdata, color='chartreuse')
code: データ列xdataについてのヒストグラムをシャルトルーズ色を使ってプロットする	plt.hist(xdata, color='chartreuse')	plt.hist(xdata, color='chartreuse')
code: シャルトルーズ色を用いてヒストグラムを描く	plt.hist(xdata, color='chartreuse')	plt.hist(xdata, color='chartreuse')
code: リストxdataをシャルトルーズ色の柱状グラフを用いて描く	plt.hist(xdata, color='chartreuse')	plt.hist(xdata, color='chartreuse')
code: 配列xdataをシャルトルーズ色の度数分布図で描画する	plt.hist(xdata, color='chartreuse')	plt.hist(xdata, color='chartreuse')
code: シャルトルーズ色のヒストグラムを使って配列xdataを描く	plt.hist(xdata, color='chartreuse')	plt.hist(xdata, color='chartreuse')
code: チョコレートとしてヒストグラムを描画する	plt.hist(xdata, color='chocolate')	plt.hist(xdata, color='chocolate')
code: 柱状図をチョコレートを使ってプロットする	plt.hist(xdata, color='chocolate')	plt.hist(xdata, color='chocolate')
code: チョコレートを使ってヒストグラムをプロットする	plt.hist(xdata, color='chocolate')	plt.hist(xdata, color='chocolate')
code: 配列xdataをチョコレート色のヒストグラムで描く	plt.hist(xdata, color='chocolate')	plt.hist(xdata, color='chocolate')
code: リストxdataをチョコレート色のヒストグラムとして描画する	plt.hist(xdata, color='chocolate')	plt.hist(xdata, color='chocolate')
code: 配列xdataをチョコレート色の柱状図として描画する	plt.hist(xdata, color='chocolate')	plt.hist(xdata, color='chocolate')
code: ヒストグラムをコーラルを用いて描画する	plt.hist(xdata, color='coral')	plt.hist(xdata, color='coral')
code: コーラル色を用いてイテラブルxdataについてのヒストグラムをプロットする	plt.hist(xdata, color='coral')	plt.hist(xdata, color='coral')
code: 配列xdataについてのヒストグラムをコーラルで描く	plt.hist(xdata, color='coral')	plt.hist(xdata, color='coral')
code: データ列xdataをコーラル色のヒストグラムを使って描く	plt.hist(xdata, color='coral')	plt.hist(xdata, color='coral')
code: 数列xdataをコーラル色の柱状グラフで描画する	plt.hist(xdata, color='coral')	plt.hist(xdata, color='coral')
code: コーラル色の度数分布図を用いて数列xdataを描く	plt.hist(xdata, color='coral')	plt.hist(xdata, color='coral')
code: コーンフラワーブルー色でリストxdataについての度数分布図を描く	plt.hist(xdata, color='cornflowerblue')	plt.hist(xdata, color='cornflowerblue')
code: ヒストグラムをコーンフラワーブルー色でプロットする	plt.hist(xdata, color='cornflowerblue')	plt.hist(xdata, color='cornflowerblue')
code: ヒストグラムをコーンフラワーブルーを用いてプロットする	plt.hist(xdata, color='cornflowerblue')	plt.hist(xdata, color='cornflowerblue')
code: コーンフラワーブルー色の柱状図として数列xdataを描画する	plt.hist(xdata, color='cornflowerblue')	plt.hist(xdata, color='cornflowerblue')
code: リストxdataをコーンフラワーブルー色の柱状図で描画する	plt.hist(xdata, color='cornflowerblue')	plt.hist(xdata, color='cornflowerblue')
code: 配列xdataをコーンフラワーブルー色の度数分布図で描く	plt.hist(xdata, color='cornflowerblue')	plt.hist(xdata, color='cornflowerblue')
code: コーンズシルク色を使って配列xdataについてのヒストグラムをプロットする	plt.hist(xdata, color='cornsilk')	plt.hist(xdata, color='cornsilk')
code: 配列xdataについての柱状グラフをコーンズシルクで描く	plt.hist(xdata, color='cornsilk')	plt.hist(xdata, color='cornsilk')
code: コーンズシルク色としてヒストグラムを描く	plt.hist(xdata, color='cornsilk')	plt.hist(xdata, color='cornsilk')
code: コーンズシルク色の柱状グラフとしてリストxdataをプロットする	plt.hist(xdata, color='cornsilk')	plt.hist(xdata, color='cornsilk')
code: コーンズシルク色のヒストグラムでイテラブルxdataを描く	plt.hist(xdata, color='cornsilk')	plt.hist(xdata, color='cornsilk')
code: コーンズシルク色のヒストグラムを用いてリストxdataを描画する	plt.hist(xdata, color='cornsilk')	plt.hist(xdata, color='cornsilk')
code: 柱状グラフをクリムゾン色でプロットする	plt.hist(xdata, color='crimson')	plt.hist(xdata, color='crimson')
code: ヒストグラムをクリムゾンを使って描画する	plt.hist(xdata, color='crimson')	plt.hist(xdata, color='crimson')
code: イテラブルxdataについての度数分布図をクリムゾンを用いて描く	plt.hist(xdata, color='crimson')	plt.hist(xdata, color='crimson')
code: リストxdataをクリムゾン色の柱状図を使って描画する	plt.hist(xdata, color='crimson')	plt.hist(xdata, color='crimson')
code: イテラブルxdataをクリムゾン色の度数分布図として描く	plt.hist(xdata, color='crimson')	plt.hist(xdata, color='crimson')
code: イテラブルxdataをクリムゾン色のヒストグラムとしてプロットする	plt.hist(xdata, color='crimson')	plt.hist(xdata, color='crimson')
code: シアンとしてヒストグラムを描画する	plt.hist(xdata, color='cyan')	plt.hist(xdata, color='cyan')
code: シアン色を使ってデータ列xdataについてのヒストグラムを描く	plt.hist(xdata, color='cyan')	plt.hist(xdata, color='cyan')
code: 柱状図をシアン色を使って描画する	plt.hist(xdata, color='cyan')	plt.hist(xdata, color='cyan')
code: 配列xdataをシアン色の柱状図を用いて描画する	plt.hist(xdata, color='cyan')	plt.hist(xdata, color='cyan')
code: シアン色の度数分布図としてデータ列xdataを描画する	plt.hist(xdata, color='cyan')	plt.hist(xdata, color='cyan')
code: シアン色の度数分布図で配列xdataを描く	plt.hist(xdata, color='cyan')	plt.hist(xdata, color='cyan')
code: 数列xdataについてのヒストグラムをダークブルー色で描く	plt.hist(xdata, color='darkblue')	plt.hist(xdata, color='darkblue')
code: ダークブルー色で度数分布図を描画する	plt.hist(xdata, color='darkblue')	plt.hist(xdata, color='darkblue')
code: ダークブルー色を用いてリストxdataについてのヒストグラムを描く	plt.hist(xdata, color='darkblue')	plt.hist(xdata, color='darkblue')
code: ダークブルー色のヒストグラムとしてイテラブルxdataをプロットする	plt.hist(xdata, color='darkblue')	plt.hist(xdata, color='darkblue')
code: データ列xdataをダークブルー色の度数分布図として描く	plt.hist(xdata, color='darkblue')	plt.hist(xdata, color='darkblue')
code: リストxdataをダークブルー色のヒストグラムとしてプロットする	plt.hist(xdata, color='darkblue')	plt.hist(xdata, color='darkblue')
code: ダークシアンを使ってヒストグラムを描画する	plt.hist(xdata, color='darkcyan')	plt.hist(xdata, color='darkcyan')
code: ダークシアンでリストxdataについてのヒストグラムを描く	plt.hist(xdata, color='darkcyan')	plt.hist(xdata, color='darkcyan')
code: ダークシアンでリストxdataについてのヒストグラムを描く	plt.hist(xdata, color='darkcyan')	plt.hist(xdata, color='darkcyan')
code: データ列xdataをダークシアン色のヒストグラムを用いてプロットする	plt.hist(xdata, color='darkcyan')	plt.hist(xdata, color='darkcyan')
code: ダークシアン色の柱状グラフを使って数列xdataを描く	plt.hist(xdata, color='darkcyan')	plt.hist(xdata, color='darkcyan')
code: ダークシアン色の柱状グラフでデータ列xdataを描く	plt.hist(xdata, color='darkcyan')	plt.hist(xdata, color='darkcyan')
code: ダークゴールデンロッド色を使ってイテラブルxdataについてのヒストグラムを描く	plt.hist(xdata, color='darkgoldenrod')	plt.hist(xdata, color='darkgoldenrod')
code: ダークゴールデンロッドを使って配列xdataについてのヒストグラムをプロットする	plt.hist(xdata, color='darkgoldenrod')	plt.hist(xdata, color='darkgoldenrod')
code: リストxdataについてのヒストグラムをダークゴールデンロッド色を使って描画する	plt.hist(xdata, color='darkgoldenrod')	plt.hist(xdata, color='darkgoldenrod')
code: 配列xdataをダークゴールデンロッド色の柱状図として描画する	plt.hist(xdata, color='darkgoldenrod')	plt.hist(xdata, color='darkgoldenrod')
code: ダークゴールデンロッド色のヒストグラムで配列xdataを描画する	plt.hist(xdata, color='darkgoldenrod')	plt.hist(xdata, color='darkgoldenrod')
code: 配列xdataをダークゴールデンロッド色のヒストグラムとしてプロットする	plt.hist(xdata, color='darkgoldenrod')	plt.hist(xdata, color='darkgoldenrod')
code: 柱状図をダークグレー色を使ってプロットする	plt.hist(xdata, color='darkgrey')	plt.hist(xdata, color='darkgray')
code: 度数分布図をダークグレー色で描く	plt.hist(xdata, color='darkgray')	plt.hist(xdata, color='darkgray')
code: ヒストグラムをダークグレーを用いてプロットする	plt.hist(xdata, color='darkgray')	plt.hist(xdata, color='darkgray')
code: ダークグレー色のヒストグラムで配列xdataを描画する	plt.hist(xdata, color='darkgrey')	plt.hist(xdata, color='darkgray')
code: イテラブルxdataをダークグレー色のヒストグラムとして描く	plt.hist(xdata, color='darkgray')	plt.hist(xdata, color='darkgray')
code: ダークグレー色のヒストグラムを用いてデータ列xdataをプロットする	plt.hist(xdata, color='darkgrey')	plt.hist(xdata, color='darkgray')
code: ダークグリーンを用いてデータ列xdataについての度数分布図をプロットする	plt.hist(xdata, color='darkgreen')	plt.hist(xdata, color='darkgreen')
code: 柱状図をダークグリーンとして描画する	plt.hist(xdata, color='darkgreen')	plt.hist(xdata, color='darkgreen')
code: 度数分布図をダークグリーンを用いてプロットする	plt.hist(xdata, color='darkgreen')	plt.hist(xdata, color='darkgreen')
code: 配列xdataをダークグリーン色の度数分布図で描く	plt.hist(xdata, color='darkgreen')	plt.hist(xdata, color='darkgreen')
code: ダークグリーン色の柱状図としてイテラブルxdataをプロットする	plt.hist(xdata, color='darkgreen')	plt.hist(xdata, color='darkgreen')
code: イテラブルxdataをダークグリーン色のヒストグラムとして描く	plt.hist(xdata, color='darkgreen')	plt.hist(xdata, color='darkgreen')
code: 数列xdataについてのヒストグラムをダークグレー色としてプロットする	plt.hist(xdata, color='darkgrey')	plt.hist(xdata, color='darkgrey')
code: ヒストグラムをダークグレー色で描画する	plt.hist(xdata, color='darkgray')	plt.hist(xdata, color='darkgrey')
code: ダークグレーとしてヒストグラムを描画する	plt.hist(xdata, color='darkgrey')	plt.hist(xdata, color='darkgrey')
code: ダークグレー色の柱状図を用いて数列xdataを描く	plt.hist(xdata, color='darkgray')	plt.hist(xdata, color='darkgrey')
code: リストxdataをダークグレー色の柱状グラフで描画する	plt.hist(xdata, color='darkgray')	plt.hist(xdata, color='darkgrey')
code: データ列xdataをダークグレー色の柱状グラフを用いて描画する	plt.hist(xdata, color='darkgray')	plt.hist(xdata, color='darkgrey')
code: ダークカーキ色を用いて柱状図を描く	plt.hist(xdata, color='darkkhaki')	plt.hist(xdata, color='darkkhaki')
code: 配列xdataについての柱状グラフをダークカーキ色を使って描く	plt.hist(xdata, color='darkkhaki')	plt.hist(xdata, color='darkkhaki')
code: 度数分布図をダークカーキ色で描く	plt.hist(xdata, color='darkkhaki')	plt.hist(xdata, color='darkkhaki')
code: イテラブルxdataをダークカーキ色のヒストグラムを使って描画する	plt.hist(xdata, color='darkkhaki')	plt.hist(xdata, color='darkkhaki')
code: ダークカーキ色の柱状グラフとしてデータ列xdataを描画する	plt.hist(xdata, color='darkkhaki')	plt.hist(xdata, color='darkkhaki')
code: 配列xdataをダークカーキ色のヒストグラムを用いて描画する	plt.hist(xdata, color='darkkhaki')	plt.hist(xdata, color='darkkhaki')
code: 柱状グラフをダークマゼンタとして描画する	plt.hist(xdata, color='darkmagenta')	plt.hist(xdata, color='darkmagenta')
code: ダークマゼンタ色でイテラブルxdataについての度数分布図をプロットする	plt.hist(xdata, color='darkmagenta')	plt.hist(xdata, color='darkmagenta')
code: ダークマゼンタでヒストグラムを描く	plt.hist(xdata, color='darkmagenta')	plt.hist(xdata, color='darkmagenta')
code: データ列xdataをダークマゼンタ色のヒストグラムを使って描画する	plt.hist(xdata, color='darkmagenta')	plt.hist(xdata, color='darkmagenta')
code: イテラブルxdataをダークマゼンタ色のヒストグラムを用いて描画する	plt.hist(xdata, color='darkmagenta')	plt.hist(xdata, color='darkmagenta')
code: ダークマゼンタ色のヒストグラムを用いてデータ列xdataを描く	plt.hist(xdata, color='darkmagenta')	plt.hist(xdata, color='darkmagenta')
code: データ列xdataについての柱状グラフをダークオリーブグリーン色でプロットする	plt.hist(xdata, color='darkolivegreen')	plt.hist(xdata, color='darkolivegreen')
code: 数列xdataについての柱状図をダークオリーブグリーン色でプロットする	plt.hist(xdata, color='darkolivegreen')	plt.hist(xdata, color='darkolivegreen')
code: 柱状グラフをダークオリーブグリーンを使って描く	plt.hist(xdata, color='darkolivegreen')	plt.hist(xdata, color='darkolivegreen')
code: ダークオリーブグリーン色の柱状図を用いて数列xdataを描く	plt.hist(xdata, color='darkolivegreen')	plt.hist(xdata, color='darkolivegreen')
code: ダークオリーブグリーン色のヒストグラムを用いて配列xdataを描く	plt.hist(xdata, color='darkolivegreen')	plt.hist(xdata, color='darkolivegreen')
code: リストxdataをダークオリーブグリーン色の度数分布図としてプロットする	plt.hist(xdata, color='darkolivegreen')	plt.hist(xdata, color='darkolivegreen')
code: ダークオレンジでヒストグラムをプロットする	plt.hist(xdata, color='darkorange')	plt.hist(xdata, color='darkorange')
code: 配列xdataについてのヒストグラムをダークオレンジで描く	plt.hist(xdata, color='darkorange')	plt.hist(xdata, color='darkorange')
code: ダークオレンジ色でイテラブルxdataについての柱状グラフを描く	plt.hist(xdata, color='darkorange')	plt.hist(xdata, color='darkorange')
code: イテラブルxdataをダークオレンジ色の柱状図としてプロットする	plt.hist(xdata, color='darkorange')	plt.hist(xdata, color='darkorange')
code: ダークオレンジ色のヒストグラムで数列xdataを描画する	plt.hist(xdata, color='darkorange')	plt.hist(xdata, color='darkorange')
code: リストxdataをダークオレンジ色の柱状図を用いて描画する	plt.hist(xdata, color='darkorange')	plt.hist(xdata, color='darkorange')
code: ヒストグラムをダークオーキッドを用いてプロットする	plt.hist(xdata, color='darkorchid')	plt.hist(xdata, color='darkorchid')
code: ヒストグラムをダークオーキッド色で描画する	plt.hist(xdata, color='darkorchid')	plt.hist(xdata, color='darkorchid')
code: ダークオーキッド色を用いて数列xdataについての柱状図を描画する	plt.hist(xdata, color='darkorchid')	plt.hist(xdata, color='darkorchid')
code: ダークオーキッド色のヒストグラムとしてデータ列xdataをプロットする	plt.hist(xdata, color='darkorchid')	plt.hist(xdata, color='darkorchid')
code: 数列xdataをダークオーキッド色のヒストグラムを用いてプロットする	plt.hist(xdata, color='darkorchid')	plt.hist(xdata, color='darkorchid')
code: 数列xdataをダークオーキッド色の柱状図で描画する	plt.hist(xdata, color='darkorchid')	plt.hist(xdata, color='darkorchid')
code: ヒストグラムをダークレッドで描く	plt.hist(xdata, color='darkred')	plt.hist(xdata, color='darkred')
code: ダークレッド色を使ってリストxdataについての柱状図を描く	plt.hist(xdata, color='darkred')	plt.hist(xdata, color='darkred')
code: ダークレッドを用いてヒストグラムを描画する	plt.hist(xdata, color='darkred')	plt.hist(xdata, color='darkred')
code: ダークレッド色の柱状図を使ってリストxdataをプロットする	plt.hist(xdata, color='darkred')	plt.hist(xdata, color='darkred')
code: ダークレッド色の度数分布図を使ってリストxdataを描く	plt.hist(xdata, color='darkred')	plt.hist(xdata, color='darkred')
code: ダークレッド色の度数分布図としてイテラブルxdataをプロットする	plt.hist(xdata, color='darkred')	plt.hist(xdata, color='darkred')
code: ダークサーモン色で柱状図を描画する	plt.hist(xdata, color='darksalmon')	plt.hist(xdata, color='darksalmon')
code: ダークサーモンとして柱状図をプロットする	plt.hist(xdata, color='darksalmon')	plt.hist(xdata, color='darksalmon')
code: ダークサーモン色で度数分布図をプロットする	plt.hist(xdata, color='darksalmon')	plt.hist(xdata, color='darksalmon')
code: ダークサーモン色のヒストグラムとして数列xdataをプロットする	plt.hist(xdata, color='darksalmon')	plt.hist(xdata, color='darksalmon')
code: ダークサーモン色のヒストグラムとして配列xdataを描画する	plt.hist(xdata, color='darksalmon')	plt.hist(xdata, color='darksalmon')
code: イテラブルxdataをダークサーモン色の柱状グラフで描画する	plt.hist(xdata, color='darksalmon')	plt.hist(xdata, color='darksalmon')
code: 配列xdataについてのヒストグラムをダークシアグリーンとして描画する	plt.hist(xdata, color='darkseagreen')	plt.hist(xdata, color='darkseagreen')
code: 柱状グラフをダークシアグリーンでプロットする	plt.hist(xdata, color='darkseagreen')	plt.hist(xdata, color='darkseagreen')
code: ダークシアグリーン色で配列xdataについてのヒストグラムをプロットする	plt.hist(xdata, color='darkseagreen')	plt.hist(xdata, color='darkseagreen')
code: ダークシアグリーン色のヒストグラムとしてイテラブルxdataを描く	plt.hist(xdata, color='darkseagreen')	plt.hist(xdata, color='darkseagreen')
code: ダークシアグリーン色の柱状図としてリストxdataを描画する	plt.hist(xdata, color='darkseagreen')	plt.hist(xdata, color='darkseagreen')
code: データ列xdataをダークシアグリーン色のヒストグラムを使って描く	plt.hist(xdata, color='darkseagreen')	plt.hist(xdata, color='darkseagreen')
code: 数列xdataについてのヒストグラムをダークスレートブルー色でプロットする	plt.hist(xdata, color='darkslateblue')	plt.hist(xdata, color='darkslateblue')
code: ダークスレートブルー色で柱状グラフを描画する	plt.hist(xdata, color='darkslateblue')	plt.hist(xdata, color='darkslateblue')
code: ヒストグラムをダークスレートブルーで描く	plt.hist(xdata, color='darkslateblue')	plt.hist(xdata, color='darkslateblue')
code: 数列xdataをダークスレートブルー色のヒストグラムでプロットする	plt.hist(xdata, color='darkslateblue')	plt.hist(xdata, color='darkslateblue')
code: ダークスレートブルー色の柱状グラフで配列xdataを描画する	plt.hist(xdata, color='darkslateblue')	plt.hist(xdata, color='darkslateblue')
code: 配列xdataをダークスレートブルー色の柱状図として描画する	plt.hist(xdata, color='darkslateblue')	plt.hist(xdata, color='darkslateblue')
code: ダークスラテグレーを使ってヒストグラムをプロットする	plt.hist(xdata, color='darkslategray')	plt.hist(xdata, color='darkslategray')
code: ヒストグラムをダークスラテグレー色を用いて描く	plt.hist(xdata, color='darkslategray')	plt.hist(xdata, color='darkslategray')
code: ダークスラテグレーを用いてイテラブルxdataについてのヒストグラムを描く	plt.hist(xdata, color='darkslategray')	plt.hist(xdata, color='darkslategray')
code: イテラブルxdataをダークスラテグレー色の柱状図を使ってプロットする	plt.hist(xdata, color='darkslategray')	plt.hist(xdata, color='darkslategray')
code: 配列xdataをダークスラテグレー色の柱状グラフを使って描く	plt.hist(xdata, color='darkslategray')	plt.hist(xdata, color='darkslategray')
code: ダークスラテグレー色の柱状グラフを用いてイテラブルxdataを描画する	plt.hist(xdata, color='darkslategray')	plt.hist(xdata, color='darkslategray')
code: ダーク・スラテグレー色としてデータ列xdataについてのヒストグラムをプロットする	plt.hist(xdata, color='darkslategrey')	plt.hist(xdata, color='darkslategrey')
code: ダーク・スラテグレー色としてヒストグラムを描画する	plt.hist(xdata, color='darkslategrey')	plt.hist(xdata, color='darkslategrey')
code: ダーク・スラテグレー色を用いて数列xdataについての度数分布図をプロットする	plt.hist(xdata, color='darkslategrey')	plt.hist(xdata, color='darkslategrey')
code: イテラブルxdataをダーク・スラテグレー色のヒストグラムとして描画する	plt.hist(xdata, color='darkslategrey')	plt.hist(xdata, color='darkslategrey')
code: 数列xdataをダーク・スラテグレー色の柱状図を用いて描く	plt.hist(xdata, color='darkslategrey')	plt.hist(xdata, color='darkslategrey')
code: ダーク・スラテグレー色の柱状グラフでデータ列xdataを描画する	plt.hist(xdata, color='darkslategrey')	plt.hist(xdata, color='darkslategrey')
code: ダークターコイズを用いて配列xdataについての柱状グラフを描画する	plt.hist(xdata, color='darkturquoise')	plt.hist(xdata, color='darkturquoise')
code: ダークターコイズ色で柱状グラフを描画する	plt.hist(xdata, color='darkturquoise')	plt.hist(xdata, color='darkturquoise')
code: ヒストグラムをダークターコイズ色でプロットする	plt.hist(xdata, color='darkturquoise')	plt.hist(xdata, color='darkturquoise')
code: ダークターコイズ色のヒストグラムとしてデータ列xdataをプロットする	plt.hist(xdata, color='darkturquoise')	plt.hist(xdata, color='darkturquoise')
code: ダークターコイズ色の柱状図を使ってリストxdataを描画する	plt.hist(xdata, color='darkturquoise')	plt.hist(xdata, color='darkturquoise')
code: イテラブルxdataをダークターコイズ色のヒストグラムでプロットする	plt.hist(xdata, color='darkturquoise')	plt.hist(xdata, color='darkturquoise')
code: ヒストグラムをダークバイオレットを使って描く	plt.hist(xdata, color='darkviolet')	plt.hist(xdata, color='darkviolet')
code: ダークバイオレットとして配列xdataについての柱状グラフを描画する	plt.hist(xdata, color='darkviolet')	plt.hist(xdata, color='darkviolet')
code: データ列xdataについての柱状グラフをダークバイオレット色として描く	plt.hist(xdata, color='darkviolet')	plt.hist(xdata, color='darkviolet')
code: ダークバイオレット色のヒストグラムを用いてデータ列xdataをプロットする	plt.hist(xdata, color='darkviolet')	plt.hist(xdata, color='darkviolet')
code: イテラブルxdataをダークバイオレット色の柱状図を用いて描く	plt.hist(xdata, color='darkviolet')	plt.hist(xdata, color='darkviolet')
code: リストxdataをダークバイオレット色の柱状図で描く	plt.hist(xdata, color='darkviolet')	plt.hist(xdata, color='darkviolet')
code: イテラブルxdataについてのヒストグラムをデピンク色でプロットする	plt.hist(xdata, color='deeppink')	plt.hist(xdata, color='deeppink')
code: ヒストグラムをデピンク色を用いてプロットする	plt.hist(xdata, color='deeppink')	plt.hist(xdata, color='deeppink')
code: 数列xdataについての度数分布図をデピンク色としてプロットする	plt.hist(xdata, color='deeppink')	plt.hist(xdata, color='deeppink')
code: リストxdataをデピンク色のヒストグラムとして描画する	plt.hist(xdata, color='deeppink')	plt.hist(xdata, color='deeppink')
code: デピンク色のヒストグラムを使ってリストxdataを描画する	plt.hist(xdata, color='deeppink')	plt.hist(xdata, color='deeppink')
code: デピンク色のヒストグラムを用いて配列xdataを描画する	plt.hist(xdata, color='deeppink')	plt.hist(xdata, color='deeppink')
code: ディープスカイブルーとして配列xdataについての柱状グラフを描画する	plt.hist(xdata, color='deepskyblue')	plt.hist(xdata, color='deepskyblue')
code: 配列xdataについての柱状図をディープスカイブルーとして描く	plt.hist(xdata, color='deepskyblue')	plt.hist(xdata, color='deepskyblue')
code: ディープスカイブルー色としてイテラブルxdataについての柱状図を描く	plt.hist(xdata, color='deepskyblue')	plt.hist(xdata, color='deepskyblue')
code: ディープスカイブルー色の柱状図を使って数列xdataを描く	plt.hist(xdata, color='deepskyblue')	plt.hist(xdata, color='deepskyblue')
code: ディープスカイブルー色の柱状グラフを用いてイテラブルxdataをプロットする	plt.hist(xdata, color='deepskyblue')	plt.hist(xdata, color='deepskyblue')
code: ディープスカイブルー色の柱状グラフでリストxdataを描く	plt.hist(xdata, color='deepskyblue')	plt.hist(xdata, color='deepskyblue')
code: 柱状図をディムグレー色でプロットする	plt.hist(xdata, color='dimgray')	plt.hist(xdata, color='dimgray')
code: 数列xdataについての柱状図をディムグレー色で描く	plt.hist(xdata, color='dimgray')	plt.hist(xdata, color='dimgray')
code: 数列xdataについてのヒストグラムをディムグレー色として描く	plt.hist(xdata, color='dimgrey')	plt.hist(xdata, color='dimgray')
code: 配列xdataをディムグレー色のヒストグラムを用いてプロットする	plt.hist(xdata, color='dimgrey')	plt.hist(xdata, color='dimgray')
code: 数列xdataをディムグレー色の柱状図として描く	plt.hist(xdata, color='dimgrey')	plt.hist(xdata, color='dimgray')
code: イテラブルxdataをディムグレー色のヒストグラムでプロットする	plt.hist(xdata, color='dimgray')	plt.hist(xdata, color='dimgray')
code: 配列xdataについてのヒストグラムをディムグレー色を用いてプロットする	plt.hist(xdata, color='dimgray')	plt.hist(xdata, color='dimgrey')
code: ディムグレー色としてヒストグラムを描く	plt.hist(xdata, color='dimgrey')	plt.hist(xdata, color='dimgrey')
code: ディムグレー色を用いて度数分布図をプロットする	plt.hist(xdata, color='dimgrey')	plt.hist(xdata, color='dimgrey')
code: イテラブルxdataをディムグレー色の柱状グラフを使って描画する	plt.hist(xdata, color='dimgray')	plt.hist(xdata, color='dimgrey')
code: ディムグレー色の度数分布図として数列xdataを描画する	plt.hist(xdata, color='dimgray')	plt.hist(xdata, color='dimgrey')
code: データ列xdataをディムグレー色のヒストグラムを使ってプロットする	plt.hist(xdata, color='dimgray')	plt.hist(xdata, color='dimgrey')
code: 柱状グラフをドジャーブルーを使って描画する	plt.hist(xdata, color='dodgerblue')	plt.hist(xdata, color='dodgerblue')
code: ドジャーブルーでリストxdataについての度数分布図を描画する	plt.hist(xdata, color='dodgerblue')	plt.hist(xdata, color='dodgerblue')
code: ドジャーブルーを使って数列xdataについてのヒストグラムを描画する	plt.hist(xdata, color='dodgerblue')	plt.hist(xdata, color='dodgerblue')
code: ドジャーブルー色の柱状図としてデータ列xdataをプロットする	plt.hist(xdata, color='dodgerblue')	plt.hist(xdata, color='dodgerblue')
code: ドジャーブルー色の柱状グラフとして数列xdataを描画する	plt.hist(xdata, color='dodgerblue')	plt.hist(xdata, color='dodgerblue')
code: ドジャーブルー色の柱状グラフで数列xdataを描画する	plt.hist(xdata, color='dodgerblue')	plt.hist(xdata, color='dodgerblue')
code: 数列xdataについての度数分布図を耐火レンガとして描く	plt.hist(xdata, color='firebrick')	plt.hist(xdata, color='firebrick')
code: 柱状図を耐火レンガ色を使ってプロットする	plt.hist(xdata, color='firebrick')	plt.hist(xdata, color='firebrick')
code: 配列xdataについての度数分布図を耐火レンガ色として描く	plt.hist(xdata, color='firebrick')	plt.hist(xdata, color='firebrick')
code: 耐火レンガ色のヒストグラムでイテラブルxdataをプロットする	plt.hist(xdata, color='firebrick')	plt.hist(xdata, color='firebrick')
code: 耐火レンガ色の柱状グラフでリストxdataを描画する	plt.hist(xdata, color='firebrick')	plt.hist(xdata, color='firebrick')
code: 耐火レンガ色のヒストグラムとして数列xdataを描く	plt.hist(xdata, color='firebrick')	plt.hist(xdata, color='firebrick')
code: フローラルホワイト色を用いてリストxdataについての柱状グラフを描画する	plt.hist(xdata, color='floralwhite')	plt.hist(xdata, color='floralwhite')
code: 数列xdataについての度数分布図をフローラルホワイト色として描画する	plt.hist(xdata, color='floralwhite')	plt.hist(xdata, color='floralwhite')
code: データ列xdataについての度数分布図をフローラルホワイトとして描画する	plt.hist(xdata, color='floralwhite')	plt.hist(xdata, color='floralwhite')
code: イテラブルxdataをフローラルホワイト色の度数分布図を用いて描画する	plt.hist(xdata, color='floralwhite')	plt.hist(xdata, color='floralwhite')
code: リストxdataをフローラルホワイト色の度数分布図としてプロットする	plt.hist(xdata, color='floralwhite')	plt.hist(xdata, color='floralwhite')
code: フローラルホワイト色のヒストグラムを用いて配列xdataを描く	plt.hist(xdata, color='floralwhite')	plt.hist(xdata, color='floralwhite')
code: フォレストグリーンを使ってヒストグラムを描画する	plt.hist(xdata, color='forestgreen')	plt.hist(xdata, color='forestgreen')
code: フォレストグリーンとしてヒストグラムを描画する	plt.hist(xdata, color='forestgreen')	plt.hist(xdata, color='forestgreen')
code: フォレストグリーン色としてデータ列xdataについてのヒストグラムをプロットする	plt.hist(xdata, color='forestgreen')	plt.hist(xdata, color='forestgreen')
code: フォレストグリーン色のヒストグラムとしてイテラブルxdataをプロットする	plt.hist(xdata, color='forestgreen')	plt.hist(xdata, color='forestgreen')
code: リストxdataをフォレストグリーン色のヒストグラムとして描画する	plt.hist(xdata, color='forestgreen')	plt.hist(xdata, color='forestgreen')
code: 数列xdataをフォレストグリーン色の柱状図として描画する	plt.hist(xdata, color='forestgreen')	plt.hist(xdata, color='forestgreen')
code: 柱状グラフをフクシア色を使って描く	plt.hist(xdata, color='fuchsia')	plt.hist(xdata, color='fuchsia')
code: フクシア色でデータ列xdataについての柱状グラフを描画する	plt.hist(xdata, color='fuchsia')	plt.hist(xdata, color='fuchsia')
code: データ列xdataについてのヒストグラムをフクシア色として描く	plt.hist(xdata, color='fuchsia')	plt.hist(xdata, color='fuchsia')
code: 配列xdataをフクシア色の柱状図を用いてプロットする	plt.hist(xdata, color='fuchsia')	plt.hist(xdata, color='fuchsia')
code: フクシア色のヒストグラムを用いて数列xdataをプロットする	plt.hist(xdata, color='fuchsia')	plt.hist(xdata, color='fuchsia')
code: データ列xdataをフクシア色のヒストグラムを用いて描く	plt.hist(xdata, color='fuchsia')	plt.hist(xdata, color='fuchsia')
code: 配列xdataについての度数分布図をゲインズボロで描画する	plt.hist(xdata, color='gainsboro')	plt.hist(xdata, color='gainsboro')
code: ゲインズボロ色で数列xdataについての柱状図をプロットする	plt.hist(xdata, color='gainsboro')	plt.hist(xdata, color='gainsboro')
code: ヒストグラムをゲインズボロとして描画する	plt.hist(xdata, color='gainsboro')	plt.hist(xdata, color='gainsboro')
code: リストxdataをゲインズボロ色の柱状グラフを使ってプロットする	plt.hist(xdata, color='gainsboro')	plt.hist(xdata, color='gainsboro')
code: ゲインズボロ色のヒストグラムで数列xdataをプロットする	plt.hist(xdata, color='gainsboro')	plt.hist(xdata, color='gainsboro')
code: データ列xdataをゲインズボロ色の柱状図を用いて描画する	plt.hist(xdata, color='gainsboro')	plt.hist(xdata, color='gainsboro')
code: リストxdataについての度数分布図をゴーストホワイト色として描画する	plt.hist(xdata, color='ghostwhite')	plt.hist(xdata, color='ghostwhite')
code: ゴーストホワイト色で配列xdataについてのヒストグラムを描画する	plt.hist(xdata, color='ghostwhite')	plt.hist(xdata, color='ghostwhite')
code: 度数分布図をゴーストホワイト色としてプロットする	plt.hist(xdata, color='ghostwhite')	plt.hist(xdata, color='ghostwhite')
code: イテラブルxdataをゴーストホワイト色の度数分布図を用いて描く	plt.hist(xdata, color='ghostwhite')	plt.hist(xdata, color='ghostwhite')
code: ゴーストホワイト色の柱状図を用いてリストxdataをプロットする	plt.hist(xdata, color='ghostwhite')	plt.hist(xdata, color='ghostwhite')
code: ゴーストホワイト色の柱状グラフを使って数列xdataをプロットする	plt.hist(xdata, color='ghostwhite')	plt.hist(xdata, color='ghostwhite')
code: 柱状図をゴールド色として描画する	plt.hist(xdata, color='gold')	plt.hist(xdata, color='gold')
code: ヒストグラムをゴールドとしてプロットする	plt.hist(xdata, color='gold')	plt.hist(xdata, color='gold')
code: ゴールド色で数列xdataについてのヒストグラムをプロットする	plt.hist(xdata, color='gold')	plt.hist(xdata, color='gold')
code: ゴールド色の柱状図として配列xdataを描く	plt.hist(xdata, color='gold')	plt.hist(xdata, color='gold')
code: ゴールド色のヒストグラムとして数列xdataをプロットする	plt.hist(xdata, color='gold')	plt.hist(xdata, color='gold')
code: イテラブルxdataをゴールド色のヒストグラムを用いて描く	plt.hist(xdata, color='gold')	plt.hist(xdata, color='gold')
code: ゴールデンロッド色でヒストグラムを描く	plt.hist(xdata, color='goldenrod')	plt.hist(xdata, color='goldenrod')
code: ヒストグラムをゴールデンロッドで描画する	plt.hist(xdata, color='goldenrod')	plt.hist(xdata, color='goldenrod')
code: ゴールデンロッド色としてイテラブルxdataについての度数分布図を描く	plt.hist(xdata, color='goldenrod')	plt.hist(xdata, color='goldenrod')
code: ゴールデンロッド色のヒストグラムとしてデータ列xdataを描画する	plt.hist(xdata, color='goldenrod')	plt.hist(xdata, color='goldenrod')
code: データ列xdataをゴールデンロッド色の度数分布図として描画する	plt.hist(xdata, color='goldenrod')	plt.hist(xdata, color='goldenrod')
code: ゴールデンロッド色の度数分布図としてイテラブルxdataをプロットする	plt.hist(xdata, color='goldenrod')	plt.hist(xdata, color='goldenrod')
code: イテラブルxdataについての度数分布図をグレー色で描く	plt.hist(xdata, color='gray')	plt.hist(xdata, color='gray')
code: グレー色でイテラブルxdataについての柱状図を描画する	plt.hist(xdata, color='grey')	plt.hist(xdata, color='gray')
code: グレーで柱状グラフを描画する	plt.hist(xdata, color='gray')	plt.hist(xdata, color='gray')
code: グレー色のヒストグラムを用いてイテラブルxdataを描画する	plt.hist(xdata, color='gray')	plt.hist(xdata, color='gray')
code: 数列xdataをグレー色の度数分布図を使って描く	plt.hist(xdata, color='gray')	plt.hist(xdata, color='gray')
code: 配列xdataをグレー色のヒストグラムとして描画する	plt.hist(xdata, color='gray')	plt.hist(xdata, color='gray')
code: グリーンとしてイテラブルxdataについての度数分布図をプロットする	plt.hist(xdata, color='green')	plt.hist(xdata, color='green')
code: 柱状図をグリーン色として描く	plt.hist(xdata, color='green')	plt.hist(xdata, color='green')
code: グリーンを使ってヒストグラムをプロットする	plt.hist(xdata, color='green')	plt.hist(xdata, color='green')
code: グリーン色の度数分布図として数列xdataをプロットする	plt.hist(xdata, color='green')	plt.hist(xdata, color='green')
code: 配列xdataをグリーン色の柱状グラフとして描く	plt.hist(xdata, color='green')	plt.hist(xdata, color='green')
code: リストxdataをグリーン色のヒストグラムとしてプロットする	plt.hist(xdata, color='green')	plt.hist(xdata, color='green')
code: 配列xdataについての度数分布図をグリーンイエロー色として描く	plt.hist(xdata, color='yellowgreen')	plt.hist(xdata, color='greenyellow')
code: グリーンイエローを用いてリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='yellowgreen')	plt.hist(xdata, color='greenyellow')
code: グリーンイエローで配列xdataについての度数分布図を描画する	plt.hist(xdata, color='greenyellow')	plt.hist(xdata, color='greenyellow')
code: データ列xdataをグリーンイエロー色の柱状図で描画する	plt.hist(xdata, color='greenyellow')	plt.hist(xdata, color='greenyellow')
code: 数列xdataをグリーンイエロー色の度数分布図として描画する	plt.hist(xdata, color='greenyellow')	plt.hist(xdata, color='greenyellow')
code: 配列xdataをグリーンイエロー色の柱状図を用いて描画する	plt.hist(xdata, color='yellowgreen')	plt.hist(xdata, color='greenyellow')
code: リストxdataについてのヒストグラムをグレーとして描く	plt.hist(xdata, color='gray')	plt.hist(xdata, color='grey')
code: グレー色でデータ列xdataについてのヒストグラムを描画する	plt.hist(xdata, color='grey')	plt.hist(xdata, color='grey')
code: グレー色で柱状図をプロットする	plt.hist(xdata, color='grey')	plt.hist(xdata, color='grey')
code: グレー色の柱状グラフで配列xdataを描く	plt.hist(xdata, color='gray')	plt.hist(xdata, color='grey')
code: グレー色の柱状図を使ってイテラブルxdataを描画する	plt.hist(xdata, color='grey')	plt.hist(xdata, color='grey')
code: リストxdataをグレー色の柱状図で描画する	plt.hist(xdata, color='grey')	plt.hist(xdata, color='grey')
code: 度数分布図をハニーデュー色として描画する	plt.hist(xdata, color='honeydew')	plt.hist(xdata, color='honeydew')
code: ハニーデューを用いて柱状図を描画する	plt.hist(xdata, color='honeydew')	plt.hist(xdata, color='honeydew')
code: ハニーデューを使ってヒストグラムをプロットする	plt.hist(xdata, color='honeydew')	plt.hist(xdata, color='honeydew')
code: ハニーデュー色のヒストグラムを使ってイテラブルxdataをプロットする	plt.hist(xdata, color='honeydew')	plt.hist(xdata, color='honeydew')
code: ハニーデュー色のヒストグラムとしてイテラブルxdataを描画する	plt.hist(xdata, color='honeydew')	plt.hist(xdata, color='honeydew')
code: ハニーデュー色の度数分布図を使って数列xdataを描く	plt.hist(xdata, color='honeydew')	plt.hist(xdata, color='honeydew')
code: 数列xdataについての柱状図をホットピンクを用いて描画する	plt.hist(xdata, color='hotpink')	plt.hist(xdata, color='hotpink')
code: ホットピンクでヒストグラムを描く	plt.hist(xdata, color='hotpink')	plt.hist(xdata, color='hotpink')
code: ホットピンク色として配列xdataについての柱状グラフを描く	plt.hist(xdata, color='hotpink')	plt.hist(xdata, color='hotpink')
code: ホットピンク色のヒストグラムを使って数列xdataを描く	plt.hist(xdata, color='hotpink')	plt.hist(xdata, color='hotpink')
code: ホットピンク色の度数分布図として配列xdataをプロットする	plt.hist(xdata, color='hotpink')	plt.hist(xdata, color='hotpink')
code: ホットピンク色の度数分布図として配列xdataをプロットする	plt.hist(xdata, color='hotpink')	plt.hist(xdata, color='hotpink')
code: ヒストグラムをインディアンレッドで描画する	plt.hist(xdata, color='indianred')	plt.hist(xdata, color='indianred')
code: ヒストグラムをインディアンレッドで描画する	plt.hist(xdata, color='indianred')	plt.hist(xdata, color='indianred')
code: ヒストグラムをインディアンレッド色を使って描く	plt.hist(xdata, color='indianred')	plt.hist(xdata, color='indianred')
code: イテラブルxdataをインディアンレッド色のヒストグラムで描画する	plt.hist(xdata, color='indianred')	plt.hist(xdata, color='indianred')
code: リストxdataをインディアンレッド色のヒストグラムとして描画する	plt.hist(xdata, color='indianred')	plt.hist(xdata, color='indianred')
code: インディアンレッド色の柱状図としてイテラブルxdataをプロットする	plt.hist(xdata, color='indianred')	plt.hist(xdata, color='indianred')
code: リストxdataについての度数分布図をインディゴとして描く	plt.hist(xdata, color='indigo')	plt.hist(xdata, color='indigo')
code: 数列xdataについての度数分布図をインディゴ色を使ってプロットする	plt.hist(xdata, color='indigo')	plt.hist(xdata, color='indigo')
code: インディゴでリストxdataについてのヒストグラムを描く	plt.hist(xdata, color='indigo')	plt.hist(xdata, color='indigo')
code: インディゴ色の柱状図で配列xdataを描画する	plt.hist(xdata, color='indigo')	plt.hist(xdata, color='indigo')
code: インディゴ色のヒストグラムを用いてデータ列xdataを描画する	plt.hist(xdata, color='indigo')	plt.hist(xdata, color='indigo')
code: イテラブルxdataをインディゴ色のヒストグラムを使って描く	plt.hist(xdata, color='indigo')	plt.hist(xdata, color='indigo')
code: ヒストグラムをアイボリーで描く	plt.hist(xdata, color='ivory')	plt.hist(xdata, color='ivory')
code: リストxdataについてのヒストグラムをアイボリー色を使って描く	plt.hist(xdata, color='ivory')	plt.hist(xdata, color='ivory')
code: アイボリー色でヒストグラムを描画する	plt.hist(xdata, color='ivory')	plt.hist(xdata, color='ivory')
code: アイボリー色の度数分布図を使ってイテラブルxdataをプロットする	plt.hist(xdata, color='ivory')	plt.hist(xdata, color='ivory')
code: イテラブルxdataをアイボリー色のヒストグラムとして描く	plt.hist(xdata, color='ivory')	plt.hist(xdata, color='ivory')
code: アイボリー色の柱状図で配列xdataをプロットする	plt.hist(xdata, color='ivory')	plt.hist(xdata, color='ivory')
code: 柱状グラフをカーキを使ってプロットする	plt.hist(xdata, color='khaki')	plt.hist(xdata, color='khaki')
code: ヒストグラムをカーキでプロットする	plt.hist(xdata, color='khaki')	plt.hist(xdata, color='khaki')
code: カーキ色で柱状図をプロットする	plt.hist(xdata, color='khaki')	plt.hist(xdata, color='khaki')
code: カーキ色の柱状図を使って数列xdataを描く	plt.hist(xdata, color='khaki')	plt.hist(xdata, color='khaki')
code: カーキ色のヒストグラムとして数列xdataをプロットする	plt.hist(xdata, color='khaki')	plt.hist(xdata, color='khaki')
code: カーキ色の柱状グラフとしてイテラブルxdataを描く	plt.hist(xdata, color='khaki')	plt.hist(xdata, color='khaki')
code: 度数分布図をラベンダーで描画する	plt.hist(xdata, color='lavender')	plt.hist(xdata, color='lavender')
code: ラベンダーで配列xdataについての度数分布図を描画する	plt.hist(xdata, color='lavender')	plt.hist(xdata, color='lavender')
code: ラベンダー色で配列xdataについての度数分布図をプロットする	plt.hist(xdata, color='lavender')	plt.hist(xdata, color='lavender')
code: データ列xdataをラベンダー色の柱状図としてプロットする	plt.hist(xdata, color='lavender')	plt.hist(xdata, color='lavender')
code: ラベンダー色の柱状図で配列xdataを描く	plt.hist(xdata, color='lavender')	plt.hist(xdata, color='lavender')
code: データ列xdataをラベンダー色の柱状図で描く	plt.hist(xdata, color='lavender')	plt.hist(xdata, color='lavender')
code: ラベンダーブラッシュを用いてリストxdataについての度数分布図をプロットする	plt.hist(xdata, color='lavenderblush')	plt.hist(xdata, color='lavenderblush')
code: イテラブルxdataについてのヒストグラムをラベンダーブラッシュ色として描画する	plt.hist(xdata, color='lavenderblush')	plt.hist(xdata, color='lavenderblush')
code: ラベンダーブラッシュ色で数列xdataについてのヒストグラムを描画する	plt.hist(xdata, color='lavenderblush')	plt.hist(xdata, color='lavenderblush')
code: ラベンダーブラッシュ色の柱状図を使って数列xdataを描画する	plt.hist(xdata, color='lavenderblush')	plt.hist(xdata, color='lavenderblush')
code: ラベンダーブラッシュ色のヒストグラムを使ってデータ列xdataを描く	plt.hist(xdata, color='lavenderblush')	plt.hist(xdata, color='lavenderblush')
code: ラベンダーブラッシュ色の柱状図として数列xdataを描画する	plt.hist(xdata, color='lavenderblush')	plt.hist(xdata, color='lavenderblush')
code: 柱状図をローングリーン色として描画する	plt.hist(xdata, color='lawngreen')	plt.hist(xdata, color='lawngreen')
code: ローングリーンでヒストグラムをプロットする	plt.hist(xdata, color='lawngreen')	plt.hist(xdata, color='lawngreen')
code: 柱状グラフをローングリーン色としてプロットする	plt.hist(xdata, color='lawngreen')	plt.hist(xdata, color='lawngreen')
code: 数列xdataをローングリーン色のヒストグラムを使ってプロットする	plt.hist(xdata, color='lawngreen')	plt.hist(xdata, color='lawngreen')
code: ローングリーン色の柱状図としてイテラブルxdataを描画する	plt.hist(xdata, color='lawngreen')	plt.hist(xdata, color='lawngreen')
code: ローングリーン色のヒストグラムとして配列xdataを描画する	plt.hist(xdata, color='lawngreen')	plt.hist(xdata, color='lawngreen')
code: レモンシフォン色としてヒストグラムをプロットする	plt.hist(xdata, color='lemonchiffon')	plt.hist(xdata, color='lemonchiffon')
code: ヒストグラムをレモンシフォンで描く	plt.hist(xdata, color='lemonchiffon')	plt.hist(xdata, color='lemonchiffon')
code: レモンシフォン色でイテラブルxdataについての柱状グラフをプロットする	plt.hist(xdata, color='lemonchiffon')	plt.hist(xdata, color='lemonchiffon')
code: レモンシフォン色の柱状グラフを使って数列xdataをプロットする	plt.hist(xdata, color='lemonchiffon')	plt.hist(xdata, color='lemonchiffon')
code: レモンシフォン色の柱状グラフを用いて配列xdataを描く	plt.hist(xdata, color='lemonchiffon')	plt.hist(xdata, color='lemonchiffon')
code: レモンシフォン色のヒストグラムでイテラブルxdataを描く	plt.hist(xdata, color='lemonchiffon')	plt.hist(xdata, color='lemonchiffon')
code: ライトブルー色としてヒストグラムをプロットする	plt.hist(xdata, color='lightblue')	plt.hist(xdata, color='lightblue')
code: 度数分布図をライトブルー色を用いてプロットする	plt.hist(xdata, color='lightblue')	plt.hist(xdata, color='lightblue')
code: ライトブルー色でヒストグラムを描く	plt.hist(xdata, color='lightblue')	plt.hist(xdata, color='lightblue')
code: イテラブルxdataをライトブルー色のヒストグラムとしてプロットする	plt.hist(xdata, color='lightblue')	plt.hist(xdata, color='lightblue')
code: ライトブルー色のヒストグラムでリストxdataを描く	plt.hist(xdata, color='lightblue')	plt.hist(xdata, color='lightblue')
code: イテラブルxdataをライトブルー色の柱状図で描画する	plt.hist(xdata, color='lightblue')	plt.hist(xdata, color='lightblue')
code: 柱状グラフをライトコーラル色を使ってプロットする	plt.hist(xdata, color='lightcoral')	plt.hist(xdata, color='lightcoral')
code: ライトコーラルで数列xdataについての柱状グラフを描画する	plt.hist(xdata, color='lightcoral')	plt.hist(xdata, color='lightcoral')
code: ライトコーラル色で度数分布図を描く	plt.hist(xdata, color='lightcoral')	plt.hist(xdata, color='lightcoral')
code: ライトコーラル色のヒストグラムとしてデータ列xdataをプロットする	plt.hist(xdata, color='lightcoral')	plt.hist(xdata, color='lightcoral')
code: 配列xdataをライトコーラル色のヒストグラムで描画する	plt.hist(xdata, color='lightcoral')	plt.hist(xdata, color='lightcoral')
code: リストxdataをライトコーラル色のヒストグラムを使って描画する	plt.hist(xdata, color='lightcoral')	plt.hist(xdata, color='lightcoral')
code: 柱状図をライトシアンを用いて描画する	plt.hist(xdata, color='lightcyan')	plt.hist(xdata, color='lightcyan')
code: ライトシアン色を用いて柱状グラフを描く	plt.hist(xdata, color='lightcyan')	plt.hist(xdata, color='lightcyan')
code: ヒストグラムをライトシアンとして描画する	plt.hist(xdata, color='lightcyan')	plt.hist(xdata, color='lightcyan')
code: ライトシアン色の柱状図でイテラブルxdataをプロットする	plt.hist(xdata, color='lightcyan')	plt.hist(xdata, color='lightcyan')
code: ライトシアン色のヒストグラムとしてリストxdataを描く	plt.hist(xdata, color='lightcyan')	plt.hist(xdata, color='lightcyan')
code: ライトシアン色のヒストグラムとしてリストxdataを描画する	plt.hist(xdata, color='lightcyan')	plt.hist(xdata, color='lightcyan')
code: 配列xdataについてのヒストグラムをライトゴールドロディイエローとして描く	plt.hist(xdata, color='lightgoldenrodyellow')	plt.hist(xdata, color='lightgoldenrodyellow')
code: ライトゴールドロディイエローとしてヒストグラムを描く	plt.hist(xdata, color='lightgoldenrodyellow')	plt.hist(xdata, color='lightgoldenrodyellow')
code: 柱状図をライトゴールドロディイエローとしてプロットする	plt.hist(xdata, color='lightgoldenrodyellow')	plt.hist(xdata, color='lightgoldenrodyellow')
code: 数列xdataをライトゴールドロディイエロー色のヒストグラムで描く	plt.hist(xdata, color='lightgoldenrodyellow')	plt.hist(xdata, color='lightgoldenrodyellow')
code: ライトゴールドロディイエロー色のヒストグラムとして数列xdataをプロットする	plt.hist(xdata, color='lightgoldenrodyellow')	plt.hist(xdata, color='lightgoldenrodyellow')
code: ライトゴールドロディイエロー色のヒストグラムとして配列xdataをプロットする	plt.hist(xdata, color='lightgoldenrodyellow')	plt.hist(xdata, color='lightgoldenrodyellow')
code: ヒストグラムをライトグレーでプロットする	plt.hist(xdata, color='lightgray')	plt.hist(xdata, color='lightgray')
code: リストxdataについてのヒストグラムをライトグレーを使って描画する	plt.hist(xdata, color='lightgrey')	plt.hist(xdata, color='lightgray')
code: データ列xdataについてのヒストグラムをライトグレーとして描く	plt.hist(xdata, color='lightgray')	plt.hist(xdata, color='lightgray')
code: 配列xdataをライトグレー色のヒストグラムを用いてプロットする	plt.hist(xdata, color='lightgray')	plt.hist(xdata, color='lightgray')
code: ライトグレー色のヒストグラムとして数列xdataをプロットする	plt.hist(xdata, color='lightgrey')	plt.hist(xdata, color='lightgray')
code: 配列xdataをライトグレー色の柱状図でプロットする	plt.hist(xdata, color='lightgray')	plt.hist(xdata, color='lightgray')
code: データ列xdataについてのヒストグラムをライトグリーンとして描画する	plt.hist(xdata, color='lightgreen')	plt.hist(xdata, color='lightgreen')
code: ライトグリーン色で柱状図をプロットする	plt.hist(xdata, color='lightgreen')	plt.hist(xdata, color='lightgreen')
code: ライトグリーンでヒストグラムを描く	plt.hist(xdata, color='lightgreen')	plt.hist(xdata, color='lightgreen')
code: ライトグリーン色の度数分布図として配列xdataを描画する	plt.hist(xdata, color='lightgreen')	plt.hist(xdata, color='lightgreen')
code: ライトグリーン色のヒストグラムでイテラブルxdataを描画する	plt.hist(xdata, color='lightgreen')	plt.hist(xdata, color='lightgreen')
code: 配列xdataをライトグリーン色のヒストグラムを使ってプロットする	plt.hist(xdata, color='lightgreen')	plt.hist(xdata, color='lightgreen')
code: 柱状グラフをライトグレー色を用いて描画する	plt.hist(xdata, color='lightgray')	plt.hist(xdata, color='lightgrey')
code: ライトグレーでリストxdataについてのヒストグラムをプロットする	plt.hist(xdata, color='lightgray')	plt.hist(xdata, color='lightgrey')
code: リストxdataについてのヒストグラムをライトグレーを使って描く	plt.hist(xdata, color='lightgrey')	plt.hist(xdata, color='lightgrey')
code: ライトグレー色の柱状図を用いて数列xdataをプロットする	plt.hist(xdata, color='lightgrey')	plt.hist(xdata, color='lightgrey')
code: データ列xdataをライトグレー色のヒストグラムとして描画する	plt.hist(xdata, color='lightgrey')	plt.hist(xdata, color='lightgrey')
code: イテラブルxdataをライトグレー色の柱状図を用いて描く	plt.hist(xdata, color='lightgrey')	plt.hist(xdata, color='lightgrey')
code: ヒストグラムを淡いピンク色として描く	plt.hist(xdata, color='lightpink')	plt.hist(xdata, color='lightpink')
code: 配列xdataについてのヒストグラムを淡いピンク色を使って描画する	plt.hist(xdata, color='lightpink')	plt.hist(xdata, color='lightpink')
code: 数列xdataについてのヒストグラムを淡いピンク色としてプロットする	plt.hist(xdata, color='lightpink')	plt.hist(xdata, color='lightpink')
code: 配列xdataを淡いピンク色色の度数分布図で描く	plt.hist(xdata, color='lightpink')	plt.hist(xdata, color='lightpink')
code: 淡いピンク色色のヒストグラムとしてデータ列xdataを描画する	plt.hist(xdata, color='lightpink')	plt.hist(xdata, color='lightpink')
code: 淡いピンク色色の柱状図で数列xdataを描画する	plt.hist(xdata, color='lightpink')	plt.hist(xdata, color='lightpink')
code: 配列xdataについての度数分布図をライトサーモン色を使ってプロットする	plt.hist(xdata, color='lightsalmon')	plt.hist(xdata, color='lightsalmon')
code: ライトサーモンとしてヒストグラムを描く	plt.hist(xdata, color='lightsalmon')	plt.hist(xdata, color='lightsalmon')
code: ライトサーモン色として度数分布図をプロットする	plt.hist(xdata, color='lightsalmon')	plt.hist(xdata, color='lightsalmon')
code: ライトサーモン色のヒストグラムとして数列xdataを描画する	plt.hist(xdata, color='lightsalmon')	plt.hist(xdata, color='lightsalmon')
code: ライトサーモン色のヒストグラムでデータ列xdataをプロットする	plt.hist(xdata, color='lightsalmon')	plt.hist(xdata, color='lightsalmon')
code: ライトサーモン色のヒストグラムとして数列xdataをプロットする	plt.hist(xdata, color='lightsalmon')	plt.hist(xdata, color='lightsalmon')
code: ライトグリーン色でイテラブルxdataについての度数分布図をプロットする	plt.hist(xdata, color='lightseagreen')	plt.hist(xdata, color='lightseagreen')
code: ライトグリーンでヒストグラムを描く	plt.hist(xdata, color='lightgreen')	plt.hist(xdata, color='lightseagreen')
code: ヒストグラムをライトグリーン色として描画する	plt.hist(xdata, color='lightgreen')	plt.hist(xdata, color='lightseagreen')
code: ライトグリーン色の度数分布図でイテラブルxdataを描く	plt.hist(xdata, color='lightgreen')	plt.hist(xdata, color='lightseagreen')
code: ライトグリーン色のヒストグラムとしてリストxdataをプロットする	plt.hist(xdata, color='lightgreen')	plt.hist(xdata, color='lightseagreen')
code: 配列xdataをライトグリーン色の柱状グラフでプロットする	plt.hist(xdata, color='lightgreen')	plt.hist(xdata, color='lightseagreen')
code: ライトスカイブルー色として数列xdataについてのヒストグラムを描画する	plt.hist(xdata, color='lightskyblue')	plt.hist(xdata, color='lightskyblue')
code: データ列xdataについてのヒストグラムをライトスカイブルーを用いて描画する	plt.hist(xdata, color='lightskyblue')	plt.hist(xdata, color='lightskyblue')
code: ヒストグラムをライトスカイブルー色として描画する	plt.hist(xdata, color='lightskyblue')	plt.hist(xdata, color='lightskyblue')
code: イテラブルxdataをライトスカイブルー色の度数分布図でプロットする	plt.hist(xdata, color='lightskyblue')	plt.hist(xdata, color='lightskyblue')
code: ライトスカイブルー色のヒストグラムとしてデータ列xdataを描く	plt.hist(xdata, color='lightskyblue')	plt.hist(xdata, color='lightskyblue')
code: ライトスカイブルー色の柱状図としてイテラブルxdataを描画する	plt.hist(xdata, color='lightskyblue')	plt.hist(xdata, color='lightskyblue')
code: 柱状図をライトスレイグレー色として描く	plt.hist(xdata, color='lightslategray')	plt.hist(xdata, color='lightslategray')
code: ライトスレイグレーとして度数分布図を描く	plt.hist(xdata, color='lightslategray')	plt.hist(xdata, color='lightslategray')
code: ヒストグラムをライトスレイグレー色としてプロットする	plt.hist(xdata, color='lightslategray')	plt.hist(xdata, color='lightslategray')
code: イテラブルxdataをライトスレイグレー色の柱状図で描く	plt.hist(xdata, color='lightslategray')	plt.hist(xdata, color='lightslategray')
code: ライトスレイグレー色のヒストグラムでイテラブルxdataをプロットする	plt.hist(xdata, color='lightslategray')	plt.hist(xdata, color='lightslategray')
code: 配列xdataをライトスレイグレー色のヒストグラムを使ってプロットする	plt.hist(xdata, color='lightslategrey')	plt.hist(xdata, color='lightslategray')
code: データ列xdataについてのヒストグラムをライトスレイグレー色で描画する	plt.hist(xdata, color='lightslategrey')	plt.hist(xdata, color='lightslategrey')
code: ライトスレイグレー色として度数分布図をプロットする	plt.hist(xdata, color='lightslategray')	plt.hist(xdata, color='lightslategrey')
code: ライトスレイグレー色を使ってヒストグラムを描画する	plt.hist(xdata, color='lightslategray')	plt.hist(xdata, color='lightslategrey')
code: データ列xdataをライトスレイグレー色の柱状図で描く	plt.hist(xdata, color='lightslategray')	plt.hist(xdata, color='lightslategrey')
code: ライトスレイグレー色のヒストグラムを使ってイテラブルxdataを描画する	plt.hist(xdata, color='lightslategray')	plt.hist(xdata, color='lightslategrey')
code: 配列xdataをライトスレイグレー色の度数分布図を使って描画する	plt.hist(xdata, color='lightslategrey')	plt.hist(xdata, color='lightslategrey')
code: ライトスチールブルーとして柱状図を描画する	plt.hist(xdata, color='lightsteelblue')	plt.hist(xdata, color='lightsteelblue')
code: 数列xdataについてのヒストグラムをライトスチールブルー色で描く	plt.hist(xdata, color='lightsteelblue')	plt.hist(xdata, color='lightsteelblue')
code: ライトスチールブルー色を用いてデータ列xdataについての柱状図を描く	plt.hist(xdata, color='lightsteelblue')	plt.hist(xdata, color='lightsteelblue')
code: イテラブルxdataをライトスチールブルー色の柱状グラフとして描く	plt.hist(xdata, color='lightsteelblue')	plt.hist(xdata, color='lightsteelblue')
code: リストxdataをライトスチールブルー色のヒストグラムとして描画する	plt.hist(xdata, color='lightsteelblue')	plt.hist(xdata, color='lightsteelblue')
code: データ列xdataをライトスチールブルー色のヒストグラムを使ってプロットする	plt.hist(xdata, color='lightsteelblue')	plt.hist(xdata, color='lightsteelblue')
code: ライトイエロー色として柱状図を描く	plt.hist(xdata, color='lightyellow')	plt.hist(xdata, color='lightyellow')
code: ヒストグラムをライトイエローとして描画する	plt.hist(xdata, color='lightyellow')	plt.hist(xdata, color='lightyellow')
code: ライトイエローとしてデータ列xdataについてのヒストグラムをプロットする	plt.hist(xdata, color='lightyellow')	plt.hist(xdata, color='lightyellow')
code: 配列xdataをライトイエロー色のヒストグラムとして描画する	plt.hist(xdata, color='lightyellow')	plt.hist(xdata, color='lightyellow')
code: ライトイエロー色のヒストグラムを用いてイテラブルxdataを描画する	plt.hist(xdata, color='lightyellow')	plt.hist(xdata, color='lightyellow')
code: データ列xdataをライトイエロー色の柱状グラフとしてプロットする	plt.hist(xdata, color='lightyellow')	plt.hist(xdata, color='lightyellow')
code: ライムとして柱状図を描画する	plt.hist(xdata, color='lime')	plt.hist(xdata, color='lime')
code: ライム色としてデータ列xdataについての度数分布図を描く	plt.hist(xdata, color='lime')	plt.hist(xdata, color='lime')
code: ライムとしてリストxdataについてのヒストグラムをプロットする	plt.hist(xdata, color='lime')	plt.hist(xdata, color='lime')
code: イテラブルxdataをライム色の柱状図で描画する	plt.hist(xdata, color='lime')	plt.hist(xdata, color='lime')
code: ライム色の度数分布図でデータ列xdataをプロットする	plt.hist(xdata, color='lime')	plt.hist(xdata, color='lime')
code: ライム色のヒストグラムでイテラブルxdataを描画する	plt.hist(xdata, color='lime')	plt.hist(xdata, color='lime')
code: ライムグリーン色としてヒストグラムを描く	plt.hist(xdata, color='limegreen')	plt.hist(xdata, color='limegreen')
code: ライムグリーン色を用いて数列xdataについてのヒストグラムを描画する	plt.hist(xdata, color='limegreen')	plt.hist(xdata, color='limegreen')
code: イテラブルxdataについての度数分布図をライムグリーンとして描く	plt.hist(xdata, color='limegreen')	plt.hist(xdata, color='limegreen')
code: ライムグリーン色の柱状グラフとして配列xdataを描く	plt.hist(xdata, color='limegreen')	plt.hist(xdata, color='limegreen')
code: ライムグリーン色のヒストグラムでイテラブルxdataをプロットする	plt.hist(xdata, color='limegreen')	plt.hist(xdata, color='limegreen')
code: 数列xdataをライムグリーン色のヒストグラムを使ってプロットする	plt.hist(xdata, color='limegreen')	plt.hist(xdata, color='limegreen')
code: イテラブルxdataについての柱状グラフをリネンとして描画する	plt.hist(xdata, color='linen')	plt.hist(xdata, color='linen')
code: リネンとしてリストxdataについてのヒストグラムを描く	plt.hist(xdata, color='linen')	plt.hist(xdata, color='linen')
code: リネンでヒストグラムをプロットする	plt.hist(xdata, color='linen')	plt.hist(xdata, color='linen')
code: リネン色のヒストグラムとしてイテラブルxdataを描く	plt.hist(xdata, color='linen')	plt.hist(xdata, color='linen')
code: 数列xdataをリネン色の柱状グラフを用いて描画する	plt.hist(xdata, color='linen')	plt.hist(xdata, color='linen')
code: リネン色のヒストグラムとしてデータ列xdataを描画する	plt.hist(xdata, color='linen')	plt.hist(xdata, color='linen')
code: ヒストグラムをマゼンタで描く	plt.hist(xdata, color='magenta')	plt.hist(xdata, color='magenta')
code: マゼンタ色を用いてデータ列xdataについてのヒストグラムを描く	plt.hist(xdata, color='magenta')	plt.hist(xdata, color='magenta')
code: ヒストグラムをマゼンタ色を使って描く	plt.hist(xdata, color='magenta')	plt.hist(xdata, color='magenta')
code: マゼンタ色の柱状グラフを用いて配列xdataを描画する	plt.hist(xdata, color='magenta')	plt.hist(xdata, color='magenta')
code: マゼンタ色の柱状図として数列xdataを描く	plt.hist(xdata, color='magenta')	plt.hist(xdata, color='magenta')
code: データ列xdataをマゼンタ色のヒストグラムを使って描画する	plt.hist(xdata, color='magenta')	plt.hist(xdata, color='magenta')
code: マルーン色を使ってイテラブルxdataについての柱状図をプロットする	plt.hist(xdata, color='maroon')	plt.hist(xdata, color='maroon')
code: マルーン色としてヒストグラムを描く	plt.hist(xdata, color='maroon')	plt.hist(xdata, color='maroon')
code: イテラブルxdataについての柱状グラフをマルーン色としてプロットする	plt.hist(xdata, color='maroon')	plt.hist(xdata, color='maroon')
code: マルーン色の柱状グラフを使ってリストxdataを描画する	plt.hist(xdata, color='maroon')	plt.hist(xdata, color='maroon')
code: マルーン色のヒストグラムを使ってリストxdataをプロットする	plt.hist(xdata, color='maroon')	plt.hist(xdata, color='maroon')
code: 数列xdataをマルーン色のヒストグラムとして描く	plt.hist(xdata, color='maroon')	plt.hist(xdata, color='maroon')
code: ミディアムアクアマリンとして度数分布図を描く	plt.hist(xdata, color='mediumaquamarine')	plt.hist(xdata, color='mediumaquamarine')
code: 度数分布図をミディアムアクアマリンとしてプロットする	plt.hist(xdata, color='mediumaquamarine')	plt.hist(xdata, color='mediumaquamarine')
code: ミディアムアクアマリンでヒストグラムをプロットする	plt.hist(xdata, color='mediumaquamarine')	plt.hist(xdata, color='mediumaquamarine')
code: 数列xdataをミディアムアクアマリン色のヒストグラムとしてプロットする	plt.hist(xdata, color='mediumaquamarine')	plt.hist(xdata, color='mediumaquamarine')
code: ミディアムアクアマリン色のヒストグラムを用いてイテラブルxdataを描画する	plt.hist(xdata, color='mediumaquamarine')	plt.hist(xdata, color='mediumaquamarine')
code: イテラブルxdataをミディアムアクアマリン色のヒストグラムを用いて描画する	plt.hist(xdata, color='mediumaquamarine')	plt.hist(xdata, color='mediumaquamarine')
code: ミディアムブルー色で数列xdataについてのヒストグラムをプロットする	plt.hist(xdata, color='mediumblue')	plt.hist(xdata, color='mediumblue')
code: ミディアムブルー色でヒストグラムをプロットする	plt.hist(xdata, color='mediumblue')	plt.hist(xdata, color='mediumblue')
code: ヒストグラムをミディアムブルーとして描く	plt.hist(xdata, color='mediumblue')	plt.hist(xdata, color='mediumblue')
code: ミディアムブルー色の度数分布図でデータ列xdataを描画する	plt.hist(xdata, color='mediumblue')	plt.hist(xdata, color='mediumblue')
code: ミディアムブルー色の度数分布図としてデータ列xdataを描画する	plt.hist(xdata, color='mediumblue')	plt.hist(xdata, color='mediumblue')
code: ミディアムブルー色の柱状図としてリストxdataを描画する	plt.hist(xdata, color='mediumblue')	plt.hist(xdata, color='mediumblue')
code: ミディアムオーキッドを使って度数分布図を描画する	plt.hist(xdata, color='mediumorchid')	plt.hist(xdata, color='mediumorchid')
code: ミディアムオーキッドでヒストグラムを描く	plt.hist(xdata, color='mediumorchid')	plt.hist(xdata, color='mediumorchid')
code: ミディアムオーキッドでヒストグラムを描く	plt.hist(xdata, color='mediumorchid')	plt.hist(xdata, color='mediumorchid')
code: ミディアムオーキッド色の柱状グラフとして数列xdataを描く	plt.hist(xdata, color='mediumorchid')	plt.hist(xdata, color='mediumorchid')
code: ミディアムオーキッド色の度数分布図としてリストxdataを描く	plt.hist(xdata, color='mediumorchid')	plt.hist(xdata, color='mediumorchid')
code: リストxdataをミディアムオーキッド色のヒストグラムでプロットする	plt.hist(xdata, color='mediumorchid')	plt.hist(xdata, color='mediumorchid')
code: ミディアムパープルとしてヒストグラムを描画する	plt.hist(xdata, color='mediumpurple')	plt.hist(xdata, color='mediumpurple')
code: 柱状図をミディアムパープルでプロットする	plt.hist(xdata, color='mediumpurple')	plt.hist(xdata, color='mediumpurple')
code: 度数分布図をミディアムパープル色として描く	plt.hist(xdata, color='mediumpurple')	plt.hist(xdata, color='mediumpurple')
code: ミディアムパープル色のヒストグラムを用いてデータ列xdataを描画する	plt.hist(xdata, color='mediumpurple')	plt.hist(xdata, color='mediumpurple')
code: 数列xdataをミディアムパープル色のヒストグラムで描く	plt.hist(xdata, color='mediumpurple')	plt.hist(xdata, color='mediumpurple')
code: 配列xdataをミディアムパープル色のヒストグラムでプロットする	plt.hist(xdata, color='mediumpurple')	plt.hist(xdata, color='mediumpurple')
code: ミディアムシアグリーンとしてヒストグラムをプロットする	plt.hist(xdata, color='mediumseagreen')	plt.hist(xdata, color='mediumseagreen')
code: ミディアムシアグリーン色で数列xdataについてのヒストグラムを描く	plt.hist(xdata, color='mediumseagreen')	plt.hist(xdata, color='mediumseagreen')
code: ミディアムシアグリーンとしてイテラブルxdataについての度数分布図を描画する	plt.hist(xdata, color='mediumseagreen')	plt.hist(xdata, color='mediumseagreen')
code: データ列xdataをミディアムシアグリーン色のヒストグラムを用いてプロットする	plt.hist(xdata, color='mediumseagreen')	plt.hist(xdata, color='mediumseagreen')
code: リストxdataをミディアムシアグリーン色の柱状グラフを使って描画する	plt.hist(xdata, color='mediumseagreen')	plt.hist(xdata, color='mediumseagreen')
code: ミディアムシアグリーン色の度数分布図を用いて数列xdataを描画する	plt.hist(xdata, color='mediumseagreen')	plt.hist(xdata, color='mediumseagreen')
code: ヒストグラムをミディアムスレートブルー色で描く	plt.hist(xdata, color='mediumslateblue')	plt.hist(xdata, color='mediumslateblue')
code: 柱状図をミディアムスレートブルー色として描画する	plt.hist(xdata, color='mediumslateblue')	plt.hist(xdata, color='mediumslateblue')
code: ミディアムスレートブルーでデータ列xdataについての柱状グラフを描画する	plt.hist(xdata, color='mediumslateblue')	plt.hist(xdata, color='mediumslateblue')
code: ミディアムスレートブルー色の柱状グラフを使ってリストxdataをプロットする	plt.hist(xdata, color='mediumslateblue')	plt.hist(xdata, color='mediumslateblue')
code: 配列xdataをミディアムスレートブルー色のヒストグラムを使って描く	plt.hist(xdata, color='mediumslateblue')	plt.hist(xdata, color='mediumslateblue')
code: ミディアムスレートブルー色のヒストグラムでデータ列xdataを描く	plt.hist(xdata, color='mediumslateblue')	plt.hist(xdata, color='mediumslateblue')
code: ミディアムスプリンググリーンとしてヒストグラムをプロットする	plt.hist(xdata, color='mediumspringgreen')	plt.hist(xdata, color='mediumspringgreen')
code: イテラブルxdataについての度数分布図をミディアムスプリンググリーンを用いて描く	plt.hist(xdata, color='mediumspringgreen')	plt.hist(xdata, color='mediumspringgreen')
code: ミディアムスプリンググリーンで柱状グラフを描く	plt.hist(xdata, color='mediumspringgreen')	plt.hist(xdata, color='mediumspringgreen')
code: 配列xdataをミディアムスプリンググリーン色のヒストグラムを使って描画する	plt.hist(xdata, color='mediumspringgreen')	plt.hist(xdata, color='mediumspringgreen')
code: 配列xdataをミディアムスプリンググリーン色の柱状グラフとして描画する	plt.hist(xdata, color='mediumspringgreen')	plt.hist(xdata, color='mediumspringgreen')
code: 配列xdataをミディアムスプリンググリーン色の度数分布図で描画する	plt.hist(xdata, color='mediumspringgreen')	plt.hist(xdata, color='mediumspringgreen')
code: ミディアムターコイズでヒストグラムをプロットする	plt.hist(xdata, color='mediumturquoise')	plt.hist(xdata, color='mediumturquoise')
code: ヒストグラムをミディアムターコイズを使って描く	plt.hist(xdata, color='mediumturquoise')	plt.hist(xdata, color='mediumturquoise')
code: ミディアムターコイズを使って柱状グラフを描く	plt.hist(xdata, color='mediumturquoise')	plt.hist(xdata, color='mediumturquoise')
code: ミディアムターコイズ色の柱状図で数列xdataを描く	plt.hist(xdata, color='mediumturquoise')	plt.hist(xdata, color='mediumturquoise')
code: 配列xdataをミディアムターコイズ色の柱状図を用いて描画する	plt.hist(xdata, color='mediumturquoise')	plt.hist(xdata, color='mediumturquoise')
code: データ列xdataをミディアムターコイズ色のヒストグラムで描画する	plt.hist(xdata, color='mediumturquoise')	plt.hist(xdata, color='mediumturquoise')
code: ミディアムバイオレットレッドを使ってヒストグラムを描く	plt.hist(xdata, color='mediumvioletred')	plt.hist(xdata, color='mediumvioletred')
code: ミディアムバイオレットレッド色でヒストグラムを描画する	plt.hist(xdata, color='mediumvioletred')	plt.hist(xdata, color='mediumvioletred')
code: ミディアムバイオレットレッドで数列xdataについての柱状グラフを描く	plt.hist(xdata, color='mediumvioletred')	plt.hist(xdata, color='mediumvioletred')
code: ミディアムバイオレットレッド色のヒストグラムを用いて数列xdataを描く	plt.hist(xdata, color='mediumvioletred')	plt.hist(xdata, color='mediumvioletred')
code: 数列xdataをミディアムバイオレットレッド色のヒストグラムとして描く	plt.hist(xdata, color='mediumvioletred')	plt.hist(xdata, color='mediumvioletred')
code: データ列xdataをミディアムバイオレットレッド色の柱状図を使って描画する	plt.hist(xdata, color='mediumvioletred')	plt.hist(xdata, color='mediumvioletred')
code: リストxdataについての柱状図をミッドナイトブルー色で描画する	plt.hist(xdata, color='midnightblue')	plt.hist(xdata, color='midnightblue')
code: 度数分布図をミッドナイトブルー色で描画する	plt.hist(xdata, color='midnightblue')	plt.hist(xdata, color='midnightblue')
code: ミッドナイトブルー色でイテラブルxdataについての柱状グラフを描画する	plt.hist(xdata, color='midnightblue')	plt.hist(xdata, color='midnightblue')
code: データ列xdataをミッドナイトブルー色のヒストグラムとして描画する	plt.hist(xdata, color='midnightblue')	plt.hist(xdata, color='midnightblue')
code: データ列xdataをミッドナイトブルー色のヒストグラムを用いて描画する	plt.hist(xdata, color='midnightblue')	plt.hist(xdata, color='midnightblue')
code: ミッドナイトブルー色のヒストグラムでイテラブルxdataをプロットする	plt.hist(xdata, color='midnightblue')	plt.hist(xdata, color='midnightblue')
code: ミントクリーム色を用いてヒストグラムを描画する	plt.hist(xdata, color='mintcream')	plt.hist(xdata, color='mintcream')
code: ミントクリームでイテラブルxdataについてのヒストグラムを描画する	plt.hist(xdata, color='mintcream')	plt.hist(xdata, color='mintcream')
code: 数列xdataについての柱状グラフをミントクリームを用いて描く	plt.hist(xdata, color='mintcream')	plt.hist(xdata, color='mintcream')
code: ミントクリーム色の柱状図としてデータ列xdataを描画する	plt.hist(xdata, color='mintcream')	plt.hist(xdata, color='mintcream')
code: イテラブルxdataをミントクリーム色のヒストグラムでプロットする	plt.hist(xdata, color='mintcream')	plt.hist(xdata, color='mintcream')
code: ミントクリーム色のヒストグラムを用いてデータ列xdataをプロットする	plt.hist(xdata, color='mintcream')	plt.hist(xdata, color='mintcream')
code: ミスティローズとしてヒストグラムを描画する	plt.hist(xdata, color='mistyrose')	plt.hist(xdata, color='mistyrose')
code: データ列xdataについての柱状グラフをミスティローズとしてプロットする	plt.hist(xdata, color='mistyrose')	plt.hist(xdata, color='mistyrose')
code: ミスティローズ色を使って柱状グラフをプロットする	plt.hist(xdata, color='mistyrose')	plt.hist(xdata, color='mistyrose')
code: ミスティローズ色のヒストグラムを使ってリストxdataを描画する	plt.hist(xdata, color='mistyrose')	plt.hist(xdata, color='mistyrose')
code: リストxdataをミスティローズ色の度数分布図で描く	plt.hist(xdata, color='mistyrose')	plt.hist(xdata, color='mistyrose')
code: ミスティローズ色のヒストグラムを使って数列xdataを描画する	plt.hist(xdata, color='mistyrose')	plt.hist(xdata, color='mistyrose')
code: イテラブルxdataについてのヒストグラムをモカシン色でプロットする	plt.hist(xdata, color='moccasin')	plt.hist(xdata, color='moccasin')
code: モカシンを使ってイテラブルxdataについてのヒストグラムを描く	plt.hist(xdata, color='moccasin')	plt.hist(xdata, color='moccasin')
code: モカシン色としてイテラブルxdataについての柱状グラフを描く	plt.hist(xdata, color='moccasin')	plt.hist(xdata, color='moccasin')
code: 数列xdataをモカシン色のヒストグラムで描画する	plt.hist(xdata, color='moccasin')	plt.hist(xdata, color='moccasin')
code: データ列xdataをモカシン色の度数分布図を用いて描画する	plt.hist(xdata, color='moccasin')	plt.hist(xdata, color='moccasin')
code: モカシン色のヒストグラムを使ってデータ列xdataをプロットする	plt.hist(xdata, color='moccasin')	plt.hist(xdata, color='moccasin')
code: ナバホホワイトで配列xdataについての度数分布図を描く	plt.hist(xdata, color='navajowhite')	plt.hist(xdata, color='navajowhite')
code: 数列xdataについての度数分布図をナバホホワイトを使ってプロットする	plt.hist(xdata, color='navajowhite')	plt.hist(xdata, color='navajowhite')
code: データ列xdataについてのヒストグラムをナバホホワイト色としてプロットする	plt.hist(xdata, color='navajowhite')	plt.hist(xdata, color='navajowhite')
code: 数列xdataをナバホホワイト色の柱状グラフで描画する	plt.hist(xdata, color='navajowhite')	plt.hist(xdata, color='navajowhite')
code: 配列xdataをナバホホワイト色の度数分布図で描画する	plt.hist(xdata, color='navajowhite')	plt.hist(xdata, color='navajowhite')
code: 配列xdataをナバホホワイト色のヒストグラムで描く	plt.hist(xdata, color='navajowhite')	plt.hist(xdata, color='navajowhite')
code: ネイビー色を用いて数列xdataについてのヒストグラムを描画する	plt.hist(xdata, color='navy')	plt.hist(xdata, color='navy')
code: ネイビーでデータ列xdataについての度数分布図をプロットする	plt.hist(xdata, color='navy')	plt.hist(xdata, color='navy')
code: ネイビーとしてヒストグラムを描画する	plt.hist(xdata, color='navy')	plt.hist(xdata, color='navy')
code: ネイビー色のヒストグラムを使って数列xdataをプロットする	plt.hist(xdata, color='navy')	plt.hist(xdata, color='navy')
code: ネイビー色のヒストグラムとしてイテラブルxdataを描画する	plt.hist(xdata, color='navy')	plt.hist(xdata, color='navy')
code: イテラブルxdataをネイビー色の柱状グラフで描く	plt.hist(xdata, color='navy')	plt.hist(xdata, color='navy')
code: ヒストグラムをオールドレースでプロットする	plt.hist(xdata, color='oldlace')	plt.hist(xdata, color='oldlace')
code: オールドレースとして度数分布図を描く	plt.hist(xdata, color='oldlace')	plt.hist(xdata, color='oldlace')
code: ヒストグラムをオールドレース色を用いてプロットする	plt.hist(xdata, color='oldlace')	plt.hist(xdata, color='oldlace')
code: イテラブルxdataをオールドレース色のヒストグラムで描く	plt.hist(xdata, color='oldlace')	plt.hist(xdata, color='oldlace')
code: オールドレース色のヒストグラムとしてイテラブルxdataを描く	plt.hist(xdata, color='oldlace')	plt.hist(xdata, color='oldlace')
code: リストxdataをオールドレース色の度数分布図を用いて描く	plt.hist(xdata, color='oldlace')	plt.hist(xdata, color='oldlace')
code: ヒストグラムをオリーブ色を使ってプロットする	plt.hist(xdata, color='olive')	plt.hist(xdata, color='olive')
code: オリーブでヒストグラムを描画する	plt.hist(xdata, color='olive')	plt.hist(xdata, color='olive')
code: オリーブとしてリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='olive')	plt.hist(xdata, color='olive')
code: イテラブルxdataをオリーブ色のヒストグラムでプロットする	plt.hist(xdata, color='olive')	plt.hist(xdata, color='olive')
code: 配列xdataをオリーブ色の柱状グラフを使ってプロットする	plt.hist(xdata, color='olive')	plt.hist(xdata, color='olive')
code: オリーブ色のヒストグラムでイテラブルxdataを描画する	plt.hist(xdata, color='olive')	plt.hist(xdata, color='olive')
code: オリベドラブで柱状図を描画する	plt.hist(xdata, color='olivedrab')	plt.hist(xdata, color='olivedrab')
code: オリベドラブ色でイテラブルxdataについてのヒストグラムをプロットする	plt.hist(xdata, color='olivedrab')	plt.hist(xdata, color='olivedrab')
code: オリベドラブとして数列xdataについてのヒストグラムをプロットする	plt.hist(xdata, color='olivedrab')	plt.hist(xdata, color='olivedrab')
code: オリベドラブ色のヒストグラムを用いてリストxdataを描画する	plt.hist(xdata, color='olivedrab')	plt.hist(xdata, color='olivedrab')
code: オリベドラブ色のヒストグラムとしてデータ列xdataを描画する	plt.hist(xdata, color='olivedrab')	plt.hist(xdata, color='olivedrab')
code: リストxdataをオリベドラブ色の柱状グラフとしてプロットする	plt.hist(xdata, color='olivedrab')	plt.hist(xdata, color='olivedrab')
code: オレンジとして数列xdataについてのヒストグラムを描画する	plt.hist(xdata, color='orange')	plt.hist(xdata, color='orange')
code: 柱状図をオレンジ色でプロットする	plt.hist(xdata, color='orange')	plt.hist(xdata, color='orange')
code: データ列xdataについてのヒストグラムをオレンジ色としてプロットする	plt.hist(xdata, color='orange')	plt.hist(xdata, color='orange')
code: 数列xdataをオレンジ色の柱状グラフとして描く	plt.hist(xdata, color='orange')	plt.hist(xdata, color='orange')
code: オレンジ色のヒストグラムとして配列xdataを描く	plt.hist(xdata, color='orange')	plt.hist(xdata, color='orange')
code: イテラブルxdataをオレンジ色の柱状グラフとして描く	plt.hist(xdata, color='orange')	plt.hist(xdata, color='orange')
code: オレンジレッドでヒストグラムを描く	plt.hist(xdata, color='orangered')	plt.hist(xdata, color='orangered')
code: 柱状グラフをオレンジレッド色としてプロットする	plt.hist(xdata, color='orangered')	plt.hist(xdata, color='orangered')
code: オレンジレッド色を使ってヒストグラムを描く	plt.hist(xdata, color='orangered')	plt.hist(xdata, color='orangered')
code: オレンジレッド色の柱状グラフでイテラブルxdataを描画する	plt.hist(xdata, color='orangered')	plt.hist(xdata, color='orangered')
code: データ列xdataをオレンジレッド色の柱状図を使って描く	plt.hist(xdata, color='orangered')	plt.hist(xdata, color='orangered')
code: オレンジレッド色のヒストグラムとしてリストxdataをプロットする	plt.hist(xdata, color='orangered')	plt.hist(xdata, color='orangered')
code: オーキッド色を用いてイテラブルxdataについての柱状図をプロットする	plt.hist(xdata, color='orchid')	plt.hist(xdata, color='orchid')
code: リストxdataについての柱状グラフをオーキッドとしてプロットする	plt.hist(xdata, color='orchid')	plt.hist(xdata, color='orchid')
code: ヒストグラムをオーキッドで描画する	plt.hist(xdata, color='orchid')	plt.hist(xdata, color='orchid')
code: イテラブルxdataをオーキッド色のヒストグラムとして描く	plt.hist(xdata, color='orchid')	plt.hist(xdata, color='orchid')
code: オーキッド色のヒストグラムとして配列xdataを描く	plt.hist(xdata, color='orchid')	plt.hist(xdata, color='orchid')
code: オーキッド色のヒストグラムで配列xdataを描画する	plt.hist(xdata, color='orchid')	plt.hist(xdata, color='orchid')
code: 度数分布図をパールゴールデンロッドでプロットする	plt.hist(xdata, color='palegoldenrod')	plt.hist(xdata, color='palegoldenrod')
code: パールゴールデンロッド色を使ってデータ列xdataについての度数分布図を描画する	plt.hist(xdata, color='palegoldenrod')	plt.hist(xdata, color='palegoldenrod')
code: 数列xdataについての柱状図をパールゴールデンロッドを使って描く	plt.hist(xdata, color='palegoldenrod')	plt.hist(xdata, color='palegoldenrod')
code: 数列xdataをパールゴールデンロッド色の柱状グラフでプロットする	plt.hist(xdata, color='palegoldenrod')	plt.hist(xdata, color='palegoldenrod')
code: イテラブルxdataをパールゴールデンロッド色のヒストグラムでプロットする	plt.hist(xdata, color='palegoldenrod')	plt.hist(xdata, color='palegoldenrod')
code: リストxdataをパールゴールデンロッド色のヒストグラムとしてプロットする	plt.hist(xdata, color='palegoldenrod')	plt.hist(xdata, color='palegoldenrod')
code: 数列xdataについてのヒストグラムをペールグリーンとしてプロットする	plt.hist(xdata, color='palegreen')	plt.hist(xdata, color='palegreen')
code: ペールグリーンを用いてヒストグラムを描く	plt.hist(xdata, color='palegreen')	plt.hist(xdata, color='palegreen')
code: リストxdataについての度数分布図をペールグリーン色を使って描く	plt.hist(xdata, color='palegreen')	plt.hist(xdata, color='palegreen')
code: リストxdataをペールグリーン色の度数分布図としてプロットする	plt.hist(xdata, color='palegreen')	plt.hist(xdata, color='palegreen')
code: 配列xdataをペールグリーン色の柱状グラフとして描く	plt.hist(xdata, color='palegreen')	plt.hist(xdata, color='palegreen')
code: 数列xdataをペールグリーン色の柱状図として描画する	plt.hist(xdata, color='palegreen')	plt.hist(xdata, color='palegreen')
code: パレットトルコイズ色を使ってリストxdataについての柱状図を描く	plt.hist(xdata, color='paleturquoise')	plt.hist(xdata, color='paleturquoise')
code: データ列xdataについての柱状グラフをパレットトルコイズで描画する	plt.hist(xdata, color='paleturquoise')	plt.hist(xdata, color='paleturquoise')
code: イテラブルxdataについての柱状図をパレットトルコイズを使ってプロットする	plt.hist(xdata, color='paleturquoise')	plt.hist(xdata, color='paleturquoise')
code: パレットトルコイズ色の柱状グラフを使ってデータ列xdataを描画する	plt.hist(xdata, color='paleturquoise')	plt.hist(xdata, color='paleturquoise')
code: データ列xdataをパレットトルコイズ色の度数分布図を使ってプロットする	plt.hist(xdata, color='paleturquoise')	plt.hist(xdata, color='paleturquoise')
code: パレットトルコイズ色のヒストグラムを用いてデータ列xdataを描く	plt.hist(xdata, color='paleturquoise')	plt.hist(xdata, color='paleturquoise')
code: 数列xdataについてのヒストグラムをパールバイオレットレッドを用いてプロットする	plt.hist(xdata, color='palevioletred')	plt.hist(xdata, color='palevioletred')
code: パールバイオレットレッドとしてリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='palevioletred')	plt.hist(xdata, color='palevioletred')
code: 柱状図をパールバイオレットレッドでプロットする	plt.hist(xdata, color='palevioletred')	plt.hist(xdata, color='palevioletred')
code: パールバイオレットレッド色のヒストグラムを用いてリストxdataをプロットする	plt.hist(xdata, color='palevioletred')	plt.hist(xdata, color='palevioletred')
code: 数列xdataをパールバイオレットレッド色のヒストグラムでプロットする	plt.hist(xdata, color='palevioletred')	plt.hist(xdata, color='palevioletred')
code: パールバイオレットレッド色の度数分布図としてリストxdataを描画する	plt.hist(xdata, color='palevioletred')	plt.hist(xdata, color='palevioletred')
code: イテラブルxdataについてのヒストグラムをパパイヤウィップ色でプロットする	plt.hist(xdata, color='papayawhip')	plt.hist(xdata, color='papayawhip')
code: パパイヤウィップ色で配列xdataについての柱状グラフを描画する	plt.hist(xdata, color='papayawhip')	plt.hist(xdata, color='papayawhip')
code: パパイヤウィップ色を使ってヒストグラムをプロットする	plt.hist(xdata, color='papayawhip')	plt.hist(xdata, color='papayawhip')
code: パパイヤウィップ色のヒストグラムを用いて数列xdataをプロットする	plt.hist(xdata, color='papayawhip')	plt.hist(xdata, color='papayawhip')
code: パパイヤウィップ色のヒストグラムとして配列xdataを描画する	plt.hist(xdata, color='papayawhip')	plt.hist(xdata, color='papayawhip')
code: 数列xdataをパパイヤウィップ色のヒストグラムとして描く	plt.hist(xdata, color='papayawhip')	plt.hist(xdata, color='papayawhip')
code: 柱状図をピーチパフ色を用いてプロットする	plt.hist(xdata, color='peachpuff')	plt.hist(xdata, color='peachpuff')
code: ピーチパフで配列xdataについてのヒストグラムを描画する	plt.hist(xdata, color='peachpuff')	plt.hist(xdata, color='peachpuff')
code: ピーチパフ色を用いてヒストグラムをプロットする	plt.hist(xdata, color='peachpuff')	plt.hist(xdata, color='peachpuff')
code: ピーチパフ色のヒストグラムとしてイテラブルxdataをプロットする	plt.hist(xdata, color='peachpuff')	plt.hist(xdata, color='peachpuff')
code: ピーチパフ色のヒストグラムとしてイテラブルxdataを描く	plt.hist(xdata, color='peachpuff')	plt.hist(xdata, color='peachpuff')
code: データ列xdataをピーチパフ色の柱状図を使ってプロットする	plt.hist(xdata, color='peachpuff')	plt.hist(xdata, color='peachpuff')
code: ペルー色を使って配列xdataについてのヒストグラムをプロットする	plt.hist(xdata, color='peru')	plt.hist(xdata, color='peru')
code: 度数分布図をペルーとして描く	plt.hist(xdata, color='peru')	plt.hist(xdata, color='peru')
code: ペルーを用いて度数分布図をプロットする	plt.hist(xdata, color='peru')	plt.hist(xdata, color='peru')
code: 配列xdataをペルー色の柱状図としてプロットする	plt.hist(xdata, color='peru')	plt.hist(xdata, color='peru')
code: 配列xdataをペルー色の柱状図を用いて描画する	plt.hist(xdata, color='peru')	plt.hist(xdata, color='peru')
code: 数列xdataをペルー色の柱状図を用いてプロットする	plt.hist(xdata, color='peru')	plt.hist(xdata, color='peru')
code: ヒストグラムをピンク色で描く	plt.hist(xdata, color='pink')	plt.hist(xdata, color='pink')
code: ピンクを用いてデータ列xdataについての柱状グラフを描く	plt.hist(xdata, color='pink')	plt.hist(xdata, color='pink')
code: ピンク色としてヒストグラムを描く	plt.hist(xdata, color='pink')	plt.hist(xdata, color='pink')
code: データ列xdataをピンク色の柱状グラフを使ってプロットする	plt.hist(xdata, color='pink')	plt.hist(xdata, color='pink')
code: イテラブルxdataをピンク色の柱状図で描く	plt.hist(xdata, color='pink')	plt.hist(xdata, color='pink')
code: ピンク色のヒストグラムを用いて数列xdataを描画する	plt.hist(xdata, color='pink')	plt.hist(xdata, color='pink')
code: プラムとしてヒストグラムをプロットする	plt.hist(xdata, color='plum')	plt.hist(xdata, color='plum')
code: プラムを使ってデータ列xdataについてのヒストグラムをプロットする	plt.hist(xdata, color='plum')	plt.hist(xdata, color='plum')
code: 柱状グラフをプラム色でプロットする	plt.hist(xdata, color='plum')	plt.hist(xdata, color='plum')
code: プラム色のヒストグラムを使って数列xdataを描く	plt.hist(xdata, color='plum')	plt.hist(xdata, color='plum')
code: プラム色の柱状図でデータ列xdataを描画する	plt.hist(xdata, color='plum')	plt.hist(xdata, color='plum')
code: 数列xdataをプラム色の柱状グラフを使って描く	plt.hist(xdata, color='plum')	plt.hist(xdata, color='plum')
code: パウダーブルーとして数列xdataについての柱状グラフを描く	plt.hist(xdata, color='powderblue')	plt.hist(xdata, color='powderblue')
code: ヒストグラムをパウダーブルー色を用いてプロットする	plt.hist(xdata, color='powderblue')	plt.hist(xdata, color='powderblue')
code: パウダーブルーとしてリストxdataについてのヒストグラムをプロットする	plt.hist(xdata, color='powderblue')	plt.hist(xdata, color='powderblue')
code: イテラブルxdataをパウダーブルー色の柱状図を用いてプロットする	plt.hist(xdata, color='powderblue')	plt.hist(xdata, color='powderblue')
code: パウダーブルー色の柱状図としてイテラブルxdataを描画する	plt.hist(xdata, color='powderblue')	plt.hist(xdata, color='powderblue')
code: パウダーブルー色の度数分布図を使ってリストxdataをプロットする	plt.hist(xdata, color='powderblue')	plt.hist(xdata, color='powderblue')
code: イテラブルxdataについてのヒストグラムをパープル色として描く	plt.hist(xdata, color='purple')	plt.hist(xdata, color='purple')
code: 柱状図をパープルを使ってプロットする	plt.hist(xdata, color='purple')	plt.hist(xdata, color='purple')
code: パープルを使ってデータ列xdataについての度数分布図をプロットする	plt.hist(xdata, color='purple')	plt.hist(xdata, color='purple')
code: パープル色の度数分布図でデータ列xdataを描画する	plt.hist(xdata, color='purple')	plt.hist(xdata, color='purple')
code: イテラブルxdataをパープル色の柱状グラフを用いてプロットする	plt.hist(xdata, color='purple')	plt.hist(xdata, color='purple')
code: リストxdataをパープル色の柱状グラフで描画する	plt.hist(xdata, color='purple')	plt.hist(xdata, color='purple')
code: 数列xdataについてのヒストグラムをレベッカパープル色を用いて描画する	plt.hist(xdata, color='rebeccapurple')	plt.hist(xdata, color='rebeccapurple')
code: ヒストグラムをレベッカパープル色を用いて描画する	plt.hist(xdata, color='rebeccapurple')	plt.hist(xdata, color='rebeccapurple')
code: イテラブルxdataについての柱状グラフをレベッカパープルを使って描画する	plt.hist(xdata, color='rebeccapurple')	plt.hist(xdata, color='rebeccapurple')
code: 数列xdataをレベッカパープル色の度数分布図としてプロットする	plt.hist(xdata, color='rebeccapurple')	plt.hist(xdata, color='rebeccapurple')
code: レベッカパープル色の柱状グラフでデータ列xdataを描画する	plt.hist(xdata, color='rebeccapurple')	plt.hist(xdata, color='rebeccapurple')
code: レベッカパープル色の柱状図としてデータ列xdataを描画する	plt.hist(xdata, color='rebeccapurple')	plt.hist(xdata, color='rebeccapurple')
code: 赤色を用いてヒストグラムを描く	plt.hist(xdata, color='red')	plt.hist(xdata, color='red')
code: 赤としてヒストグラムをプロットする	plt.hist(xdata, color='red')	plt.hist(xdata, color='red')
code: 赤色としてヒストグラムをプロットする	plt.hist(xdata, color='red')	plt.hist(xdata, color='red')
code: 赤色の度数分布図としてリストxdataを描く	plt.hist(xdata, color='red')	plt.hist(xdata, color='red')
code: 配列xdataを赤色の度数分布図を使って描く	plt.hist(xdata, color='red')	plt.hist(xdata, color='red')
code: 赤色の度数分布図としてリストxdataをプロットする	plt.hist(xdata, color='red')	plt.hist(xdata, color='red')
code: ロージーブラウン色を用いてイテラブルxdataについてのヒストグラムを描く	plt.hist(xdata, color='rosybrown')	plt.hist(xdata, color='rosybrown')
code: ヒストグラムをロージーブラウンでプロットする	plt.hist(xdata, color='rosybrown')	plt.hist(xdata, color='rosybrown')
code: リストxdataについての柱状図をロージーブラウンでプロットする	plt.hist(xdata, color='rosybrown')	plt.hist(xdata, color='rosybrown')
code: ロージーブラウン色のヒストグラムでイテラブルxdataを描画する	plt.hist(xdata, color='rosybrown')	plt.hist(xdata, color='rosybrown')
code: データ列xdataをロージーブラウン色の度数分布図を使って描く	plt.hist(xdata, color='rosybrown')	plt.hist(xdata, color='rosybrown')
code: 数列xdataをロージーブラウン色の柱状図として描画する	plt.hist(xdata, color='rosybrown')	plt.hist(xdata, color='rosybrown')
code: ロイヤルブルー色としてヒストグラムを描く	plt.hist(xdata, color='royalblue')	plt.hist(xdata, color='royalblue')
code: ヒストグラムをロイヤルブルーを用いて描く	plt.hist(xdata, color='royalblue')	plt.hist(xdata, color='royalblue')
code: 柱状図をロイヤルブルーを使って描く	plt.hist(xdata, color='royalblue')	plt.hist(xdata, color='royalblue')
code: ロイヤルブルー色のヒストグラムとして配列xdataを描く	plt.hist(xdata, color='royalblue')	plt.hist(xdata, color='royalblue')
code: ロイヤルブルー色の柱状グラフでリストxdataを描く	plt.hist(xdata, color='royalblue')	plt.hist(xdata, color='royalblue')
code: イテラブルxdataをロイヤルブルー色の柱状グラフで描画する	plt.hist(xdata, color='royalblue')	plt.hist(xdata, color='royalblue')
code: リストxdataについてのヒストグラムをサドルブラウン色を使ってプロットする	plt.hist(xdata, color='saddlebrown')	plt.hist(xdata, color='saddlebrown')
code: サドルブラウンで配列xdataについてのヒストグラムを描画する	plt.hist(xdata, color='saddlebrown')	plt.hist(xdata, color='saddlebrown')
code: 柱状グラフをサドルブラウン色としてプロットする	plt.hist(xdata, color='saddlebrown')	plt.hist(xdata, color='saddlebrown')
code: リストxdataをサドルブラウン色の度数分布図としてプロットする	plt.hist(xdata, color='saddlebrown')	plt.hist(xdata, color='saddlebrown')
code: サドルブラウン色のヒストグラムで配列xdataを描く	plt.hist(xdata, color='saddlebrown')	plt.hist(xdata, color='saddlebrown')
code: 配列xdataをサドルブラウン色のヒストグラムで描画する	plt.hist(xdata, color='saddlebrown')	plt.hist(xdata, color='saddlebrown')
code: 数列xdataについてのヒストグラムをサーモンとして描画する	plt.hist(xdata, color='salmon')	plt.hist(xdata, color='salmon')
code: ヒストグラムをサーモン色で描く	plt.hist(xdata, color='salmon')	plt.hist(xdata, color='salmon')
code: サーモンを用いて数列xdataについてのヒストグラムをプロットする	plt.hist(xdata, color='salmon')	plt.hist(xdata, color='salmon')
code: サーモン色のヒストグラムとしてリストxdataをプロットする	plt.hist(xdata, color='salmon')	plt.hist(xdata, color='salmon')
code: リストxdataをサーモン色のヒストグラムとしてプロットする	plt.hist(xdata, color='salmon')	plt.hist(xdata, color='salmon')
code: サーモン色のヒストグラムで配列xdataを描く	plt.hist(xdata, color='salmon')	plt.hist(xdata, color='salmon')
code: ヒストグラムをサンディーブラウンとして描画する	plt.hist(xdata, color='sandybrown')	plt.hist(xdata, color='sandybrown')
code: 柱状図をサンディーブラウン色を使ってプロットする	plt.hist(xdata, color='sandybrown')	plt.hist(xdata, color='sandybrown')
code: サンディーブラウンを用いてイテラブルxdataについての度数分布図を描く	plt.hist(xdata, color='sandybrown')	plt.hist(xdata, color='sandybrown')
code: サンディーブラウン色のヒストグラムでデータ列xdataを描画する	plt.hist(xdata, color='sandybrown')	plt.hist(xdata, color='sandybrown')
code: サンディーブラウン色のヒストグラムでデータ列xdataをプロットする	plt.hist(xdata, color='sandybrown')	plt.hist(xdata, color='sandybrown')
code: 配列xdataをサンディーブラウン色の度数分布図を用いて描画する	plt.hist(xdata, color='sandybrown')	plt.hist(xdata, color='sandybrown')
code: 数列xdataについてのヒストグラムをシーグリーン色を使ってプロットする	plt.hist(xdata, color='seagreen')	plt.hist(xdata, color='seagreen')
code: 柱状図をシーグリーン色としてプロットする	plt.hist(xdata, color='seagreen')	plt.hist(xdata, color='seagreen')
code: シーグリーンで柱状図を描く	plt.hist(xdata, color='seagreen')	plt.hist(xdata, color='seagreen')
code: 数列xdataをシーグリーン色のヒストグラムとして描画する	plt.hist(xdata, color='seagreen')	plt.hist(xdata, color='seagreen')
code: シーグリーン色の度数分布図を用いてイテラブルxdataを描く	plt.hist(xdata, color='seagreen')	plt.hist(xdata, color='seagreen')
code: シーグリーン色のヒストグラムでデータ列xdataを描画する	plt.hist(xdata, color='seagreen')	plt.hist(xdata, color='seagreen')
code: リストxdataについてのヒストグラムを貝殻を用いてプロットする	plt.hist(xdata, color='seashell')	plt.hist(xdata, color='seashell')
code: 貝殻色でイテラブルxdataについてのヒストグラムを描画する	plt.hist(xdata, color='seashell')	plt.hist(xdata, color='seashell')
code: 柱状グラフを貝殻を用いて描く	plt.hist(xdata, color='seashell')	plt.hist(xdata, color='seashell')
code: 貝殻色の柱状グラフとして配列xdataを描画する	plt.hist(xdata, color='seashell')	plt.hist(xdata, color='seashell')
code: 貝殻色の柱状グラフを使ってリストxdataをプロットする	plt.hist(xdata, color='seashell')	plt.hist(xdata, color='seashell')
code: 貝殻色のヒストグラムで数列xdataを描く	plt.hist(xdata, color='seashell')	plt.hist(xdata, color='seashell')
code: データ列xdataについての度数分布図をシエナを使って描画する	plt.hist(xdata, color='sienna')	plt.hist(xdata, color='sienna')
code: 配列xdataについての度数分布図をシエナとしてプロットする	plt.hist(xdata, color='sienna')	plt.hist(xdata, color='sienna')
code: 柱状グラフをシエナ色として描画する	plt.hist(xdata, color='sienna')	plt.hist(xdata, color='sienna')
code: シエナ色のヒストグラムとして数列xdataをプロットする	plt.hist(xdata, color='sienna')	plt.hist(xdata, color='sienna')
code: シエナ色の柱状グラフとして配列xdataをプロットする	plt.hist(xdata, color='sienna')	plt.hist(xdata, color='sienna')
code: シエナ色の度数分布図としてイテラブルxdataを描く	plt.hist(xdata, color='sienna')	plt.hist(xdata, color='sienna')
code: ヒストグラムをシルバー色を使って描画する	plt.hist(xdata, color='silver')	plt.hist(xdata, color='silver')
code: リストxdataについてのヒストグラムをシルバーとしてプロットする	plt.hist(xdata, color='silver')	plt.hist(xdata, color='silver')
code: シルバー色としてヒストグラムをプロットする	plt.hist(xdata, color='silver')	plt.hist(xdata, color='silver')
code: シルバー色の柱状図として数列xdataを描画する	plt.hist(xdata, color='silver')	plt.hist(xdata, color='silver')
code: シルバー色の柱状グラフとしてイテラブルxdataを描く	plt.hist(xdata, color='silver')	plt.hist(xdata, color='silver')
code: シルバー色の柱状グラフを用いてデータ列xdataを描画する	plt.hist(xdata, color='silver')	plt.hist(xdata, color='silver')
code: データ列xdataについてのヒストグラムをスカイブルーとして描く	plt.hist(xdata, color='skyblue')	plt.hist(xdata, color='skyblue')
code: ヒストグラムをスカイブルーを用いてプロットする	plt.hist(xdata, color='skyblue')	plt.hist(xdata, color='skyblue')
code: イテラブルxdataについてのヒストグラムをスカイブルー色として描く	plt.hist(xdata, color='skyblue')	plt.hist(xdata, color='skyblue')
code: スカイブルー色の柱状グラフを使って配列xdataをプロットする	plt.hist(xdata, color='skyblue')	plt.hist(xdata, color='skyblue')
code: スカイブルー色の柱状図で配列xdataを描く	plt.hist(xdata, color='skyblue')	plt.hist(xdata, color='skyblue')
code: 配列xdataをスカイブルー色の柱状図で描画する	plt.hist(xdata, color='skyblue')	plt.hist(xdata, color='skyblue')
code: スレートブルーでリストxdataについての度数分布図を描画する	plt.hist(xdata, color='slateblue')	plt.hist(xdata, color='slateblue')
code: データ列xdataについてのヒストグラムをスレートブルー色を使ってプロットする	plt.hist(xdata, color='slateblue')	plt.hist(xdata, color='slateblue')
code: スレートブルーで柱状図を描画する	plt.hist(xdata, color='slateblue')	plt.hist(xdata, color='slateblue')
code: スレートブルー色の度数分布図としてイテラブルxdataを描く	plt.hist(xdata, color='slateblue')	plt.hist(xdata, color='slateblue')
code: イテラブルxdataをスレートブルー色のヒストグラムとして描画する	plt.hist(xdata, color='slateblue')	plt.hist(xdata, color='slateblue')
code: スレートブルー色の柱状図で数列xdataを描く	plt.hist(xdata, color='slateblue')	plt.hist(xdata, color='slateblue')
code: スラグレーを使ってデータ列xdataについての柱状グラフをプロットする	plt.hist(xdata, color='slategray')	plt.hist(xdata, color='slategray')
code: イテラブルxdataについての度数分布図をスラグレーで描く	plt.hist(xdata, color='slategrey')	plt.hist(xdata, color='slategray')
code: スラグレー色で柱状グラフを描画する	plt.hist(xdata, color='slategray')	plt.hist(xdata, color='slategray')
code: スラグレー色のヒストグラムとしてイテラブルxdataを描く	plt.hist(xdata, color='slategray')	plt.hist(xdata, color='slategray')
code: 配列xdataをスラグレー色の度数分布図で描く	plt.hist(xdata, color='slategrey')	plt.hist(xdata, color='slategray')
code: スラグレー色のヒストグラムでイテラブルxdataを描画する	plt.hist(xdata, color='slategray')	plt.hist(xdata, color='slategray')
code: スラグレーを使ってイテラブルxdataについてのヒストグラムをプロットする	plt.hist(xdata, color='slategray')	plt.hist(xdata, color='slategrey')
code: スラグレー色として柱状グラフを描画する	plt.hist(xdata, color='slategray')	plt.hist(xdata, color='slategrey')
code: スラグレーを使って柱状グラフをプロットする	plt.hist(xdata, color='slategray')	plt.hist(xdata, color='slategrey')
code: スラグレー色の度数分布図を用いて配列xdataを描画する	plt.hist(xdata, color='slategrey')	plt.hist(xdata, color='slategrey')
code: スラグレー色のヒストグラムでリストxdataを描画する	plt.hist(xdata, color='slategray')	plt.hist(xdata, color='slategrey')
code: イテラブルxdataをスラグレー色のヒストグラムで描画する	plt.hist(xdata, color='slategray')	plt.hist(xdata, color='slategrey')
code: 数列xdataについての柱状グラフをスノー色を用いてプロットする	plt.hist(xdata, color='snow')	plt.hist(xdata, color='snow')
code: 柱状図をスノーで描画する	plt.hist(xdata, color='snow')	plt.hist(xdata, color='snow')
code: スノー色を使ってリストxdataについての柱状グラフを描く	plt.hist(xdata, color='snow')	plt.hist(xdata, color='snow')
code: スノー色のヒストグラムで配列xdataを描く	plt.hist(xdata, color='snow')	plt.hist(xdata, color='snow')
code: 数列xdataをスノー色の度数分布図でプロットする	plt.hist(xdata, color='snow')	plt.hist(xdata, color='snow')
code: スノー色のヒストグラムでリストxdataを描く	plt.hist(xdata, color='snow')	plt.hist(xdata, color='snow')
code: スプリンググリーンでヒストグラムを描画する	plt.hist(xdata, color='springgreen')	plt.hist(xdata, color='springgreen')
code: スプリンググリーンでリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='springgreen')	plt.hist(xdata, color='springgreen')
code: スプリンググリーン色を用いてヒストグラムを描画する	plt.hist(xdata, color='springgreen')	plt.hist(xdata, color='springgreen')
code: スプリンググリーン色の度数分布図を使ってデータ列xdataを描く	plt.hist(xdata, color='springgreen')	plt.hist(xdata, color='springgreen')
code: スプリンググリーン色の度数分布図を使ってデータ列xdataをプロットする	plt.hist(xdata, color='springgreen')	plt.hist(xdata, color='springgreen')
code: スプリンググリーン色の度数分布図としてデータ列xdataを描く	plt.hist(xdata, color='springgreen')	plt.hist(xdata, color='springgreen')
code: スチールブルーとして度数分布図をプロットする	plt.hist(xdata, color='steelblue')	plt.hist(xdata, color='steelblue')
code: スチールブルー色としてヒストグラムをプロットする	plt.hist(xdata, color='steelblue')	plt.hist(xdata, color='steelblue')
code: スチールブルー色を用いてヒストグラムをプロットする	plt.hist(xdata, color='steelblue')	plt.hist(xdata, color='steelblue')
code: 数列xdataをスチールブルー色のヒストグラムとして描画する	plt.hist(xdata, color='steelblue')	plt.hist(xdata, color='steelblue')
code: 数列xdataをスチールブルー色のヒストグラムとして描画する	plt.hist(xdata, color='steelblue')	plt.hist(xdata, color='steelblue')
code: リストxdataをスチールブルー色の柱状図を使ってプロットする	plt.hist(xdata, color='steelblue')	plt.hist(xdata, color='steelblue')
code: タン色でヒストグラムを描画する	plt.hist(xdata, color='tan')	plt.hist(xdata, color='tan')
code: リストxdataについての柱状図をタン色として描画する	plt.hist(xdata, color='tan')	plt.hist(xdata, color='tan')
code: タンとして数列xdataについてのヒストグラムを描く	plt.hist(xdata, color='tan')	plt.hist(xdata, color='tan')
code: イテラブルxdataをタン色の柱状グラフを使って描画する	plt.hist(xdata, color='tan')	plt.hist(xdata, color='tan')
code: 配列xdataをタン色のヒストグラムを使って描画する	plt.hist(xdata, color='tan')	plt.hist(xdata, color='tan')
code: タン色のヒストグラムで数列xdataを描く	plt.hist(xdata, color='tan')	plt.hist(xdata, color='tan')
code: 度数分布図をティールとしてプロットする	plt.hist(xdata, color='teal')	plt.hist(xdata, color='teal')
code: 柱状グラフをティールで描画する	plt.hist(xdata, color='teal')	plt.hist(xdata, color='teal')
code: ティール色として配列xdataについてのヒストグラムを描く	plt.hist(xdata, color='teal')	plt.hist(xdata, color='teal')
code: ティール色の度数分布図でリストxdataをプロットする	plt.hist(xdata, color='teal')	plt.hist(xdata, color='teal')
code: ティール色のヒストグラムを使って数列xdataを描く	plt.hist(xdata, color='teal')	plt.hist(xdata, color='teal')
code: ティール色の柱状図としてイテラブルxdataを描画する	plt.hist(xdata, color='teal')	plt.hist(xdata, color='teal')
code: アザミ色としてリストxdataについての柱状図をプロットする	plt.hist(xdata, color='thistle')	plt.hist(xdata, color='thistle')
code: リストxdataについての柱状グラフをアザミ色としてプロットする	plt.hist(xdata, color='thistle')	plt.hist(xdata, color='thistle')
code: アザミ色として柱状図をプロットする	plt.hist(xdata, color='thistle')	plt.hist(xdata, color='thistle')
code: アザミ色のヒストグラムを用いてリストxdataをプロットする	plt.hist(xdata, color='thistle')	plt.hist(xdata, color='thistle')
code: アザミ色の柱状図として数列xdataを描画する	plt.hist(xdata, color='thistle')	plt.hist(xdata, color='thistle')
code: アザミ色のヒストグラムを用いて数列xdataを描く	plt.hist(xdata, color='thistle')	plt.hist(xdata, color='thistle')
code: トマト色としてヒストグラムを描く	plt.hist(xdata, color='tomato')	plt.hist(xdata, color='tomato')
code: トマト色でリストxdataについてのヒストグラムをプロットする	plt.hist(xdata, color='tomato')	plt.hist(xdata, color='tomato')
code: トマト色を用いてリストxdataについてのヒストグラムを描画する	plt.hist(xdata, color='tomato')	plt.hist(xdata, color='tomato')
code: トマト色のヒストグラムとしてイテラブルxdataをプロットする	plt.hist(xdata, color='tomato')	plt.hist(xdata, color='tomato')
code: イテラブルxdataをトマト色のヒストグラムを使って描く	plt.hist(xdata, color='tomato')	plt.hist(xdata, color='tomato')
code: イテラブルxdataをトマト色のヒストグラムを用いて描画する	plt.hist(xdata, color='tomato')	plt.hist(xdata, color='tomato')
code: ターコイズで柱状グラフを描く	plt.hist(xdata, color='turquoise')	plt.hist(xdata, color='turquoise')
code: ターコイズを使って柱状図を描画する	plt.hist(xdata, color='turquoise')	plt.hist(xdata, color='turquoise')
code: ターコイズとしてイテラブルxdataについての柱状グラフを描画する	plt.hist(xdata, color='turquoise')	plt.hist(xdata, color='turquoise')
code: データ列xdataをターコイズ色のヒストグラムを使ってプロットする	plt.hist(xdata, color='turquoise')	plt.hist(xdata, color='turquoise')
code: イテラブルxdataをターコイズ色のヒストグラムを用いてプロットする	plt.hist(xdata, color='turquoise')	plt.hist(xdata, color='turquoise')
code: データ列xdataをターコイズ色のヒストグラムを用いてプロットする	plt.hist(xdata, color='turquoise')	plt.hist(xdata, color='turquoise')
code: ヒストグラムをバイオレットとして描く	plt.hist(xdata, color='violet')	plt.hist(xdata, color='violet')
code: 度数分布図をバイオレットとして描く	plt.hist(xdata, color='violet')	plt.hist(xdata, color='violet')
code: イテラブルxdataについてのヒストグラムをバイオレット色として描く	plt.hist(xdata, color='violet')	plt.hist(xdata, color='violet')
code: バイオレット色のヒストグラムでデータ列xdataを描画する	plt.hist(xdata, color='violet')	plt.hist(xdata, color='violet')
code: バイオレット色の柱状グラフで配列xdataをプロットする	plt.hist(xdata, color='violet')	plt.hist(xdata, color='violet')
code: バイオレット色の柱状グラフを用いてリストxdataをプロットする	plt.hist(xdata, color='violet')	plt.hist(xdata, color='violet')
code: 小麦色でイテラブルxdataについての柱状グラフを描く	plt.hist(xdata, color='wheat')	plt.hist(xdata, color='wheat')
code: 小麦で配列xdataについてのヒストグラムを描く	plt.hist(xdata, color='wheat')	plt.hist(xdata, color='wheat')
code: ヒストグラムを小麦色で描く	plt.hist(xdata, color='wheat')	plt.hist(xdata, color='wheat')
code: 小麦色の度数分布図でイテラブルxdataをプロットする	plt.hist(xdata, color='wheat')	plt.hist(xdata, color='wheat')
code: 小麦色の柱状図で配列xdataを描画する	plt.hist(xdata, color='wheat')	plt.hist(xdata, color='wheat')
code: リストxdataを小麦色の柱状図としてプロットする	plt.hist(xdata, color='wheat')	plt.hist(xdata, color='wheat')
code: 柱状図をホワイト色でプロットする	plt.hist(xdata, color='white')	plt.hist(xdata, color='white')
code: リストxdataについての柱状グラフをホワイトで描画する	plt.hist(xdata, color='white')	plt.hist(xdata, color='white')
code: 数列xdataについてのヒストグラムをホワイトとしてプロットする	plt.hist(xdata, color='white')	plt.hist(xdata, color='white')
code: ホワイト色の柱状グラフを用いてイテラブルxdataを描画する	plt.hist(xdata, color='white')	plt.hist(xdata, color='white')
code: イテラブルxdataをホワイト色のヒストグラムとして描く	plt.hist(xdata, color='white')	plt.hist(xdata, color='white')
code: データ列xdataをホワイト色のヒストグラムを使ってプロットする	plt.hist(xdata, color='white')	plt.hist(xdata, color='white')
code: 柱状グラフをホワイトスモークとしてプロットする	plt.hist(xdata, color='whitesmoke')	plt.hist(xdata, color='whitesmoke')
code: 度数分布図をホワイトスモーク色として描画する	plt.hist(xdata, color='whitesmoke')	plt.hist(xdata, color='whitesmoke')
code: 度数分布図をホワイトスモークでプロットする	plt.hist(xdata, color='whitesmoke')	plt.hist(xdata, color='whitesmoke')
code: データ列xdataをホワイトスモーク色のヒストグラムを使って描く	plt.hist(xdata, color='whitesmoke')	plt.hist(xdata, color='whitesmoke')
code: ホワイトスモーク色の柱状グラフを用いて配列xdataを描く	plt.hist(xdata, color='whitesmoke')	plt.hist(xdata, color='whitesmoke')
code: ホワイトスモーク色の度数分布図としてデータ列xdataをプロットする	plt.hist(xdata, color='whitesmoke')	plt.hist(xdata, color='whitesmoke')
code: 黄色で配列xdataについてのヒストグラムを描画する	plt.hist(xdata, color='yellow')	plt.hist(xdata, color='yellow')
code: 数列xdataについてのヒストグラムを黄色で描画する	plt.hist(xdata, color='yellow')	plt.hist(xdata, color='yellow')
code: 黄色で数列xdataについてのヒストグラムを描画する	plt.hist(xdata, color='yellow')	plt.hist(xdata, color='yellow')
code: 黄色色のヒストグラムとして数列xdataを描く	plt.hist(xdata, color='yellow')	plt.hist(xdata, color='yellow')
code: 黄色色のヒストグラムでリストxdataをプロットする	plt.hist(xdata, color='yellow')	plt.hist(xdata, color='yellow')
code: 黄色色の柱状グラフでイテラブルxdataを描画する	plt.hist(xdata, color='yellow')	plt.hist(xdata, color='yellow')
code: リストxdataについてのヒストグラムをイエローグリーンを使って描画する	plt.hist(xdata, color='greenyellow')	plt.hist(xdata, color='yellowgreen')
code: イエローグリーン色を用いてデータ列xdataについての柱状図をプロットする	plt.hist(xdata, color='yellowgreen')	plt.hist(xdata, color='yellowgreen')
code: ヒストグラムをイエローグリーン色として描画する	plt.hist(xdata, color='greenyellow')	plt.hist(xdata, color='yellowgreen')
code: イエローグリーン色の柱状図でデータ列xdataを描く	plt.hist(xdata, color='yellowgreen')	plt.hist(xdata, color='yellowgreen')
code: イエローグリーン色のヒストグラムで配列xdataを描く	plt.hist(xdata, color='yellowgreen')	plt.hist(xdata, color='yellowgreen')
code: 数列xdataをイエローグリーン色の柱状図で描く	plt.hist(xdata, color='yellowgreen')	plt.hist(xdata, color='yellowgreen')
code: 折れ線[グラフ]の色を赤くする	plt.plot(xdata, ydata, color='r')	plt.plot(xdata, ydata, color='r')
code: 配列xdataとイテラブルydataの折れ線を描画して、色を赤くする	plt.plot(xdata, ydata, color='r')	plt.plot(xdata, ydata, color='r')
code: リストxdataと配列ydataの折れ線を描画して色を赤くする	plt.plot(xdata, ydata, color='r')	plt.plot(xdata, ydata, color='r')
code: 折れ線[グラフ]の色を青くする	plt.plot(xdata, ydata, color='b')	plt.plot(xdata, ydata, color='b')
code: リストxdataと数列ydataの折れ線を描画して、色を青くする	plt.plot(xdata, ydata, color='b')	plt.plot(xdata, ydata, color='b')
code: データ列xdataとリストydataの折れ線を描画して、色を青くする	plt.plot(xdata, ydata, color='b')	plt.plot(xdata, ydata, color='b')
code: 折れ線[グラフ]の色を黒くする	plt.plot(xdata, ydata, color='k')	plt.plot(xdata, ydata, color='k')
code: イテラブルxdataと配列ydataの折れ線を描画して、色を黒くする	plt.plot(xdata, ydata, color='k')	plt.plot(xdata, ydata, color='k')
code: 配列xdataと配列ydataの折れ線を描画して、色を黒くする	plt.plot(xdata, ydata, color='k')	plt.plot(xdata, ydata, color='k')
code: 折れ線[グラフ]の色を白くする	plt.plot(xdata, ydata, color='w')	plt.plot(xdata, ydata, color='w')
code: データ列xdataとリストydataの折れ線を描画して、色を白くする	plt.plot(xdata, ydata, color='w')	plt.plot(xdata, ydata, color='w')
code: リストxdataとデータ列ydataの折れ線グラフを描画して色を白くする	plt.plot(xdata, ydata, color='w')	plt.plot(xdata, ydata, color='w')
code: 折れ線[グラフ]の色を黄色くする	plt.plot(xdata, ydata, color='y')	plt.plot(xdata, ydata, color='y')
code: データ列xdataと配列ydataの折れ線グラフを描画して、色を黄色くする	plt.plot(xdata, ydata, color='y')	plt.plot(xdata, ydata, color='y')
code: 配列xdataと配列ydataの折れ線を描画して、色を黄色くする	plt.plot(xdata, ydata, color='y')	plt.plot(xdata, ydata, color='y')
code: 赤い折れ線を描く	plt.plot(xdata, ydata, color='r')	plt.plot(xdata, ydata, color='r')
code: イテラブルxdataと配列ydataの赤い折れ線をプロットする	plt.plot(xdata, ydata, color='r')	plt.plot(xdata, ydata, color='r')
code: 数列xdataと配列ydataの赤い折れ線を描画する	plt.plot(xdata, ydata, color='r')	plt.plot(xdata, ydata, color='r')
code: 青い折れ線グラフをプロットする	plt.plot(xdata, ydata, color='b')	plt.plot(xdata, ydata, color='b')
code: イテラブルxdataとリストydataの青い折れ線を描画する	plt.plot(xdata, ydata, color='b')	plt.plot(xdata, ydata, color='b')
code: データ列xdataと配列ydataの青い折れ線をプロットする	plt.plot(xdata, ydata, color='b')	plt.plot(xdata, ydata, color='b')
code: 黒い折れ線を描画する	plt.plot(xdata, ydata, color='k')	plt.plot(xdata, ydata, color='k')
code: 配列xdataと数列ydataの黒い折れ線をプロットする	plt.plot(xdata, ydata, color='k')	plt.plot(xdata, ydata, color='k')
code: 配列xdataとイテラブルydataの黒い折れ線グラフを描く	plt.plot(xdata, ydata, color='k')	plt.plot(xdata, ydata, color='k')
code: 白い折れ線グラフを描画する	plt.plot(xdata, ydata, color='w')	plt.plot(xdata, ydata, color='w')
code: データ列xdataと数列ydataの白い折れ線をプロットする	plt.plot(xdata, ydata, color='w')	plt.plot(xdata, ydata, color='w')
code: データ列xdataとイテラブルydataの白い折れ線グラフを描画する	plt.plot(xdata, ydata, color='w')	plt.plot(xdata, ydata, color='w')
code: 黄色い折れ線グラフを描画する	plt.plot(xdata, ydata, color='y')	plt.plot(xdata, ydata, color='y')
code: 数列xdataとリストydataの黄色い折れ線グラフをプロットする	plt.plot(xdata, ydata, color='y')	plt.plot(xdata, ydata, color='y')
code: 配列xdataと数列ydataの黄色い折れ線を描画する	plt.plot(xdata, ydata, color='y')	plt.plot(xdata, ydata, color='y')
code: 折れ線のラベルを文字列sに指定する	plt.plot(xdata, ydata, label=s)	plt.plot(xdata, ydata, label=s)
code: 折れ線のラベルを文字列sに変更する	plt.plot(xdata, ydata, label=s)	plt.plot(xdata, ydata, label=s)
code: 文字列sとラベル付けしてイテラブルxdataとリストydataの折れ線をプロットする	plt.plot(xdata, ydata, label=s)	plt.plot(xdata, ydata, label=s)
code: リストxdataとイテラブルydataの折れ線グラフをsとラベル付けして描く	plt.plot(xdata, ydata, label=s)	plt.plot(xdata, ydata, label=s)
code: 数列xdataと数列ydataの折れ線をsとラベル付けして描画する	plt.plot(xdata, ydata, label=s)	plt.plot(xdata, ydata, label=s)
code: 配列xdataと配列ydataの折れ線を描画して文字列sとラベル付けする	plt.plot(xdata, ydata, label=s)	plt.plot(xdata, ydata, label=s)
code: リストxdataとイテラブルydataの折れ線を描画して、文字列sとラベル付けする	plt.plot(xdata, ydata, label=s)	plt.plot(xdata, ydata, label=s)
code: 破線の折れ線をプロットする	plt.plot(xdata, ydata, linestyle='dashed')	plt.plot(xdata, ydata, linestyle='dashed')
code: 破線を描画する	plt.plot(xdata, ydata, linestyle='dashed')	plt.plot(xdata, ydata, linestyle='dashed')
code: 折れ線を破線に指定する	plt.plot(xdata, ydata, linestyle='dashed')	plt.plot(xdata, ydata, linestyle='dashed')
code: 折れ線を破線とする	plt.plot(xdata, ydata, linestyle='dashed')	plt.plot(xdata, ydata, linestyle='dashed')
code: 配列xdataとイテラブルydataについて破線の折れ線を描画する	plt.plot(xdata, ydata, linestyle='dashed')	plt.plot(xdata, ydata, linestyle='dashed')
code: 配列xdataと配列ydataについて破線の折れ線グラフを描画する	plt.plot(xdata, ydata, linestyle='dashed')	plt.plot(xdata, ydata, linestyle='dashed')
code: リストxdataと数列ydataの折れ線グラフを描画して破線とする	plt.plot(xdata, ydata, linestyle='dashed')	plt.plot(xdata, ydata, linestyle='dashed')
code: 配列xdataと数列ydataの折れ線グラフを描画して破線に設定する	plt.plot(xdata, ydata, linestyle='dashed')	plt.plot(xdata, ydata, linestyle='dashed')
code: 一点鎖線の折れ線グラフを描画する	plt.plot(xdata, ydata, linestyle='dashbot')	plt.plot(xdata, ydata, linestyle='dashbot')
code: 一点鎖線を描く	plt.plot(xdata, ydata, linestyle='dashbot')	plt.plot(xdata, ydata, linestyle='dashbot')
code: 折れ線グラフを一点鎖線に指定する	plt.plot(xdata, ydata, linestyle='dashbot')	plt.plot(xdata, ydata, linestyle='dashbot')
code: 折れ線を一点鎖線にする	plt.plot(xdata, ydata, linestyle='dashbot')	plt.plot(xdata, ydata, linestyle='dashbot')
code: イテラブルxdataとデータ列ydataについて一点鎖線の折れ線をプロットする	plt.plot(xdata, ydata, linestyle='dashbot')	plt.plot(xdata, ydata, linestyle='dashbot')
code: データ列xdataと数列ydataについて一点鎖線の折れ線を描画する	plt.plot(xdata, ydata, linestyle='dashbot')	plt.plot(xdata, ydata, linestyle='dashbot')
code: 数列xdataと数列ydataの折れ線を描画して一点鎖線変える	plt.plot(xdata, ydata, linestyle='dashbot')	plt.plot(xdata, ydata, linestyle='dashbot')
code: イテラブルxdataとイテラブルydataの折れ線グラフを描画して一点鎖線とする	plt.plot(xdata, ydata, linestyle='dashbot')	plt.plot(xdata, ydata, linestyle='dashbot')
code: 点線をプロットする	plt.plot(xdata, ydata, linestyle='dotted')	plt.plot(xdata, ydata, linestyle='dotted')
code: 点線の折れ線をプロットする	plt.plot(xdata, ydata, linestyle='dotted')	plt.plot(xdata, ydata, linestyle='dotted')
code: 折れ線グラフを点線変える	plt.plot(xdata, ydata, linestyle='dotted')	plt.plot(xdata, ydata, linestyle='dotted')
code: 折れ線を点線に変更する	plt.plot(xdata, ydata, linestyle='dotted')	plt.plot(xdata, ydata, linestyle='dotted')
code: 数列xdataとデータ列ydataの点線を描画する	plt.plot(xdata, ydata, linestyle='dotted')	plt.plot(xdata, ydata, linestyle='dotted')
code: 配列xdataとリストydataについて点線による折れ線を描画する	plt.plot(xdata, ydata, linestyle='dotted')	plt.plot(xdata, ydata, linestyle='dotted')
code: データ列xdataとイテラブルydataの折れ線を描画して点線に指定する	plt.plot(xdata, ydata, linestyle='dotted')	plt.plot(xdata, ydata, linestyle='dotted')
code: リストxdataとリストydataの折れ線グラフを描画して点線とする	plt.plot(xdata, ydata, linestyle='dotted')	plt.plot(xdata, ydata, linestyle='dotted')
code: 実線の折れ線グラフを描く	plt.plot(xdata, ydata, linestyle='solid')	plt.plot(xdata, ydata, linestyle='solid')
code: 実線グラフを描画する	plt.plot(xdata, ydata, linestyle='solid')	plt.plot(xdata, ydata, linestyle='solid')
code: 折れ線を実線変える	plt.plot(xdata, ydata, linestyle='solid')	plt.plot(xdata, ydata, linestyle='solid')
code: 折れ線を実線変える	plt.plot(xdata, ydata, linestyle='solid')	plt.plot(xdata, ydata, linestyle='solid')
code: 配列xdataと数列ydataの実線グラフを描く	plt.plot(xdata, ydata, linestyle='solid')	plt.plot(xdata, ydata, linestyle='solid')
code: 数列xdataと数列ydataの実線折れ線をプロットする	plt.plot(xdata, ydata, linestyle='solid')	plt.plot(xdata, ydata, linestyle='solid')
code: リストxdataとイテラブルydataの折れ線を描画して、実線にセットする	plt.plot(xdata, ydata, linestyle='solid')	plt.plot(xdata, ydata, linestyle='solid')
code: データ列xdataと配列ydataの折れ線グラフを描画して、実線とする	plt.plot(xdata, ydata, linestyle='solid')	plt.plot(xdata, ydata, linestyle='solid')
code: 線幅nの折れ線を描画する	plt.plot(xdata, ydata, linewidth=n)	plt.plot(xdata, ydata, linewidth=n)
code: 折れ線グラフの線幅をn変える	plt.plot(xdata, ydata, linewidth=n)	plt.plot(xdata, ydata, linewidth=n)
code: 折れ線グラフの線幅をnに設定する	plt.plot(xdata, ydata, linewidth=n)	plt.plot(xdata, ydata, linewidth=n)
code: 数列xdataとリストydataについて線幅nの折れ線グラフをプロットする	plt.plot(xdata, ydata, linewidth=n)	plt.plot(xdata, ydata, linewidth=n)
code: データ列xdataとリストydataについて線幅nの折れ線グラフを描く	plt.plot(xdata, ydata, linewidth=n)	plt.plot(xdata, ydata, linewidth=n)
code: 配列xdataとデータ列ydataの折れ線グラフを描画してその線幅をnに変更する	plt.plot(xdata, ydata, linewidth=n)	plt.plot(xdata, ydata, linewidth=n)
code: リストxdataと配列ydataについて折れ線グラフを描画して、線幅をnにセットする	plt.plot(xdata, ydata, linewidth=n)	plt.plot(xdata, ydata, linewidth=n)
code: 線幅nの破線グラフを描画する	plt.plot(xdata, ydata, linestyle='dashed', linewidth=n)	plt.plot(xdata, ydata, linestyle='dashed', linewidth=n)
code: 破線の線幅をn変える	plt.plot(xdata, ydata, linestyle='dashed', linewidth=n)	plt.plot(xdata, ydata, linestyle='dashed', linewidth=n)
code: 破線グラフの線幅をnに指定する	plt.plot(xdata, ydata, linestyle='dashed', linewidth=n)	plt.plot(xdata, ydata, linestyle='dashed', linewidth=n)
code: イテラブルxdataとリストydataについて線幅nの破線をプロットする	plt.plot(xdata, ydata, linestyle='dashed', linewidth=n)	plt.plot(xdata, ydata, linestyle='dashed', linewidth=n)
code: リストxdataとデータ列ydataについて線幅nの破線を描画する	plt.plot(xdata, ydata, linestyle='dashed', linewidth=n)	plt.plot(xdata, ydata, linestyle='dashed', linewidth=n)
code: 数列xdataと数列ydataの破線を描画して線幅をnに設定する	plt.plot(xdata, ydata, linestyle='dashed', linewidth=n)	plt.plot(xdata, ydata, linestyle='dashed', linewidth=n)
code: 配列xdataと数列ydataの破線を描画してその線幅をnに設定する	plt.plot(xdata, ydata, linestyle='dashed', linewidth=n)	plt.plot(xdata, ydata, linestyle='dashed', linewidth=n)
code: 線幅nの一点鎖線グラフをプロットする	plt.plot(xdata, ydata, linestyle='dashbot', linewidth=n)	plt.plot(xdata, ydata, linestyle='dashbot', linewidth=n)
code: 一点鎖線の線幅をn変える	plt.plot(xdata, ydata, linestyle='dashbot', linewidth=n)	plt.plot(xdata, ydata, linestyle='dashbot', linewidth=n)
code: 一点鎖線グラフの線幅をnにセットする	plt.plot(xdata, ydata, linestyle='dashbot', linewidth=n)	plt.plot(xdata, ydata, linestyle='dashbot', linewidth=n)
code: イテラブルxdataとイテラブルydataについて線幅nの一点鎖線グラフを描く	plt.plot(xdata, ydata, linestyle='dashbot', linewidth=n)	plt.plot(xdata, ydata, linestyle='dashbot', linewidth=n)
code: イテラブルxdataと数列ydataについて線幅nの一点鎖線グラフを描く	plt.plot(xdata, ydata, linestyle='dashbot', linewidth=n)	plt.plot(xdata, ydata, linestyle='dashbot', linewidth=n)
code: イテラブルxdataと数列ydataについて一点鎖線を描画して線幅をn変える	plt.plot(xdata, ydata, linestyle='dashbot', linewidth=n)	plt.plot(xdata, ydata, linestyle='dashbot', linewidth=n)
code: データ列xdataと数列ydataについて一点鎖線グラフを描画してその線幅をnに設定する	plt.plot(xdata, ydata, linestyle='dashbot', linewidth=n)	plt.plot(xdata, ydata, linestyle='dashbot', linewidth=n)
code: 線幅nの点線グラフをプロットする	plt.plot(xdata, ydata, linestyle='dotted', linewidth=n)	plt.plot(xdata, ydata, linestyle='dotted', linewidth=n)
code: 点線グラフの線幅をnに変更する	plt.plot(xdata, ydata, linestyle='dotted', linewidth=n)	plt.plot(xdata, ydata, linestyle='dotted', linewidth=n)
code: 点線グラフの線幅をnに指定する	plt.plot(xdata, ydata, linestyle='dotted', linewidth=n)	plt.plot(xdata, ydata, linestyle='dotted', linewidth=n)
code: イテラブルxdataと配列ydataの線幅nの点線グラフを描画する	plt.plot(xdata, ydata, linestyle='dotted', linewidth=n)	plt.plot(xdata, ydata, linestyle='dotted', linewidth=n)
code: 配列xdataと数列ydataの線幅nの点線グラフをプロットする	plt.plot(xdata, ydata, linestyle='dotted', linewidth=n)	plt.plot(xdata, ydata, linestyle='dotted', linewidth=n)
code: データ列xdataと数列ydataの点線を描画してその線幅をnにセットする	plt.plot(xdata, ydata, linestyle='dotted', linewidth=n)	plt.plot(xdata, ydata, linestyle='dotted', linewidth=n)
code: リストxdataとデータ列ydataについて点線を描画してその線幅をnに設定する	plt.plot(xdata, ydata, linestyle='dotted', linewidth=n)	plt.plot(xdata, ydata, linestyle='dotted', linewidth=n)
code: 線幅nの実線をプロットする	plt.plot(xdata, ydata, linestyle='solid', linewidth=n)	plt.plot(xdata, ydata, linestyle='solid', linewidth=n)
code: 実線の線幅をn変える	plt.plot(xdata, ydata, linestyle='solid', linewidth=n)	plt.plot(xdata, ydata, linestyle='solid', linewidth=n)
code: 実線グラフの線幅をnに変更する	plt.plot(xdata, ydata, linestyle='solid', linewidth=n)	plt.plot(xdata, ydata, linestyle='solid', linewidth=n)
code: イテラブルxdataと数列ydataについて線幅nの実線グラフを描画する	plt.plot(xdata, ydata, linestyle='solid', linewidth=n)	plt.plot(xdata, ydata, linestyle='solid', linewidth=n)
code: リストxdataとイテラブルydataについて線幅nの実線グラフをプロットする	plt.plot(xdata, ydata, linestyle='solid', linewidth=n)	plt.plot(xdata, ydata, linestyle='solid', linewidth=n)
code: 数列xdataと配列ydataの実線グラフを描画して線幅をnにセットする	plt.plot(xdata, ydata, linestyle='solid', linewidth=n)	plt.plot(xdata, ydata, linestyle='solid', linewidth=n)
code: イテラブルxdataと数列ydataについて実線グラフを描画して、その線幅をnに指定する	plt.plot(xdata, ydata, linestyle='solid', linewidth=n)	plt.plot(xdata, ydata, linestyle='solid', linewidth=n)
code: 破線の色をカラーコードrgb変える	plt.plot(xdata, ydata, linestyle='dashed', color=rgb)	plt.plot(xdata, ydata, linestyle='dashed', color=rgb)
code: 破線グラフの色をカラーコードrgbとする	plt.plot(xdata, ydata, linestyle='dashed', color=rgb)	plt.plot(xdata, ydata, linestyle='dashed', color=rgb)
code: 破線の色を赤くする	plt.plot(xdata, ydata, linestyle='dashed', color='r')	plt.plot(xdata, ydata, linestyle='dashed', color=rgb)
code: 破線の色を赤くする	plt.plot(xdata, ydata, linestyle='dashed', color='r')	plt.plot(xdata, ydata, linestyle='dashed', color=rgb)
code: リストxdataと数列ydataのrgbの破線グラフを描画する	plt.plot(xdata, ydata, linestyle='dashed', color=rgb)	plt.plot(xdata, ydata, linestyle='dashed', color=rgb)
code: 数列xdataと数列ydataのカラーコードrgbの破線を描く	plt.plot(xdata, ydata, linestyle='dashed', color=rgb)	plt.plot(xdata, ydata, linestyle='dashed', color=rgb)
code: 数列xdataとデータ列ydataについて破線を描画して、色をカラーコードrgbに変更する	plt.plot(xdata, ydata, linestyle='dashed', color=rgb)	plt.plot(xdata, ydata, linestyle='dashed', color=rgb)
code: 配列xdataとデータ列ydataについて破線グラフを描画して色をカラーコードrgbに設定する	plt.plot(xdata, ydata, linestyle='dashed', color=rgb)	plt.plot(xdata, ydata, linestyle='dashed', color=rgb)
code: 一点鎖線の色をカラーコードrgbに設定する	plt.plot(xdata, ydata, linestyle='dashbot', color=rgb)	plt.plot(xdata, ydata, linestyle='dashbot', color=rgb)
code: 一点鎖線グラフの色をカラーコードrgbとする	plt.plot(xdata, ydata, linestyle='dashbot', color=rgb)	plt.plot(xdata, ydata, linestyle='dashbot', color=rgb)
code: 一点鎖線グラフの色を赤色にセットする	plt.plot(xdata, ydata, linestyle='dashbot', color=rgb)	plt.plot(xdata, ydata, linestyle='dashbot', color=rgb)
code: 一点鎖線グラフの色を赤くする	plt.plot(xdata, ydata, linestyle='dashbot', color='r')	plt.plot(xdata, ydata, linestyle='dashbot', color=rgb)
code: イテラブルxdataとデータ列ydataについてrgbの一点鎖線をプロットする	plt.plot(xdata, ydata, linestyle='dashbot', color=rgb)	plt.plot(xdata, ydata, linestyle='dashbot', color=rgb)
code: イテラブルxdataとリストydataのカラーコードrgbの一点鎖線グラフをプロットする	plt.plot(xdata, ydata, linestyle='dashbot', color=rgb)	plt.plot(xdata, ydata, linestyle='dashbot', color=rgb)
code: イテラブルxdataとデータ列ydataの一点鎖線グラフを描画して、その色をカラーコードrgbにセットする	plt.plot(xdata, ydata, linestyle='dashbot', color=rgb)	plt.plot(xdata, ydata, linestyle='dashbot', color=rgb)
code: リストxdataと配列ydataについて一点鎖線グラフを描画して、色をカラーコードrgb変える	plt.plot(xdata, ydata, linestyle='dashbot', color=rgb)	plt.plot(xdata, ydata, linestyle='dashbot', color=rgb)
code: 点線グラフの色をカラーコードrgbにする	plt.plot(xdata, ydata, linestyle='dotted', color=rgb)	plt.plot(xdata, ydata, linestyle='dotted', color=rgb)
code: 点線の色をrgbに設定する	plt.plot(xdata, ydata, linestyle='dotted', color=rgb)	plt.plot(xdata, ydata, linestyle='dotted', color=rgb)
code: 点線グラフの色を赤色に変更する	plt.plot(xdata, ydata, linestyle='dotted', color=rgb)	plt.plot(xdata, ydata, linestyle='dotted', color=rgb)
code: 点線グラフの色を赤色変える	plt.plot(xdata, ydata, linestyle='dotted', color='r')	plt.plot(xdata, ydata, linestyle='dotted', color=rgb)
code: 配列xdataと配列ydataについてrgbの点線グラフを描く	plt.plot(xdata, ydata, linestyle='dotted', color=rgb)	plt.plot(xdata, ydata, linestyle='dotted', color=rgb)
code: データ列xdataと数列ydataのカラーコードrgbの点線グラフを描く	plt.plot(xdata, ydata, linestyle='dotted', color=rgb)	plt.plot(xdata, ydata, linestyle='dotted', color=rgb)
code: 配列xdataと配列ydataの点線グラフを描画して、色をカラーコードrgbに設定する	plt.plot(xdata, ydata, linestyle='dotted', color=rgb)	plt.plot(xdata, ydata, linestyle='dotted', color=rgb)
code: 配列xdataとリストydataの点線を描画して色をカラーコードrgbに設定する	plt.plot(xdata, ydata, linestyle='dotted', color=rgb)	plt.plot(xdata, ydata, linestyle='dotted', color=rgb)
code: 実線の色をカラーコードrgbにセットする	plt.plot(xdata, ydata, linestyle='solid', color=rgb)	plt.plot(xdata, ydata, linestyle='solid', color=rgb)
code: 実線の色をrgb変える	plt.plot(xdata, ydata, linestyle='solid', color=rgb)	plt.plot(xdata, ydata, linestyle='solid', color=rgb)
code: 実線の色を赤くする	plt.plot(xdata, ydata, linestyle='solid', color=rgb)	plt.plot(xdata, ydata, linestyle='solid', color=rgb)
code: 実線の色を赤色に変更する	plt.plot(xdata, ydata, linestyle='solid', color='r')	plt.plot(xdata, ydata, linestyle='solid', color=rgb)
code: 数列xdataと配列ydataについてrgbの実線グラフを描画する	plt.plot(xdata, ydata, linestyle='solid', color=rgb)	plt.plot(xdata, ydata, linestyle='solid', color=rgb)
code: リストxdataとデータ列ydataについてカラーコードrgbの実線グラフをプロットする	plt.plot(xdata, ydata, linestyle='solid', color=rgb)	plt.plot(xdata, ydata, linestyle='solid', color=rgb)
code: リストxdataとデータ列ydataについて実線を描画して、その色をrgb変える	plt.plot(xdata, ydata, linestyle='solid', color=rgb)	plt.plot(xdata, ydata, linestyle='solid', color=rgb)
code: データ列xdataと配列ydataについて実線を描画して色をカラーコードrgbにセットする	plt.plot(xdata, ydata, linestyle='solid', color=rgb)	plt.plot(xdata, ydata, linestyle='solid', color=rgb)
code: 赤色の破線を描く	plt.plot(xdata, ydata, linestyle='dashed', color='r')	plt.plot(xdata, ydata, linestyle='dashed', color='r')
code: 破線グラフの色を赤くする	plt.plot(xdata, ydata, linestyle='dashed', color='r')	plt.plot(xdata, ydata, linestyle='dashed', color='r')
code: 破線の色を赤色に変更する	plt.plot(xdata, ydata, linestyle='dashed', color='r')	plt.plot(xdata, ydata, linestyle='dashed', color='r')
code: イテラブルxdataとデータ列ydataの赤い破線をプロットする	plt.plot(xdata, ydata, linestyle='dashed', color='r')	plt.plot(xdata, ydata, linestyle='dashed', color='r')
code: リストxdataとデータ列ydataの赤い破線グラフを描く	plt.plot(xdata, ydata, linestyle='dashed', color='r')	plt.plot(xdata, ydata, linestyle='dashed', color='r')
code: リストxdataと数列ydataについて破線を描画してその色を赤色にする	plt.plot(xdata, ydata, linestyle='dashed', color='r')	plt.plot(xdata, ydata, linestyle='dashed', color='r')
code: イテラブルxdataとデータ列ydataの破線グラフを描画してその色を赤くする	plt.plot(xdata, ydata, linestyle='dashed', color='r')	plt.plot(xdata, ydata, linestyle='dashed', color='r')
code: 赤色の一点鎖線をプロットする	plt.plot(xdata, ydata, linestyle='dashbot', color='r')	plt.plot(xdata, ydata, linestyle='dashbot', color='r')
code: 一点鎖線の色を赤くする	plt.plot(xdata, ydata, linestyle='dashbot', color=rgb)	plt.plot(xdata, ydata, linestyle='dashbot', color='r')
code: 一点鎖線グラフの色を赤色に変更する	plt.plot(xdata, ydata, linestyle='dashbot', color=rgb)	plt.plot(xdata, ydata, linestyle='dashbot', color='r')
code: イテラブルxdataと配列ydataの赤い一点鎖線グラフを描画する	plt.plot(xdata, ydata, linestyle='dashbot', color='r')	plt.plot(xdata, ydata, linestyle='dashbot', color='r')
code: 数列xdataとリストydataの赤色の一点鎖線グラフをプロットする	plt.plot(xdata, ydata, linestyle='dashbot', color='r')	plt.plot(xdata, ydata, linestyle='dashbot', color='r')
code: 配列xdataと数列ydataの一点鎖線を描画して、色を赤にする	plt.plot(xdata, ydata, linestyle='dashbot', color='r')	plt.plot(xdata, ydata, linestyle='dashbot', color='r')
code: 数列xdataとデータ列ydataについて一点鎖線グラフを描画して色を赤色に変更する	plt.plot(xdata, ydata, linestyle='dashbot', color='r')	plt.plot(xdata, ydata, linestyle='dashbot', color='r')
code: 赤色の点線グラフを描く	plt.plot(xdata, ydata, linestyle='dotted', color='r')	plt.plot(xdata, ydata, linestyle='dotted', color='r')
code: 点線の色を赤色にする	plt.plot(xdata, ydata, linestyle='dotted', color='r')	plt.plot(xdata, ydata, linestyle='dotted', color='r')
code: 点線の色を赤くする	plt.plot(xdata, ydata, linestyle='dotted', color='r')	plt.plot(xdata, ydata, linestyle='dotted', color='r')
code: リストxdataと配列ydataの赤色の点線を描画する	plt.plot(xdata, ydata, linestyle='dotted', color='r')	plt.plot(xdata, ydata, linestyle='dotted', color='r')
code: 数列xdataと数列ydataについて赤い点線を描画する	plt.plot(xdata, ydata, linestyle='dotted', color='r')	plt.plot(xdata, ydata, linestyle='dotted', color='r')
code: リストxdataと配列ydataについて点線を描画して色を赤色とする	plt.plot(xdata, ydata, linestyle='dotted', color='r')	plt.plot(xdata, ydata, linestyle='dotted', color='r')
code: リストxdataとイテラブルydataの点線を描画してその色を赤色変える	plt.plot(xdata, ydata, linestyle='dotted', color='r')	plt.plot(xdata, ydata, linestyle='dotted', color='r')
code: 赤い実線をプロットする	plt.plot(xdata, ydata, linestyle='solid', color='r')	plt.plot(xdata, ydata, linestyle='solid', color='r')
code: 実線グラフの色を赤にする	plt.plot(xdata, ydata, linestyle='solid', color='r')	plt.plot(xdata, ydata, linestyle='solid', color='r')
code: 実線の色を赤にする	plt.plot(xdata, ydata, linestyle='solid', color=rgb)	plt.plot(xdata, ydata, linestyle='solid', color='r')
code: データ列xdataとデータ列ydataの赤い実線グラフを描く	plt.plot(xdata, ydata, linestyle='solid', color='r')	plt.plot(xdata, ydata, linestyle='solid', color='r')
code: イテラブルxdataと配列ydataについて赤い実線グラフを描画する	plt.plot(xdata, ydata, linestyle='solid', color='r')	plt.plot(xdata, ydata, linestyle='solid', color='r')
code: データ列xdataと数列ydataについて実線を描画して色を赤色変える	plt.plot(xdata, ydata, linestyle='solid', color='r')	plt.plot(xdata, ydata, linestyle='solid', color='r')
code: データ列xdataと数列ydataの実線グラフを描画して、色を赤くする	plt.plot(xdata, ydata, linestyle='solid', color='r')	plt.plot(xdata, ydata, linestyle='solid', color='r')
code: 青色の破線グラフを描画する	plt.plot(xdata, ydata, linestyle='dashed', color='b')	plt.plot(xdata, ydata, linestyle='dashed', color='b')
code: 破線の色を青にする	plt.plot(xdata, ydata, linestyle='dashed', color='b')	plt.plot(xdata, ydata, linestyle='dashed', color='b')
code: 破線の色を青にする	plt.plot(xdata, ydata, linestyle='dash', color='blue')	plt.plot(xdata, ydata, linestyle='dashed', color='b')
code: イテラブルxdataと数列ydataの青色の破線グラフをプロットする	plt.plot(xdata, ydata, linestyle='dashed', color='b')	plt.plot(xdata, ydata, linestyle='dashed', color='b')
code: リストxdataとリストydataの青色の破線グラフをプロットする	plt.plot(xdata, ydata, linestyle='dashed', color='b')	plt.plot(xdata, ydata, linestyle='dashed', color='b')
code: 数列xdataとデータ列ydataの破線を描画して、色を青色にする	plt.plot(xdata, ydata, linestyle='dashed', color='b')	plt.plot(xdata, ydata, linestyle='dashed', color='b')
code: イテラブルxdataとイテラブルydataについて破線グラフを描画して、色を青色に設定する	plt.plot(xdata, ydata, linestyle='dashed', color='b')	plt.plot(xdata, ydata, linestyle='dashed', color='b')
code: 青色の一点鎖線をプロットする	plt.plot(xdata, ydata, linestyle='dashbot', color='b')	plt.plot(xdata, ydata, linestyle='dashbot', color='b')
code: 一点鎖線グラフの色を青色に指定する	plt.plot(xdata, ydata, linestyle='dashbot', color='b')	plt.plot(xdata, ydata, linestyle='dashbot', color='b')
code: 一点鎖線グラフの色を青にする	plt.plot(xdata, ydata, linestyle='dashbot', color='b')	plt.plot(xdata, ydata, linestyle='dashbot', color='b')
code: 数列xdataと数列ydataの青色の一点鎖線を描く	plt.plot(xdata, ydata, linestyle='dashbot', color='b')	plt.plot(xdata, ydata, linestyle='dashbot', color='b')
code: 数列xdataとリストydataの青い一点鎖線をプロットする	plt.plot(xdata, ydata, linestyle='dashbot', color='b')	plt.plot(xdata, ydata, linestyle='dashbot', color='b')
code: リストxdataとリストydataについて一点鎖線を描画して、その色を青にする	plt.plot(xdata, ydata, linestyle='dashbot', color='b')	plt.plot(xdata, ydata, linestyle='dashbot', color='b')
code: イテラブルxdataと配列ydataの一点鎖線グラフを描画して、色を青くする	plt.plot(xdata, ydata, linestyle='dashbot', color='b')	plt.plot(xdata, ydata, linestyle='dashbot', color='b')
code: 青色の点線グラフをプロットする	plt.plot(xdata, ydata, linestyle='dotted', color='b')	plt.plot(xdata, ydata, linestyle='dotted', color='b')
code: 点線グラフの色を青にする	plt.plot(xdata, ydata, linestyle='dotted', color='b')	plt.plot(xdata, ydata, linestyle='dotted', color='b')
code: 点線グラフの色を青色に設定する	plt.plot(xdata, ydata, linestyle='dotted', color='b')	plt.plot(xdata, ydata, linestyle='dotted', color='b')
code: イテラブルxdataとイテラブルydataについて青い点線を描画する	plt.plot(xdata, ydata, linestyle='dotted', color='b')	plt.plot(xdata, ydata, linestyle='dotted', color='b')
code: 数列xdataとリストydataについて青い点線グラフを描く	plt.plot(xdata, ydata, linestyle='dotted', color='b')	plt.plot(xdata, ydata, linestyle='dotted', color='b')
code: 数列xdataと配列ydataについて点線グラフを描画して色を青色にセットする	plt.plot(xdata, ydata, linestyle='dotted', color='b')	plt.plot(xdata, ydata, linestyle='dotted', color='b')
code: データ列xdataと配列ydataの点線グラフを描画して色を青色変える	plt.plot(xdata, ydata, linestyle='dotted', color='b')	plt.plot(xdata, ydata, linestyle='dotted', color='b')
code: 青色の実線グラフをプロットする	plt.plot(xdata, ydata, linestyle='solid', color='b')	plt.plot(xdata, ydata, linestyle='solid', color='b')
code: 実線グラフの色を青にする	plt.plot(xdata, ydata, linestyle='solid', color='b')	plt.plot(xdata, ydata, linestyle='solid', color='b')
code: 実線グラフの色を青くする	plt.plot(xdata, ydata, linestyle='solid', color='b')	plt.plot(xdata, ydata, linestyle='solid', color='b')
code: 数列xdataと配列ydataの青い実線を描く	plt.plot(xdata, ydata, linestyle='solid', color='b')	plt.plot(xdata, ydata, linestyle='solid', color='b')
code: イテラブルxdataとデータ列ydataについて青色の実線を描画する	plt.plot(xdata, ydata, linestyle='solid', color='b')	plt.plot(xdata, ydata, linestyle='solid', color='b')
code: データ列xdataとイテラブルydataの実線を描画して、色を青色に変更する	plt.plot(xdata, ydata, linestyle='solid', color='b')	plt.plot(xdata, ydata, linestyle='solid', color='b')
code: リストxdataとリストydataについて実線を描画して、色を青くする	plt.plot(xdata, ydata, linestyle='solid', color='b')	plt.plot(xdata, ydata, linestyle='solid', color='b')
code: 黒い破線グラフを描く	plt.plot(xdata, ydata, linestyle='dashed', color='k')	plt.plot(xdata, ydata, linestyle='dashed', color='k')
code: 破線グラフの色を黒色に設定する	plt.plot(xdata, ydata, linestyle='dashed', color='k')	plt.plot(xdata, ydata, linestyle='dashed', color='k')
code: 破線の色を黒にする	plt.plot(xdata, ydata, linestyle='dashed', color='k')	plt.plot(xdata, ydata, linestyle='dashed', color='k')
code: 配列xdataと数列ydataの黒い破線を描く	plt.plot(xdata, ydata, linestyle='dashed', color='k')	plt.plot(xdata, ydata, linestyle='dashed', color='k')
code: イテラブルxdataとデータ列ydataの黒い破線を描く	plt.plot(xdata, ydata, linestyle='dashed', color='k')	plt.plot(xdata, ydata, linestyle='dashed', color='k')
code: 数列xdataとリストydataの破線グラフを描画して色を黒くする	plt.plot(xdata, ydata, linestyle='dashed', color='k')	plt.plot(xdata, ydata, linestyle='dashed', color='k')
code: データ列xdataとイテラブルydataについて破線を描画して、色を黒にする	plt.plot(xdata, ydata, linestyle='dashed', color='k')	plt.plot(xdata, ydata, linestyle='dashed', color='k')
code: 黒色の一点鎖線を描く	plt.plot(xdata, ydata, linestyle='dashbot', color='k')	plt.plot(xdata, ydata, linestyle='dashbot', color='k')
code: 一点鎖線の色を黒にする	plt.plot(xdata, ydata, linestyle='dashbot', color='k')	plt.plot(xdata, ydata, linestyle='dashbot', color='k')
code: 一点鎖線グラフの色を黒にする	plt.plot(xdata, ydata, linestyle='dashbot', color='k')	plt.plot(xdata, ydata, linestyle='dashbot', color='k')
code: イテラブルxdataとリストydataの黒い一点鎖線グラフを描く	plt.plot(xdata, ydata, linestyle='dashbot', color='k')	plt.plot(xdata, ydata, linestyle='dashbot', color='k')
code: イテラブルxdataとリストydataについて黒い一点鎖線グラフを描く	plt.plot(xdata, ydata, linestyle='dashbot', color='k')	plt.plot(xdata, ydata, linestyle='dashbot', color='k')
code: 数列xdataと数列ydataの一点鎖線を描画して色を黒にする	plt.plot(xdata, ydata, linestyle='dashbot', color='k')	plt.plot(xdata, ydata, linestyle='dashbot', color='k')
code: データ列xdataと配列ydataについて一点鎖線グラフを描画して、その色を黒くする	plt.plot(xdata, ydata, linestyle='dashbot', color='k')	plt.plot(xdata, ydata, linestyle='dashbot', color='k')
code: 黒い点線グラフを描く	plt.plot(xdata, ydata, linestyle='dotted', color='k')	plt.plot(xdata, ydata, linestyle='dotted', color='k')
code: 点線の色を黒にする	plt.plot(xdata, ydata, linestyle='dotted', color='k')	plt.plot(xdata, ydata, linestyle='dotted', color='k')
code: 点線の色を黒色に変更する	plt.plot(xdata, ydata, linestyle='dotted', color='k')	plt.plot(xdata, ydata, linestyle='dotted', color='k')
code: 数列xdataと数列ydataの黒色の点線グラフを描く	plt.plot(xdata, ydata, linestyle='dotted', color='k')	plt.plot(xdata, ydata, linestyle='dotted', color='k')
code: 数列xdataとイテラブルydataの黒い点線をプロットする	plt.plot(xdata, ydata, linestyle='dotted', color='k')	plt.plot(xdata, ydata, linestyle='dotted', color='k')
code: 数列xdataとデータ列ydataについて点線グラフを描画して、色を黒くする	plt.plot(xdata, ydata, linestyle='dotted', color='k')	plt.plot(xdata, ydata, linestyle='dotted', color='k')
code: 数列xdataとイテラブルydataの点線を描画してその色を黒にする	plt.plot(xdata, ydata, linestyle='dotted', color='k')	plt.plot(xdata, ydata, linestyle='dotted', color='k')
code: 黒い実線グラフを描く	plt.plot(xdata, ydata, linestyle='solid', color='k')	plt.plot(xdata, ydata, linestyle='solid', color='k')
code: 実線グラフの色を黒にする	plt.plot(xdata, ydata, linestyle='solid', color='k')	plt.plot(xdata, ydata, linestyle='solid', color='k')
code: 実線グラフの色を黒くする	plt.plot(xdata, ydata, linestyle='solid', color='k')	plt.plot(xdata, ydata, linestyle='solid', color='k')
code: データ列xdataとイテラブルydataについて黒色の実線グラフを描く	plt.plot(xdata, ydata, linestyle='solid', color='k')	plt.plot(xdata, ydata, linestyle='solid', color='k')
code: データ列xdataとデータ列ydataの黒色の実線を描く	plt.plot(xdata, ydata, linestyle='solid', color='k')	plt.plot(xdata, ydata, linestyle='solid', color='k')
code: 配列xdataとリストydataについて実線グラフを描画してその色を黒にする	plt.plot(xdata, ydata, linestyle='solid', color='k')	plt.plot(xdata, ydata, linestyle='solid', color='k')
code: 配列xdataとデータ列ydataの実線グラフを描画して色を黒にする	plt.plot(xdata, ydata, linestyle='solid', color='k')	plt.plot(xdata, ydata, linestyle='solid', color='k')
code: 折れ線グラフにポイント印を使う	plt.plot(xdata, ydata, marker='.')	plt.plot(xdata, ydata, marker='.')
code: 折れ線の印をポイントに設定する	plt.plot(xdata, ydata, marker='.')	plt.plot(xdata, ydata, marker='.')
code: 折れ線の印をポイントとする	plt.plot(xdata, ydata, marker='.')	plt.plot(xdata, ydata, marker='.')
code: 配列xdataとイテラブルydataの折れ線を描画して印をポイントに指定する	plt.plot(xdata, ydata, marker='.')	plt.plot(xdata, ydata, marker='.')
code: リストxdataとイテラブルydataの折れ線を描画して、印をポイントに設定する	plt.plot(xdata, ydata, marker='.')	plt.plot(xdata, ydata, marker='.')
code: リストxdataと数列ydataの折れ線グラフにポイントマーカーを描く	plt.plot(xdata, ydata, marker='.')	plt.plot(xdata, ydata, marker='.')
code: リストxdataとリストydataの折れ線グラフにポイント印を描画する	plt.plot(xdata, ydata, marker='.')	plt.plot(xdata, ydata, marker='.')
code: 折れ線に丸印を用いる	plt.plot(xdata, ydata, marker='o')	plt.plot(xdata, ydata, marker='o')
code: 折れ線グラフのマーカーを丸に指定する	plt.plot(xdata, ydata, marker='o')	plt.plot(xdata, ydata, marker='o')
code: 折れ線のマーカーを丸変える	plt.plot(xdata, ydata, marker='o')	plt.plot(xdata, ydata, marker='o')
code: リストxdataとデータ列ydataの折れ線を描画して印を丸に設定する	plt.plot(xdata, ydata, marker='o')	plt.plot(xdata, ydata, marker='o')
code: データ列xdataとリストydataの折れ線を描画して印を丸に変更する	plt.plot(xdata, ydata, marker='o')	plt.plot(xdata, ydata, marker='o')
code: 配列xdataと数列ydataの折れ線に丸マーカーを描く	plt.plot(xdata, ydata, marker='o')	plt.plot(xdata, ydata, marker='o')
code: 数列xdataとリストydataの折れ線グラフに丸マーカーを描画する	plt.plot(xdata, ydata, marker='o')	plt.plot(xdata, ydata, marker='o')
code: 折れ線に△印を用いる	plt.plot(xdata, ydata, marker='^')	plt.plot(xdata, ydata, marker='^')
code: 折れ線グラフに△印を用いる	plt.plot(xdata, ydata, marker='^')	plt.plot(xdata, ydata, marker='^')
code: 折れ線の印を上三角変える	plt.plot(xdata, ydata, marker='^')	plt.plot(xdata, ydata, marker='^')
code: 折れ線のマーカーを▲に指定する	plt.plot(xdata, ydata, marker='^')	plt.plot(xdata, ydata, marker='^')
code: 数列xdataとデータ列ydataの折れ線グラフを描画してマーカーを▲にする	plt.plot(xdata, ydata, marker='^')	plt.plot(xdata, ydata, marker='^')
code: 配列xdataとリストydataの折れ線グラフを描画して、マーカーを▲に設定する	plt.plot(xdata, ydata, marker='^')	plt.plot(xdata, ydata, marker='^')
code: データ列xdataと数列ydataの折れ線に上三角印を描画する	plt.plot(xdata, ydata, marker='^')	plt.plot(xdata, ydata, marker='^')
code: イテラブルxdataとリストydataの折れ線グラフに三角印を描画する	plt.plot(xdata, ydata, marker='^')	plt.plot(xdata, ydata, marker='^')
code: 折れ線に▼印を用いる	plt.plot(xdata, ydata, marker='v')	plt.plot(xdata, ydata, marker='v')
code: 折れ線グラフに▽マーカーを使用する	plt.plot(xdata, ydata, marker='v')	plt.plot(xdata, ydata, marker='v')
code: 折れ線グラフの印を▽変える	plt.plot(xdata, ydata, marker='v')	plt.plot(xdata, ydata, marker='v')
code: 折れ線の印を▽に変更する	plt.plot(xdata, ydata, marker='v')	plt.plot(xdata, ydata, marker='v')
code: リストxdataとイテラブルydataの折れ線を描画して印を▼変える	plt.plot(xdata, ydata, marker='v')	plt.plot(xdata, ydata, marker='v')
code: イテラブルxdataと配列ydataの折れ線を描画して印を▽に指定する	plt.plot(xdata, ydata, marker='v')	plt.plot(xdata, ydata, marker='v')
code: イテラブルxdataと数列ydataの折れ線グラフに▼マーカーを描画する	plt.plot(xdata, ydata, marker='v')	plt.plot(xdata, ydata, marker='v')
code: リストxdataとイテラブルydataの折れ線グラフに▼印をプロットする	plt.plot(xdata, ydata, marker='v')	plt.plot(xdata, ydata, marker='v')
code: 折れ線グラフに左三角印を使う	plt.plot(xdata, ydata, marker='<')	plt.plot(xdata, ydata, marker='<')
code: 折れ線のマーカーを左三角に設定する	plt.plot(xdata, ydata, marker='<')	plt.plot(xdata, ydata, marker='<')
code: 折れ線グラフのマーカーを左三角に設定する	plt.plot(xdata, ydata, marker='<')	plt.plot(xdata, ydata, marker='<')
code: 数列xdataとデータ列ydataの折れ線グラフを描画して、マーカーを左三角に変更する	plt.plot(xdata, ydata, marker='<')	plt.plot(xdata, ydata, marker='<')
code: 数列xdataとリストydataの折れ線グラフを描画してマーカーを左三角とする	plt.plot(xdata, ydata, marker='<')	plt.plot(xdata, ydata, marker='<')
code: 配列xdataとイテラブルydataの折れ線に左三角マーカーを描画する	plt.plot(xdata, ydata, marker='<')	plt.plot(xdata, ydata, marker='<')
code: 数列xdataとイテラブルydataの折れ線に左三角印をプロットする	plt.plot(xdata, ydata, marker='<')	plt.plot(xdata, ydata, marker='<')
code: 折れ線に右三角マーカーを使用する	plt.plot(xdata, ydata, marker='>')	plt.plot(xdata, ydata, marker='>')
code: 折れ線の印を右三角に変更する	plt.plot(xdata, ydata, marker='>')	plt.plot(xdata, ydata, marker='>')
code: 折れ線のマーカーを右三角に変更する	plt.plot(xdata, ydata, marker='>')	plt.plot(xdata, ydata, marker='>')
code: リストxdataとリストydataの折れ線を描画して、マーカーを右三角に変更する	plt.plot(xdata, ydata, marker='>')	plt.plot(xdata, ydata, marker='>')
code: 数列xdataとリストydataの折れ線グラフを描画して、印を右三角に変更する	plt.plot(xdata, ydata, marker='>')	plt.plot(xdata, ydata, marker='>')
code: データ列xdataとリストydataの折れ線グラフに右三角印を描画する	plt.plot(xdata, ydata, marker='>')	plt.plot(xdata, ydata, marker='>')
code: 数列xdataとデータ列ydataの折れ線グラフに右三角印をプロットする	plt.plot(xdata, ydata, marker='>')	plt.plot(xdata, ydata, marker='>')
code: 折れ線にクロス印を使用する	plt.plot(xdata, ydata, marker='x')	plt.plot(xdata, ydata, marker='x')
code: 折れ線にバツ印を使用する	plt.plot(xdata, ydata, marker='x')	plt.plot(xdata, ydata, marker='x')
code: 折れ線の印をクロスとする	plt.plot(xdata, ydata, marker='x')	plt.plot(xdata, ydata, marker='x')
code: 折れ線グラフのマーカーをクロス変える	plt.plot(xdata, ydata, marker='x')	plt.plot(xdata, ydata, marker='x')
code: リストxdataとデータ列ydataの折れ線グラフを描画して、印をクロスにする	plt.plot(xdata, ydata, marker='x')	plt.plot(xdata, ydata, marker='x')
code: リストxdataと数列ydataの折れ線グラフを描画して、印をクロスに設定する	plt.plot(xdata, ydata, marker='x')	plt.plot(xdata, ydata, marker='x')
code: イテラブルxdataとデータ列ydataの折れ線グラフにバツ印を描く	plt.plot(xdata, ydata, marker='x')	plt.plot(xdata, ydata, marker='x')
code: リストxdataとデータ列ydataの折れ線にクロス印を描画する	plt.plot(xdata, ydata, marker='x')	plt.plot(xdata, ydata, marker='x')
code: 折れ線グラフに大バツマーカーを使う	plt.plot(xdata, ydata, marker='X')	plt.plot(xdata, ydata, marker='X')
code: 折れ線グラフの印を大バツに変更する	plt.plot(xdata, ydata, marker='X')	plt.plot(xdata, ydata, marker='X')
code: 折れ線グラフのマーカーを大バツにする	plt.plot(xdata, ydata, marker='X')	plt.plot(xdata, ydata, marker='X')
code: 配列xdataとデータ列ydataの折れ線グラフを描画して印を大バツに設定する	plt.plot(xdata, ydata, marker='X')	plt.plot(xdata, ydata, marker='X')
code: データ列xdataとリストydataの折れ線グラフを描画して印を大バツに変更する	plt.plot(xdata, ydata, marker='X')	plt.plot(xdata, ydata, marker='X')
code: リストxdataと数列ydataの折れ線に大バツ印を描画する	plt.plot(xdata, ydata, marker='X')	plt.plot(xdata, ydata, marker='X')
code: リストxdataとイテラブルydataの折れ線に大バツ印を描画する	plt.plot(xdata, ydata, marker='X')	plt.plot(xdata, ydata, marker='X')
code: 折れ線に四角印を使う	plt.plot(xdata, ydata, marker='s')	plt.plot(xdata, ydata, marker='s')
code: 折れ線の印を四角に変更する	plt.plot(xdata, ydata, marker='s')	plt.plot(xdata, ydata, marker='s')
code: 折れ線グラフのマーカーを四角にする	plt.plot(xdata, ydata, marker='s')	plt.plot(xdata, ydata, marker='s')
code: 配列xdataとデータ列ydataの折れ線を描画してマーカーを四角とする	plt.plot(xdata, ydata, marker='s')	plt.plot(xdata, ydata, marker='s')
code: イテラブルxdataとデータ列ydataの折れ線を描画して印を四角とする	plt.plot(xdata, ydata, marker='s')	plt.plot(xdata, ydata, marker='s')
code: 数列xdataとデータ列ydataの折れ線グラフに四角印を描く	plt.plot(xdata, ydata, marker='s')	plt.plot(xdata, ydata, marker='s')
code: 数列xdataとイテラブルydataの折れ線グラフに四角マーカーをプロットする	plt.plot(xdata, ydata, marker='s')	plt.plot(xdata, ydata, marker='s')
code: 折れ線にダイアモンド印を使う	plt.plot(xdata, ydata, marker='D')	plt.plot(xdata, ydata, marker='D')
code: 折れ線に菱形印を使う	plt.plot(xdata, ydata, marker='D')	plt.plot(xdata, ydata, marker='D')
code: 折れ線の印をダイアモンドに設定する	plt.plot(xdata, ydata, marker='D')	plt.plot(xdata, ydata, marker='D')
code: 折れ線の印をダイアモンドに指定する	plt.plot(xdata, ydata, marker='D')	plt.plot(xdata, ydata, marker='D')
code: 配列xdataとリストydataの折れ線グラフを描画して、マーカーをダイアモンドに設定する	plt.plot(xdata, ydata, marker='D')	plt.plot(xdata, ydata, marker='D')
code: データ列xdataと数列ydataの折れ線グラフを描画して、印をダイアモンドとする	plt.plot(xdata, ydata, marker='D')	plt.plot(xdata, ydata, marker='D')
code: 配列xdataとイテラブルydataの折れ線グラフにダイアモンド印を描く	plt.plot(xdata, ydata, marker='D')	plt.plot(xdata, ydata, marker='D')
code: リストxdataとイテラブルydataの折れ線グラフに菱形印をプロットする	plt.plot(xdata, ydata, marker='D')	plt.plot(xdata, ydata, marker='D')
code: 折れ線に星印を使用する	plt.plot(xdata, ydata, marker='*')	plt.plot(xdata, ydata, marker='*')
code: 折れ線の印を星に指定する	plt.plot(xdata, ydata, marker='*')	plt.plot(xdata, ydata, marker='*')
code: 折れ線グラフの印を星に設定する	plt.plot(xdata, ydata, marker='*')	plt.plot(xdata, ydata, marker='*')
code: リストxdataと配列ydataの折れ線を描画してマーカーを星に設定する	plt.plot(xdata, ydata, marker='*')	plt.plot(xdata, ydata, marker='*')
code: データ列xdataとリストydataの折れ線グラフを描画してマーカーを星にする	plt.plot(xdata, ydata, marker='*')	plt.plot(xdata, ydata, marker='*')
code: 配列xdataとデータ列ydataの折れ線グラフに星マーカーを描画する	plt.plot(xdata, ydata, marker='*')	plt.plot(xdata, ydata, marker='*')
code: 配列xdataと数列ydataの折れ線に星マーカーを描画する	plt.plot(xdata, ydata, marker='*')	plt.plot(xdata, ydata, marker='*')
code: イテラブルxdataと数列ydataの折れ線グラフに、赤いポイント印を描く	plt.plot(xdata, ydata, marker='.', markerfacecolor='r')	plt.plot(xdata, ydata, marker='.', markerfacecolor='r')
code: 配列xdataとデータ列ydataの折れ線グラフに、赤色のポイント印を描く	plt.plot(xdata, ydata, marker='.', markerfacecolor='r')	plt.plot(xdata, ydata, marker='.', markerfacecolor='r')
code: 折れ線グラフのポイント印を赤色にする	plt.plot(xdata, ydata, marker='.', markerfacecolor='r')	plt.plot(xdata, ydata, marker='.', markerfacecolor='r')
code: イテラブルxdataとリストydataの折れ線グラフに、赤い丸印を描く	plt.plot(xdata, ydata, marker='o', markerfacecolor='r')	plt.plot(xdata, ydata, marker='o', markerfacecolor='r')
code: 数列xdataとイテラブルydataの折れ線グラフに赤色の丸マーカーを描画する	plt.plot(xdata, ydata, marker='o', markerfacecolor='r')	plt.plot(xdata, ydata, marker='o', markerfacecolor='r')
code: 折れ線の丸印を赤くする	plt.plot(xdata, ydata, marker='o', markerfacecolor='r')	plt.plot(xdata, ydata, marker='o', markerfacecolor='r')
code: リストxdataと数列ydataの折れ線グラフに赤色の▲マーカーをプロットする	plt.plot(xdata, ydata, marker='^', markerfacecolor='r')	plt.plot(xdata, ydata, marker='^', markerfacecolor='r')
code: リストxdataとリストydataの折れ線に、赤色の▲マーカーをプロットする	plt.plot(xdata, ydata, marker='^', markerfacecolor='r')	plt.plot(xdata, ydata, marker='^', markerfacecolor='r')
code: 折れ線グラフの三角マーカーを赤くする	plt.plot(xdata, ydata, marker='^', markerfacecolor='r')	plt.plot(xdata, ydata, marker='^', markerfacecolor='r')
code: 折れ線の上三角印を赤色にする	plt.plot(xdata, ydata, marker='^', markerfacecolor='r')	plt.plot(xdata, ydata, marker='^', markerfacecolor='r')
code: 配列xdataとリストydataの折れ線グラフに、赤色の▽印を描画する	plt.plot(xdata, ydata, marker='v', markerfacecolor='r')	plt.plot(xdata, ydata, marker='v', markerfacecolor='r')
code: 数列xdataとイテラブルydataの折れ線グラフに赤色の▽印をプロットする	plt.plot(xdata, ydata, marker='v', markerfacecolor='r')	plt.plot(xdata, ydata, marker='v', markerfacecolor='r')
code: 折れ線グラフの下三角マーカーを赤色にする	plt.plot(xdata, ydata, marker='v', markerfacecolor='r')	plt.plot(xdata, ydata, marker='v', markerfacecolor='r')
code: 折れ線の下三角印を赤色にする	plt.plot(xdata, ydata, marker='v', markerfacecolor='r')	plt.plot(xdata, ydata, marker='v', markerfacecolor='r')
code: 数列xdataとデータ列ydataの折れ線に、赤い左三角マーカーをプロットする	plt.plot(xdata, ydata, marker='<', markerfacecolor='r')	plt.plot(xdata, ydata, marker='<', markerfacecolor='r')
code: 配列xdataと数列ydataの折れ線グラフに、赤色の左三角マーカーをプロットする	plt.plot(xdata, ydata, marker='<', markerfacecolor='r')	plt.plot(xdata, ydata, marker='<', markerfacecolor='r')
code: 折れ線の左三角印を赤くする	plt.plot(xdata, ydata, marker='<', markerfacecolor='r')	plt.plot(xdata, ydata, marker='<', markerfacecolor='r')
code: イテラブルxdataと配列ydataの折れ線グラフに、赤い右三角印を描く	plt.plot(xdata, ydata, marker='>', markerfacecolor='r')	plt.plot(xdata, ydata, marker='>', markerfacecolor='r')
code: 配列xdataと数列ydataの折れ線に、赤色の右三角印をプロットする	plt.plot(xdata, ydata, marker='>', markerfacecolor='r')	plt.plot(xdata, ydata, marker='>', markerfacecolor='r')
code: 折れ線の右三角マーカーを赤くする	plt.plot(xdata, ydata, marker='>', markerfacecolor='r')	plt.plot(xdata, ydata, marker='>', markerfacecolor='r')
code: データ列xdataと数列ydataの折れ線に赤いバツマーカーを描画する	plt.plot(xdata, ydata, marker='x', markerfacecolor='r')	plt.plot(xdata, ydata, marker='x', markerfacecolor='r')
code: イテラブルxdataと配列ydataの折れ線に、赤色のクロス印をプロットする	plt.plot(xdata, ydata, marker='x', markerfacecolor='r')	plt.plot(xdata, ydata, marker='x', markerfacecolor='r')
code: 折れ線グラフのクロス印を赤くする	plt.plot(xdata, ydata, marker='x', markerfacecolor='r')	plt.plot(xdata, ydata, marker='x', markerfacecolor='r')
code: 折れ線グラフのクロスマーカーを赤くする	plt.plot(xdata, ydata, marker='x', markerfacecolor='r')	plt.plot(xdata, ydata, marker='x', markerfacecolor='r')
code: リストxdataと数列ydataの折れ線グラフに赤色の大バツマーカーを描画する	plt.plot(xdata, ydata, marker='X', markerfacecolor='r')	plt.plot(xdata, ydata, marker='X', markerfacecolor='r')
code: 配列xdataと数列ydataの折れ線グラフに赤色の大バツマーカーを描画する	plt.plot(xdata, ydata, marker='X', markerfacecolor='r')	plt.plot(xdata, ydata, marker='X', markerfacecolor='r')
code: 折れ線の大バツ印を赤色にする	plt.plot(xdata, ydata, marker='X', markerfacecolor='r')	plt.plot(xdata, ydata, marker='X', markerfacecolor='r')
code: リストxdataとイテラブルydataの折れ線グラフに、赤い四角マーカーを描画する	plt.plot(xdata, ydata, marker='s', markerfacecolor='r')	plt.plot(xdata, ydata, marker='s', markerfacecolor='r')
code: データ列xdataとデータ列ydataの折れ線に、赤い四角印を描画する	plt.plot(xdata, ydata, marker='s', markerfacecolor='r')	plt.plot(xdata, ydata, marker='s', markerfacecolor='r')
code: 折れ線グラフの四角印を赤くする	plt.plot(xdata, ydata, marker='s', markerfacecolor='r')	plt.plot(xdata, ydata, marker='s', markerfacecolor='r')
code: 配列xdataと配列ydataの折れ線に赤色のダイアモンドマーカーを描画する	plt.plot(xdata, ydata, marker='D', markerfacecolor='r')	plt.plot(xdata, ydata, marker='D', markerfacecolor='r')
code: リストxdataとデータ列ydataの折れ線グラフに赤色のダイアモンドマーカーを描画する	plt.plot(xdata, ydata, marker='D', markerfacecolor='r')	plt.plot(xdata, ydata, marker='D', markerfacecolor='r')
code: 折れ線のダイアモンドマーカーを赤くする	plt.plot(xdata, ydata, marker='D', markerfacecolor='r')	plt.plot(xdata, ydata, marker='D', markerfacecolor='r')
code: 折れ線のダイアモンド印を赤色にする	plt.plot(xdata, ydata, marker='D', markerfacecolor='r')	plt.plot(xdata, ydata, marker='D', markerfacecolor='r')
code: 配列xdataとイテラブルydataの折れ線に赤い星印をプロットする	plt.plot(xdata, ydata, marker='*', markerfacecolor='r')	plt.plot(xdata, ydata, marker='*', markerfacecolor='r')
code: リストxdataとイテラブルydataの折れ線に、赤い星印をプロットする	plt.plot(xdata, ydata, marker='*', markerfacecolor='r')	plt.plot(xdata, ydata, marker='*', markerfacecolor='r')
code: 折れ線の星印を赤色にする	plt.plot(xdata, ydata, marker='*', markerfacecolor='r')	plt.plot(xdata, ydata, marker='*', markerfacecolor='r')
code: データ列xdataとイテラブルydataの折れ線グラフに青いポイントマーカーを描画する	plt.plot(xdata, ydata, marker='.', markerfacecolor='b')	plt.plot(xdata, ydata, marker='.', markerfacecolor='b')
code: 数列xdataと配列ydataの折れ線グラフに、青色のポイントマーカーをプロットする	plt.plot(xdata, ydata, marker='.', markerfacecolor='b')	plt.plot(xdata, ydata, marker='.', markerfacecolor='b')
code: 折れ線のポイントマーカーを青くする	plt.plot(xdata, ydata, marker='.', markerfacecolor='b')	plt.plot(xdata, ydata, marker='.', markerfacecolor='b')
code: 折れ線のポイントマーカーを青色にする	plt.plot(xdata, ydata, marker='.', markerfacecolor='b')	plt.plot(xdata, ydata, marker='.', markerfacecolor='b')
code: 数列xdataと配列ydataの折れ線に青い丸印を描画する	plt.plot(xdata, ydata, marker='o', markerfacecolor='b')	plt.plot(xdata, ydata, marker='o', markerfacecolor='b')
code: イテラブルxdataとイテラブルydataの折れ線グラフに青色の丸マーカーをプロットする	plt.plot(xdata, ydata, marker='o', markerfacecolor='b')	plt.plot(xdata, ydata, marker='o', markerfacecolor='b')
code: 折れ線グラフの丸印を青くする	plt.plot(xdata, ydata, marker='o', markerfacecolor='b')	plt.plot(xdata, ydata, marker='o', markerfacecolor='b')
code: 折れ線の丸マーカーを青くする	plt.plot(xdata, ydata, marker='o', markerfacecolor='b')	plt.plot(xdata, ydata, marker='o', markerfacecolor='b')
code: リストxdataと数列ydataの折れ線に青色の△印を描画する	plt.plot(xdata, ydata, marker='^', markerfacecolor='b')	plt.plot(xdata, ydata, marker='^', markerfacecolor='b')
code: イテラブルxdataとイテラブルydataの折れ線に、青い▲印をプロットする	plt.plot(xdata, ydata, marker='^', markerfacecolor='b')	plt.plot(xdata, ydata, marker='^', markerfacecolor='b')
code: 折れ線グラフの▲印を青くする	plt.plot(xdata, ydata, marker='^', markerfacecolor='b')	plt.plot(xdata, ydata, marker='^', markerfacecolor='b')
code: 折れ線グラフの▲印を青色に指定する	plt.plot(xdata, ydata, marker='^', markerfacecolor='b')	plt.plot(xdata, ydata, marker='^', markerfacecolor='b')
code: リストxdataとイテラブルydataの折れ線グラフに、青色の▼印を描く	plt.plot(xdata, ydata, marker='v', markerfacecolor='b')	plt.plot(xdata, ydata, marker='v', markerfacecolor='b')
code: 配列xdataと数列ydataの折れ線グラフに青色の下三角印を描く	plt.plot(xdata, ydata, marker='v', markerfacecolor='b')	plt.plot(xdata, ydata, marker='v', markerfacecolor='b')
code: 折れ線の下三角マーカーを青色とする	plt.plot(xdata, ydata, marker='v', markerfacecolor='b')	plt.plot(xdata, ydata, marker='v', markerfacecolor='b')
code: 折れ線の▼印を青色に変更する	plt.plot(xdata, ydata, marker='v', markerfacecolor='b')	plt.plot(xdata, ydata, marker='v', markerfacecolor='b')
code: 配列xdataとイテラブルydataの折れ線グラフに、青色の左三角マーカーを描画する	plt.plot(xdata, ydata, marker='<', markerfacecolor='b')	plt.plot(xdata, ydata, marker='<', markerfacecolor='b')
code: データ列xdataとデータ列ydataの折れ線に、青い左三角マーカーを描く	plt.plot(xdata, ydata, marker='<', markerfacecolor='b')	plt.plot(xdata, ydata, marker='<', markerfacecolor='b')
code: 折れ線の左三角印を青くする	plt.plot(xdata, ydata, marker='<', markerfacecolor='b')	plt.plot(xdata, ydata, marker='<', markerfacecolor='b')
code: 折れ線グラフの左三角印を青くする	plt.plot(xdata, ydata, marker='<', markerfacecolor='b')	plt.plot(xdata, ydata, marker='<', markerfacecolor='b')
code: イテラブルxdataと配列ydataの折れ線に青い右三角印をプロットする	plt.plot(xdata, ydata, marker='>', markerfacecolor='b')	plt.plot(xdata, ydata, marker='>', markerfacecolor='b')
code: 数列xdataと数列ydataの折れ線グラフに青い右三角マーカーを描く	plt.plot(xdata, ydata, marker='>', markerfacecolor='b')	plt.plot(xdata, ydata, marker='>', markerfacecolor='b')
code: 折れ線の右三角印を青色変える	plt.plot(xdata, ydata, marker='>', markerfacecolor='b')	plt.plot(xdata, ydata, marker='>', markerfacecolor='b')
code: 折れ線の右三角マーカーを青くする	plt.plot(xdata, ydata, marker='>', markerfacecolor='b')	plt.plot(xdata, ydata, marker='>', markerfacecolor='b')
code: 数列xdataとリストydataの折れ線グラフに、青色のクロス印を描く	plt.plot(xdata, ydata, marker='x', markerfacecolor='b')	plt.plot(xdata, ydata, marker='x', markerfacecolor='b')
code: リストxdataとデータ列ydataの折れ線グラフに、青いクロスマーカーをプロットする	plt.plot(xdata, ydata, marker='x', markerfacecolor='b')	plt.plot(xdata, ydata, marker='x', markerfacecolor='b')
code: 折れ線のバツマーカーを青くする	plt.plot(xdata, ydata, marker='x', markerfacecolor='b')	plt.plot(xdata, ydata, marker='x', markerfacecolor='b')
code: 折れ線のクロスマーカーを青色にセットする	plt.plot(xdata, ydata, marker='x', markerfacecolor='b')	plt.plot(xdata, ydata, marker='x', markerfacecolor='b')
code: データ列xdataとデータ列ydataの折れ線に青い大バツマーカーを描画する	plt.plot(xdata, ydata, marker='X', markerfacecolor='b')	plt.plot(xdata, ydata, marker='X', markerfacecolor='b')
code: イテラブルxdataとリストydataの折れ線に青色の大バツ印を描画する	plt.plot(xdata, ydata, marker='X', markerfacecolor='b')	plt.plot(xdata, ydata, marker='X', markerfacecolor='b')
code: 折れ線グラフの大バツマーカーを青くする	plt.plot(xdata, ydata, marker='X', markerfacecolor='b')	plt.plot(xdata, ydata, marker='X', markerfacecolor='b')
code: 折れ線グラフの大バツマーカーを青色とする	plt.plot(xdata, ydata, marker='X', markerfacecolor='b')	plt.plot(xdata, ydata, marker='X', markerfacecolor='b')
code: イテラブルxdataとデータ列ydataの折れ線グラフに青い四角マーカーをプロットする	plt.plot(xdata, ydata, marker='s', markerfacecolor='b')	plt.plot(xdata, ydata, marker='s', markerfacecolor='b')
code: データ列xdataとイテラブルydataの折れ線グラフに、青色の四角マーカーを描画する	plt.plot(xdata, ydata, marker='s', markerfacecolor='b')	plt.plot(xdata, ydata, marker='s', markerfacecolor='b')
code: 折れ線グラフの四角印を青くする	plt.plot(xdata, ydata, marker='s', markerfacecolor='b')	plt.plot(xdata, ydata, marker='s', markerfacecolor='b')
code: 折れ線グラフの四角マーカーを青くする	plt.plot(xdata, ydata, marker='s', markerfacecolor='b')	plt.plot(xdata, ydata, marker='s', markerfacecolor='b')
code: リストxdataとデータ列ydataの折れ線に、青色のダイアモンドマーカーを描く	plt.plot(xdata, ydata, marker='D', markerfacecolor='b')	plt.plot(xdata, ydata, marker='D', markerfacecolor='b')
code: データ列xdataと配列ydataの折れ線グラフに、青いダイアモンド印を描く	plt.plot(xdata, ydata, marker='D', markerfacecolor='b')	plt.plot(xdata, ydata, marker='D', markerfacecolor='b')
code: 折れ線の菱形マーカーを青色に変更する	plt.plot(xdata, ydata, marker='D', markerfacecolor='b')	plt.plot(xdata, ydata, marker='D', markerfacecolor='b')
code: 折れ線の菱形印を青色とする	plt.plot(xdata, ydata, marker='D', markerfacecolor='b')	plt.plot(xdata, ydata, marker='D', markerfacecolor='b')
code: リストxdataとイテラブルydataの折れ線グラフに青い星印を描く	plt.plot(xdata, ydata, marker='*', markerfacecolor='b')	plt.plot(xdata, ydata, marker='*', markerfacecolor='b')
code: 配列xdataとデータ列ydataの折れ線グラフに青色の星マーカーをプロットする	plt.plot(xdata, ydata, marker='*', markerfacecolor='b')	plt.plot(xdata, ydata, marker='*', markerfacecolor='b')
code: 折れ線グラフの星印を青くする	plt.plot(xdata, ydata, marker='*', markerfacecolor='b')	plt.plot(xdata, ydata, marker='*', markerfacecolor='b')
code: 折れ線の星マーカーを青色とする	plt.plot(xdata, ydata, marker='*', markerfacecolor='b')	plt.plot(xdata, ydata, marker='*', markerfacecolor='b')
code: リストxdataと数列ydataの折れ線に黒色のポイント印を描画する	plt.plot(xdata, ydata, marker='.', markerfacecolor='k')	plt.plot(xdata, ydata, marker='.', markerfacecolor='k')
code: リストxdataと配列ydataの折れ線グラフに黒色のポイントマーカーをプロットする	plt.plot(xdata, ydata, marker='.', markerfacecolor='k')	plt.plot(xdata, ydata, marker='.', markerfacecolor='k')
code: 折れ線のポイント印を黒くする	plt.plot(xdata, ydata, marker='.', markerfacecolor='k')	plt.plot(xdata, ydata, marker='.', markerfacecolor='k')
code: 折れ線グラフのポイントマーカーを黒くする	plt.plot(xdata, ydata, marker='.', markerfacecolor='k')	plt.plot(xdata, ydata, marker='.', markerfacecolor='k')
code: 数列xdataと配列ydataの折れ線グラフに、黒い丸印を描画する	plt.plot(xdata, ydata, marker='o', markerfacecolor='k')	plt.plot(xdata, ydata, marker='o', markerfacecolor='k')
code: データ列xdataとデータ列ydataの折れ線グラフに、黒色の丸マーカーを描く	plt.plot(xdata, ydata, marker='o', markerfacecolor='k')	plt.plot(xdata, ydata, marker='o', markerfacecolor='k')
code: 折れ線の丸マーカーを黒色に設定する	plt.plot(xdata, ydata, marker='o', markerfacecolor='k')	plt.plot(xdata, ydata, marker='o', markerfacecolor='k')
code: 折れ線グラフの丸印を黒色にセットする	plt.plot(xdata, ydata, marker='o', markerfacecolor='k')	plt.plot(xdata, ydata, marker='o', markerfacecolor='k')
code: リストxdataとデータ列ydataの折れ線グラフに黒色の▲印をプロットする	plt.plot(xdata, ydata, marker='^', markerfacecolor='k')	plt.plot(xdata, ydata, marker='^', markerfacecolor='k')
code: 配列xdataとリストydataの折れ線グラフに、黒い▲印を描く	plt.plot(xdata, ydata, marker='^', markerfacecolor='k')	plt.plot(xdata, ydata, marker='^', markerfacecolor='k')
code: 折れ線グラフの▲印を黒色に設定する	plt.plot(xdata, ydata, marker='^', markerfacecolor='k')	plt.plot(xdata, ydata, marker='^', markerfacecolor='k')
code: 折れ線の三角印を黒くする	plt.plot(xdata, ydata, marker='^', markerfacecolor='k')	plt.plot(xdata, ydata, marker='^', markerfacecolor='k')
code: リストxdataとイテラブルydataの折れ線グラフに、黒色の▽マーカーを描く	plt.plot(xdata, ydata, marker='v', markerfacecolor='k')	plt.plot(xdata, ydata, marker='v', markerfacecolor='k')
code: イテラブルxdataとリストydataの折れ線グラフに黒い下三角マーカーを描く	plt.plot(xdata, ydata, marker='v', markerfacecolor='k')	plt.plot(xdata, ydata, marker='v', markerfacecolor='k')
code: 折れ線グラフの▽マーカーを黒くする	plt.plot(xdata, ydata, marker='v', markerfacecolor='k')	plt.plot(xdata, ydata, marker='v', markerfacecolor='k')
code: 折れ線の▽マーカーを黒くする	plt.plot(xdata, ydata, marker='v', markerfacecolor='k')	plt.plot(xdata, ydata, marker='v', markerfacecolor='k')
code: データ列xdataとデータ列ydataの折れ線グラフに、黒色の左三角マーカーを描く	plt.plot(xdata, ydata, marker='<', markerfacecolor='k')	plt.plot(xdata, ydata, marker='<', markerfacecolor='k')
code: リストxdataとリストydataの折れ線グラフに、黒色の左三角マーカーをプロットする	plt.plot(xdata, ydata, marker='<', markerfacecolor='k')	plt.plot(xdata, ydata, marker='<', markerfacecolor='k')
code: 折れ線の左三角マーカーを黒色に設定する	plt.plot(xdata, ydata, marker='<', markerfacecolor='k')	plt.plot(xdata, ydata, marker='<', markerfacecolor='k')
code: 折れ線グラフの左三角印を黒くする	plt.plot(xdata, ydata, marker='<', markerfacecolor='k')	plt.plot(xdata, ydata, marker='<', markerfacecolor='k')
code: イテラブルxdataとイテラブルydataの折れ線グラフに、黒色の右三角マーカーを描画する	plt.plot(xdata, ydata, marker='>', markerfacecolor='k')	plt.plot(xdata, ydata, marker='>', markerfacecolor='k')
code: リストxdataと配列ydataの折れ線に黒色の右三角マーカーをプロットする	plt.plot(xdata, ydata, marker='>', markerfacecolor='k')	plt.plot(xdata, ydata, marker='>', markerfacecolor='k')
code: 折れ線グラフの右三角印を黒くする	plt.plot(xdata, ydata, marker='>', markerfacecolor='k')	plt.plot(xdata, ydata, marker='>', markerfacecolor='k')
code: 折れ線グラフの右三角マーカーを黒色に指定する	plt.plot(xdata, ydata, marker='>', markerfacecolor='k')	plt.plot(xdata, ydata, marker='>', markerfacecolor='k')
code: 数列xdataと配列ydataの折れ線に黒色のクロスマーカーを描画する	plt.plot(xdata, ydata, marker='x', markerfacecolor='k')	plt.plot(xdata, ydata, marker='x', markerfacecolor='k')
code: イテラブルxdataと数列ydataの折れ線グラフに、黒色のバツマーカーをプロットする	plt.plot(xdata, ydata, marker='x', markerfacecolor='k')	plt.plot(xdata, ydata, marker='x', markerfacecolor='k')
code: 折れ線グラフのバツマーカーを黒くする	plt.plot(xdata, ydata, marker='x', markerfacecolor='k')	plt.plot(xdata, ydata, marker='x', markerfacecolor='k')
code: 折れ線グラフのクロスマーカーを黒くする	plt.plot(xdata, ydata, marker='x', markerfacecolor='k')	plt.plot(xdata, ydata, marker='x', markerfacecolor='k')
code: 配列xdataとデータ列ydataの折れ線に黒い大バツマーカーを描く	plt.plot(xdata, ydata, marker='X', markerfacecolor='k')	plt.plot(xdata, ydata, marker='X', markerfacecolor='k')
code: イテラブルxdataとイテラブルydataの折れ線グラフに、黒い大バツマーカーを描く	plt.plot(xdata, ydata, marker='X', markerfacecolor='k')	plt.plot(xdata, ydata, marker='X', markerfacecolor='k')
code: 折れ線の大バツ印を黒くする	plt.plot(xdata, ydata, marker='X', markerfacecolor='k')	plt.plot(xdata, ydata, marker='X', markerfacecolor='k')
code: 折れ線の大バツマーカーを黒くする	plt.plot(xdata, ydata, marker='X', markerfacecolor='k')	plt.plot(xdata, ydata, marker='X', markerfacecolor='k')
code: 数列xdataとリストydataの折れ線グラフに黒色の四角印をプロットする	plt.plot(xdata, ydata, marker='s', markerfacecolor='k')	plt.plot(xdata, ydata, marker='s', markerfacecolor='k')
code: データ列xdataと数列ydataの折れ線グラフに黒色の四角マーカーを描く	plt.plot(xdata, ydata, marker='s', markerfacecolor='k')	plt.plot(xdata, ydata, marker='s', markerfacecolor='k')
code: 折れ線の四角マーカーを黒色に設定する	plt.plot(xdata, ydata, marker='s', markerfacecolor='k')	plt.plot(xdata, ydata, marker='s', markerfacecolor='k')
code: 折れ線グラフの四角マーカーを黒色に設定する	plt.plot(xdata, ydata, marker='s', markerfacecolor='k')	plt.plot(xdata, ydata, marker='s', markerfacecolor='k')
code: データ列xdataとリストydataの折れ線グラフに、黒色のダイアモンド印を描画する	plt.plot(xdata, ydata, marker='D', markerfacecolor='k')	plt.plot(xdata, ydata, marker='D', markerfacecolor='k')
code: リストxdataと数列ydataの折れ線に黒色のダイアモンドマーカーをプロットする	plt.plot(xdata, ydata, marker='D', markerfacecolor='k')	plt.plot(xdata, ydata, marker='D', markerfacecolor='k')
code: 折れ線のダイアモンドマーカーを黒色に変更する	plt.plot(xdata, ydata, marker='D', markerfacecolor='k')	plt.plot(xdata, ydata, marker='D', markerfacecolor='k')
code: 折れ線のダイアモンドマーカーを黒色に変更する	plt.plot(xdata, ydata, marker='D', markerfacecolor='k')	plt.plot(xdata, ydata, marker='D', markerfacecolor='k')
code: イテラブルxdataとイテラブルydataの折れ線グラフに黒い星印をプロットする	plt.plot(xdata, ydata, marker='*', markerfacecolor='k')	plt.plot(xdata, ydata, marker='*', markerfacecolor='k')
code: 配列xdataとイテラブルydataの折れ線に黒色の星マーカーをプロットする	plt.plot(xdata, ydata, marker='*', markerfacecolor='k')	plt.plot(xdata, ydata, marker='*', markerfacecolor='k')
code: 折れ線の星マーカーを黒色に変更する	plt.plot(xdata, ydata, marker='*', markerfacecolor='k')	plt.plot(xdata, ydata, marker='*', markerfacecolor='k')
code: 折れ線の星マーカーを黒色変える	plt.plot(xdata, ydata, marker='*', markerfacecolor='k')	plt.plot(xdata, ydata, marker='*', markerfacecolor='k')
code: イテラブルxdataと数列ydataの折れ線グラフに、黄色いポイント印を描画する	plt.plot(xdata, ydata, marker='.', markerfacecolor='y')	plt.plot(xdata, ydata, marker='.', markerfacecolor='y')
code: データ列xdataとデータ列ydataの折れ線に、黄色いポイントマーカーを描画する	plt.plot(xdata, ydata, marker='.', markerfacecolor='y')	plt.plot(xdata, ydata, marker='.', markerfacecolor='y')
code: 折れ線のポイント印を黄色変える	plt.plot(xdata, ydata, marker='.', markerfacecolor='y')	plt.plot(xdata, ydata, marker='.', markerfacecolor='y')
code: 折れ線のポイントマーカーを黄色くする	plt.plot(xdata, ydata, marker='.', markerfacecolor='y')	plt.plot(xdata, ydata, marker='.', markerfacecolor='y')
code: 配列xdataとイテラブルydataの折れ線グラフに、黄色い丸印をプロットする	plt.plot(xdata, ydata, marker='o', markerfacecolor='y')	plt.plot(xdata, ydata, marker='o', markerfacecolor='y')
code: イテラブルxdataと配列ydataの折れ線に黄色い丸印を描画する	plt.plot(xdata, ydata, marker='o', markerfacecolor='y')	plt.plot(xdata, ydata, marker='o', markerfacecolor='y')
code: 折れ線の丸マーカーを黄色変える	plt.plot(xdata, ydata, marker='o', markerfacecolor='y')	plt.plot(xdata, ydata, marker='o', markerfacecolor='y')
code: 折れ線の丸マーカーを黄色に変更する	plt.plot(xdata, ydata, marker='o', markerfacecolor='y')	plt.plot(xdata, ydata, marker='o', markerfacecolor='y')
code: イテラブルxdataとリストydataの折れ線グラフに、黄色い三角マーカーをプロットする	plt.plot(xdata, ydata, marker='^', markerfacecolor='y')	plt.plot(xdata, ydata, marker='^', markerfacecolor='y')
code: イテラブルxdataと配列ydataの折れ線グラフに、黄色い△印を描く	plt.plot(xdata, ydata, marker='^', markerfacecolor='y')	plt.plot(xdata, ydata, marker='^', markerfacecolor='y')
code: 折れ線の△印を黄色にセットする	plt.plot(xdata, ydata, marker='^', markerfacecolor='y')	plt.plot(xdata, ydata, marker='^', markerfacecolor='y')
code: 折れ線グラフの△印を黄色にする	plt.plot(xdata, ydata, marker='^', markerfacecolor='y')	plt.plot(xdata, ydata, marker='^', markerfacecolor='y')
code: 数列xdataとリストydataの折れ線グラフに黄色い下三角印を描く	plt.plot(xdata, ydata, marker='v', markerfacecolor='y')	plt.plot(xdata, ydata, marker='v', markerfacecolor='y')
code: リストxdataと配列ydataの折れ線に、黄色い▽印を描く	plt.plot(xdata, ydata, marker='v', markerfacecolor='y')	plt.plot(xdata, ydata, marker='v', markerfacecolor='y')
code: 折れ線グラフの▼マーカーを黄色に設定する	plt.plot(xdata, ydata, marker='v', markerfacecolor='y')	plt.plot(xdata, ydata, marker='v', markerfacecolor='y')
code: 折れ線の▽マーカーを黄色に設定する	plt.plot(xdata, ydata, marker='v', markerfacecolor='y')	plt.plot(xdata, ydata, marker='v', markerfacecolor='y')
code: リストxdataと配列ydataの折れ線に黄色い左三角マーカーを描く	plt.plot(xdata, ydata, marker='<', markerfacecolor='y')	plt.plot(xdata, ydata, marker='<', markerfacecolor='y')
code: 数列xdataとイテラブルydataの折れ線に、黄色い左三角印を描画する	plt.plot(xdata, ydata, marker='<', markerfacecolor='y')	plt.plot(xdata, ydata, marker='<', markerfacecolor='y')
code: 折れ線グラフの左三角マーカーを黄色くする	plt.plot(xdata, ydata, marker='<', markerfacecolor='y')	plt.plot(xdata, ydata, marker='<', markerfacecolor='y')
code: 折れ線の左三角マーカーを黄色に変更する	plt.plot(xdata, ydata, marker='<', markerfacecolor='y')	plt.plot(xdata, ydata, marker='<', markerfacecolor='y')
code: データ列xdataとイテラブルydataの折れ線に黄色い右三角印を描画する	plt.plot(xdata, ydata, marker='>', markerfacecolor='y')	plt.plot(xdata, ydata, marker='>', markerfacecolor='y')
code: リストxdataとリストydataの折れ線グラフに黄色い右三角マーカーを描く	plt.plot(xdata, ydata, marker='>', markerfacecolor='y')	plt.plot(xdata, ydata, marker='>', markerfacecolor='y')
code: 折れ線の右三角マーカーを黄色くする	plt.plot(xdata, ydata, marker='>', markerfacecolor='y')	plt.plot(xdata, ydata, marker='>', markerfacecolor='y')
code: 折れ線グラフの右三角マーカーを黄色くする	plt.plot(xdata, ydata, marker='>', markerfacecolor='y')	plt.plot(xdata, ydata, marker='>', markerfacecolor='y')
code: 数列xdataと数列ydataの折れ線グラフに黄色いクロスマーカーを描画する	plt.plot(xdata, ydata, marker='x', markerfacecolor='y')	plt.plot(xdata, ydata, marker='x', markerfacecolor='y')
code: イテラブルxdataとデータ列ydataの折れ線に、黄色いクロスマーカーを描画する	plt.plot(xdata, ydata, marker='x', markerfacecolor='y')	plt.plot(xdata, ydata, marker='x', markerfacecolor='y')
code: 折れ線のバツ印を黄色くする	plt.plot(xdata, ydata, marker='x', markerfacecolor='y')	plt.plot(xdata, ydata, marker='x', markerfacecolor='y')
code: 折れ線グラフのクロスマーカーを黄色とする	plt.plot(xdata, ydata, marker='x', markerfacecolor='y')	plt.plot(xdata, ydata, marker='x', markerfacecolor='y')
code: リストxdataと配列ydataの折れ線に、黄色い大バツ印を描画する	plt.plot(xdata, ydata, marker='X', markerfacecolor='y')	plt.plot(xdata, ydata, marker='X', markerfacecolor='y')
code: 配列xdataと数列ydataの折れ線に黄色い大バツマーカーを描く	plt.plot(xdata, ydata, marker='X', markerfacecolor='y')	plt.plot(xdata, ydata, marker='X', markerfacecolor='y')
code: 折れ線の大バツマーカーを黄色に設定する	plt.plot(xdata, ydata, marker='X', markerfacecolor='y')	plt.plot(xdata, ydata, marker='X', markerfacecolor='y')
code: 折れ線の大バツマーカーを黄色くする	plt.plot(xdata, ydata, marker='X', markerfacecolor='y')	plt.plot(xdata, ydata, marker='X', markerfacecolor='y')
code: リストxdataとリストydataの折れ線に黄色い四角マーカーをプロットする	plt.plot(xdata, ydata, marker='s', markerfacecolor='y')	plt.plot(xdata, ydata, marker='s', markerfacecolor='y')
code: イテラブルxdataとイテラブルydataの折れ線に黄色い四角マーカーをプロットする	plt.plot(xdata, ydata, marker='s', markerfacecolor='y')	plt.plot(xdata, ydata, marker='s', markerfacecolor='y')
code: 折れ線グラフの四角印を黄色くする	plt.plot(xdata, ydata, marker='s', markerfacecolor='y')	plt.plot(xdata, ydata, marker='s', markerfacecolor='y')
code: 折れ線グラフの四角印を黄色に変更する	plt.plot(xdata, ydata, marker='s', markerfacecolor='y')	plt.plot(xdata, ydata, marker='s', markerfacecolor='y')
code: 配列xdataと数列ydataの折れ線に、黄色い菱形印を描く	plt.plot(xdata, ydata, marker='D', markerfacecolor='y')	plt.plot(xdata, ydata, marker='D', markerfacecolor='y')
code: リストxdataとリストydataの折れ線に黄色いダイアモンドマーカーをプロットする	plt.plot(xdata, ydata, marker='D', markerfacecolor='y')	plt.plot(xdata, ydata, marker='D', markerfacecolor='y')
code: 折れ線の菱形印を黄色くする	plt.plot(xdata, ydata, marker='D', markerfacecolor='y')	plt.plot(xdata, ydata, marker='D', markerfacecolor='y')
code: 折れ線グラフのダイアモンド印を黄色くする	plt.plot(xdata, ydata, marker='D', markerfacecolor='y')	plt.plot(xdata, ydata, marker='D', markerfacecolor='y')
code: リストxdataとリストydataの折れ線に、黄色い星印をプロットする	plt.plot(xdata, ydata, marker='*', markerfacecolor='y')	plt.plot(xdata, ydata, marker='*', markerfacecolor='y')
code: 配列xdataとデータ列ydataの折れ線に、黄色い星マーカーをプロットする	plt.plot(xdata, ydata, marker='*', markerfacecolor='y')	plt.plot(xdata, ydata, marker='*', markerfacecolor='y')
code: 折れ線の星印を黄色に指定する	plt.plot(xdata, ydata, marker='*', markerfacecolor='y')	plt.plot(xdata, ydata, marker='*', markerfacecolor='y')
code: 折れ線の星印を黄色くする	plt.plot(xdata, ydata, marker='*', markerfacecolor='y')	plt.plot(xdata, ydata, marker='*', markerfacecolor='y')
code: イテラブルxdataと配列ydataの折れ線グラフに、緑色のポイント印を描画する	plt.plot(xdata, ydata, marker='.', markerfacecolor='g')	plt.plot(xdata, ydata, marker='.', markerfacecolor='g')
code: イテラブルxdataとデータ列ydataの折れ線グラフに緑色のポイント印をプロットする	plt.plot(xdata, ydata, marker='.', markerfacecolor='g')	plt.plot(xdata, ydata, marker='.', markerfacecolor='g')
code: 折れ線のポイント印を緑色変える	plt.plot(xdata, ydata, marker='.', markerfacecolor='g')	plt.plot(xdata, ydata, marker='.', markerfacecolor='g')
code: 折れ線グラフのポイントマーカーを緑色に変更する	plt.plot(xdata, ydata, marker='.', markerfacecolor='g')	plt.plot(xdata, ydata, marker='.', markerfacecolor='g')
code: リストxdataとイテラブルydataの折れ線グラフに、緑色の丸マーカーを描く	plt.plot(xdata, ydata, marker='o', markerfacecolor='g')	plt.plot(xdata, ydata, marker='o', markerfacecolor='g')
code: イテラブルxdataとイテラブルydataの折れ線グラフに緑色の丸マーカーを描画する	plt.plot(xdata, ydata, marker='o', markerfacecolor='g')	plt.plot(xdata, ydata, marker='o', markerfacecolor='g')
code: 折れ線グラフの丸印を緑色とする	plt.plot(xdata, ydata, marker='o', markerfacecolor='g')	plt.plot(xdata, ydata, marker='o', markerfacecolor='g')
code: 折れ線の丸印を緑色に変更する	plt.plot(xdata, ydata, marker='o', markerfacecolor='g')	plt.plot(xdata, ydata, marker='o', markerfacecolor='g')
code: リストxdataとデータ列ydataの折れ線グラフに、緑色の三角印を描く	plt.plot(xdata, ydata, marker='^', markerfacecolor='g')	plt.plot(xdata, ydata, marker='^', markerfacecolor='g')
code: データ列xdataとイテラブルydataの折れ線グラフに、緑色の△印をプロットする	plt.plot(xdata, ydata, marker='^', markerfacecolor='g')	plt.plot(xdata, ydata, marker='^', markerfacecolor='g')
code: 折れ線の三角マーカーを緑色に指定する	plt.plot(xdata, ydata, marker='^', markerfacecolor='g')	plt.plot(xdata, ydata, marker='^', markerfacecolor='g')
code: 折れ線の三角印を緑色にセットする	plt.plot(xdata, ydata, marker='^', markerfacecolor='g')	plt.plot(xdata, ydata, marker='^', markerfacecolor='g')
code: 配列xdataとデータ列ydataの折れ線に緑色の下三角マーカーを描く	plt.plot(xdata, ydata, marker='v', markerfacecolor='g')	plt.plot(xdata, ydata, marker='v', markerfacecolor='g')
code: データ列xdataと数列ydataの折れ線グラフに、緑色の▽マーカーを描く	plt.plot(xdata, ydata, marker='v', markerfacecolor='g')	plt.plot(xdata, ydata, marker='v', markerfacecolor='g')
code: 折れ線グラフの▽印を緑色に指定する	plt.plot(xdata, ydata, marker='v', markerfacecolor='g')	plt.plot(xdata, ydata, marker='v', markerfacecolor='g')
code: 折れ線の下三角印を緑色変える	plt.plot(xdata, ydata, marker='v', markerfacecolor='g')	plt.plot(xdata, ydata, marker='v', markerfacecolor='g')
code: 配列xdataと数列ydataの折れ線に緑色の左三角マーカーを描画する	plt.plot(xdata, ydata, marker='<', markerfacecolor='g')	plt.plot(xdata, ydata, marker='<', markerfacecolor='g')
code: リストxdataとイテラブルydataの折れ線に、緑色の左三角マーカーを描く	plt.plot(xdata, ydata, marker='<', markerfacecolor='g')	plt.plot(xdata, ydata, marker='<', markerfacecolor='g')
code: 折れ線グラフの左三角印を緑色変える	plt.plot(xdata, ydata, marker='<', markerfacecolor='g')	plt.plot(xdata, ydata, marker='<', markerfacecolor='g')
code: 折れ線グラフの左三角マーカーを緑色にする	plt.plot(xdata, ydata, marker='<', markerfacecolor='g')	plt.plot(xdata, ydata, marker='<', markerfacecolor='g')
code: 数列xdataとデータ列ydataの折れ線に、緑色の右三角印を描画する	plt.plot(xdata, ydata, marker='>', markerfacecolor='g')	plt.plot(xdata, ydata, marker='>', markerfacecolor='g')
code: リストxdataと配列ydataの折れ線グラフに緑色の右三角印を描く	plt.plot(xdata, ydata, marker='>', markerfacecolor='g')	plt.plot(xdata, ydata, marker='>', markerfacecolor='g')
code: 折れ線の右三角印を緑色に設定する	plt.plot(xdata, ydata, marker='>', markerfacecolor='g')	plt.plot(xdata, ydata, marker='>', markerfacecolor='g')
code: 折れ線グラフの右三角マーカーを緑色に設定する	plt.plot(xdata, ydata, marker='>', markerfacecolor='g')	plt.plot(xdata, ydata, marker='>', markerfacecolor='g')
code: イテラブルxdataとデータ列ydataの折れ線に、緑色のクロス印を描く	plt.plot(xdata, ydata, marker='x', markerfacecolor='g')	plt.plot(xdata, ydata, marker='x', markerfacecolor='g')
code: 数列xdataとイテラブルydataの折れ線グラフに緑色のバツマーカーを描画する	plt.plot(xdata, ydata, marker='x', markerfacecolor='g')	plt.plot(xdata, ydata, marker='x', markerfacecolor='g')
code: 折れ線グラフのクロス印を緑色に指定する	plt.plot(xdata, ydata, marker='x', markerfacecolor='g')	plt.plot(xdata, ydata, marker='x', markerfacecolor='g')
code: 折れ線グラフのバツ印を緑色にする	plt.plot(xdata, ydata, marker='x', markerfacecolor='g')	plt.plot(xdata, ydata, marker='x', markerfacecolor='g')
code: イテラブルxdataとリストydataの折れ線に、緑色の大バツ印を描く	plt.plot(xdata, ydata, marker='X', markerfacecolor='g')	plt.plot(xdata, ydata, marker='X', markerfacecolor='g')
code: リストxdataとイテラブルydataの折れ線に、緑色の大バツマーカーを描く	plt.plot(xdata, ydata, marker='X', markerfacecolor='g')	plt.plot(xdata, ydata, marker='X', markerfacecolor='g')
code: 折れ線グラフの大バツ印を緑色に設定する	plt.plot(xdata, ydata, marker='X', markerfacecolor='g')	plt.plot(xdata, ydata, marker='X', markerfacecolor='g')
code: 折れ線グラフの大バツ印を緑色変える	plt.plot(xdata, ydata, marker='X', markerfacecolor='g')	plt.plot(xdata, ydata, marker='X', markerfacecolor='g')
code: イテラブルxdataと配列ydataの折れ線に、緑色の四角マーカーをプロットする	plt.plot(xdata, ydata, marker='s', markerfacecolor='g')	plt.plot(xdata, ydata, marker='s', markerfacecolor='g')
code: 配列xdataとリストydataの折れ線に緑色の四角マーカーをプロットする	plt.plot(xdata, ydata, marker='s', markerfacecolor='g')	plt.plot(xdata, ydata, marker='s', markerfacecolor='g')
code: 折れ線グラフの四角マーカーを緑色とする	plt.plot(xdata, ydata, marker='s', markerfacecolor='g')	plt.plot(xdata, ydata, marker='s', markerfacecolor='g')
code: 折れ線の四角マーカーを緑色変える	plt.plot(xdata, ydata, marker='s', markerfacecolor='g')	plt.plot(xdata, ydata, marker='s', markerfacecolor='g')
code: 配列xdataと数列ydataの折れ線グラフに緑色のダイアモンドマーカーを描画する	plt.plot(xdata, ydata, marker='D', markerfacecolor='g')	plt.plot(xdata, ydata, marker='D', markerfacecolor='g')
code: 数列xdataとデータ列ydataの折れ線グラフに緑色のダイアモンドマーカーを描く	plt.plot(xdata, ydata, marker='D', markerfacecolor='g')	plt.plot(xdata, ydata, marker='D', markerfacecolor='g')
code: 折れ線グラフの菱形マーカーを緑色変える	plt.plot(xdata, ydata, marker='D', markerfacecolor='g')	plt.plot(xdata, ydata, marker='D', markerfacecolor='g')
code: 折れ線グラフの菱形印を緑色に指定する	plt.plot(xdata, ydata, marker='D', markerfacecolor='g')	plt.plot(xdata, ydata, marker='D', markerfacecolor='g')
code: 配列xdataとリストydataの折れ線グラフに、緑色の星印を描く	plt.plot(xdata, ydata, marker='*', markerfacecolor='g')	plt.plot(xdata, ydata, marker='*', markerfacecolor='g')
code: リストxdataとイテラブルydataの折れ線グラフに緑色の星印を描く	plt.plot(xdata, ydata, marker='*', markerfacecolor='g')	plt.plot(xdata, ydata, marker='*', markerfacecolor='g')
code: 折れ線の星印を緑色にする	plt.plot(xdata, ydata, marker='*', markerfacecolor='g')	plt.plot(xdata, ydata, marker='*', markerfacecolor='g')
code: 折れ線の星印を緑色に設定する	plt.plot(xdata, ydata, marker='*', markerfacecolor='g')	plt.plot(xdata, ydata, marker='*', markerfacecolor='g')
code: 配列xdataと数列ydataの折れ線に、サイズnのポイント印をプロットする	plt.plot(xdata, ydata, marker='.', markersize=n)	plt.plot(xdata, ydata, marker='.', markersize=n)
code: 数列xdataと数列ydataの折れ線に大きさnのポイントマーカーを描画する	plt.plot(xdata, ydata, marker='.', markersize=n)	plt.plot(xdata, ydata, marker='.', markersize=n)
code: 折れ線のポイントマーカーの大きさをnに指定する	plt.plot(xdata, ydata, marker='.', markersize=n)	plt.plot(xdata, ydata, marker='.', markersize=n)
code: 折れ線グラフのポイント印の大きさをn変える	plt.plot(xdata, ydata, marker='.', markersize=n)	plt.plot(xdata, ydata, marker='.', markersize=n)
code: 配列xdataと配列ydataの折れ線に、大きさnの丸マーカーを描画する	plt.plot(xdata, ydata, marker='o', markersize=n)	plt.plot(xdata, ydata, marker='o', markersize=n)
code: イテラブルxdataと数列ydataの折れ線に大きさnの丸印を描く	plt.plot(xdata, ydata, marker='o', markersize=n)	plt.plot(xdata, ydata, marker='o', markersize=n)
code: 折れ線の丸印の大きさをnに変更する	plt.plot(xdata, ydata, marker='o', markersize=n)	plt.plot(xdata, ydata, marker='o', markersize=n)
code: 折れ線グラフの丸マーカーの大きさをn変える	plt.plot(xdata, ydata, marker='o', markersize=n)	plt.plot(xdata, ydata, marker='o', markersize=n)
code: 配列xdataと数列ydataの折れ線に大きさnの△マーカーをプロットする	plt.plot(xdata, ydata, marker='^', markersize=n)	plt.plot(xdata, ydata, marker='^', markersize=n)
code: データ列xdataと数列ydataの折れ線グラフに、サイズnの△マーカーを描画する	plt.plot(xdata, ydata, marker='^', markersize=n)	plt.plot(xdata, ydata, marker='^', markersize=n)
code: 折れ線の△印の大きさをnに設定する	plt.plot(xdata, ydata, marker='^', markersize=n)	plt.plot(xdata, ydata, marker='^', markersize=n)
code: 折れ線の三角マーカーの大きさをnに指定する	plt.plot(xdata, ydata, marker='^', markersize=n)	plt.plot(xdata, ydata, marker='^', markersize=n)
code: リストxdataと配列ydataの折れ線に大きさnの▼印を描く	plt.plot(xdata, ydata, marker='v', markersize=n)	plt.plot(xdata, ydata, marker='v', markersize=n)
code: リストxdataと数列ydataの折れ線に大きさnの▼マーカーを描く	plt.plot(xdata, ydata, marker='v', markersize=n)	plt.plot(xdata, ydata, marker='v', markersize=n)
code: 折れ線グラフの▼マーカーのサイズをn変える	plt.plot(xdata, ydata, marker='v', markersize=n)	plt.plot(xdata, ydata, marker='v', markersize=n)
code: 折れ線グラフの▽印の大きさをnに設定する	plt.plot(xdata, ydata, marker='v', markersize=n)	plt.plot(xdata, ydata, marker='v', markersize=n)
code: データ列xdataとリストydataの折れ線グラフに、大きさnの左三角マーカーを描く	plt.plot(xdata, ydata, marker='<', markersize=n)	plt.plot(xdata, ydata, marker='<', markersize=n)
code: 数列xdataとデータ列ydataの折れ線グラフに、大きさnの左三角マーカーを描く	plt.plot(xdata, ydata, marker='<', markersize=n)	plt.plot(xdata, ydata, marker='<', markersize=n)
code: 折れ線の左三角マーカーのサイズをn変える	plt.plot(xdata, ydata, marker='<', markersize=n)	plt.plot(xdata, ydata, marker='<', markersize=n)
code: 折れ線グラフの左三角印の大きさをnに指定する	plt.plot(xdata, ydata, marker='<', markersize=n)	plt.plot(xdata, ydata, marker='<', markersize=n)
code: リストxdataとリストydataの折れ線に、大きさnの右三角印を描画する	plt.plot(xdata, ydata, marker='>', markersize=n)	plt.plot(xdata, ydata, marker='>', markersize=n)
code: 数列xdataとデータ列ydataの折れ線グラフに、大きさnの右三角印を描画する	plt.plot(xdata, ydata, marker='>', markersize=n)	plt.plot(xdata, ydata, marker='>', markersize=n)
code: 折れ線の右三角印のサイズをnに設定する	plt.plot(xdata, ydata, marker='>', markersize=n)	plt.plot(xdata, ydata, marker='>', markersize=n)
code: 折れ線グラフの右三角印の大きさをnに設定する	plt.plot(xdata, ydata, marker='>', markersize=n)	plt.plot(xdata, ydata, marker='>', markersize=n)
code: イテラブルxdataと数列ydataの折れ線グラフに大きさnのクロスマーカーを描画する	plt.plot(xdata, ydata, marker='x', markersize=n)	plt.plot(xdata, ydata, marker='x', markersize=n)
code: データ列xdataとリストydataの折れ線に、大きさnのバツマーカーを描く	plt.plot(xdata, ydata, marker='x', markersize=n)	plt.plot(xdata, ydata, marker='x', markersize=n)
code: 折れ線のクロスマーカーの大きさをnに変更する	plt.plot(xdata, ydata, marker='x', markersize=n)	plt.plot(xdata, ydata, marker='x', markersize=n)
code: 折れ線のバツ印の大きさをnに指定する	plt.plot(xdata, ydata, marker='x', markersize=n)	plt.plot(xdata, ydata, marker='x', markersize=n)
code: 配列xdataとリストydataの折れ線グラフに大きさnの大バツマーカーを描く	plt.plot(xdata, ydata, marker='X', markersize=n)	plt.plot(xdata, ydata, marker='X', markersize=n)
code: リストxdataと数列ydataの折れ線に、大きさnの大バツマーカーをプロットする	plt.plot(xdata, ydata, marker='X', markersize=n)	plt.plot(xdata, ydata, marker='X', markersize=n)
code: 折れ線の大バツ印の大きさをn変える	plt.plot(xdata, ydata, marker='X', markersize=n)	plt.plot(xdata, ydata, marker='X', markersize=n)
code: 折れ線の大バツ印の大きさをnに設定する	plt.plot(xdata, ydata, marker='X', markersize=n)	plt.plot(xdata, ydata, marker='X', markersize=n)
code: リストxdataとデータ列ydataの折れ線に、大きさnの四角印を描く	plt.plot(xdata, ydata, marker='s', markersize=n)	plt.plot(xdata, ydata, marker='s', markersize=n)
code: 数列xdataと配列ydataの折れ線グラフに大きさnの四角マーカーを描画する	plt.plot(xdata, ydata, marker='s', markersize=n)	plt.plot(xdata, ydata, marker='s', markersize=n)
code: 折れ線グラフの四角マーカーのサイズをnにする	plt.plot(xdata, ydata, marker='s', markersize=n)	plt.plot(xdata, ydata, marker='s', markersize=n)
code: 折れ線グラフの四角マーカーのサイズをnにセットする	plt.plot(xdata, ydata, marker='s', markersize=n)	plt.plot(xdata, ydata, marker='s', markersize=n)
code: 配列xdataと数列ydataの折れ線に、サイズnのダイアモンド印をプロットする	plt.plot(xdata, ydata, marker='D', markersize=n)	plt.plot(xdata, ydata, marker='D', markersize=n)
code: 数列xdataとデータ列ydataの折れ線に、大きさnの菱形印をプロットする	plt.plot(xdata, ydata, marker='D', markersize=n)	plt.plot(xdata, ydata, marker='D', markersize=n)
code: 折れ線グラフの菱形印のサイズをn変える	plt.plot(xdata, ydata, marker='D', markersize=n)	plt.plot(xdata, ydata, marker='D', markersize=n)
code: 折れ線グラフの菱形印のサイズをnとする	plt.plot(xdata, ydata, marker='D', markersize=n)	plt.plot(xdata, ydata, marker='D', markersize=n)
code: イテラブルxdataとデータ列ydataの折れ線に、大きさnの星印をプロットする	plt.plot(xdata, ydata, marker='*', markersize=n)	plt.plot(xdata, ydata, marker='*', markersize=n)
code: 配列xdataとリストydataの折れ線にサイズnの星マーカーを描画する	plt.plot(xdata, ydata, marker='*', markersize=n)	plt.plot(xdata, ydata, marker='*', markersize=n)
code: 折れ線グラフの星マーカーの大きさをnに設定する	plt.plot(xdata, ydata, marker='*', markersize=n)	plt.plot(xdata, ydata, marker='*', markersize=n)
code: 折れ線グラフの星マーカーのサイズをn変える	plt.plot(xdata, ydata, marker='*', markersize=n)	plt.plot(xdata, ydata, marker='*', markersize=n)
code: 数列xdataとイテラブルydataの折れ線に、線幅nのポイント印を描画する	plt.plot(xdata, ydata, marker='.', markeredgewidth=n)	plt.plot(xdata, ydata, marker='.', markeredgewidth=n)
code: イテラブルxdataとリストydataの折れ線に、線幅nのポイント印を描く	plt.plot(xdata, ydata, marker='.', markeredgewidth=n)	plt.plot(xdata, ydata, marker='.', markeredgewidth=n)
code: 折れ線グラフのポイントマーカーの線幅をnにセットする	plt.plot(xdata, ydata, marker='.', markeredgewidth=n)	plt.plot(xdata, ydata, marker='.', markeredgewidth=n)
code: 折れ線のポイント印の線幅をnに設定する	plt.plot(xdata, ydata, marker='.', markeredgewidth=n)	plt.plot(xdata, ydata, marker='.', markeredgewidth=n)
code: 配列xdataとデータ列ydataの折れ線に、線幅nの丸マーカーをプロットする	plt.plot(xdata, ydata, marker='o', markeredgewidth=n)	plt.plot(xdata, ydata, marker='o', markeredgewidth=n)
code: リストxdataとデータ列ydataの折れ線に線幅nの丸印を描画する	plt.plot(xdata, ydata, marker='o', markeredgewidth=n)	plt.plot(xdata, ydata, marker='o', markeredgewidth=n)
code: 折れ線グラフの丸印の線幅をnに指定する	plt.plot(xdata, ydata, marker='o', markeredgewidth=n)	plt.plot(xdata, ydata, marker='o', markeredgewidth=n)
code: 折れ線グラフの丸印の線幅をn変える	plt.plot(xdata, ydata, marker='o', markeredgewidth=n)	plt.plot(xdata, ydata, marker='o', markeredgewidth=n)
code: イテラブルxdataとデータ列ydataの折れ線に線幅nの△印を描画する	plt.plot(xdata, ydata, marker='^', markeredgewidth=n)	plt.plot(xdata, ydata, marker='^', markeredgewidth=n)
code: 数列xdataと数列ydataの折れ線に線幅nの△マーカーをプロットする	plt.plot(xdata, ydata, marker='^', markeredgewidth=n)	plt.plot(xdata, ydata, marker='^', markeredgewidth=n)
code: 折れ線グラフの△マーカーの線幅をn変える	plt.plot(xdata, ydata, marker='^', markeredgewidth=n)	plt.plot(xdata, ydata, marker='^', markeredgewidth=n)
code: 折れ線グラフの▲印の線幅をnにセットする	plt.plot(xdata, ydata, marker='^', markeredgewidth=n)	plt.plot(xdata, ydata, marker='^', markeredgewidth=n)
code: イテラブルxdataと配列ydataの折れ線グラフに線幅nの下三角マーカーを描画する	plt.plot(xdata, ydata, marker='v', markeredgewidth=n)	plt.plot(xdata, ydata, marker='v', markeredgewidth=n)
code: イテラブルxdataとイテラブルydataの折れ線グラフに線幅nの▼マーカーを描く	plt.plot(xdata, ydata, marker='v', markeredgewidth=n)	plt.plot(xdata, ydata, marker='v', markeredgewidth=n)
code: 折れ線の▼マーカーの線幅をnに設定する	plt.plot(xdata, ydata, marker='v', markeredgewidth=n)	plt.plot(xdata, ydata, marker='v', markeredgewidth=n)
code: 折れ線の▼印の線幅をnに変更する	plt.plot(xdata, ydata, marker='v', markeredgewidth=n)	plt.plot(xdata, ydata, marker='v', markeredgewidth=n)
code: 数列xdataとイテラブルydataの折れ線グラフに線幅nの左三角マーカーをプロットする	plt.plot(xdata, ydata, marker='<', markeredgewidth=n)	plt.plot(xdata, ydata, marker='<', markeredgewidth=n)
code: 数列xdataとリストydataの折れ線に線幅nの左三角マーカーを描く	plt.plot(xdata, ydata, marker='<', markeredgewidth=n)	plt.plot(xdata, ydata, marker='<', markeredgewidth=n)
code: 折れ線グラフの左三角印の線幅をnにする	plt.plot(xdata, ydata, marker='<', markeredgewidth=n)	plt.plot(xdata, ydata, marker='<', markeredgewidth=n)
code: 折れ線の左三角マーカーの線幅をn変える	plt.plot(xdata, ydata, marker='<', markeredgewidth=n)	plt.plot(xdata, ydata, marker='<', markeredgewidth=n)
code: データ列xdataと配列ydataの折れ線に、線幅nの右三角マーカーを描画する	plt.plot(xdata, ydata, marker='>', markeredgewidth=n)	plt.plot(xdata, ydata, marker='>', markeredgewidth=n)
code: 数列xdataと数列ydataの折れ線に、線幅nの右三角マーカーを描画する	plt.plot(xdata, ydata, marker='>', markeredgewidth=n)	plt.plot(xdata, ydata, marker='>', markeredgewidth=n)
code: 折れ線グラフの右三角印の線幅をn変える	plt.plot(xdata, ydata, marker='>', markeredgewidth=n)	plt.plot(xdata, ydata, marker='>', markeredgewidth=n)
code: 折れ線の右三角印の線幅をnに指定する	plt.plot(xdata, ydata, marker='>', markeredgewidth=n)	plt.plot(xdata, ydata, marker='>', markeredgewidth=n)
code: イテラブルxdataとリストydataの折れ線に線幅nのバツ印を描く	plt.plot(xdata, ydata, marker='x', markeredgewidth=n)	plt.plot(xdata, ydata, marker='x', markeredgewidth=n)
code: 数列xdataと数列ydataの折れ線グラフに、線幅nのバツマーカーを描画する	plt.plot(xdata, ydata, marker='x', markeredgewidth=n)	plt.plot(xdata, ydata, marker='x', markeredgewidth=n)
code: 折れ線グラフのクロスマーカーの線幅をn変える	plt.plot(xdata, ydata, marker='x', markeredgewidth=n)	plt.plot(xdata, ydata, marker='x', markeredgewidth=n)
code: 折れ線グラフのクロス印の線幅をnに指定する	plt.plot(xdata, ydata, marker='x', markeredgewidth=n)	plt.plot(xdata, ydata, marker='x', markeredgewidth=n)
code: 配列xdataとイテラブルydataの折れ線に線幅nの大バツ印を描く	plt.plot(xdata, ydata, marker='X', markeredgewidth=n)	plt.plot(xdata, ydata, marker='X', markeredgewidth=n)
code: 数列xdataとリストydataの折れ線グラフに線幅nの大バツマーカーをプロットする	plt.plot(xdata, ydata, marker='X', markeredgewidth=n)	plt.plot(xdata, ydata, marker='X', markeredgewidth=n)
code: 折れ線グラフの大バツ印の線幅をn変える	plt.plot(xdata, ydata, marker='X', markeredgewidth=n)	plt.plot(xdata, ydata, marker='X', markeredgewidth=n)
code: 折れ線の大バツ印の線幅をnにセットする	plt.plot(xdata, ydata, marker='X', markeredgewidth=n)	plt.plot(xdata, ydata, marker='X', markeredgewidth=n)
code: 配列xdataとデータ列ydataの折れ線グラフに、線幅nの四角印をプロットする	plt.plot(xdata, ydata, marker='s', markeredgewidth=n)	plt.plot(xdata, ydata, marker='s', markeredgewidth=n)
code: データ列xdataと配列ydataの折れ線に線幅nの四角印を描画する	plt.plot(xdata, ydata, marker='s', markeredgewidth=n)	plt.plot(xdata, ydata, marker='s', markeredgewidth=n)
code: 折れ線グラフの四角印の線幅をnとする	plt.plot(xdata, ydata, marker='s', markeredgewidth=n)	plt.plot(xdata, ydata, marker='s', markeredgewidth=n)
code: 折れ線グラフの四角印の線幅をn変える	plt.plot(xdata, ydata, marker='s', markeredgewidth=n)	plt.plot(xdata, ydata, marker='s', markeredgewidth=n)
code: 配列xdataと数列ydataの折れ線に、線幅nのダイアモンドマーカーを描画する	plt.plot(xdata, ydata, marker='D', markeredgewidth=n)	plt.plot(xdata, ydata, marker='D', markeredgewidth=n)
code: イテラブルxdataと数列ydataの折れ線グラフに線幅nの菱形印を描く	plt.plot(xdata, ydata, marker='D', markeredgewidth=n)	plt.plot(xdata, ydata, marker='D', markeredgewidth=n)
code: 折れ線グラフの菱形マーカーの線幅をnに設定する	plt.plot(xdata, ydata, marker='D', markeredgewidth=n)	plt.plot(xdata, ydata, marker='D', markeredgewidth=n)
code: 折れ線グラフの菱形印の線幅をnに変更する	plt.plot(xdata, ydata, marker='D', markeredgewidth=n)	plt.plot(xdata, ydata, marker='D', markeredgewidth=n)
code: 数列xdataとイテラブルydataの折れ線に線幅nの星マーカーを描画する	plt.plot(xdata, ydata, marker='*', markeredgewidth=n)	plt.plot(xdata, ydata, marker='*', markeredgewidth=n)
code: データ列xdataとイテラブルydataの折れ線グラフに線幅nの星印を描く	plt.plot(xdata, ydata, marker='*', markeredgewidth=n)	plt.plot(xdata, ydata, marker='*', markeredgewidth=n)
code: 折れ線グラフの星マーカーの線幅をnにする	plt.plot(xdata, ydata, marker='*', markeredgewidth=n)	plt.plot(xdata, ydata, marker='*', markeredgewidth=n)
code: 折れ線グラフの星マーカーの線幅をnに設定する	plt.plot(xdata, ydata, marker='*', markeredgewidth=n)	plt.plot(xdata, ydata, marker='*', markeredgewidth=n)
code: 数列xdataをy座標、イテラブルydataをx座標として、散布図を描く	plt.scatter(xdata, ydata)	plt.scatter(xdata, ydata)
code: リストxdataを縦軸、数列ydataをx軸として散布図を描画する	plt.scatter(xdata, ydata)	plt.scatter(xdata, ydata)
code: データ列xdataと配列ydataについて散布図を描画する	plt.scatter(xdata, ydata)	plt.scatter(xdata, ydata)
code: リストxdataとリストydataの散布図を描画する	plt.scatter(xdata, ydata)	plt.scatter(xdata, ydata)
code: 数列xdataをy軸配列ydataをx座標として大きさnの散布図を描く	plt.scatter(xdata, ydata, s=n)	plt.scatter(xdata, ydata, s=n)
code: イテラブルxdataを縦軸、イテラブルydataを横軸として、大きさnの散布図をプロットする	plt.scatter(xdata, ydata, s=n)	plt.scatter(xdata, ydata, s=n)
code: イテラブルxdataとリストydataの散布図を大きさnでプロットする	plt.scatter(xdata, ydata, s=n)	plt.scatter(xdata, ydata, s=n)
code: 大きさnでデータ列xdataとリストydataの散布図を描画する	plt.scatter(xdata, ydata, s=n)	plt.scatter(xdata, ydata, s=n)
code: 大きさnでイテラブルxdataと配列ydataの散布図をプロットする	plt.scatter(xdata, ydata, s=n)	plt.scatter(xdata, ydata, s=n)
code: データ列xdataとリストydataについて散布図を描画してその大きさをnに変更する	plt.scatter(xdata, ydata, s=n)	plt.scatter(xdata, ydata, s=n)
code: イテラブルxdataとリストydataの散布図を描画して、その大きさをnに設定する	plt.scatter(xdata, ydata, s=n)	plt.scatter(xdata, ydata, s=n)
code: ポイントマーカーを散布図に用いる	plt.plot(xdata, ydata, marker='.')	plt.plot(xdata, ydata, marker='.')
code: 散布図にポイント印を使う	plt.plot(xdata, ydata, marker='.')	plt.plot(xdata, ydata, marker='.')
code: ポイントマーカーとして散布図を描画する	plt.plot(xdata, ydata, marker='.')	plt.plot(xdata, ydata, marker='.')
code: ポイントマーカーとして散布図を描画する	plt.plot(xdata, ydata, marker='.')	plt.plot(xdata, ydata, marker='.')
code: ポイントマーカーを用いて散布図を描く	plt.plot(xdata, ydata, marker='.')	plt.plot(xdata, ydata, marker='.')
code: 数列xdataと配列ydataについて散布図を描画して、印をポイントにセットする	plt.plot(xdata, ydata, marker='.')	plt.plot(xdata, ydata, marker='.')
code: データ列xdataとデータ列ydataの散布図を描画して、マーカーをポイントに設定する	plt.plot(xdata, ydata, marker='.')	plt.plot(xdata, ydata, marker='.')
code: イテラブルxdataと数列ydataについての散布図にポイント印を描画する	plt.plot(xdata, ydata, marker='.')	plt.plot(xdata, ydata, marker='.')
code: イテラブルxdataとデータ列ydataの散布図にポイントマーカーをプロットする	plt.plot(xdata, ydata, marker='.')	plt.plot(xdata, ydata, marker='.')
code: 散布図に丸印を使用する	plt.plot(xdata, ydata, marker='o')	plt.plot(xdata, ydata, marker='o')
code: 丸マーカーを散布図に使用する	plt.plot(xdata, ydata, marker='o')	plt.plot(xdata, ydata, marker='o')
code: 散布図を丸印で描画する	plt.plot(xdata, ydata, marker='o')	plt.plot(xdata, ydata, marker='o')
code: 散布図を丸印として描画する	plt.plot(xdata, ydata, marker='o')	plt.plot(xdata, ydata, marker='o')
code: 丸マーカーを用いて散布図をプロットする	plt.plot(xdata, ydata, marker='o')	plt.plot(xdata, ydata, marker='o')
code: イテラブルxdataとイテラブルydataの散布図を描画してマーカーを丸にする	plt.plot(xdata, ydata, marker='o')	plt.plot(xdata, ydata, marker='o')
code: リストxdataとイテラブルydataについて散布図を描画してマーカーを丸に指定する	plt.plot(xdata, ydata, marker='o')	plt.plot(xdata, ydata, marker='o')
code: 数列xdataとイテラブルydataについての散布図に丸マーカーをプロットする	plt.plot(xdata, ydata, marker='o')	plt.plot(xdata, ydata, marker='o')
code: 配列xdataと配列ydataの散布図に丸印を描画する	plt.plot(xdata, ydata, marker='o')	plt.plot(xdata, ydata, marker='o')
code: △マーカーを散布図に使う	plt.plot(xdata, ydata, marker='^')	plt.plot(xdata, ydata, marker='^')
code: 散布図に▲マーカーを用いる	plt.plot(xdata, ydata, marker='^')	plt.plot(xdata, ydata, marker='^')
code: △印を散布図に用いる	plt.plot(xdata, ydata, marker='^')	plt.plot(xdata, ydata, marker='^')
code: 散布図を三角マーカーで描画する	plt.plot(xdata, ydata, marker='^')	plt.plot(xdata, ydata, marker='^')
code: 散布図を三角マーカーを使って描く	plt.plot(xdata, ydata, marker='^')	plt.plot(xdata, ydata, marker='^')
code: △印で散布図を描画する	plt.plot(xdata, ydata, marker='^')	plt.plot(xdata, ydata, marker='^')
code: リストxdataと配列ydataの散布図を描画して、マーカーを△にする	plt.plot(xdata, ydata, marker='^')	plt.plot(xdata, ydata, marker='^')
code: イテラブルxdataと配列ydataについて散布図を描画して、印を△にする	plt.plot(xdata, ydata, marker='^')	plt.plot(xdata, ydata, marker='^')
code: データ列xdataとデータ列ydataの散布図に▲マーカーを描画する	plt.plot(xdata, ydata, marker='^')	plt.plot(xdata, ydata, marker='^')
code: イテラブルxdataとデータ列ydataの散布図に▲マーカーを描画する	plt.plot(xdata, ydata, marker='^')	plt.plot(xdata, ydata, marker='^')
code: 散布図に▼印を用いる	plt.plot(xdata, ydata, marker='v')	plt.plot(xdata, ydata, marker='v')
code: 散布図に▼印を使う	plt.plot(xdata, ydata, marker='v')	plt.plot(xdata, ydata, marker='v')
code: 散布図に▼マーカーを使用する	plt.plot(xdata, ydata, marker='v')	plt.plot(xdata, ydata, marker='v')
code: 下三角印を用いて散布図を描く	plt.plot(xdata, ydata, marker='v')	plt.plot(xdata, ydata, marker='v')
code: 散布図を下三角印として描く	plt.plot(xdata, ydata, marker='v')	plt.plot(xdata, ydata, marker='v')
code: 散布図を▽マーカーとして描画する	plt.plot(xdata, ydata, marker='v')	plt.plot(xdata, ydata, marker='v')
code: イテラブルxdataとイテラブルydataの散布図を描画してマーカーを▽変える	plt.plot(xdata, ydata, marker='v')	plt.plot(xdata, ydata, marker='v')
code: イテラブルxdataと数列ydataの散布図を描画してマーカーを▼にセットする	plt.plot(xdata, ydata, marker='v')	plt.plot(xdata, ydata, marker='v')
code: イテラブルxdataとデータ列ydataについての散布図に▼印を描く	plt.plot(xdata, ydata, marker='v')	plt.plot(xdata, ydata, marker='v')
code: イテラブルxdataとデータ列ydataについての散布図に下三角印を描画する	plt.plot(xdata, ydata, marker='v')	plt.plot(xdata, ydata, marker='v')
code: 散布図に左三角印を用いる	plt.plot(xdata, ydata, marker='<')	plt.plot(xdata, ydata, marker='<')
code: 左三角マーカーを散布図に用いる	plt.plot(xdata, ydata, marker='<')	plt.plot(xdata, ydata, marker='<')
code: 左三角印として散布図を描く	plt.plot(xdata, ydata, marker='<')	plt.plot(xdata, ydata, marker='<')
code: 散布図を左三角印で描画する	plt.plot(xdata, ydata, marker='<')	plt.plot(xdata, ydata, marker='<')
code: 散布図を左三角マーカーとして描画する	plt.plot(xdata, ydata, marker='<')	plt.plot(xdata, ydata, marker='<')
code: 配列xdataとリストydataの散布図を描画して印を左三角に指定する	plt.plot(xdata, ydata, marker='<')	plt.plot(xdata, ydata, marker='<')
code: 数列xdataとリストydataについて散布図を描画してマーカーを左三角に設定する	plt.plot(xdata, ydata, marker='<')	plt.plot(xdata, ydata, marker='<')
code: イテラブルxdataとデータ列ydataについての散布図に左三角印を描画する	plt.plot(xdata, ydata, marker='<')	plt.plot(xdata, ydata, marker='<')
code: 配列xdataと配列ydataの散布図に左三角マーカーを描画する	plt.plot(xdata, ydata, marker='<')	plt.plot(xdata, ydata, marker='<')
code: 散布図に右三角マーカーを使用する	plt.plot(xdata, ydata, marker='>')	plt.plot(xdata, ydata, marker='>')
code: 右三角マーカーを散布図に用いる	plt.plot(xdata, ydata, marker='>')	plt.plot(xdata, ydata, marker='>')
code: 右三角印として散布図を描く	plt.plot(xdata, ydata, marker='>')	plt.plot(xdata, ydata, marker='>')
code: 右三角印で散布図をプロットする	plt.plot(xdata, ydata, marker='>')	plt.plot(xdata, ydata, marker='>')
code: 散布図を右三角マーカーを使って描く	plt.plot(xdata, ydata, marker='>')	plt.plot(xdata, ydata, marker='>')
code: リストxdataと数列ydataについて散布図を描画して、印を右三角に変更する	plt.plot(xdata, ydata, marker='>')	plt.plot(xdata, ydata, marker='>')
code: データ列xdataとデータ列ydataについて散布図を描画して印を右三角に設定する	plt.plot(xdata, ydata, marker='>')	plt.plot(xdata, ydata, marker='>')
code: データ列xdataと数列ydataについての散布図に右三角マーカーを描く	plt.plot(xdata, ydata, marker='>')	plt.plot(xdata, ydata, marker='>')
code: 配列xdataとデータ列ydataについての散布図に右三角印を描く	plt.plot(xdata, ydata, marker='>')	plt.plot(xdata, ydata, marker='>')
code: クロス印を散布図に使用する	plt.plot(xdata, ydata, marker='x')	plt.plot(xdata, ydata, marker='x')
code: 散布図にバツ印を使用する	plt.plot(xdata, ydata, marker='x')	plt.plot(xdata, ydata, marker='x')
code: 散布図をバツ印としてプロットする	plt.plot(xdata, ydata, marker='x')	plt.plot(xdata, ydata, marker='x')
code: バツ印を使って散布図を描画する	plt.plot(xdata, ydata, marker='x')	plt.plot(xdata, ydata, marker='x')
code: クロスマーカーで散布図をプロットする	plt.plot(xdata, ydata, marker='x')	plt.plot(xdata, ydata, marker='x')
code: データ列xdataと数列ydataについて散布図を描画して、マーカーをクロスにする	plt.plot(xdata, ydata, marker='x')	plt.plot(xdata, ydata, marker='x')
code: 配列xdataとリストydataの散布図を描画して、印をクロスにセットする	plt.plot(xdata, ydata, marker='x')	plt.plot(xdata, ydata, marker='x')
code: 数列xdataとリストydataについての散布図にバツ印を描く	plt.plot(xdata, ydata, marker='x')	plt.plot(xdata, ydata, marker='x')
code: 配列xdataと配列ydataの散布図にバツ印を描画する	plt.plot(xdata, ydata, marker='x')	plt.plot(xdata, ydata, marker='x')
code: 散布図に大バツ印を使用する	plt.plot(xdata, ydata, marker='X')	plt.plot(xdata, ydata, marker='X')
code: 大バツマーカーを散布図に用いる	plt.plot(xdata, ydata, marker='X')	plt.plot(xdata, ydata, marker='X')
code: 散布図を大バツ印で描く	plt.plot(xdata, ydata, marker='X')	plt.plot(xdata, ydata, marker='X')
code: 散布図を大バツ印として描く	plt.plot(xdata, ydata, marker='X')	plt.plot(xdata, ydata, marker='X')
code: 散布図を大バツ印として描く	plt.plot(xdata, ydata, marker='X')	plt.plot(xdata, ydata, marker='X')
code: イテラブルxdataと配列ydataについて散布図を描画してマーカーを大バツにセットする	plt.plot(xdata, ydata, marker='X')	plt.plot(xdata, ydata, marker='X')
code: 配列xdataとイテラブルydataの散布図を描画してマーカーを大バツにする	plt.plot(xdata, ydata, marker='X')	plt.plot(xdata, ydata, marker='X')
code: リストxdataと数列ydataの散布図に大バツマーカーをプロットする	plt.plot(xdata, ydata, marker='X')	plt.plot(xdata, ydata, marker='X')
code: 数列xdataと配列ydataについての散布図に大バツマーカーを描く	plt.plot(xdata, ydata, marker='X')	plt.plot(xdata, ydata, marker='X')
code: 四角印を散布図に使用する	plt.plot(xdata, ydata, marker='s')	plt.plot(xdata, ydata, marker='s')
code: 散布図に四角印を使う	plt.plot(xdata, ydata, marker='s')	plt.plot(xdata, ydata, marker='s')
code: 四角マーカーとして散布図を描く	plt.plot(xdata, ydata, marker='s')	plt.plot(xdata, ydata, marker='s')
code: 四角マーカーで散布図を描く	plt.plot(xdata, ydata, marker='s')	plt.plot(xdata, ydata, marker='s')
code: 四角印として散布図を描く	plt.plot(xdata, ydata, marker='s')	plt.plot(xdata, ydata, marker='s')
code: データ列xdataと数列ydataについて散布図を描画してマーカーを四角に設定する	plt.plot(xdata, ydata, marker='s')	plt.plot(xdata, ydata, marker='s')
code: イテラブルxdataとリストydataの散布図を描画して、マーカーを四角にする	plt.plot(xdata, ydata, marker='s')	plt.plot(xdata, ydata, marker='s')
code: 配列xdataとリストydataの散布図に四角印をプロットする	plt.plot(xdata, ydata, marker='s')	plt.plot(xdata, ydata, marker='s')
code: 数列xdataとデータ列ydataについての散布図に四角マーカーを描く	plt.plot(xdata, ydata, marker='s')	plt.plot(xdata, ydata, marker='s')
code: 散布図に菱形印を用いる	plt.plot(xdata, ydata, marker='D')	plt.plot(xdata, ydata, marker='D')
code: 散布図にダイアモンド印を使う	plt.plot(xdata, ydata, marker='D')	plt.plot(xdata, ydata, marker='D')
code: 散布図をダイアモンドマーカーを用いて描く	plt.plot(xdata, ydata, marker='D')	plt.plot(xdata, ydata, marker='D')
code: ダイアモンドマーカーとして散布図を描画する	plt.plot(xdata, ydata, marker='D')	plt.plot(xdata, ydata, marker='D')
code: 散布図を菱形マーカーを用いて描画する	plt.plot(xdata, ydata, marker='D')	plt.plot(xdata, ydata, marker='D')
code: データ列xdataとイテラブルydataの散布図を描画して、マーカーをダイアモンドに変更する	plt.plot(xdata, ydata, marker='D')	plt.plot(xdata, ydata, marker='D')
code: 数列xdataとイテラブルydataについて散布図を描画して印を菱形にセットする	plt.plot(xdata, ydata, marker='D')	plt.plot(xdata, ydata, marker='D')
code: 数列xdataと配列ydataの散布図に菱形マーカーを描画する	plt.plot(xdata, ydata, marker='D')	plt.plot(xdata, ydata, marker='D')
code: 配列xdataと数列ydataの散布図にダイアモンド印を描く	plt.plot(xdata, ydata, marker='D')	plt.plot(xdata, ydata, marker='D')
code: 星マーカーを散布図に使う	plt.plot(xdata, ydata, marker='*')	plt.plot(xdata, ydata, marker='*')
code: 星印を散布図に使う	plt.plot(xdata, ydata, marker='*')	plt.plot(xdata, ydata, marker='*')
code: 星印で散布図を描画する	plt.plot(xdata, ydata, marker='*')	plt.plot(xdata, ydata, marker='*')
code: 散布図を星マーカーを使って描画する	plt.plot(xdata, ydata, marker='*')	plt.plot(xdata, ydata, marker='*')
code: 散布図を星印としてプロットする	plt.plot(xdata, ydata, marker='*')	plt.plot(xdata, ydata, marker='*')
code: 配列xdataとリストydataについて散布図を描画して、マーカーを星に変更する	plt.plot(xdata, ydata, marker='*')	plt.plot(xdata, ydata, marker='*')
code: データ列xdataとデータ列ydataについて散布図を描画して、印を星にセットする	plt.plot(xdata, ydata, marker='*')	plt.plot(xdata, ydata, marker='*')
code: データ列xdataと数列ydataについての散布図に星マーカーを描く	plt.plot(xdata, ydata, marker='*')	plt.plot(xdata, ydata, marker='*')
code: 配列xdataとリストydataについての散布図に星マーカーを描画する	plt.plot(xdata, ydata, marker='*')	plt.plot(xdata, ydata, marker='*')
code: rgbのポイントマーカーを散布図に用いる	plt.plot(xdata, ydata, marker='.', c=rgb)	plt.plot(xdata, ydata, marker='.', c=rgb)
code: 散布図にrgbのポイント印を使う	plt.plot(xdata, ydata, marker='.', c=rgb)	plt.plot(xdata, ydata, marker='.', c=rgb)
code: rgbのポイント印を用いて散布図を描画する	plt.plot(xdata, ydata, marker='.', c=rgb)	plt.plot(xdata, ydata, marker='.', c=rgb)
code: 散布図をカラーコードrgbのポイントマーカーで描く	plt.plot(xdata, ydata, marker='.', c=rgb)	plt.plot(xdata, ydata, marker='.', c=rgb)
code: 散布図をカラーコードrgbのポイント印としてプロットする	plt.plot(xdata, ydata, marker='.', c=rgb)	plt.plot(xdata, ydata, marker='.', c=rgb)
code: カラーコードrgbのポイントマーカーをリストxdataとリストydataの散布図にプロットする	plt.plot(xdata, ydata, marker='.', c=rgb)	plt.plot(xdata, ydata, marker='.', c=rgb)
code: rgbのポイント印を数列xdataと配列ydataの散布図に描画する	plt.plot(xdata, ydata, marker='.', c=rgb)	plt.plot(xdata, ydata, marker='.', c=rgb)
code: リストxdataとデータ列ydataについての散布図にカラーコードrgbのポイント印を描く	plt.plot(xdata, ydata, marker='.', c=rgb)	plt.plot(xdata, ydata, marker='.', c=rgb)
code: イテラブルxdataと配列ydataの散布図を描画してポイントマーカーの色をカラーコードrgbに指定する	plt.plot(xdata, ydata, marker='.', c=rgb)	plt.plot(xdata, ydata, marker='.', c=rgb)
code: イテラブルxdataとイテラブルydataについて散布図を描画して、ポイント印の色をカラーコードrgbに変更する	plt.plot(xdata, ydata, marker='.', c=rgb)	plt.plot(xdata, ydata, marker='.', c=rgb)
code: rgbの丸印を散布図に使用する	plt.plot(xdata, ydata, marker='o', c=rgb)	plt.plot(xdata, ydata, marker='o', c=rgb)
code: 散布図にrgbの丸印を用いる	plt.plot(xdata, ydata, marker='o', c=rgb)	plt.plot(xdata, ydata, marker='o', c=rgb)
code: カラーコードrgbの丸印を使って散布図を描く	plt.plot(xdata, ydata, marker='o', c=rgb)	plt.plot(xdata, ydata, marker='o', c=rgb)
code: カラーコードrgbの丸マーカーを使って散布図をプロットする	plt.plot(xdata, ydata, marker='o', c=rgb)	plt.plot(xdata, ydata, marker='o', c=rgb)
code: 散布図をカラーコードrgbの丸印を用いてプロットする	plt.plot(xdata, ydata, marker='o', c=rgb)	plt.plot(xdata, ydata, marker='o', c=rgb)
code: rgbの丸マーカーをリストxdataとデータ列ydataについての散布図に描画する	plt.plot(xdata, ydata, marker='o', c=rgb)	plt.plot(xdata, ydata, marker='o', c=rgb)
code: イテラブルxdataと配列ydataの散布図にカラーコードrgbの丸マーカーをプロットする	plt.plot(xdata, ydata, marker='o', c=rgb)	plt.plot(xdata, ydata, marker='o', c=rgb)
code: カラーコードrgbの丸マーカーを数列xdataと数列ydataの散布図に描く	plt.plot(xdata, ydata, marker='o', c=rgb)	plt.plot(xdata, ydata, marker='o', c=rgb)
code: イテラブルxdataとリストydataの散布図を描画して丸印の色をカラーコードrgb変える	plt.plot(xdata, ydata, marker='o', c=rgb)	plt.plot(xdata, ydata, marker='o', c=rgb)
code: データ列xdataとデータ列ydataの散布図を描画して、丸マーカーの色をカラーコードrgb変える	plt.plot(xdata, ydata, marker='o', c=rgb)	plt.plot(xdata, ydata, marker='o', c=rgb)
code: カラーコードrgbの三角マーカーを散布図に使う	plt.plot(xdata, ydata, marker='^', c=rgb)	plt.plot(xdata, ydata, marker='^', c=rgb)
code: rgbの上三角印を散布図に用いる	plt.plot(xdata, ydata, marker='^', c=rgb)	plt.plot(xdata, ydata, marker='^', c=rgb)
code: 散布図にrgbの▲印を使う	plt.plot(xdata, ydata, marker='^', c=rgb)	plt.plot(xdata, ydata, marker='^', c=rgb)
code: 散布図をカラーコードrgbの三角印を用いて描画する	plt.plot(xdata, ydata, marker='^', c=rgb)	plt.plot(xdata, ydata, marker='^', c=rgb)
code: rgbの△マーカーを使って散布図をプロットする	plt.plot(xdata, ydata, marker='^', c=rgb)	plt.plot(xdata, ydata, marker='^', c=rgb)
code: 散布図をrgbの上三角マーカーで描く	plt.plot(xdata, ydata, marker='^', c=rgb)	plt.plot(xdata, ydata, marker='^', c=rgb)
code: 配列xdataとデータ列ydataについての散布図にカラーコードrgbの三角印を描く	plt.plot(xdata, ydata, marker='^', c=rgb)	plt.plot(xdata, ydata, marker='^', c=rgb)
code: 配列xdataとデータ列ydataについての散布図にrgbの△マーカーを描く	plt.plot(xdata, ydata, marker='^', c=rgb)	plt.plot(xdata, ydata, marker='^', c=rgb)
code: 数列xdataと配列ydataの散布図にカラーコードrgbの△印を描画する	plt.plot(xdata, ydata, marker='^', c=rgb)	plt.plot(xdata, ydata, marker='^', c=rgb)
code: データ列xdataとイテラブルydataの散布図を描画して、上三角マーカーの色をrgbにする	plt.plot(xdata, ydata, marker='^', c=rgb)	plt.plot(xdata, ydata, marker='^', c=rgb)
code: イテラブルxdataと数列ydataについて散布図を描画して、▲印の色をカラーコードrgbに指定する	plt.plot(xdata, ydata, marker='^', c=rgb)	plt.plot(xdata, ydata, marker='^', c=rgb)
code: rgbの▽印を散布図に用いる	plt.plot(xdata, ydata, marker='v', c=rgb)	plt.plot(xdata, ydata, marker='v', c=rgb)
code: rgbの下三角印を散布図に用いる	plt.plot(xdata, ydata, marker='v', c=rgb)	plt.plot(xdata, ydata, marker='v', c=rgb)
code: rgbの▽マーカーを散布図に用いる	plt.plot(xdata, ydata, marker='v', c=rgb)	plt.plot(xdata, ydata, marker='v', c=rgb)
code: カラーコードrgbの▼印として散布図をプロットする	plt.plot(xdata, ydata, marker='v', c=rgb)	plt.plot(xdata, ydata, marker='v', c=rgb)
code: 散布図をカラーコードrgbの▽マーカーでプロットする	plt.plot(xdata, ydata, marker='v', c=rgb)	plt.plot(xdata, ydata, marker='v', c=rgb)
code: rgbの▼印で散布図を描く	plt.plot(xdata, ydata, marker='v', c=rgb)	plt.plot(xdata, ydata, marker='v', c=rgb)
code: カラーコードrgbの下三角マーカーを配列xdataとリストydataの散布図に描画する	plt.plot(xdata, ydata, marker='v', c=rgb)	plt.plot(xdata, ydata, marker='v', c=rgb)
code: rgbの下三角マーカーを数列xdataとイテラブルydataの散布図にプロットする	plt.plot(xdata, ydata, marker='v', c=rgb)	plt.plot(xdata, ydata, marker='v', c=rgb)
code: カラーコードrgbの下三角印を数列xdataとイテラブルydataについての散布図に描く	plt.plot(xdata, ydata, marker='v', c=rgb)	plt.plot(xdata, ydata, marker='v', c=rgb)
code: 数列xdataとデータ列ydataの散布図を描画して▼マーカーの色をカラーコードrgbとする	plt.plot(xdata, ydata, marker='v', c=rgb)	plt.plot(xdata, ydata, marker='v', c=rgb)
code: 数列xdataとリストydataについて散布図を描画して下三角マーカーの色をrgbとする	plt.plot(xdata, ydata, marker='v', c=rgb)	plt.plot(xdata, ydata, marker='v', c=rgb)
code: カラーコードrgbの左三角印を散布図に用いる	plt.plot(xdata, ydata, marker='<', c=rgb)	plt.plot(xdata, ydata, marker='<', c=rgb)
code: カラーコードrgbの左三角マーカーを散布図に使う	plt.plot(xdata, ydata, marker='<', c=rgb)	plt.plot(xdata, ydata, marker='<', c=rgb)
code: 散布図をカラーコードrgbの左三角マーカーとして描く	plt.plot(xdata, ydata, marker='<', c=rgb)	plt.plot(xdata, ydata, marker='<', c=rgb)
code: 散布図をカラーコードrgbの左三角印で描く	plt.plot(xdata, ydata, marker='<', c=rgb)	plt.plot(xdata, ydata, marker='<', c=rgb)
code: 散布図をカラーコードrgbの左三角印で描く	plt.plot(xdata, ydata, marker='<', c=rgb)	plt.plot(xdata, ydata, marker='<', c=rgb)
code: カラーコードrgbの左三角印をリストxdataと配列ydataについての散布図にプロットする	plt.plot(xdata, ydata, marker='<', c=rgb)	plt.plot(xdata, ydata, marker='<', c=rgb)
code: 配列xdataとリストydataについての散布図にrgbの左三角マーカーを描画する	plt.plot(xdata, ydata, marker='<', c=rgb)	plt.plot(xdata, ydata, marker='<', c=rgb)
code: イテラブルxdataとリストydataの散布図にrgbの左三角マーカーを描く	plt.plot(xdata, ydata, marker='<', c=rgb)	plt.plot(xdata, ydata, marker='<', c=rgb)
code: データ列xdataと配列ydataについて散布図を描画して左三角マーカーの色をrgbに設定する	plt.plot(xdata, ydata, marker='<', c=rgb)	plt.plot(xdata, ydata, marker='<', c=rgb)
code: データ列xdataと数列ydataの散布図を描画して左三角印の色をカラーコードrgbに設定する	plt.plot(xdata, ydata, marker='<', c=rgb)	plt.plot(xdata, ydata, marker='<', c=rgb)
code: カラーコードrgbの右三角マーカーを散布図に使用する	plt.plot(xdata, ydata, marker='>', c=rgb)	plt.plot(xdata, ydata, marker='>', c=rgb)
code: 散布図にrgbの右三角印を使用する	plt.plot(xdata, ydata, marker='>', c=rgb)	plt.plot(xdata, ydata, marker='>', c=rgb)
code: 散布図をrgbの右三角印でプロットする	plt.plot(xdata, ydata, marker='>', c=rgb)	plt.plot(xdata, ydata, marker='>', c=rgb)
code: rgbの右三角マーカーで散布図をプロットする	plt.plot(xdata, ydata, marker='>', c=rgb)	plt.plot(xdata, ydata, marker='>', c=rgb)
code: rgbの右三角マーカーとして散布図をプロットする	plt.plot(xdata, ydata, marker='>', c=rgb)	plt.plot(xdata, ydata, marker='>', c=rgb)
code: 数列xdataとイテラブルydataについての散布図にカラーコードrgbの右三角印をプロットする	plt.plot(xdata, ydata, marker='>', c=rgb)	plt.plot(xdata, ydata, marker='>', c=rgb)
code: データ列xdataと数列ydataについての散布図にrgbの右三角印を描く	plt.plot(xdata, ydata, marker='>', c=rgb)	plt.plot(xdata, ydata, marker='>', c=rgb)
code: カラーコードrgbの右三角印を数列xdataとイテラブルydataの散布図に描く	plt.plot(xdata, ydata, marker='>', c=rgb)	plt.plot(xdata, ydata, marker='>', c=rgb)
code: 数列xdataとデータ列ydataについて散布図を描画して、右三角印の色をカラーコードrgbに変更する	plt.plot(xdata, ydata, marker='>', c=rgb)	plt.plot(xdata, ydata, marker='>', c=rgb)
code: リストxdataとイテラブルydataの散布図を描画して右三角印の色をrgb変える	plt.plot(xdata, ydata, marker='>', c=rgb)	plt.plot(xdata, ydata, marker='>', c=rgb)
code: rgbのバツマーカーを散布図に使う	plt.plot(xdata, ydata, marker='x', c=rgb)	plt.plot(xdata, ydata, marker='x', c=rgb)
code: カラーコードrgbのバツマーカーを散布図に使う	plt.plot(xdata, ydata, marker='x', c=rgb)	plt.plot(xdata, ydata, marker='x', c=rgb)
code: rgbのバツ印を散布図に使用する	plt.plot(xdata, ydata, marker='x', c=rgb)	plt.plot(xdata, ydata, marker='x', c=rgb)
code: 散布図をrgbのクロス印を使ってプロットする	plt.plot(xdata, ydata, marker='x', c=rgb)	plt.plot(xdata, ydata, marker='x', c=rgb)
code: カラーコードrgbのクロス印を使って散布図を描く	plt.plot(xdata, ydata, marker='x', c=rgb)	plt.plot(xdata, ydata, marker='x', c=rgb)
code: rgbのクロス印として散布図をプロットする	plt.plot(xdata, ydata, marker='x', c=rgb)	plt.plot(xdata, ydata, marker='x', c=rgb)
code: カラーコードrgbのバツマーカーを配列xdataとイテラブルydataについての散布図にプロットする	plt.plot(xdata, ydata, marker='x', c=rgb)	plt.plot(xdata, ydata, marker='x', c=rgb)
code: rgbのクロスマーカーを配列xdataとイテラブルydataについての散布図に描く	plt.plot(xdata, ydata, marker='x', c=rgb)	plt.plot(xdata, ydata, marker='x', c=rgb)
code: rgbのクロスマーカーをリストxdataと数列ydataについての散布図に描画する	plt.plot(xdata, ydata, marker='x', c=rgb)	plt.plot(xdata, ydata, marker='x', c=rgb)
code: 配列xdataと配列ydataの散布図を描画してクロスマーカーの色をカラーコードrgbに設定する	plt.plot(xdata, ydata, marker='x', c=rgb)	plt.plot(xdata, ydata, marker='x', c=rgb)
code: 配列xdataとリストydataの散布図を描画して、バツマーカーの色をカラーコードrgbにセットする	plt.plot(xdata, ydata, marker='x', c=rgb)	plt.plot(xdata, ydata, marker='x', c=rgb)
code: rgbの大バツ印を散布図に用いる	plt.plot(xdata, ydata, marker='X', c=rgb)	plt.plot(xdata, ydata, marker='X', c=rgb)
code: カラーコードrgbの大バツマーカーを散布図に用いる	plt.plot(xdata, ydata, marker='X', c=rgb)	plt.plot(xdata, ydata, marker='X', c=rgb)
code: 散布図をカラーコードrgbの大バツ印を使って描く	plt.plot(xdata, ydata, marker='X', c=rgb)	plt.plot(xdata, ydata, marker='X', c=rgb)
code: 散布図をrgbの大バツマーカーを用いて描画する	plt.plot(xdata, ydata, marker='X', c=rgb)	plt.plot(xdata, ydata, marker='X', c=rgb)
code: rgbの大バツ印を使って散布図を描く	plt.plot(xdata, ydata, marker='X', c=rgb)	plt.plot(xdata, ydata, marker='X', c=rgb)
code: rgbの大バツ印を数列xdataとデータ列ydataの散布図にプロットする	plt.plot(xdata, ydata, marker='X', c=rgb)	plt.plot(xdata, ydata, marker='X', c=rgb)
code: カラーコードrgbの大バツマーカーをデータ列xdataとデータ列ydataについての散布図にプロットする	plt.plot(xdata, ydata, marker='X', c=rgb)	plt.plot(xdata, ydata, marker='X', c=rgb)
code: データ列xdataとデータ列ydataの散布図にカラーコードrgbの大バツマーカーを描画する	plt.plot(xdata, ydata, marker='X', c=rgb)	plt.plot(xdata, ydata, marker='X', c=rgb)
code: 配列xdataとリストydataの散布図を描画して大バツマーカーの色をrgbに変更する	plt.plot(xdata, ydata, marker='X', c=rgb)	plt.plot(xdata, ydata, marker='X', c=rgb)
code: 数列xdataと数列ydataの散布図を描画して、大バツ印の色をrgbにする	plt.plot(xdata, ydata, marker='X', c=rgb)	plt.plot(xdata, ydata, marker='X', c=rgb)
code: 散布図にカラーコードrgbの四角マーカーを使用する	plt.plot(xdata, ydata, marker='s', c=rgb)	plt.plot(xdata, ydata, marker='s', c=rgb)
code: 散布図にカラーコードrgbの四角マーカーを用いる	plt.plot(xdata, ydata, marker='s', c=rgb)	plt.plot(xdata, ydata, marker='s', c=rgb)
code: 散布図をカラーコードrgbの四角マーカーを用いて描画する	plt.plot(xdata, ydata, marker='s', c=rgb)	plt.plot(xdata, ydata, marker='s', c=rgb)
code: カラーコードrgbの四角マーカーとして散布図をプロットする	plt.plot(xdata, ydata, marker='s', c=rgb)	plt.plot(xdata, ydata, marker='s', c=rgb)
code: 散布図をカラーコードrgbの四角マーカーを用いて描画する	plt.plot(xdata, ydata, marker='s', c=rgb)	plt.plot(xdata, ydata, marker='s', c=rgb)
code: データ列xdataとデータ列ydataの散布図にrgbの四角印を描画する	plt.plot(xdata, ydata, marker='s', c=rgb)	plt.plot(xdata, ydata, marker='s', c=rgb)
code: データ列xdataとリストydataの散布図にカラーコードrgbの四角印を描く	plt.plot(xdata, ydata, marker='s', c=rgb)	plt.plot(xdata, ydata, marker='s', c=rgb)
code: リストxdataと数列ydataの散布図にrgbの四角印を描画する	plt.plot(xdata, ydata, marker='s', c=rgb)	plt.plot(xdata, ydata, marker='s', c=rgb)
code: イテラブルxdataとデータ列ydataについて散布図を描画して四角マーカーの色をカラーコードrgbに設定する	plt.plot(xdata, ydata, marker='s', c=rgb)	plt.plot(xdata, ydata, marker='s', c=rgb)
code: 配列xdataとデータ列ydataの散布図を描画して四角マーカーの色をrgbに設定する	plt.plot(xdata, ydata, marker='s', c=rgb)	plt.plot(xdata, ydata, marker='s', c=rgb)
code: カラーコードrgbのダイアモンド印を散布図に用いる	plt.plot(xdata, ydata, marker='D', c=rgb)	plt.plot(xdata, ydata, marker='D', c=rgb)
code: 散布図にrgbの菱形マーカーを使う	plt.plot(xdata, ydata, marker='D', c=rgb)	plt.plot(xdata, ydata, marker='D', c=rgb)
code: カラーコードrgbの菱形マーカーを散布図に使用する	plt.plot(xdata, ydata, marker='D', c=rgb)	plt.plot(xdata, ydata, marker='D', c=rgb)
code: rgbの菱形印を用いて散布図を描く	plt.plot(xdata, ydata, marker='D', c=rgb)	plt.plot(xdata, ydata, marker='D', c=rgb)
code: 散布図をrgbの菱形マーカーとして描画する	plt.plot(xdata, ydata, marker='D', c=rgb)	plt.plot(xdata, ydata, marker='D', c=rgb)
code: 散布図をrgbのダイアモンド印で描く	plt.plot(xdata, ydata, marker='D', c=rgb)	plt.plot(xdata, ydata, marker='D', c=rgb)
code: リストxdataとリストydataの散布図にカラーコードrgbの菱形印を描画する	plt.plot(xdata, ydata, marker='D', c=rgb)	plt.plot(xdata, ydata, marker='D', c=rgb)
code: rgbの菱形マーカーを数列xdataと数列ydataについての散布図にプロットする	plt.plot(xdata, ydata, marker='D', c=rgb)	plt.plot(xdata, ydata, marker='D', c=rgb)
code: 配列xdataとイテラブルydataの散布図にrgbの菱形印をプロットする	plt.plot(xdata, ydata, marker='D', c=rgb)	plt.plot(xdata, ydata, marker='D', c=rgb)
code: イテラブルxdataとリストydataについて散布図を描画して、菱形印の色をカラーコードrgbにセットする	plt.plot(xdata, ydata, marker='D', c=rgb)	plt.plot(xdata, ydata, marker='D', c=rgb)
code: リストxdataとデータ列ydataの散布図を描画して、菱形マーカーの色をカラーコードrgbにセットする	plt.plot(xdata, ydata, marker='D', c=rgb)	plt.plot(xdata, ydata, marker='D', c=rgb)
code: カラーコードrgbの星印を散布図に用いる	plt.plot(xdata, ydata, marker='*', c=rgb)	plt.plot(xdata, ydata, marker='*', c=rgb)
code: カラーコードrgbの星印を散布図に用いる	plt.plot(xdata, ydata, marker='*', c=rgb)	plt.plot(xdata, ydata, marker='*', c=rgb)
code: 散布図をカラーコードrgbの星マーカーを用いてプロットする	plt.plot(xdata, ydata, marker='*', c=rgb)	plt.plot(xdata, ydata, marker='*', c=rgb)
code: 散布図をカラーコードrgbの星印で描く	plt.plot(xdata, ydata, marker='*', c=rgb)	plt.plot(xdata, ydata, marker='*', c=rgb)
code: rgbの星マーカーを使って散布図を描く	plt.plot(xdata, ydata, marker='*', c=rgb)	plt.plot(xdata, ydata, marker='*', c=rgb)
code: 配列xdataと数列ydataの散布図にカラーコードrgbの星印を描画する	plt.plot(xdata, ydata, marker='*', c=rgb)	plt.plot(xdata, ydata, marker='*', c=rgb)
code: 配列xdataとイテラブルydataについての散布図にrgbの星マーカーを描画する	plt.plot(xdata, ydata, marker='*', c=rgb)	plt.plot(xdata, ydata, marker='*', c=rgb)
code: カラーコードrgbの星マーカーをデータ列xdataとデータ列ydataについての散布図に描く	plt.plot(xdata, ydata, marker='*', c=rgb)	plt.plot(xdata, ydata, marker='*', c=rgb)
code: 数列xdataと数列ydataについて散布図を描画して、星印の色をカラーコードrgbにセットする	plt.plot(xdata, ydata, marker='*', c=rgb)	plt.plot(xdata, ydata, marker='*', c=rgb)
code: 数列xdataとイテラブルydataの散布図を描画して、星印の色をカラーコードrgbとする	plt.plot(xdata, ydata, marker='*', c=rgb)	plt.plot(xdata, ydata, marker='*', c=rgb)
code: 赤色のポイントマーカーを散布図に使う	plt.plot(xdata, ydata, marker='.', c='r')	plt.plot(xdata, ydata, marker='.', c='r')
code: 赤いポイントマーカーを散布図に使う	plt.plot(xdata, ydata, marker='.', c='r')	plt.plot(xdata, ydata, marker='.', c='r')
code: 赤いポイントマーカーで散布図を描画する	plt.plot(xdata, ydata, marker='.', c='r')	plt.plot(xdata, ydata, marker='.', c='r')
code: 散布図を赤いポイント印でプロットする	plt.plot(xdata, ydata, marker='.', c='r')	plt.plot(xdata, ydata, marker='.', c='r')
code: 赤いポイントマーカーとして散布図を描画する	plt.plot(xdata, ydata, marker='.', c='r')	plt.plot(xdata, ydata, marker='.', c='r')
code: 数列xdataとデータ列ydataの散布図に赤いポイントマーカーを描く	plt.plot(xdata, ydata, marker='.', c='r')	plt.plot(xdata, ydata, marker='.', c='r')
code: 赤色のポイントマーカーを配列xdataと数列ydataの散布図に描く	plt.plot(xdata, ydata, marker='.', c='r')	plt.plot(xdata, ydata, marker='.', c='r')
code: 赤色のポイント印を数列xdataと数列ydataの散布図に描画する	plt.plot(xdata, ydata, marker='.', c='r')	plt.plot(xdata, ydata, marker='.', c='r')
code: 散布図に赤色の丸マーカーを使用する	plt.plot(xdata, ydata, marker='o', c='r')	plt.plot(xdata, ydata, marker='o', c='r')
code: 散布図に赤い丸マーカーを使用する	plt.plot(xdata, ydata, marker='o', c='r')	plt.plot(xdata, ydata, marker='o', c='r')
code: 散布図を赤い丸マーカーを用いてプロットする	plt.plot(xdata, ydata, marker='o', c='r')	plt.plot(xdata, ydata, marker='o', c='r')
code: 散布図を赤色の丸印で描く	plt.plot(xdata, ydata, marker='o', c='r')	plt.plot(xdata, ydata, marker='o', c='r')
code: 赤色の丸マーカーを用いて散布図をプロットする	plt.plot(xdata, ydata, marker='o', c='r')	plt.plot(xdata, ydata, marker='o', c='r')
code: 配列xdataとイテラブルydataについての散布図に赤色の丸印をプロットする	plt.plot(xdata, ydata, marker='o', c='r')	plt.plot(xdata, ydata, marker='o', c='r')
code: リストxdataとイテラブルydataについての散布図に赤い丸印をプロットする	plt.plot(xdata, ydata, marker='o', c='r')	plt.plot(xdata, ydata, marker='o', c='r')
code: 赤色の丸マーカーを配列xdataと数列ydataの散布図に描く	plt.plot(xdata, ydata, marker='o', c='r')	plt.plot(xdata, ydata, marker='o', c='r')
code: 赤色の▲印を散布図に使う	plt.plot(xdata, ydata, marker='^', c='r')	plt.plot(xdata, ydata, marker='^', c='r')
code: 赤色の▲マーカーを散布図に使う	plt.plot(xdata, ydata, marker='^', c='r')	plt.plot(xdata, ydata, marker='^', c='r')
code: 散布図に赤色の△印を使用する	plt.plot(xdata, ydata, marker='^', c='r')	plt.plot(xdata, ydata, marker='^', c='r')
code: 赤色の上三角マーカーを使って散布図を描画する	plt.plot(xdata, ydata, marker='^', c='r')	plt.plot(xdata, ydata, marker='^', c='r')
code: 散布図を赤色の三角印で描画する	plt.plot(xdata, ydata, marker='^', c='r')	plt.plot(xdata, ydata, marker='^', c='r')
code: 赤色の三角印として散布図を描画する	plt.plot(xdata, ydata, marker='^', c='r')	plt.plot(xdata, ydata, marker='^', c='r')
code: 数列xdataとリストydataについての散布図に赤い上三角印を描く	plt.plot(xdata, ydata, marker='^', c='r')	plt.plot(xdata, ydata, marker='^', c='r')
code: 赤色の△マーカーをデータ列xdataと配列ydataの散布図にプロットする	plt.plot(xdata, ydata, marker='^', c='r')	plt.plot(xdata, ydata, marker='^', c='r')
code: 赤色の△マーカーを数列xdataとリストydataについての散布図に描く	plt.plot(xdata, ydata, marker='^', c='r')	plt.plot(xdata, ydata, marker='^', c='r')
code: 赤い下三角印を散布図に使う	plt.plot(xdata, ydata, marker='v', c='r')	plt.plot(xdata, ydata, marker='v', c='r')
code: 赤い▼マーカーを散布図に使用する	plt.plot(xdata, ydata, marker='v', c='r')	plt.plot(xdata, ydata, marker='v', c='r')
code: 赤色の▼マーカーを散布図に使用する	plt.plot(xdata, ydata, marker='v', c='r')	plt.plot(xdata, ydata, marker='v', c='r')
code: 赤い下三角マーカーで散布図を描く	plt.plot(xdata, ydata, marker='v', c='r')	plt.plot(xdata, ydata, marker='v', c='r')
code: 赤色の下三角マーカーで散布図をプロットする	plt.plot(xdata, ydata, marker='v', c='r')	plt.plot(xdata, ydata, marker='v', c='r')
code: 赤い▼マーカーを使って散布図をプロットする	plt.plot(xdata, ydata, marker='v', c='r')	plt.plot(xdata, ydata, marker='v', c='r')
code: 配列xdataと配列ydataの散布図に赤色の下三角マーカーをプロットする	plt.plot(xdata, ydata, marker='v', c='r')	plt.plot(xdata, ydata, marker='v', c='r')
code: データ列xdataとリストydataについての散布図に赤い▼マーカーを描画する	plt.plot(xdata, ydata, marker='v', c='r')	plt.plot(xdata, ydata, marker='v', c='r')
code: リストxdataとイテラブルydataの散布図に赤色の下三角印を描く	plt.plot(xdata, ydata, marker='v', c='r')	plt.plot(xdata, ydata, marker='v', c='r')
code: 散布図に赤色の左三角マーカーを使用する	plt.plot(xdata, ydata, marker='<', c='r')	plt.plot(xdata, ydata, marker='<', c='r')
code: 赤い左三角マーカーを散布図に用いる	plt.plot(xdata, ydata, marker='<', c='r')	plt.plot(xdata, ydata, marker='<', c='r')
code: 散布図を赤い左三角印で描画する	plt.plot(xdata, ydata, marker='<', c='r')	plt.plot(xdata, ydata, marker='<', c='r')
code: 散布図を赤色の左三角印として描く	plt.plot(xdata, ydata, marker='<', c='r')	plt.plot(xdata, ydata, marker='<', c='r')
code: 散布図を赤い左三角印でプロットする	plt.plot(xdata, ydata, marker='<', c='r')	plt.plot(xdata, ydata, marker='<', c='r')
code: 赤色の左三角マーカーを配列xdataとイテラブルydataについての散布図にプロットする	plt.plot(xdata, ydata, marker='<', c='r')	plt.plot(xdata, ydata, marker='<', c='r')
code: 赤い左三角印をデータ列xdataと配列ydataの散布図に描く	plt.plot(xdata, ydata, marker='<', c='r')	plt.plot(xdata, ydata, marker='<', c='r')
code: 赤色の左三角マーカーをデータ列xdataとイテラブルydataについての散布図に描く	plt.plot(xdata, ydata, marker='<', c='r')	plt.plot(xdata, ydata, marker='<', c='r')
code: 散布図に赤い右三角マーカーを使う	plt.plot(xdata, ydata, marker='>', c='r')	plt.plot(xdata, ydata, marker='>', c='r')
code: 赤色の右三角マーカーを散布図に使う	plt.plot(xdata, ydata, marker='>', c='r')	plt.plot(xdata, ydata, marker='>', c='r')
code: 赤い右三角マーカーとして散布図を描画する	plt.plot(xdata, ydata, marker='>', c='r')	plt.plot(xdata, ydata, marker='>', c='r')
code: 赤色の右三角マーカーを使って散布図を描画する	plt.plot(xdata, ydata, marker='>', c='r')	plt.plot(xdata, ydata, marker='>', c='r')
code: 散布図を赤色の右三角マーカーを使って描く	plt.plot(xdata, ydata, marker='>', c='r')	plt.plot(xdata, ydata, marker='>', c='r')
code: 赤色の右三角マーカーをリストxdataとイテラブルydataの散布図にプロットする	plt.plot(xdata, ydata, marker='>', c='r')	plt.plot(xdata, ydata, marker='>', c='r')
code: 赤い右三角マーカーをデータ列xdataとイテラブルydataの散布図に描く	plt.plot(xdata, ydata, marker='>', c='r')	plt.plot(xdata, ydata, marker='>', c='r')
code: 数列xdataとデータ列ydataについての散布図に赤い右三角マーカーをプロットする	plt.plot(xdata, ydata, marker='>', c='r')	plt.plot(xdata, ydata, marker='>', c='r')
code: 散布図に赤いクロスマーカーを使用する	plt.plot(xdata, ydata, marker='x', c='r')	plt.plot(xdata, ydata, marker='x', c='r')
code: 散布図に赤いバツ印を用いる	plt.plot(xdata, ydata, marker='x', c='r')	plt.plot(xdata, ydata, marker='x', c='r')
code: 赤色のクロスマーカーを散布図に使う	plt.plot(xdata, ydata, marker='x', c='r')	plt.plot(xdata, ydata, marker='x', c='r')
code: 散布図を赤色のバツ印で描く	plt.plot(xdata, ydata, marker='x', c='r')	plt.plot(xdata, ydata, marker='x', c='r')
code: 散布図を赤色のクロスマーカーとしてプロットする	plt.plot(xdata, ydata, marker='x', c='r')	plt.plot(xdata, ydata, marker='x', c='r')
code: 散布図を赤色のバツ印を使って描画する	plt.plot(xdata, ydata, marker='x', c='r')	plt.plot(xdata, ydata, marker='x', c='r')
code: 赤色のバツマーカーを配列xdataと数列ydataの散布図に描く	plt.plot(xdata, ydata, marker='x', c='r')	plt.plot(xdata, ydata, marker='x', c='r')
code: イテラブルxdataとデータ列ydataの散布図に赤色のクロスマーカーを描く	plt.plot(xdata, ydata, marker='x', c='r')	plt.plot(xdata, ydata, marker='x', c='r')
code: 赤色のクロス印を配列xdataと配列ydataについての散布図にプロットする	plt.plot(xdata, ydata, marker='x', c='r')	plt.plot(xdata, ydata, marker='x', c='r')
code: 散布図に赤色の大バツマーカーを使う	plt.plot(xdata, ydata, marker='X', c='r')	plt.plot(xdata, ydata, marker='X', c='r')
code: 散布図に赤色の大バツ印を使う	plt.plot(xdata, ydata, marker='X', c='r')	plt.plot(xdata, ydata, marker='X', c='r')
code: 赤い大バツマーカーを使って散布図を描画する	plt.plot(xdata, ydata, marker='X', c='r')	plt.plot(xdata, ydata, marker='X', c='r')
code: 赤色の大バツ印を使って散布図を描く	plt.plot(xdata, ydata, marker='X', c='r')	plt.plot(xdata, ydata, marker='X', c='r')
code: 赤い大バツ印として散布図を描く	plt.plot(xdata, ydata, marker='X', c='r')	plt.plot(xdata, ydata, marker='X', c='r')
code: 赤色の大バツ印をデータ列xdataとイテラブルydataについての散布図にプロットする	plt.plot(xdata, ydata, marker='X', c='r')	plt.plot(xdata, ydata, marker='X', c='r')
code: リストxdataと配列ydataの散布図に赤い大バツマーカーを描く	plt.plot(xdata, ydata, marker='X', c='r')	plt.plot(xdata, ydata, marker='X', c='r')
code: データ列xdataとデータ列ydataについての散布図に赤色の大バツマーカーをプロットする	plt.plot(xdata, ydata, marker='X', c='r')	plt.plot(xdata, ydata, marker='X', c='r')
code: 赤い四角印を散布図に使用する	plt.plot(xdata, ydata, marker='s', c='r')	plt.plot(xdata, ydata, marker='s', c='r')
code: 散布図に赤い四角印を使う	plt.plot(xdata, ydata, marker='s', c='r')	plt.plot(xdata, ydata, marker='s', c='r')
code: 赤い四角マーカーで散布図を描く	plt.plot(xdata, ydata, marker='s', c='r')	plt.plot(xdata, ydata, marker='s', c='r')
code: 散布図を赤色の四角マーカーとしてプロットする	plt.plot(xdata, ydata, marker='s', c='r')	plt.plot(xdata, ydata, marker='s', c='r')
code: 散布図を赤色の四角印で描画する	plt.plot(xdata, ydata, marker='s', c='r')	plt.plot(xdata, ydata, marker='s', c='r')
code: データ列xdataと数列ydataの散布図に赤い四角印をプロットする	plt.plot(xdata, ydata, marker='s', c='r')	plt.plot(xdata, ydata, marker='s', c='r')
code: イテラブルxdataとリストydataの散布図に赤い四角印を描画する	plt.plot(xdata, ydata, marker='s', c='r')	plt.plot(xdata, ydata, marker='s', c='r')
code: 赤色の四角印を数列xdataと数列ydataの散布図に描画する	plt.plot(xdata, ydata, marker='s', c='r')	plt.plot(xdata, ydata, marker='s', c='r')
code: 赤い菱形印を散布図に使用する	plt.plot(xdata, ydata, marker='D', c='r')	plt.plot(xdata, ydata, marker='D', c='r')
code: 散布図に赤色の菱形印を用いる	plt.plot(xdata, ydata, marker='D', c='r')	plt.plot(xdata, ydata, marker='D', c='r')
code: 赤色のダイアモンド印を散布図に使用する	plt.plot(xdata, ydata, marker='D', c='r')	plt.plot(xdata, ydata, marker='D', c='r')
code: 赤いダイアモンド印で散布図を描画する	plt.plot(xdata, ydata, marker='D', c='r')	plt.plot(xdata, ydata, marker='D', c='r')
code: 散布図を赤いダイアモンドマーカーを使ってプロットする	plt.plot(xdata, ydata, marker='D', c='r')	plt.plot(xdata, ydata, marker='D', c='r')
code: 散布図を赤い菱形印として描画する	plt.plot(xdata, ydata, marker='D', c='r')	plt.plot(xdata, ydata, marker='D', c='r')
code: データ列xdataとイテラブルydataの散布図に赤色のダイアモンド印を描画する	plt.plot(xdata, ydata, marker='D', c='r')	plt.plot(xdata, ydata, marker='D', c='r')
code: 数列xdataとリストydataについての散布図に赤いダイアモンドマーカーをプロットする	plt.plot(xdata, ydata, marker='D', c='r')	plt.plot(xdata, ydata, marker='D', c='r')
code: 赤いダイアモンドマーカーをイテラブルxdataと配列ydataの散布図に描く	plt.plot(xdata, ydata, marker='D', c='r')	plt.plot(xdata, ydata, marker='D', c='r')
code: 赤い星印を散布図に用いる	plt.plot(xdata, ydata, marker='*', c='r')	plt.plot(xdata, ydata, marker='*', c='r')
code: 赤い星マーカーを散布図に使用する	plt.plot(xdata, ydata, marker='*', c='r')	plt.plot(xdata, ydata, marker='*', c='r')
code: 赤色の星マーカーとして散布図を描く	plt.plot(xdata, ydata, marker='*', c='r')	plt.plot(xdata, ydata, marker='*', c='r')
code: 散布図を赤色の星マーカーを使って描画する	plt.plot(xdata, ydata, marker='*', c='r')	plt.plot(xdata, ydata, marker='*', c='r')
code: 赤い星印として散布図をプロットする	plt.plot(xdata, ydata, marker='*', c='r')	plt.plot(xdata, ydata, marker='*', c='r')
code: データ列xdataと配列ydataについての散布図に赤い星マーカーをプロットする	plt.plot(xdata, ydata, marker='*', c='r')	plt.plot(xdata, ydata, marker='*', c='r')
code: 赤い星マーカーを数列xdataと数列ydataの散布図に描く	plt.plot(xdata, ydata, marker='*', c='r')	plt.plot(xdata, ydata, marker='*', c='r')
code: 赤色の星マーカーをデータ列xdataとイテラブルydataについての散布図にプロットする	plt.plot(xdata, ydata, marker='*', c='r')	plt.plot(xdata, ydata, marker='*', c='r')
code: 散布図に黒いポイント印を使用する	plt.plot(xdata, ydata, marker='.', c='k')	plt.plot(xdata, ydata, marker='.', c='k')
code: 散布図に黒いポイントマーカーを使用する	plt.plot(xdata, ydata, marker='.', c='k')	plt.plot(xdata, ydata, marker='.', c='k')
code: 散布図を黒色のポイント印を使って描画する	plt.plot(xdata, ydata, marker='.', c='k')	plt.plot(xdata, ydata, marker='.', c='k')
code: 散布図を黒色のポイントマーカーで描画する	plt.plot(xdata, ydata, marker='.', c='k')	plt.plot(xdata, ydata, marker='.', c='k')
code: 散布図を黒色のポイント印を使って描画する	plt.plot(xdata, ydata, marker='.', c='k')	plt.plot(xdata, ydata, marker='.', c='k')
code: 黒いポイント印を数列xdataとデータ列ydataの散布図にプロットする	plt.plot(xdata, ydata, marker='.', c='k')	plt.plot(xdata, ydata, marker='.', c='k')
code: イテラブルxdataとリストydataの散布図に黒いポイント印を描く	plt.plot(xdata, ydata, marker='.', c='k')	plt.plot(xdata, ydata, marker='.', c='k')
code: 黒いポイント印をデータ列xdataとデータ列ydataについての散布図に描く	plt.plot(xdata, ydata, marker='.', c='k')	plt.plot(xdata, ydata, marker='.', c='k')
code: 黒色の丸印を散布図に使用する	plt.plot(xdata, ydata, marker='o', c='k')	plt.plot(xdata, ydata, marker='o', c='k')
code: 散布図に黒色の丸印を用いる	plt.plot(xdata, ydata, marker='o', c='k')	plt.plot(xdata, ydata, marker='o', c='k')
code: 散布図を黒い丸マーカーとして描く	plt.plot(xdata, ydata, marker='o', c='k')	plt.plot(xdata, ydata, marker='o', c='k')
code: 散布図を黒色の丸印で描く	plt.plot(xdata, ydata, marker='o', c='k')	plt.plot(xdata, ydata, marker='o', c='k')
code: 黒色の丸印として散布図をプロットする	plt.plot(xdata, ydata, marker='o', c='k')	plt.plot(xdata, ydata, marker='o', c='k')
code: 黒色の丸マーカーを配列xdataとデータ列ydataの散布図に描く	plt.plot(xdata, ydata, marker='o', c='k')	plt.plot(xdata, ydata, marker='o', c='k')
code: リストxdataと数列ydataの散布図に黒い丸印をプロットする	plt.plot(xdata, ydata, marker='o', c='k')	plt.plot(xdata, ydata, marker='o', c='k')
code: 黒い丸マーカーをリストxdataと配列ydataの散布図に描く	plt.plot(xdata, ydata, marker='o', c='k')	plt.plot(xdata, ydata, marker='o', c='k')
code: 散布図に黒色の▲マーカーを使う	plt.plot(xdata, ydata, marker='^', c='k')	plt.plot(xdata, ydata, marker='^', c='k')
code: 散布図に黒い上三角マーカーを使用する	plt.plot(xdata, ydata, marker='^', c='k')	plt.plot(xdata, ydata, marker='^', c='k')
code: 散布図に黒い三角印を使用する	plt.plot(xdata, ydata, marker='^', c='k')	plt.plot(xdata, ydata, marker='^', c='k')
code: 散布図を黒い三角マーカーとして描画する	plt.plot(xdata, ydata, marker='^', c='k')	plt.plot(xdata, ydata, marker='^', c='k')
code: 散布図を黒色の△印で描画する	plt.plot(xdata, ydata, marker='^', c='k')	plt.plot(xdata, ydata, marker='^', c='k')
code: 散布図を黒色の上三角印としてプロットする	plt.plot(xdata, ydata, marker='^', c='k')	plt.plot(xdata, ydata, marker='^', c='k')
code: 黒い△印をイテラブルxdataと数列ydataについての散布図にプロットする	plt.plot(xdata, ydata, marker='^', c='k')	plt.plot(xdata, ydata, marker='^', c='k')
code: 数列xdataとイテラブルydataについての散布図に黒い△マーカーを描く	plt.plot(xdata, ydata, marker='^', c='k')	plt.plot(xdata, ydata, marker='^', c='k')
code: 黒色の△マーカーをデータ列xdataとリストydataについての散布図に描く	plt.plot(xdata, ydata, marker='^', c='k')	plt.plot(xdata, ydata, marker='^', c='k')
code: 散布図に黒色の▽印を使用する	plt.plot(xdata, ydata, marker='v', c='k')	plt.plot(xdata, ydata, marker='v', c='k')
code: 黒い下三角マーカーを散布図に使う	plt.plot(xdata, ydata, marker='v', c='k')	plt.plot(xdata, ydata, marker='v', c='k')
code: 散布図に黒色の▽印を用いる	plt.plot(xdata, ydata, marker='v', c='k')	plt.plot(xdata, ydata, marker='v', c='k')
code: 黒色の▼印で散布図をプロットする	plt.plot(xdata, ydata, marker='v', c='k')	plt.plot(xdata, ydata, marker='v', c='k')
code: 黒い下三角印を用いて散布図を描画する	plt.plot(xdata, ydata, marker='v', c='k')	plt.plot(xdata, ydata, marker='v', c='k')
code: 黒色の▼印で散布図を描画する	plt.plot(xdata, ydata, marker='v', c='k')	plt.plot(xdata, ydata, marker='v', c='k')
code: 黒色の下三角印を配列xdataとイテラブルydataについての散布図にプロットする	plt.plot(xdata, ydata, marker='v', c='k')	plt.plot(xdata, ydata, marker='v', c='k')
code: 黒色の▼印をデータ列xdataとイテラブルydataについての散布図に描く	plt.plot(xdata, ydata, marker='v', c='k')	plt.plot(xdata, ydata, marker='v', c='k')
code: 数列xdataとデータ列ydataの散布図に黒色の下三角印を描画する	plt.plot(xdata, ydata, marker='v', c='k')	plt.plot(xdata, ydata, marker='v', c='k')
code: 黒い左三角マーカーを散布図に使う	plt.plot(xdata, ydata, marker='<', c='k')	plt.plot(xdata, ydata, marker='<', c='k')
code: 黒い左三角印を散布図に使用する	plt.plot(xdata, ydata, marker='<', c='k')	plt.plot(xdata, ydata, marker='<', c='k')
code: 散布図を黒色の左三角マーカーを使って描画する	plt.plot(xdata, ydata, marker='<', c='k')	plt.plot(xdata, ydata, marker='<', c='k')
code: 黒色の左三角マーカーを用いて散布図をプロットする	plt.plot(xdata, ydata, marker='<', c='k')	plt.plot(xdata, ydata, marker='<', c='k')
code: 黒い左三角マーカーとして散布図を描く	plt.plot(xdata, ydata, marker='<', c='k')	plt.plot(xdata, ydata, marker='<', c='k')
code: 黒い左三角印をデータ列xdataと数列ydataについての散布図にプロットする	plt.plot(xdata, ydata, marker='<', c='k')	plt.plot(xdata, ydata, marker='<', c='k')
code: 黒い左三角マーカーをデータ列xdataとイテラブルydataについての散布図に描く	plt.plot(xdata, ydata, marker='<', c='k')	plt.plot(xdata, ydata, marker='<', c='k')
code: 黒い左三角印を配列xdataとデータ列ydataについての散布図にプロットする	plt.plot(xdata, ydata, marker='<', c='k')	plt.plot(xdata, ydata, marker='<', c='k')
code: 黒い右三角マーカーを散布図に使う	plt.plot(xdata, ydata, marker='>', c='k')	plt.plot(xdata, ydata, marker='>', c='k')
code: 散布図に黒色の右三角印を用いる	plt.plot(xdata, ydata, marker='>', c='k')	plt.plot(xdata, ydata, marker='>', c='k')
code: 散布図を黒色の右三角印で描く	plt.plot(xdata, ydata, marker='>', c='k')	plt.plot(xdata, ydata, marker='>', c='k')
code: 黒い右三角印で散布図を描く	plt.plot(xdata, ydata, marker='>', c='k')	plt.plot(xdata, ydata, marker='>', c='k')
code: 散布図を黒色の右三角印でプロットする	plt.plot(xdata, ydata, marker='>', c='k')	plt.plot(xdata, ydata, marker='>', c='k')
code: 配列xdataとイテラブルydataについての散布図に黒い右三角マーカーを描画する	plt.plot(xdata, ydata, marker='>', c='k')	plt.plot(xdata, ydata, marker='>', c='k')
code: 黒い右三角印をデータ列xdataと数列ydataの散布図にプロットする	plt.plot(xdata, ydata, marker='>', c='k')	plt.plot(xdata, ydata, marker='>', c='k')
code: 黒色の右三角印をイテラブルxdataと配列ydataについての散布図に描画する	plt.plot(xdata, ydata, marker='>', c='k')	plt.plot(xdata, ydata, marker='>', c='k')
code: 散布図に黒いクロスマーカーを使う	plt.plot(xdata, ydata, marker='x', c='k')	plt.plot(xdata, ydata, marker='x', c='k')
code: 散布図に黒いクロス印を使用する	plt.plot(xdata, ydata, marker='x', c='k')	plt.plot(xdata, ydata, marker='x', c='k')
code: 散布図に黒色のクロスマーカーを使用する	plt.plot(xdata, ydata, marker='x', c='k')	plt.plot(xdata, ydata, marker='x', c='k')
code: 黒いバツ印として散布図を描く	plt.plot(xdata, ydata, marker='x', c='k')	plt.plot(xdata, ydata, marker='x', c='k')
code: 散布図を黒色のクロス印でプロットする	plt.plot(xdata, ydata, marker='x', c='k')	plt.plot(xdata, ydata, marker='x', c='k')
code: 散布図を黒色のバツマーカーで描画する	plt.plot(xdata, ydata, marker='x', c='k')	plt.plot(xdata, ydata, marker='x', c='k')
code: データ列xdataとデータ列ydataの散布図に黒色のクロス印を描く	plt.plot(xdata, ydata, marker='x', c='k')	plt.plot(xdata, ydata, marker='x', c='k')
code: 黒色のバツマーカーを配列xdataと数列ydataの散布図にプロットする	plt.plot(xdata, ydata, marker='x', c='k')	plt.plot(xdata, ydata, marker='x', c='k')
code: 黒色のクロス印を数列xdataと数列ydataの散布図に描画する	plt.plot(xdata, ydata, marker='x', c='k')	plt.plot(xdata, ydata, marker='x', c='k')
code: 散布図に黒い大バツ印を用いる	plt.plot(xdata, ydata, marker='X', c='k')	plt.plot(xdata, ydata, marker='X', c='k')
code: 散布図に黒い大バツ印を使う	plt.plot(xdata, ydata, marker='X', c='k')	plt.plot(xdata, ydata, marker='X', c='k')
code: 黒い大バツ印で散布図を描画する	plt.plot(xdata, ydata, marker='X', c='k')	plt.plot(xdata, ydata, marker='X', c='k')
code: 黒い大バツ印で散布図を描画する	plt.plot(xdata, ydata, marker='X', c='k')	plt.plot(xdata, ydata, marker='X', c='k')
code: 黒色の大バツマーカーとして散布図を描く	plt.plot(xdata, ydata, marker='X', c='k')	plt.plot(xdata, ydata, marker='X', c='k')
code: 黒い大バツ印をリストxdataと数列ydataの散布図に描く	plt.plot(xdata, ydata, marker='X', c='k')	plt.plot(xdata, ydata, marker='X', c='k')
code: イテラブルxdataとリストydataの散布図に黒い大バツマーカーを描く	plt.plot(xdata, ydata, marker='X', c='k')	plt.plot(xdata, ydata, marker='X', c='k')
code: 黒い大バツ印をイテラブルxdataと数列ydataの散布図にプロットする	plt.plot(xdata, ydata, marker='X', c='k')	plt.plot(xdata, ydata, marker='X', c='k')
code: 黒い四角印を散布図に用いる	plt.plot(xdata, ydata, marker='s', c='k')	plt.plot(xdata, ydata, marker='s', c='k')
code: 散布図に黒い四角印を使用する	plt.plot(xdata, ydata, marker='s', c='k')	plt.plot(xdata, ydata, marker='s', c='k')
code: 黒い四角印を用いて散布図を描く	plt.plot(xdata, ydata, marker='s', c='k')	plt.plot(xdata, ydata, marker='s', c='k')
code: 散布図を黒色の四角マーカーを用いて描く	plt.plot(xdata, ydata, marker='s', c='k')	plt.plot(xdata, ydata, marker='s', c='k')
code: 散布図を黒色の四角印として描画する	plt.plot(xdata, ydata, marker='s', c='k')	plt.plot(xdata, ydata, marker='s', c='k')
code: イテラブルxdataと配列ydataについての散布図に黒色の四角印を描く	plt.plot(xdata, ydata, marker='s', c='k')	plt.plot(xdata, ydata, marker='s', c='k')
code: 数列xdataと数列ydataの散布図に黒い四角マーカーを描画する	plt.plot(xdata, ydata, marker='s', c='k')	plt.plot(xdata, ydata, marker='s', c='k')
code: イテラブルxdataと配列ydataの散布図に黒い四角印を描く	plt.plot(xdata, ydata, marker='s', c='k')	plt.plot(xdata, ydata, marker='s', c='k')
code: 散布図に黒色の菱形印を使用する	plt.plot(xdata, ydata, marker='D', c='k')	plt.plot(xdata, ydata, marker='D', c='k')
code: 黒色の菱形マーカーを散布図に用いる	plt.plot(xdata, ydata, marker='D', c='k')	plt.plot(xdata, ydata, marker='D', c='k')
code: 散布図に黒色の菱形マーカーを使用する	plt.plot(xdata, ydata, marker='D', c='k')	plt.plot(xdata, ydata, marker='D', c='k')
code: 黒い菱形マーカーとして散布図を描く	plt.plot(xdata, ydata, marker='D', c='k')	plt.plot(xdata, ydata, marker='D', c='k')
code: 黒い菱形印として散布図を描画する	plt.plot(xdata, ydata, marker='D', c='k')	plt.plot(xdata, ydata, marker='D', c='k')
code: 黒い菱形マーカーとして散布図を描画する	plt.plot(xdata, ydata, marker='D', c='k')	plt.plot(xdata, ydata, marker='D', c='k')
code: 黒いダイアモンドマーカーを配列xdataと配列ydataについての散布図にプロットする	plt.plot(xdata, ydata, marker='D', c='k')	plt.plot(xdata, ydata, marker='D', c='k')
code: 数列xdataと配列ydataの散布図に黒色のダイアモンドマーカーをプロットする	plt.plot(xdata, ydata, marker='D', c='k')	plt.plot(xdata, ydata, marker='D', c='k')
code: 黒いダイアモンド印をイテラブルxdataとイテラブルydataについての散布図に描画する	plt.plot(xdata, ydata, marker='D', c='k')	plt.plot(xdata, ydata, marker='D', c='k')
code: 黒色の星印を散布図に使う	plt.plot(xdata, ydata, marker='*', c='k')	plt.plot(xdata, ydata, marker='*', c='k')
code: 黒い星印を散布図に用いる	plt.plot(xdata, ydata, marker='*', c='k')	plt.plot(xdata, ydata, marker='*', c='k')
code: 散布図を黒い星印を使ってプロットする	plt.plot(xdata, ydata, marker='*', c='k')	plt.plot(xdata, ydata, marker='*', c='k')
code: 散布図を黒い星マーカーを使ってプロットする	plt.plot(xdata, ydata, marker='*', c='k')	plt.plot(xdata, ydata, marker='*', c='k')
code: 黒色の星マーカーとして散布図を描く	plt.plot(xdata, ydata, marker='*', c='k')	plt.plot(xdata, ydata, marker='*', c='k')
code: 黒い星印をリストxdataとデータ列ydataの散布図にプロットする	plt.plot(xdata, ydata, marker='*', c='k')	plt.plot(xdata, ydata, marker='*', c='k')
code: データ列xdataとリストydataについての散布図に黒い星マーカーを描く	plt.plot(xdata, ydata, marker='*', c='k')	plt.plot(xdata, ydata, marker='*', c='k')
code: イテラブルxdataと数列ydataについての散布図に黒色の星マーカーを描画する	plt.plot(xdata, ydata, marker='*', c='k')	plt.plot(xdata, ydata, marker='*', c='k')
code: グラフに鉛直方向の破線を付ける	plt.axhline(y=0, linestyle='dashed')	plt.axvline(x=0, linestyle='dashed')
code: にx=0の破線を設定する	plt.axvline(x=0, linestyle='dashed')	plt.axvline(x=0, linestyle='dashed')
code: グラフにx=0の一点鎖線をつける	plt.axhline(y=0, linestyle='dashbot')	plt.axvline(x=0, linestyle='dashbot')
code: グラフにx=0の一点鎖線を設定する	plt.axhline(y=0, linestyle='dashbot')	plt.axvline(x=0, linestyle='dashbot')
code: グラフに鉛直方向の点線をつける	plt.axvline(x=0, linestyle='dotted')	plt.axvline(x=0, linestyle='dotted')
code: グラフに鉛直方向の点線を設定する	plt.axvline(x=0, linestyle='dotted')	plt.axvline(x=0, linestyle='dotted')
code: グラフにx=0の実線を設定する	plt.axvline(x=0, linestyle='solid')	plt.axvline(x=0, linestyle='solid')
code: に鉛直方向の実線をつける	plt.axvline(x=0, linestyle='solid')	plt.axvline(x=0, linestyle='solid')
code: グラフに水平方向の破線を付ける	plt.axhline(y=0, linestyle='dashed')	plt.axhline(y=0, linestyle='dashed')
code: グラフにy=0の破線を設定する	plt.axhline(y=0, linestyle='dashed')	plt.axhline(y=0, linestyle='dashed')
code: に水平方向の一点鎖線をつける	plt.axhline(y=0, linestyle='dashbot')	plt.axhline(y=0, linestyle='dashbot')
code: グラフに水平方向の一点鎖線をつける	plt.axhline(y=0, linestyle='dashbot')	plt.axhline(y=0, linestyle='dashbot')
code: に水平方向の点線を付ける	plt.axhline(y=0, linestyle='dotted')	plt.axhline(y=0, linestyle='dotted')
code: にy=0の点線を設定する	plt.axhline(y=0, linestyle='dotted')	plt.axhline(y=0, linestyle='dotted')
code: グラフにy=0の実線をつける	plt.axvline(x=0, linestyle='solid')	plt.axhline(y=0, linestyle='solid')
code: グラフに水平方向の実線を付ける	plt.axvline(x=0, linestyle='solid')	plt.axhline(y=0, linestyle='solid')
code: alistに応じて散布図の色を変える	plt.scatter(xdata, ydata, c=alist, cmap='Blues')	plt.scatter(xdata, ydata, c=alist, cmap='Blues')
code: 配列xdataと数列ydataについてalistの値に応じて散布図の色を変える	plt.scatter(xdata, ydata, c=alist, cmap='Blues')	plt.scatter(xdata, ydata, c=alist, cmap='Blues')
code: イテラブルxdataとリストydataについてalistの値に応じて散布図の色を変える	plt.scatter(xdata, ydata, c=alist, cmap='Blues')	plt.scatter(xdata, ydata, c=alist, cmap='Blues')
code: カラーバーをプロットする	plt.colorbar()	plt.colorbar()
code: カラーバーを設定する	plt.colorbar()	plt.colorbar()
code: カラーバーを水平でプロットする	import seaborn as sns	plt.colorbar(orientation='horizontal')
code: カラーバーを横向きで設定する	plt.colorbar(orientation='horizontal')	plt.colorbar(orientation='horizontal')
code: イテラブルxdataとデータ列ydataの散布図に補足用のラベルを付ける	plt.scatter(xdata, xdata, label=s)	plt.scatter(xdata, xdata, label=s)
code: イテラブルxdataとデータ列ydataの散布図に凡例用のラベルを付ける	plt.scatter(xdata, xdata, label=s)	plt.scatter(xdata, xdata, label=s)
code: 数列xdataとイテラブルydataの散布図を描画してsというデータラベル用のラベルを設定する	plt.scatter(xdata, xdata, label=s)	plt.scatter(xdata, xdata, label=s)
code: イテラブルxdataと数列ydataについて散布図を描画して、文字列sというデータラベル用のラベルを設定する	plt.scatter(xdata, xdata, label=s)	plt.scatter(xdata, xdata, label=s)
code: リストxdataの度数分布図をプロットする	plt.hist(xdata)	plt.hist(xdata)
code: データ列xdataのヒストグラムを描画する	plt.hist(xdata)	plt.hist(xdata)
code: ヒストグラムとしてデータ列xdataを描画する	plt.hist(xdata)	plt.hist(xdata)
code: 配列xdataを柱状図として描画する	plt.hist(xdata)	plt.hist(xdata)
code: 数列xdataを柱状グラフを使ってプロットする	plt.hist(xdata)	plt.hist(xdata)
code: リストxdataをヒストグラムにする	plt.hist(xdata)	plt.hist(xdata)
code: リストxdataをヒストグラムにする	plt.hist(xdata)	plt.hist(xdata)
code: dfのcolについて度数分布図を描画する	plt.hist(df[col])	plt.hist(df[col])
code: dfのカラムcolの柱状図をプロットする	plt.hist(df[col])	plt.hist(df[col])
code: 柱状グラフでデータフレームdfのcolをプロットする	plt.hist(df[col])	plt.hist(df[col])
code: 柱状グラフとしてdfのcolを描く	plt.hist(df[col])	plt.hist(df[col])
code: データフレームdfのカラムcolをヒストグラムを用いて描画する	plt.hist(df[col])	plt.hist(df[col])
code: dfのcolを柱状グラフを使って描画する	plt.hist(df[col])	plt.hist(df[col])
code: データフレームdfのカラムcolを柱状グラフを使って描く	plt.hist(df[col])	plt.hist(df[col])
code: データフレームdfのカラムcolをヒストグラムを使って描く	plt.hist(df[col])	plt.hist(df[col])
code: ヒストグラムを半透明化する	plt.hist(xdata, alpha=0.5)	plt.hist(xdata, alpha=0.5)
code: ヒストグラムを描く際に半透明ににする	plt.hist(xdata, alpha=0.5)	plt.hist(xdata, alpha=0.5)
code: ヒストグラムを描画する際に半透明化にする	plt.hist(xdata, alpha=0.5)	plt.hist(xdata, alpha=0.5)
code: 柱状グラフを描画して、半透明ににする	plt.hist(xdata, alpha=0.5)	plt.hist(xdata, alpha=0.5)
code: データ列xdataについてのヒストグラムを描画して、半透明化にする	plt.hist(xdata, alpha=0.5)	plt.hist(xdata, alpha=0.5)
code: 度数分布図のアルファをxに変更する	plt.hist(xdata, alpha=x)	plt.hist(xdata, alpha=x)
code: ヒストグラムの透明度をxにする	plt.hist(xdata, alpha=x)	plt.hist(xdata, alpha=x)
code: 度数分布図を描画する際にアルファ値をxに設定する	plt.hist(xdata, alpha=x)	plt.hist(xdata, alpha=x)
code: 度数分布図を描画する際に、透明度をxに設定する	plt.hist(xdata, alpha=x)	plt.hist(xdata, alpha=x)
code: 柱状図を描画して透明度をxとする	plt.hist(xdata, alpha=x)	plt.hist(xdata, alpha=x)
code: データ列xdataの度数分布図を描画して、透明度をxに指定する	plt.hist(xdata, alpha=x)	plt.hist(xdata, alpha=x)
code: ビンをnに設定してリストxdataの柱状図を描く	plt.hist(xdata, bins=n)	plt.hist(xdata, bins=n)
code: データ列xdataの柱状図を区間をnに設定して描く	plt.hist(xdata, bins=n)	plt.hist(xdata, bins=n)
code: 区間の数をnに設定してリストxdataの度数分布図を描画する	plt.hist(xdata, bins=n)	plt.hist(xdata, bins=n)
code: 区間数nのヒストグラムを描画する	plt.hist(xdata, bins=n)	plt.hist(xdata, bins=n)
code: 区間nのヒストグラムを描く	plt.hist(xdata, bins=n)	plt.hist(xdata, bins=n)
code: 柱状グラフを描画する際にビンの数をn変える	plt.hist(xdata, bins=n)	plt.hist(xdata, bins=n)
code: イテラブルxdataの柱状グラフを描画する際にビンをnに変更する	plt.hist(xdata, bins=n)	plt.hist(xdata, bins=n)
code: nからn2の区間でデータ列xdataの柱状グラフを描画する	plt.hist(xdata, range=(n, n2))))))))	plt.hist(xdata, range=(n, n2))
code: リストxdataのヒストグラムをnからn2の間でプロットする	plt.hist(xdata, range=(n, n2)))))	plt.hist(xdata, range=(n, n2))
code: nからn2の区間で配列xdataの柱状図を描画する	plt.hist(xdata, range=(n, n2)	plt.hist(xdata, range=(n, n2))
code: nからn2の範囲の柱状グラフを用いて数列xdataをプロットする	plt.hist(xdata, range=(n, n2))))))	plt.hist(xdata, range=(n, n2))
code: データ列xdataをnからn2の範囲のヒストグラムを用いて描く	plt.hist(xdata, range=(n, n2)	plt.hist(xdata, range=(n, n2))
code: nからn2の区間の度数分布図を用いて配列xdataを描く	plt.hist(xdata, range=(n, n2)))	plt.hist(xdata, range=(n, n2))
code: 配列xdataをnからn2の区間で度数分布図にする	plt.hist(xdata, range=(n, n2)	plt.hist(xdata, range=(n, n2))
code: 数列xdataをnからn2の範囲でヒストグラムにする	plt.hist(xdata, range=(n, n2)	plt.hist(xdata, range=(n, n2))
code: 数列xdataのヒストグラムを描く際に合計を1にする	plt.hist(xdata, density=True)	plt.hist(xdata, density=True)
code: データ列xdataについての柱状図を描く際に合計を1にする	plt.hist(xdata, density=True)	plt.hist(xdata, density=True)
code: 横に並べて柱状グラフを描画する	plt.hist([xdata, ydata], color=['b', 'r'])	plt.hist([xdata, ydata], color=['b', 'r'])
code: 柱状グラフをふたつ並べて描く	plt.hist([xdata, ydata], color=['b', 'r'])	plt.hist([xdata, ydata], color=['b', 'r'])
code: ヒストグラムをふたつ並べて描画する	plt.hist([xdata, ydata], color=['b', 'r'])	plt.hist([xdata, ydata], color=['b', 'r'])
code: aととてもa2を好き	a.index = a / 1	a.index = a / 1
code: とてもaとa2	a.index = a / 1	a.index = a / 1
code: __Y__を日付データに変換し、dfのインデックスにする	df.index = pd.to_datetime(df)	df.index = pd.to_datetime(df)
code: __Y__を日付データに変換し、インデックスにする	df.index = pd.to_datetime(df)	df.index = pd.to_datetime(df)
code: dfのcolがxである行だけ残す	df[df[col] == x]	df[df[col] == x]
code: dfのcolがxであるデータを抽出する	df[df[col] >= x]	df[df[col] == x]
code: dfのcolの値がxでないデータを取り除く	df[df[col] > x]	df[df[col] == x]
code: dfのcolの値がxでない行を取り除く	df[df[col] == x]	df[df[col] == x]
code: ベクトル計算を行う	import numpy as np	import numpy as np
code: 行列演算を行う	import numpy as np	import numpy as np
code: numpyを入れる	plt.grid(n)	import numpy as np
code: 0から9までの配列を生成する	np.arange(10)	np.arange(10)
code: 0から9までの配列を準備する	np.arange(10)	np.arange(10)
code: 3×3の単位行列を準備する	np.identity(3)	np.eye(3)
code: 3×3の単位行列を新規生成する	np.identity(3)	np.eye(3)
code: 3×3の単位行列を作る	np.eye(3)	np.identity(3)
code: 3×3の単位行列を準備する	np.identity(3)	np.identity(3)
code: 要素数5の空の配列を用意する	np.empty(5)	np.empty(5)
code: 要素数5の空の配列を準備する	np.empty(5)	np.empty(5)
code: 2×3の空の配列を作る	np.empty(((((((2, 3)))))	np.empty((2, 3))
code: 2×3の空配列を新規生成する	np.empty((((((2, 3))	np.empty((2, 3))
code: objがobj2に等しい	obj == obj2	obj == obj2
code: オブジェクトobjがobj2に等しいかどうか確認する	obj == obj2	obj == obj2
code: objがobj2	obj == obj2	obj == obj2
code: オブジェクトobjがオブジェクトobj2	obj is obj2	obj == obj2
code: objがobj2と同じかどうかテストする	obj == obj2	obj is obj2
code: objがオブジェクトobj2と同じオブジェクト かどうか判定する	obj == obj2	obj is obj2
code: オブジェクトobjとobj2は同じオブジェクト かどうか調べる	obj is obj2	obj is obj2
code: オブジェクトobjとobj2は同一オブジェクト 	obj is obj2	obj is obj2
code: objをデバッグ向けの文字列に変換する	repr(obj)	repr(obj)
code: objをユーザ向けの文字列にする	str(obj)	str(obj)
code: objのイテレータ	id(obj)	iter(obj)
code: 文字列sをバイト配列にする	s.encode(errors='ignore')	bytearray(s)
code: 文字列sをバイト列にする	bytes(s)	bytes(s)
code: objのメモリビューを求める	type(obj)	memoryview(obj)
code: objは関数かどうか調べる	callable(obj)	callable(obj)
code: オブジェクトobjは関数か調べる	callable(obj)	callable(obj)
code: sを評価する	len(s)	eval(s)
code: グローバル変数の一覧	globals()	globals()
code: オブジェクトobjのtextプロパティを取り除く	getattr(obj, text)	delattr(obj, text)
code: objのtextフィールドを消す	setattr(obj, text)	delattr(obj, text)
code: オブジェクトobjのtextプロパティの値を見る	getattr(obj, text)	getattr(obj, text)
code: objのtextフィールドの値を使う	getattr(obj, text)	getattr(obj, text)
code: オブジェクトobjのプロパティをsで指定してその値を使う	getattr(obj, s)	getattr(obj, s)
code: オブジェクトobjの属性を文字列sで指定して、その値を見る	getattr(obj, s)	getattr(obj, s)
code: オブジェクトobjにtextプロパティがある	hasattr(obj, text)	hasattr(obj, text)
code: objにtext属性があるかどうか	hasattr(obj, text)	hasattr(obj, text)
code: objがtextプロパティを持つ	getattr(obj, text)	hasattr(obj, text)
code: objがtextプロパティを持つ	hasattr(obj, text)	hasattr(obj, text)
code: objにsというフィールドが存在する	hasattr(obj, s)	hasattr(obj, s)
code: objに文字列sという名前のフィールドが存在するかどうか判定する	hasattr(obj, s)	hasattr(obj, s)
code: objが文字列sというプロパティを持つ	hasattr(obj, s)	hasattr(obj, s)
code: オブジェクトobjがsという属性を持つ	hasattr(obj, s)	hasattr(obj, s)
code: オブジェクトobjのtext属性の値をelementに設定する	setattr(obj, text, element)	setattr(obj, text, element)
code: objのtextフィールドの値をelementに設定する	setattr(obj, text, element)	setattr(obj, text, element)
code: オブジェクトobjのハッシュ値を求める	hash(obj)	hash(obj)
code: オブジェクトobjがTYPEクラスか判定する	isinstance(obj, TYPE)	isinstance(obj, TYPE)
code: オブジェクトobjがTYPEクラスか	isinstance(obj, TYPE)	isinstance(obj, TYPE)
code: objが整数かどうか	isinstance(obj, int)	isinstance(obj, int)
code: objは整数か確認する	isinstance(obj, int)	isinstance(obj, int)
code: objは浮動小数点数クラスのインスタンスか調べる	isinstance(obj, float)	isinstance(obj, float)
code: オブジェクトobjは浮動小数点数かテストする	isinstance(obj, float)	isinstance(obj, float)
code: オブジェクトobjは文字列	isinstance(obj, str)	isinstance(obj, str)
code: objが文字列クラス	hasattr(obj, '_asdict') and hasattr(obj, '_fields')	isinstance(obj, str)
code: オブジェクトobjは論理値クラス	isinstance(obj, bool)	isinstance(obj, bool)
code: objは論理値かどうか調べる	isinstance(obj, bool)	isinstance(obj, bool)
code: objがリストかどうか調べる	isinstance(obj, list)	isinstance(obj, list)
code: オブジェクトobjはリスト	isinstance(obj, list)	isinstance(obj, list)
code: objはタプル	isinstance(obj, tuple)	isinstance(obj, tuple)
code: オブジェクトobjはタプル型のインスタンスかどうかテストする	isinstance(obj, tuple)	isinstance(obj, tuple)
code: オブジェクトobjが辞書クラスかテストする	isinstance(obj, dict)	isinstance(obj, dict)
code: オブジェクトobjが辞書	hasattr(obj, '_asdict')	isinstance(obj, dict)
code: オブジェクトobjは集合クラスかどうか	isinstance(obj, set)	isinstance(obj, set)
code: オブジェクトobjは集合かどうかテストする	isinstance(obj, set)	isinstance(obj, set)
code: objはバイト列型	isinstance(obj, bytes)	isinstance(obj, bytes)
code: オブジェクトobjはバイト列型のインスタンス	isinstance(obj, bytes)	isinstance(obj, bytes)
code: オブジェクトobjが数値	isinstance(obj, (int,float))	isinstance(obj, (int,float))
code: オブジェクトobjは数値	isinstance(obj, (int,float)	isinstance(obj, (int,float))
code: オブジェクトobjがリストかタプル	isinstance(obj, list)	isinstance(obj, (list)
code: objはリストかタプル	isinstance(obj, list)	isinstance(obj, (list)
code: TYPE型はTYPE2クラスのサブクラスか	issubclass(TYPE, TYPE2)	issubclass(TYPE, TYPE2)
code: TYPE型がTYPE2クラスのサブ型か調べる	issubclass(TYPE, TYPE2)	issubclass(TYPE, TYPE2)
code: オブジェクトobjの固有のIDを使う	id(obj)	id(obj)
code: objのオブジェクト識別子を求める	type(obj)	id(obj)
code: オブジェクトobjの型を調べる	type(obj)	type(obj)
code: objの型を求める	type(obj)	type(obj)
code: データ列を用いる	import pandas as pd	from sympy import substitution
code: データ列をインポートする	import pandas as pd	from sympy import substitution
code: データフレームdfの基本統計量	df.describe()	df.describe()
code: dfの記述統計量	df.describe()	df.describe()
code: dfのalistカラムの要約統計量を計算する	df[alist].describe()	df[alist].describe()
code: dfのalist列の要約統計量	df[alist].describe()	df[alist].describe()
code: dsの要約統計量	ds.describe()	ds.describe()
code: dsカラムの代表値	ds.describe()	ds.describe()
code: データフレームdfのcolカラムの要約統計量	df[col].describe()	df[col].describe()
code: dfのカラムcolの要約統計量を計算する	df[col].describe()	df[col].describe()
code: dfの平均	df.mean()	df.mean()
code: dfの平均	df.mean()	df.mean()
code: dfのalist列の平均値	df[alist].mean()	df[alist].mean()
code: データフレームdfのalist列の平均値	df[alist].mean()	df[alist].mean()
code: dsの平均を算出する	ds.mean()	ds.mean()
code: dsの平均を求める	ds.mean()	ds.mean()
code: dfのカラムcolの平均を計算する	df[col].mean()	df[col].mean()
code: データフレームdfのカラムcolの平均値	df[col].mean()	df[col].mean()
code: データフレームdfの中央値を求める	df.median()	df.median()
code: データフレームdfのメディアン	df.median()	df.median()
code: dfのalist列の中央値	df[alist].median()	df[alist].median()
code: dfのalist列の第二四分位数	df[alist].median()	df[alist].median()
code: データ列dsの中央値を計算する	ds.median()	ds.median()
code: dsカラムの50パーセンタイルを計算する	ds.median()	ds.median()
code: dfのcolの50パーセンタイルを求める	df[col].quantile(0.25)	df[col].median()
code: dfのカラムcolのメディアン	df[col].median()	df[col].median()
code: データフレームdfの25パーセンタイル	df.median()	df.quantile(0.25)
code: dfの25パーセンタイルを求める	df.quantile(0.25)	df.quantile(0.25)
code: dfのalist列の上位25%	df[alist].quantile(0.75)	df[alist].quantile(0.25)
code: データフレームdfのリストalistカラムの上位25%を算出する	df[alist].quantile(0.75)	df[alist].quantile(0.25)
code: dsの上位25%を算出する	ds.quantile(0.25)	ds.quantile(0.25)
code: dsの上位25%	ds.quantile(0.25)	ds.quantile(0.25)
code: データフレームdfのcolカラムの第一四分位数	df[col].quantile(0.25)	df[col].quantile(0.25)
code: dfのcolカラムの第一四分位数を算出する	df[col].quantile(0.25)	df[col].quantile(0.25)
code: dfの75パーセンタイル	df.quantile(0.25)	df.quantile(0.75)
code: データフレームdfのalist列の下位25%	df[alist].quantile(0.25)	df[alist].quantile(0.75)
code: データフレームdfのalistカラムの第三四分位数	df[alist].quantile(0.25)	df[alist].quantile(0.75)
code: データ列dsの下位25%	ds.quantile(0.75)	ds.quantile(0.75)
code: dsの第三四分位数	ds.quantile(0.75)	ds.quantile(0.75)
code: dfのcol列の下位25%	df[col].quantile(0.75)	df[col].quantile(0.75)
code: dfのcol列の下位25%	df[col].quantile(0.75)	df[col].quantile(0.75)
code: データフレームdfのnパーセンタイル	df.quantile(n/100)	df.quantile(n/100)
code: データフレームdfのnパーセンタイル	df.quantile(n/100)	df.quantile(n/100)
code: データフレームdfのリストalistカラムのnパーセンタイル	df[alist].quantile(n/100)	df[alist].quantile(n/100)
code: dfのリストalistカラムのnパーセンタイルを計算する	df[alist].quantile(n/100)	df[alist].quantile(n/100)
code: データ列dsのn分位数	ds.quantile(n/100)	ds.quantile(n/100)
code: dsのnパーセンタイルを計算する	ds.quantile(n/100)	ds.quantile(n/100)
code: データフレームdfのcolカラムのnパーセンタイル	df[col].quantile(n/100)	df[col].quantile(n/100)
code: データフレームdfの列colのnパーセンタイル	df[col].quantile(n/100)	df[col].quantile(n/100)
code: データフレームdfの最頻値	df.mode()	df.mode()
code: データフレームdfの最頻値を求める	df.mode()	df.mode()
code: データフレームdfのどの値が最も現れるか確認する	df.mode()	df.mode()
code: dfのalist列のモードを計算する	df[alist].mode()	df[alist].mode()
code: データフレームdfのリストalist列のモード	df[alist].mode()	df[alist].mode()
code: データフレームdfのリストalist列のどの値が最も現れるか見る	df[alist].mode()	df[alist].mode()
code: データフレームdfのalistカラムのどの値が最も現れるか見る	df[alist].mode()	df[alist].mode()
code: dsのモード	ds.mode()	ds.mode()
code: dsのモード	ds.mode()	ds.mode()
code: dsのどの値が頻出か確認する	ds.mode()	ds.mode()
code: dsのどの値が頻出か確認する	ds.mode()	ds.mode()
code: データフレームdfのcolの最頻値	df[col].mode()	df[col].mode()
code: データフレームdfのcolのモード	df[col].mode()	df[col].mode()
code: データフレームdfのcolカラムのどの値が最も現れるか見る	df[col].mode()	df[col].mode()
code: データフレームdfのcolのどの値が頻出か見る	df[col].mode()	df[col].mode()
code: データフレームdfの最頻値の出現回数を算出する	df.freq()	df.freq()
code: dfの最頻値の出現回数	df.freq()	df.freq()
code: dfのリストalist列の最頻値の出現回数を算出する	df[alist].freq()	df[alist].freq()
code: dfのリストalistカラムのモードの出現回数	df[alist].freq()	df[alist].freq()
code: データ列dsの最頻値の出現回数	ds.freq()	ds.freq()
code: データ列dsのモードの出現回数	ds.freq()	ds.freq()
code: dfのcolのモードの出現回数	df[col].freq()	df[col].freq()
code: データフレームdfのカラムcolのモードの出現回数を算出する	df[col].freq()	df[col].freq()
code: dfの標準偏差	df.std()	df.std()
code: dfの標準偏差を計算する	df.std()	df.std()
code: データフレームdfのalist列の標本標準偏差を求める	df[alist].std()	df[alist].std()
code: dfのリストalistカラムの標本標準偏差	df[alist].std()	df[alist].std()
code: dsの標準偏差を求める	ds.std()	ds.std()
code: dsの標準偏差を計算する	ds.std()	ds.std()
code: dfのcol列の標本標準偏差	df[col].std()	df[col].std()
code: データフレームdfのcolの標本標準偏差	df[col].std()	df[col].std()
code: dfの母標準偏差を計算する	df.std(ddof=0)	df.std(ddof=0)
code: データフレームdfのalist列の母標準偏差	df[alist].std(ddof=0)	df[alist].std(ddof=0)
code: データフレームdfのリストalistカラムの母標準偏差を算出する	df[alist].std(ddof=0)	df[alist].std(ddof=0)
code: dsカラムの母標準偏差を算出する	ds.std(ddof=0)	ds.std(ddof=0)
code: dsカラムの母標準偏差	ds.std(ddof=0)	ds.std(ddof=0)
code: データフレームdfのcolの母標準偏差を求める	df[col].std(ddof=0)	df[col].std(ddof=0)
code: dfのcolの母標準偏差を計算する	df[col].std(ddof=0)	df[col].std(ddof=0)
code: データフレームdfの分散	df.var()	df.var()
code: データフレームdfはどれだけ、分散しているか確認する	df.var()	df.var()
code: データフレームdfはどれだけ分散しているか確認する	df.var()	df.var()
code: dfのalist列の分散	df[alist].var()	df[alist].var()
code: dfのリストalistカラムの分散	df[alist].var()	df[alist].var()
code: dfのalist列がどの程度分散しているか確認する	df[alist].var()	df[alist].var()
code: dfのalistカラムがどの程度分散しているか見る	df[alist].var()	df[alist].var()
code: データ列dsの分散を計算する	ds.var()	ds.var()
code: データ列dsの分散	ds.var()	ds.var()
code: dsカラムがどれだけ、分散しているか見る	ds.var()	ds.var()
code: dsはどの程度、分散しているか調べる	ds.var()	ds.var()
code: dfのcol列の分散	df[col].var()	df[col].var()
code: データフレームdfのcolの分散を算出する	df[col].var()	df[col].var()
code: データフレームdfのカラムcolがどれだけ、分散しているか見る	df[col].var()	df[col].var()
code: データフレームdfのカラムcolがどれだけ、分散しているか見る	df[col].var()	df[col].var()
code: dfの正規分布に対する左右対称性を求める	df.kurt()	df.kurt()
code: データフレームdfの歪度	df.kurt()	df.kurt()
code: dfは正規分布からどれだけ歪んでいるか調べる	df.kurt()	df.kurt()
code: データフレームdfは正規分布からどれだけ、歪んでいるか見る	df.kurt()	df.kurt()
code: データフレームdfのリストalist列の正規分布に対する左右対称性	df[alist].kurt()	df[alist].kurt()
code: dfのalist列の正規分布に対する左右対称性	df[alist].kurt()	df[alist].kurt()
code: dfのalist列が正規分布からどれだけ、歪んでいるか調べる	df[alist].kurt()	df[alist].kurt()
code: データフレームdfのリストalistカラムが正規分布からどの程度、歪んでいるか確認する	df[alist].kurt()	df[alist].kurt()
code: データ列dsの歪度を算出する	ds.kurt()	ds.kurt()
code: データ列dsの歪度	ds.kurt()	ds.kurt()
code: dsが正規分布からどの程度、歪んでいるか調べる	ds.kurt()	ds.kurt()
code: dsが正規分布からどれだけ歪んでいるか見る	ds.kurt()	ds.kurt()
code: dfのcolの正規分布に対する左右対称性を算出する	df[col].kurt()	df[col].kurt()
code: データフレームdfのcolカラムの歪度を計算する	df[col].kurt()	df[col].kurt()
code: データフレームdfのcol列が正規分布からどれだけ歪んでいるか調べる	df[col].kurt()	df[col].kurt()
code: dfのcolは正規分布からどれだけ、歪んでいるか見る	df[col].kurt()	df[col].kurt()
code: dfの正規分布に対する上下広がりを計算する	df.skew()	df.skew()
code: dfの正規分布に対する上下広がりを求める	df.skew()	df.skew()
code: dfが正規分布からどの程度、尖っているか見る	df.skew()	df.skew()
code: dfが正規分布からどの程度尖っているか確認する	df.skew()	df.skew()
code: データフレームdfのリストalist列の正規分布に対する上下広がりを算出する	df[alist].skew()	df[alist].skew()
code: dfのリストalistカラムの尖度	df[alist].skew()	df[alist].skew()
code: データフレームdfのリストalistカラムが正規分布からどれだけ尖っているか見る	df[alist].skew()	df[alist].skew()
code: データフレームdfのリストalistカラムが正規分布からどの程度尖っているか確認する	df[alist].skew()	df[alist].skew()
code: データ列dsの尖度を求める	ds.skew()	ds.skew()
code: dsの正規分布に対する上下広がり	ds.skew()	ds.skew()
code: dsが正規分布からどの程度、尖っているか確認する	ds.skew()	ds.skew()
code: dsカラムが正規分布からどれだけ尖っているか見る	ds.skew()	ds.skew()
code: データフレームdfのcolカラムの正規分布に対する上下広がり	df[col].skew()	df[col].skew()
code: データフレームdfのカラムcolの正規分布に対する上下広がり	df[col].skew()	df[col].skew()
code: データフレームdfのcolが正規分布からどれだけ尖っているか調べる	df[col].skew()	df[col].skew()
code: データフレームdfの列colが正規分布からどれだけ尖っているか調べる	df[col].skew()	df[col].skew()
code: dfを整数に丸める	df.round()	df.round()
code: データフレームdfのalistカラムを四捨五入する	df[alist].round()	df[alist].round()
code: dfのリストalistカラムを整数に四捨五入する	df[alist].round().astype(int)	df[alist].round()
code: dsを丸める	ds.round()	ds.round()
code: dsを丸める	ds.round()	ds.round()
code: データフレームdfのcolカラムを整数に丸める	df[col].round()	df[col].round()
code: dfのcolを丸める	df[col].round()	df[col].round()
code: dfを小数点以下n桁で丸める	df.round(n)	df.round(n)
code: dfのalist列を小数点以下n桁で丸める	df[alist].round(n)	df[alist].round(n)
code: データフレームdfのalist列を小数点以下n桁で丸める	df[alist].round(n)	df[alist].round(n)
code: dsを小数点以下n桁で四捨五入する	ds.round(n)	ds.round(n)
code: dsを小数点以下n桁で丸める	ds.round(n)	ds.round(n)
code: dfのcolを小数点以下n桁で四捨五入する	df[col].round(n)	df[col].round(n)
code: データフレームdfのcolを小数点以下n桁で四捨五入する	df[col].round(n)	df[col].round(n)
code: データフレームdfを十の位で丸める	df.round(-1)	df.round(-1)
code: データフレームdfのalistカラムを10の位で四捨五入する	df[alist].round(-3)	df[alist].round(-1)
code: データフレームdfのリストalistカラムを10の位で丸める	df[alist].round(-3)	df[alist].round(-1)
code: dsを十の位で丸める	ds.round(-1)	ds.round(-1)
code: dsカラムを10の位で四捨五入する	ds.round(-3)	ds.round(-1)
code: データフレームdfの列colを10の位で丸める	df[col].round(-1)	df[col].round(-1)
code: dfのcolカラムを十の位で四捨五入する	df[col].round(-1)	df[col].round(-1)
code: dfを100の位で丸める	df.round(-1)	df.round(-2)
code: データフレームdfのリストalist列を100の位で丸める	df[alist].round(-1)	df[alist].round(-2)
code: dfのリストalist列を百の位で丸める	df[alist].round(-3)	df[alist].round(-2)
code: dsを百の位で丸める	ds.round(-1)	ds.round(-2)
code: dsを百の位で丸める	ds.round(-1)	ds.round(-2)
code: データフレームdfのcolを百の位で丸める	df[col].round(-3)	df[col].round(-2)
code: データフレームdfのカラムcolを100の位で丸める	df[col].round(-3)	df[col].round(-2)
code: dfを1000の位で丸める	df.round(-3)	df.round(-3)
code: データフレームdfのリストalist列を千の位で丸める	df[alist].round(-3)	df[alist].round(-3)
code: dfのリストalist列を千の位で丸める	df[alist].round(-1)	df[alist].round(-3)
code: dsカラムを千の位で丸める	ds.round(-3)	ds.round(-3)
code: dsを千の位で四捨五入する	ds.round(-3)	ds.round(-3)
code: dfのcol列を1000の位で四捨五入する	df[col].round(-1)	df[col].round(-3)
code: dfの列colを1000の位で四捨五入する	df[col].round(-3)	df[col].round(-3)
code: dfを丸めて、整数型にする	df.round().astype(int)	df.round().astype(int)
code: dfを丸めて、整数型にする	df.round().astype(int)	df.round().astype(int)
code: データフレームdfのalist列を丸めて、整数にする	df[alist].round().astype(int)	df[alist].round().astype(int)
code: データフレームdfのalistカラムを四捨五入して整数型にする	df[alist].round().astype(int)	df[alist].round().astype(int)
code: dsを丸めて、整数型にする	ds.round().astype(int)	ds.round().astype(int)
code: dsカラムを四捨五入して、整数にする	ds.round().astype(int)	ds.round().astype(int)
code: データフレームdfのカラムcolを四捨五入して整数にする	df[col].round().astype(int)	df[col].round().astype(int)
code: データフレームdfの列colを四捨五入して整数型にする	df[col].round()	df[col].round().astype(int)
code: dfを10の位で四捨五入して整数型にする	df.round(-3).astype(int)	df.round(-1).astype(int)
code: dfを10の位で丸めて整数にする	df.round(-1).astype(int)	df.round(-1).astype(int)
code: dfのリストalistカラムを10の位で四捨五入して整数型にする	df[alist].round(-3).astype(int)	df[alist].round(-1).astype(int)
code: データフレームdfのリストalist列を10の位で丸めて整数にする	df[alist].round(-3).astype(int)	df[alist].round(-1).astype(int)
code: dsを10の位で四捨五入して整数にする	ds.round(-3).astype(int)	ds.round(-1).astype(int)
code: データ列dsを10の位で丸めて、整数型にする	ds.round(-2).astype(int)	ds.round(-1).astype(int)
code: データフレームdfのcolを10の位で四捨五入して、整数にする	df[col].round(-2).astype(int)	df[col].round(-1).astype(int)
code: データフレームdfのcol列を10の位で四捨五入して整数型にする	df[col].round(-3).astype(int)	df[col].round(-1).astype(int)
code: dfを百の位で四捨五入して整数にする	df.round(-1).astype(int)	df.round(-2).astype(int)
code: dfを百の位で丸めて整数型にする	df.round(-1).astype(int)	df.round(-2).astype(int)
code: dfのリストalist列を100の位で丸めて整数型にする	df[alist].round(-3).astype(int)	df[alist].round(-2).astype(int)
code: データフレームdfのalistカラムを百の位で四捨五入して整数にする	df[alist].round(-1).astype(int)	df[alist].round(-2).astype(int)
code: データ列dsを百の位で丸めて、整数にする	ds.round(-2).astype(int)	ds.round(-2).astype(int)
code: dsを百の位で丸めて、整数型にする	ds.round(-3).astype(int)	ds.round(-2).astype(int)
code: データフレームdfのcolを100の位で四捨五入して、整数にする	df[col].round(-3).astype(int)	df[col].round(-2).astype(int)
code: dfのカラムcolを100の位で丸めて整数型にする	df[col].round(-3).astype(int)	df[col].round(-2).astype(int)
code: dfを1000の位で四捨五入して整数にする	df.round(-3).astype(int)	df.round(-3).astype(int)
code: データフレームdfを1000の位で丸めて整数にする	df.round(-2).astype(int)	df.round(-3).astype(int)
code: dfのalistカラムを1000の位で四捨五入して整数にする	df[alist].round(-3).astype(int)	df[alist].round(-3).astype(int)
code: dfのリストalistカラムを千の位で四捨五入して、整数型にする	df[alist].round(-1).astype(int)	df[alist].round(-3).astype(int)
code: dsカラムを1000の位で丸めて、整数にする	ds.round(-3).astype(int)	ds.round(-3).astype(int)
code: dsを千の位で丸めて、整数にする	ds.round(-3).astype(int)	ds.round(-3).astype(int)
code: dfのcolカラムを千の位で丸めて整数型にする	df[col].round(-3).astype(int)	df[col].round(-3).astype(int)
code: データフレームdfの列colを1000の位で丸めて、整数にする	df[col].round(-3).astype(int)	df[col].round(-3).astype(int)
code: xでデータフレームdfの欠損値を補う	df.fillna(x)	df.fillna(x)
code: xでデータフレームdfの欠損値を補う	df.fillna(x)	df.fillna(x)
code: dfのNaNをxで置換する	df.fillna(x)	df.fillna(x)
code: dfのNaNをxにする	df.fillna(x)	df.fillna(x)
code: データフレームdfのNaNをxにする	df.fillna(x)	df.fillna(x)
code: xでデータフレームdfのリストalist列の欠損値を置換する	df[alist].fillna(x)	df[alist].fillna(x)
code: xでデータフレームdfのリストalistカラムの欠損値を置換する	df[alist].fillna(x)	df[alist].fillna(x)
code: dfのリストalistカラムの欠損値をxで補う	df[alist].fillna(x)	df[alist].fillna(x)
code: dfのalistカラムの未入力値をxに増やす	df[alist].fillna(x)	df[alist].fillna(x)
code: データフレームdfのリストalistカラムのNaNをxに設定する	df[alist].fillna(x)	df[alist].fillna(x)
code: xでdsカラムの欠損値を補う	ds.fillna(x)	ds.fillna(x)
code: xでデータ列dsの欠損値を置換する	ds.fillna(x)	ds.fillna(x)
code: データ列dsの欠損値をxで置換する	ds.fillna(x)	ds.fillna(x)
code: dsのNaNをxにセットする	ds.fillna(x)	ds.fillna(x)
code: ds列の未入力値をxに指定する	ds.fillna(x)	ds.fillna(x)
code: xでデータフレームdfのcol列の欠損値を補う	df[col].fillna(x)	df[col].fillna(x)
code: データフレームdfのcolの欠損値をxで埋める	df[col].fillna(x)	df[col].fillna(x)
code: xでdfの列colの欠損値を埋める	df[col].fillna(x)	df[col].fillna(x)
code: データフレームdfのcolの欠損値をxにセットする	df[col].fillna(x)	df[col].fillna(x)
code: dfのcolのNaNをxに増やす	df[col].fillna(x)	df[col].fillna(x)
code: 平均でdfの未入力値を置き換える	df.fillna(df.mean()	df.fillna(df.mean())
code: データフレームdfの未入力値を平均で置換する	df.fillna(df.mean())	df.fillna(df.mean())
code: 平均でデータフレームdfのNaNを埋める	df.fillna(df.mean())))))	df.fillna(df.mean())
code: dfの欠損値を平均値にセットする	df.fillna(df.mean()))	df.fillna(df.mean())
code: データフレームdfの欠損値を平均値に減らす	df.fillna(df.mean()	df.fillna(df.mean())
code: dfのalist列の未入力値を平均で埋める	df[alist].fillna(df[alist].mean()	df[alist].fillna(df[alist].mean())
code: dfのリストalistカラムの欠損値を平均値で置換する	df[alist].fillna(df[alist].mean())	df[alist].fillna(df[alist].mean())
code: 平均値でデータフレームdfのalistカラムのNaNを補う	df[alist].fillna(df[alist].mean()))	df[alist].fillna(df[alist].mean())
code: dfのalist列の未入力値を平均値に設定する	df[alist].fillna(df[alist].mean()	df[alist].fillna(df[alist].mean())
code: dfのリストalistカラムの未入力値を平均にセットする	df[alist].fillna(df[alist].mean())	df[alist].fillna(df[alist].mean())
code: dsの欠損値を平均値で埋める	ds.fillna(ds.mean())	ds.fillna(ds.mean())
code: 平均でds列の欠損値を補う	ds.fillna(ds.mean()	ds.fillna(ds.mean())
code: dsの未入力値を平均で埋める	ds.fillna(ds.mean()	ds.fillna(ds.mean())
code: データ列dsの未入力値を平均にセットする	ds.fillna(ds.mean()	ds.fillna(ds.mean())
code: dsのNaNを平均に減らす	ds.fillna(ds.mean())	ds.fillna(ds.mean())
code: 平均でdfのカラムcolの未入力値を補う	df[col].fillna(df[col].mean())	df[col].fillna(df[col].mean())
code: 平均でdfの列colの欠損値を埋める	df[col].fillna(df[col].mean())	df[col].fillna(df[col].mean())
code: データフレームdfのcolカラムの欠損値を平均で埋める	df[col].fillna(df[col].mean()	df[col].fillna(df[col].mean())
code: dfのcolの未入力値を平均にする	df[col].fillna(df[col].mean()	df[col].fillna(df[col].mean())
code: データフレームdfのcolカラムの未入力値を平均に指定する	df[col].fillna(df[col].mean()	df[col].fillna(df[col].mean())
code: 最頻値でデータフレームdfのNaNを補う	df.fillna(df.mode().iloc[0])	df.fillna(df.mode().iloc[0])
code: モードでデータフレームdfのNaNを置換する	df.fillna(df.mode().iloc[0])	df.fillna(df.mode().iloc[0])
code: dfのNaNをモードで補う	df.fillna(df.mode().iloc[0])	df.fillna(df.mode().iloc[0])
code: dfのNaNをモードに指定する	df.fillna(df.mode().iloc[0])	df.fillna(df.mode().iloc[0])
code: データフレームdfの未入力値を最頻値に設定する	df.fillna(df.mode().iloc[0])	df.fillna(df.mode().iloc[0])
code: モードでデータフレームdfのalistカラムの欠損値を置換する	df[alist].fillna(df[alist].mode().iloc[0])	df[alist].fillna(df[alist].mode().iloc[0])
code: データフレームdfのalistカラムのNaNを最頻値で補う	df[alist].fillna(df[alist].mode().iloc[0])	df[alist].fillna(df[alist].mode().iloc[0])
code: データフレームdfのalistカラムのNaNを最頻値で補う	df[alist].fillna(df[alist].mode().iloc[0])	df[alist].fillna(df[alist].mode().iloc[0])
code: dfのリストalistカラムの欠損値をモードに設定する	df[alist].fillna(df[alist].mode().iloc[0])	df[alist].fillna(df[alist].mode().iloc[0])
code: データフレームdfのリストalist列の欠損値を最頻値にセットする	df[alist].fillna(df[alist].mode().iloc[0])	df[alist].fillna(df[alist].mode().iloc[0])
code: 最頻値でds列の未入力値を埋める	ds.fillna(ds.mode().iloc[0])	ds.fillna(ds.mode().iloc[0])
code: データ列dsの未入力値をモードで埋める	ds.fillna(ds.mode().iloc[0])	ds.fillna(ds.mode().iloc[0])
code: 最頻値でdsのNaNを埋める	ds.fillna(ds.mode().iloc[0])	ds.fillna(ds.mode().iloc[0])
code: dsの未入力値をモードに増やす	ds.fillna(ds.mode().iloc[0])	ds.fillna(ds.mode().iloc[0])
code: ds列の欠損値を最頻値に減らす	ds.fillna(ds.mode().iloc[0])	ds.fillna(ds.mode().iloc[0])
code: dfの列colの未入力値を最頻値で置換する	df[col].fillna(df[col].mode().iloc[0])	df[col].fillna(df[col].mode().iloc[0])
code: モードでデータフレームdfのcol列の未入力値を補う	df[col].fillna(df[col].mode().iloc[0])	df[col].fillna(df[col].mode().iloc[0])
code: データフレームdfのカラムcolの未入力値をモードで補う	df[col].fillna(df[col].mode().iloc[0])	df[col].fillna(df[col].mode().iloc[0])
code: データフレームdfのcolの未入力値を最頻値に減らす	df[col].fillna(df[col].mode().iloc[0])	df[col].fillna(df[col].mode().iloc[0])
code: データフレームdfのcolのNaNを最頻値にする	df[col].fillna(df[col].mode().iloc[0])	df[col].fillna(df[col].mode().iloc[0])
code: データフレームdfのNaNをメディアンで補う	df.fillna(df.median())	df.fillna(df.median())
code: 50パーセンタイルでデータフレームdfの欠損値を置き換える	df.fillna(df.median()	df.fillna(df.median())
code: dfのNaNをメディアンで置換する	df.fillna(df.median()	df.fillna(df.median())
code: データフレームdfの未入力値をメディアンにセットする	df.fillna(df.median())	df.fillna(df.median())
code: データフレームdfの未入力値を第二四分位数に設定する	df.fillna(df.median())	df.fillna(df.median())
code: 50パーセンタイルでデータフレームdfのalistカラムの欠損値を置換する	df[alist].fillna(df[alist].median()	df[alist].fillna(df[alist].median())
code: データフレームdfのalistカラムの未入力値をメディアンで補う	df[alist].fillna(df[alist].median()	df[alist].fillna(df[alist].median())
code: 第二四分位数でdfのリストalistカラムの欠損値を置換する	df[alist].fillna(df[alist].median())	df[alist].fillna(df[alist].median())
code: データフレームdfのalist列の欠損値を50パーセンタイルにする	df[alist].fillna(df[alist].median())	df[alist].fillna(df[alist].median())
code: データフレームdfのalist列のNaNを第二四分位数に設定する	df[alist].fillna(df[alist].median()	df[alist].fillna(df[alist].median())
code: 中央値でdsの未入力値を補う	ds.fillna(ds.median()	ds.fillna(ds.median())
code: 中央値でdsの未入力値を埋める	ds.fillna(ds.median()	ds.fillna(ds.median())
code: 中央値でデータ列dsのNaNを埋める	ds.fillna(ds.median())	ds.fillna(ds.median())
code: ds列の欠損値を第二四分位数に設定する	ds.fillna(ds.median()	ds.fillna(ds.median())
code: dsの欠損値を50パーセンタイルに変更する	ds.fillna(ds.median())	ds.fillna(ds.median())
code: dfのcolのNaNをメディアンで置換する	df[col].fillna(df[col].median())	df[col].fillna(df[col].median())
code: メディアンでデータフレームdfのcolの欠損値を置換する	df[col].fillna(df[col].median()))))	df[col].fillna(df[col].median())
code: 50パーセンタイルでデータフレームdfのcolカラムの欠損値を埋める	df[col].fillna(df[col].median())	df[col].fillna(df[col].median())
code: データフレームdfのカラムcolのNaNを第二四分位数に指定する	df[col].fillna(df[col].median())	df[col].fillna(df[col].median())
code: dfのcol列の欠損値をメディアンにする	df[col].fillna(df[col].median()))	df[col].fillna(df[col].median())
code: 最大値でdfの未入力値を補う	df.fillna(df.max())	df.fillna(df.max())
code: 最大値でdfの未入力値を補う	df.fillna(df.max()	df.fillna(df.max())
code: 最大値でdfの欠損値を埋める	df.fillna(df.max())	df.fillna(df.max())
code: データフレームdfの欠損値を最大値にする	df.fillna(df.max())	df.fillna(df.max())
code: dfの未入力値を最大値に変更する	df.fillna(df.max())	df.fillna(df.max())
code: dfのリストalistカラムの欠損値を最大値で補う	df[alist].fillna(df[alist].max()	df[alist].fillna(df[alist].max())
code: 最大値でデータフレームdfのリストalist列のNaNを置き換える	df[alist].fillna(df[alist].max()	df[alist].fillna(df[alist].max())
code: 最大値でデータフレームdfのリストalist列のNaNを埋める	df[alist].fillna(df[alist].max()))	df[alist].fillna(df[alist].max())
code: dfのリストalistカラムの未入力値を最大値に増やす	df[alist].fillna(df[alist].max()	df[alist].fillna(df[alist].max())
code: dfのalistカラムの欠損値を最大値に設定する	df[alist].fillna(df[alist].max()))	df[alist].fillna(df[alist].max())
code: 最大値でdsのNaNを置き換える	ds.fillna(ds.max()	ds.fillna(ds.max())
code: 最大値でデータ列dsのNaNを埋める	ds.fillna(ds.max()	ds.fillna(ds.max())
code: dsのNaNを最大値で補う	ds.fillna(ds.max()	ds.fillna(ds.max())
code: dsの未入力値を最大値に変更する	ds.fillna(ds.max())))	ds.fillna(ds.max())
code: dsの未入力値を最大値にする	ds.fillna(ds.max())	ds.fillna(ds.max())
code: dfのカラムcolの未入力値を最大値で補う	df[col].fillna(df[col].max()	df[col].fillna(df[col].max())
code: データフレームdfのcolカラムの欠損値を最大値で埋める	df[col].fillna(df[col].max()	df[col].fillna(df[col].max())
code: 最大値でdfのcolカラムの欠損値を埋める	df[col].fillna(df[col].max()	df[col].fillna(df[col].max())
code: データフレームdfのcolの欠損値を最大値にする	df[col].fillna(df[col].max()	df[col].fillna(df[col].max())
code: dfのcolの欠損値を最大値に設定する	df[col].fillna(df[col].max())	df[col].fillna(df[col].max())
code: 最小値でdfのNaNを埋める	df.fillna(df.min())	df.fillna(df.min())
code: dfの欠損値を最小値で補う	df.fillna(df.min()	df.fillna(df.min())
code: データフレームdfの欠損値を最小値で補う	df.fillna(df.min()	df.fillna(df.min())
code: データフレームdfの未入力値を最小値にする	df.fillna(df.min()	df.fillna(df.min())
code: データフレームdfの未入力値を最小値に設定する	df.fillna(df.min()))	df.fillna(df.min())
code: データフレームdfのalist列の欠損値を最小値で補う	df[alist].fillna(df[alist].min())))))	df[alist].fillna(df[alist].min())
code: dfのalistカラムの欠損値を最小値で補う	df[alist].fillna(df[alist].min()	df[alist].fillna(df[alist].min())
code: 最小値でdfのリストalist列の未入力値を埋める	df[alist].fillna(df[alist].min())	df[alist].fillna(df[alist].min())
code: dfのリストalist列の未入力値を最小値に変更する	df[alist].fillna(df[alist].min()))	df[alist].fillna(df[alist].min())
code: データフレームdfのalist列の未入力値を最小値に設定する	df[alist].fillna(df[alist].min()	df[alist].fillna(df[alist].min())
code: dsの欠損値を最小値で補う	ds.fillna(ds.min())))	ds.fillna(ds.min())
code: 最小値でdsの未入力値を埋める	ds.fillna(ds.min()	ds.fillna(ds.min())
code: dsのNaNを最小値で埋める	ds.fillna(ds.min()	ds.fillna(ds.min())
code: データ列dsの未入力値を最小値にする	ds.fillna(ds.min())))	ds.fillna(ds.min())
code: データ列dsのNaNを最小値に設定する	ds.fillna(ds.min()))))	ds.fillna(ds.min())
code: dfのcolのNaNを最小値で補う	df[col].fillna(df[col].min())	df[col].fillna(df[col].min())
code: dfのcolのNaNを最小値で埋める	df[col].fillna(df[col].min()	df[col].fillna(df[col].min())
code: データフレームdfのcolの欠損値を最小値で補う	df[col].fillna(df[col].min())	df[col].fillna(df[col].min())
code: dfのcolの未入力値を最小値に増やす	df[col].fillna(df[col].min()))	df[col].fillna(df[col].min())
code: dfのcol列の欠損値を最小値に設定する	df[col].fillna(df[col].min())))	df[col].fillna(df[col].min())
code: 前の行の値でdfの欠損値を埋める	df.fillna(method='ffill')	df.fillna(method='ffill')
code: dfの欠損値を前の行の値で補う	df.fillna(method='ffill')	df.fillna(method='ffill')
code: dfの欠損値を直前の値で補う	df.fillna(method='ffill')	df.fillna(method='ffill')
code: データフレームdfのNaNを直前の値に設定する	df.fillna(method='ffill')	df.fillna(method='ffill')
code: dfの未入力値を直前の値にする	df.fillna(method='ffill')	df.fillna(method='ffill')
code: 前の値でdfのリストalist列の欠損値を補う	df[alist].fillna(method='ffill')	df[alist].fillna(method='ffill')
code: データフレームdfのalistカラムの欠損値を前の行の値で補う	df[alist].fillna(method='ffill')	df[alist].fillna(method='ffill')
code: dfのalistカラムの未入力値を前の行の値で置き換える	df[alist].fillna(df[alist].median()	df[alist].fillna(method='ffill')
code: dfのalist列のNaNを直前の値にする	df[alist].fillna(method='ffill')	df[alist].fillna(method='ffill')
code: dfのalist列のNaNを直前の値に設定する	df[alist].fillna(method='ffill')	df[alist].fillna(method='ffill')
code: 直前の値でデータ列dsの未入力値を補う	ds.fillna(method='ffill')	ds.fillna(method='ffill')
code: dsのNaNを前の行の値で補う	ds.fillna(method='ffill')	ds.fillna(method='ffill')
code: データ列dsのNaNを前の値で置き換える	ds.fillna(method='ffill')	ds.fillna(method='ffill')
code: データ列dsのNaNを前の行の値に指定する	ds.fillna(method='ffill')	ds.fillna(method='ffill')
code: データ列dsの未入力値を前の行の値に減らす	ds.fillna(method='ffill')	ds.fillna(method='ffill')
code: 直前の値でdfの列colのNaNを置き換える	df[col].fillna(method='ffill')	df[col].fillna(method='ffill')
code: 前の行の値でdfのcolのNaNを置換する	df[col].fillna(method='ffill')	df[col].fillna(method='ffill')
code: dfのcolカラムの欠損値を直前の値で補う	df[col].fillna(method='ffill')	df[col].fillna(method='ffill')
code: データフレームdfのcolカラムの欠損値を前の値に指定する	df[col].fillna(method='ffill')	df[col].fillna(method='ffill')
code: dfのcolカラムの欠損値を直前の値にする	df[col].fillna(method='ffill')	df[col].fillna(method='ffill')
code: 後の値でデータフレームdfの欠損値を埋める	df.fillna(method='bfill')	df.fillna(method='bfill')
code: データフレームdfの欠損値を後の行の値で埋める	df.fillna(method='bfill')	df.fillna(method='bfill')
code: 直後の値でdfのNaNを補う	df.fillna(method='bfill')	df.fillna(method='bfill')
code: dfのNaNを直後の値に指定する	df.fillna(method='bfill')	df.fillna(method='bfill')
code: dfのNaNを後の行の値に減らす	df.fillna(method='bfill')	df.fillna(method='bfill')
code: データフレームdfのalistカラムの未入力値を後の値で置換する	df[alist].fillna(method='bfill')	df[alist].fillna(method='bfill')
code: 直後の値でデータフレームdfのリストalist列の欠損値を補う	df[alist].fillna(method='bfill')	df[alist].fillna(method='bfill')
code: dfのリストalist列の未入力値を後の行の値で埋める	df[alist].fillna(method='bfill')	df[alist].fillna(method='bfill')
code: データフレームdfのalistカラムの欠損値を直後の値に減らす	df[alist].fillna(method='bfill')	df[alist].fillna(method='bfill')
code: データフレームdfのリストalistカラムの未入力値を後の値に変更する	df[alist].fillna(method='bfill')	df[alist].fillna(method='bfill')
code: 直後の値でデータ列dsのNaNを置き換える	ds.fillna(method='bfill')	ds.fillna(method='bfill')
code: データ列dsの欠損値を後の行の値で置き換える	ds.fillna(method='bfill')	ds.fillna(method='bfill')
code: 直後の値でdsの未入力値を置換する	ds.fillna(method='bfill')	ds.fillna(method='bfill')
code: dsのNaNを後の行の値に設定する	ds.fillna(method='bfill')	ds.fillna(method='bfill')
code: dsの欠損値を直後の値に設定する	ds.fillna(method='bfill')	ds.fillna(method='bfill')
code: データフレームdfのcolの未入力値を直後の値で埋める	df[col].fillna(method='bfill')	df[col].fillna(method='bfill')
code: データフレームdfのcolカラムの未入力値を後の行の値で埋める	df[col].fillna(method='bfill')	df[col].fillna(method='bfill')
code: dfの列colのNaNを直後の値で補う	df[col].fillna(method='bfill')	df[col].fillna(method='bfill')
code: dfのcolのNaNを直後の値にセットする	df[col].fillna(method='bfill')	df[col].fillna(method='bfill')
code: dfのcolカラムの未入力値を後の行の値にセットする	df[col].fillna(method='bfill')	df[col].fillna(method='bfill')
code: dfの文字列sをNaNに変換する	df.replace(s, np.nan)	df.replace(s, np.nan)
code: dfの文字列sを欠損値に変換する	df.replace(s, np.nan)	df.replace(s, np.nan)
code: データフレームdfの文字列sを未入力値にする	df.replace(s, np.nan)	df.replace(s, np.nan)
code: データフレームdfのsをNaNにする	df.replace(s, np.nan)	df.replace(s, np.nan)
code: dfのリストalist列の文字列sをNaNにする	df[alist].replace(s, np.nan)	df[alist].replace(s, np.nan)
code: dfのalist列の文字列sを欠損値にする	df[alist].replace(s, np.nan)	df[alist].replace(s, np.nan)
code: dfのalist列のsを未入力値に変換する	df[alist].replace(s, np.nan)	df[alist].replace(s, np.nan)
code: データフレームdfのリストalistカラムの文字列sを未入力値にする	df[alist].replace(s, np.nan)	df[alist].replace(s, np.nan)
code: dsカラムのsを欠損値に変換する	ds.replace(s, np.nan)	ds.replace(s, np.nan)
code: データ列dsの文字列sを欠損値に変換する	ds.replace(s, np.nan)	ds.replace(s, np.nan)
code: dsのsを欠損値にする	ds.replace(s, np.nan)	ds.replace(s, np.nan)
code: dsの文字列sを欠損値に変換する	ds.replace(s, np.nan)	ds.replace(s, np.nan)
code: データフレームdfのcolの文字列sを未入力値にする	df[col].replace(s, np.nan)	df[col].replace(s, np.nan)
code: dfの列colのsを欠損値に変換する	df[col].replace(s, np.nan)	df[col].replace(s, np.nan)
code: データフレームdfのcol列の文字列sをNaNにする	df[col].replace(s, np.nan)	df[col].replace(s, np.nan)
code: データフレームdfのcol列のsをNaNに変換する	df[col].replace(s, np.nan)	df[col].replace(s, np.nan)
code: df の空文字を未入力値に変換しドロップする	df.replace(', np.nan).dropna()	df.replace('', np.nan).dropna()
code: df の空文字をドロップする	df.replace(', np.nan).dropna()	df.replace('', np.nan).dropna()
code: データフレームdfのalist列の空文字を欠損値に変換しドロップする	df[alist].replace('', np.nan).dropna()	df[alist].replace('', np.nan).dropna()
code: データフレームdfのリストalist列の空文字を未入力値に変換し、ドロップする	df[alist].replace('''''''''''''', np.nan).dropna()	df[alist].replace('', np.nan).dropna()
code: データフレームdfのalistカラムの空文字をドロップする	df[alist].replace(', np.nan).dropna()	df[alist].replace('', np.nan).dropna()
code: dsカラムの空文字を欠損値に変換し、ドロップする	ds.replace(', np.nan).dropna()	ds.replace('', np.nan).dropna()
code: dsの空文字を未入力値に変換しドロップする	ds.replace(', np.nan).dropna()	ds.replace('', np.nan).dropna()
code: dsの空文字をドロップする	ds.replace('', np.nan).dropna()	ds.replace('', np.nan).dropna()
code: dsの空文字をドロップする	ds.replace(', np.nan).dropna()	ds.replace('', np.nan).dropna()
code: データフレームdfの列colの空文字を未入力値に変換し、ドロップする	df[col].replace('', np.nan).dropna()	df[col].replace('', np.nan).dropna()
code: dfのcolの空文字をNaNに変換し、ドロップする	df[col].replace('''''''''''''''''', np.nan).dropna()	df[col].replace('', np.nan).dropna()
code: データフレームdfのカラムcolの空文字をドロップする	df[col].replace(', np.nan).dropna()	df[col].replace('', np.nan).dropna()
code: データフレームdfのcolの空文字をドロップする	df[col].replace('', np.nan).dropna()	df[col].replace('', np.nan).dropna()
code: データフレームdfの値をdictでまとめて変更する	df.replace(adict)	df.replace(adict)
code: dictで一度にdfを変更する	df.replace(adict)	df.replace(adict)
code: dictで一度にdfを変更する	df.replace(adict)	df.replace(adict)
code: dictでdfのalist列を変更する	df[alist].replace(adict)	df[alist].replace(adict)
code: dictでデータフレームdfのalist列を置き換える	df[alist].replace(adict)	df[alist].replace(adict)
code: まとめてdictでdfのリストalist列の値を変更する	df[alist].replace(adict)	df[alist].replace(adict)
code: dictでdsの値を置換する	ds.replace(adict)	ds.replace(adict)
code: dictでまとめてdsカラムの値を変更する	ds.replace(adict)	ds.replace(adict)
code: ds列をdictで変更する	ds.replace(adict)	ds.replace(adict)
code: dfのcolをdictで一度に置換する	df[col].replace(adict)	df[col].replace(adict)
code: dictでデータフレームdfのcolの値を置換する	df[col].replace(adict)	df[col].replace(adict)
code: dictでデータフレームdfのcol列を変更する	df[col].replace(adict)	df[col].replace(adict)
code: データフレームdfの値を一度に正規表現patternで置き換える	df.replace(pattern, s, regex=True)	df.replace(pattern, s, regex=True)
code: 正規表現patternで一度にデータフレームdfの値を変更する	df.replace(pattern, s, regex=True)	df.replace(pattern, s, regex=True)
code: 正規表現で一度にデータフレームdfを変更する	df.replace(pattern, s, regex=True)	df.replace(pattern, s, regex=True)
code: 正規表現patternでデータフレームdfのalist列をまとめて置換する	df[alist].replace(pattern, s, regex=True)	df[alist].replace(pattern, s, regex=True)
code: sに一度にデータフレームdfのリストalistカラムの値を正規表現patternで置換する	df[alist].replace(pattern, s, regex=True)	df[alist].replace(pattern, s, regex=True)
code: データフレームdfのalistカラムの値を一度に正規表現patternで変更する	df[alist].replace(pattern, s, regex=True)	df[alist].replace(pattern, s, regex=True)
code: 正規表現でsに一度にdsカラムを置換する	ds.replace(pattern, s, regex=True)	ds.replace(pattern, s, regex=True)
code: sにまとめてデータ列dsを正規表現で変更する	ds.replace(pattern, s, regex=True)	ds.replace(pattern, s, regex=True)
code: 正規表現でまとめてデータ列dsを置き換える	ds.replace(pattern, s, regex=True)	ds.replace(pattern, s, regex=True)
code: 文字列sに正規表現patternでデータフレームdfのcolを置き換える	df[col].replace(pattern, s, regex=True)	df[col].replace(pattern, s, regex=True)
code: 文字列sに正規表現patternでdfの列colを変更する	df[col].replace(pattern, s, regex=True)	df[col].replace(pattern, s, regex=True)
code: dfのcolの値を正規表現で文字列sにまとめて置換する	df[col].replace(pattern, s, regex=True)	df[col].replace(pattern, s, regex=True)
code: データフレームdfの値はNaN	df.isna()	df.isna()
code: dfの値が欠損値かどうかテストする	df.isna().sum()	df.isna()
code: データフレームdfのalistカラムの値が未入力値か確認する	df[alist].isna()	df[alist].isna()
code: dfのalist列の値がNaNか確認する	df[alist].isna()	df[alist].isna()
code: データ列dsの値が未入力値かどうか調べる	ds.isna()	ds.isna()
code: dsの値が欠損値	ds.isna()	ds.isna()
code: データフレームdfのcol列の値はNaN	df[col].isna()	df[col].isna()
code: データフレームdfのcolカラムの値はNaN	df[col].isna()	df[col].isna()
code: データフレームdfの未入力値の合計を数える	df.isna().sum()	df.isna().sum()
code: dfの未入力値の数を数える	df.isna().sum()	df.isna().sum()
code: データフレームdf中にいくつNaNが存在するか数える	df.isna().sum()	df.isna().sum()
code: データフレームdfにいくつ未入力値が存在するか数える	df.isna().sum()	df.isna().sum()
code: dfのリストalistカラムの内の欠損値の数を数える	df[alist].isna().sum()	df[alist].isna().sum()
code: データフレームdfのalistカラムのNaNの数をカウントする	df[alist].isna().sum()	df[alist].isna().sum()
code: dfのalistカラムの内にいくつ未入力値が含まれるか数える	df[alist].isna().sum()	df[alist].isna().sum()
code: データフレームdfのalist列にいくつ欠損値が含まれるかカウントする	df[alist].isna().sum()	df[alist].isna().sum()
code: dsの欠損値の個数を数える	ds.isna().sum()	ds.isna().sum()
code: データ列dsの未入力値の個数を求める	ds.isna().sum()	ds.isna().sum()
code: dsカラムにいくつNaNが存在するか求める	ds.isna().sum()	ds.isna().sum()
code: dsの内にいくつNaNが存在するか数える	ds.isna().sum()	ds.isna().sum()
code: データフレームdfのcol列の欠損値の合計をカウントする	df[col].isna().sum()	df[col].isna().sum()
code: データフレームdfのcolカラムのNaNの合計をカウントする	df[col].isna().sum()	df[col].isna().sum()
code: dfのcol中にいくつ欠損値があるか求める	df[col].isna().sum()	df[col].isna().sum()
code: データフレームdfのcolにいくつ未入力値が含まれるか数える	df[col].isna().sum()	df[col].isna().sum()
code: データフレームdf中にvalueがある	df.isin([value])	df.isin([value])
code: データフレームdf中に日付データvalueがあるか判定する	df.isin([value])	df.isin([value])
code: データフレームdfのalist列内に文字列valueがある	df[alist].isin([value])	df[alist].isin([value])
code: データフレームdfのalist列に日付データvalueが含まれる	df[alist].isin([value])	df[alist].isin([value])
code: データ列dsにvalueがある	ds.isin([value])	ds.isin([value])
code: ds内に文字列valueが存在するかどうか調べる	ds.isin([value])	ds.isin([value])
code: dfのcolカラムにvalueがあるか調べる	df[col].isin([value])	df[col].isin([value])
code: データフレームdfのcolカラムにvalueが存在するかどうか	df[col].isin([value])	df[col].isin([value])
code: dfの内にあるvalueの数を数える	df.isin([value]).sum()	df.isin([value]).sum()
code: dfの内に含まれるvalueの数をカウントする	df.isin([value]).sum()	df.isin([value]).sum()
code: dfの中にいくつvalueが含まれるかカウントする	df.isin([value]).sum()	df.isin([value]).sum()
code: データフレームdfの中にいくつ日付データvalueが含まれるか求める	df.isin([value]).sum()	df.isin([value]).sum()
code: dfのリストalistカラム内にあるvalueの合計をカウントする	df[alist].isin([value]).sum()	df[alist].isin([value]).sum()
code: dfのalist列の内に存在するvalueの個数を求める	df[alist].isin([value]).sum()	df[alist].isin([value]).sum()
code: dfのalistカラムの内にいくつ日付データvalueが含まれるかカウントする	df[alist].isin([value]).sum()	df[alist].isin([value]).sum()
code: データフレームdfのリストalistカラム中にいくつ日付データvalueが存在するか数える	df[alist].isin([value]).sum()	df[alist].isin([value]).sum()
code: dsカラム内に存在する日付データvalueの数を数える	ds.isin([value]).sum()	ds.isin([value]).sum()
code: dsの中にあるvalueの個数を数える	ds.isin([value]).sum()	ds.isin([value]).sum()
code: データ列dsにいくつ文字列valueが存在するか求める	ds.isin([value]).sum()	ds.isin([value]).sum()
code: データ列ds中にいくつvalueが含まれるか求める	ds.isin([value]).sum()	ds.isin([value]).sum()
code: dfのcolカラムの中に含まれる文字列valueの合計を数える	df[col].isin([value]).sum()	df[col].isin([value]).sum()
code: dfのcol列中にある文字列valueの合計を数える	df[col].isin([value]).sum()	df[col].isin([value]).sum()
code: データフレームdfのcolの中にいくつ文字列valueが含まれるか求める	df[col].isin([value]).sum()	df[col].isin([value]).sum()
code: データフレームdfのcolにいくつvalueが含まれるか求める	df[col].isin([value]).sum()	df[col].isin([value]).sum()
code: データフレームdfの内に文字列valueと日付データvalue2が含まれるかどうか	df.isin([value, value2])	df.isin([value, value2])
code: データフレームdfにvalueと文字列value2がある	df.isin([value, value2])	df.isin([value, value2])
code: データフレームdfのリストalistカラムにvalueと日付データvalue2が存在する	df[alist].isin([value, value2])	df[alist].isin([value, value2])
code: dfのalistカラムに文字列valueとvalue2が存在する	df[alist].isin([value, value2])	df[alist].isin([value, value2])
code: dsに日付データvalueと日付データvalue2がある	ds.isin([value, value2])	ds.isin([value, value2])
code: ds内に文字列valueと日付データvalue2が存在する	ds.isin([value, value2])	ds.isin([value, value2])
code: データフレームdfのcol内に文字列valueと文字列value2が含まれる	df[col].isin([value, value2])	df[col].isin([value, value2])
code: データフレームdfのcolに文字列valueとvalue2が存在するか調べる	df[col].isin([value, value2])	df[col].isin([value, value2])
code: データフレームdf内に含まれる日付データvalueと日付データvalue2の個数を求める	df.isin([value, value2])	df.isin([value, value2]).sum()
code: dfに存在する文字列valueとvalue2の数を求める	df.isin([value, value2]).sum()	df.isin([value, value2]).sum()
code: データフレームdf内にvalueと文字列value2がいくつ含まれるか数える	df.isin([value, value2]).sum()	df.isin([value, value2]).sum()
code: データフレームdf中にvalueと文字列value2がいくつ存在するかカウントする	df.isin([value, value2]).sum()	df.isin([value, value2]).sum()
code: dfのリストalist列の中に含まれる日付データvalueとvalue2の数をカウントする	df[alist].isin([value, value2]).sum()	df[alist].isin([value, value2]).sum()
code: dfのalist列に存在する日付データvalueとvalue2の数を求める	df[alist].isin([value, value2]).sum()	df[alist].isin([value, value2]).sum()
code: データフレームdfのリストalistカラムに文字列valueとvalue2がいくつあるか数える	df[alist].isin([value, value2]).sum()	df[alist].isin([value, value2]).sum()
code: データフレームdfのalistカラム内にvalueと文字列value2がいくつ含まれるかカウントする	df[alist].isin([value, value2]).sum()	df[alist].isin([value, value2]).sum()
code: dsに含まれる日付データvalueとvalue2の個数を求める	ds.isin([value, value2]).sum()	ds.isin([value, value2]).sum()
code: データ列dsに含まれる日付データvalueとvalue2の個数をカウントする	ds.isin([value, value2]).sum()	ds.isin([value, value2]).sum()
code: dsに文字列valueとvalue2がいくつ含まれるか数える	ds.isin([value, value2]).sum()	ds.isin([value, value2]).sum()
code: ds列内に日付データvalueとvalue2がいくつ含まれるかカウントする	ds.isin([value, value2]).sum()	ds.isin([value, value2]).sum()
code: dfのカラムcol中に含まれるvalueとvalue2の合計をカウントする	df[col].isin([value, value2]).sum()	df[col].isin([value, value2]).sum()
code: データフレームdfのカラムcolに存在する日付データvalueとvalue2の合計をカウントする	df[col].isin([value, value2]).sum()	df[col].isin([value, value2]).sum()
code: データフレームdfのcol内に文字列valueと文字列value2がいくつあるか求める	df[col].isin([value, value2]).sum()	df[col].isin([value, value2]).sum()
code: データフレームdfのcol列に文字列valueと文字列value2がいくつ含まれるかカウントする	df[col].isin([value, value2]).sum()	df[col].isin([value, value2]).sum()
code: 表データを使う	import pandas as pd	import pandas as pd
code: データフレームをインポートする	import pandas as pd	import pandas as pd
code: dfの内容を見る	df.head()	df.head()
code: データフレームdfの先頭を調べる	df.head()	df.head()
code: データフレームdfの先頭	df.head()	df.head()
code: dfの先頭n行	df.head(n)	df.head(n)
code: データフレームdfの先頭n行	df.head(n)	df.head(n)
code: dfの先頭n行	df.head(n)	df.head(n)
code: データフレームdfの上n行	df.head(n)	df.head(n)
code: データフレームdfの末尾を見る	df.tail()	df.tail()
code: データフレームdfの最後を調べる	df.tail()	df.tail()
code: データフレームdfの末尾n行を抽出する	df[:n]	df.tail(n)
code: dfの最後n行を選択する	df[:n]	df.tail(n)
code: dfからランダムに取り出す	df.sample()	df.sample()
code: データフレームdfからランダムに選択する	df.sample()	df.sample()
code: dfをサンプリングする	df.sample()	df.sample()
code: データフレームdfからランダムにn行を抽出する	df.sample(n)	df.sample(n)
code: データフレームdfからn行をランダムに選択する	df.sample(n)	df.sample(n)
code: データフレームdfからランダムにn行を選ぶ	df.sample(n)	df.sample(n)
code: dfからn個サンプリングする	df.sample(n)	df.sample(n)
code: dfからn行をランダムに重複ありで取り出す	df.sample(n, replace=True)	df.sample(n, replace=True)
code: データフレームdfからn行をランダムに重複を認めて選ぶ	df.sample(n, replace=True)	df.sample(n, replace=True)
code: dfからランダムに重複を認めてn行を取り出す	df.sample(n, replace=True)	df.sample(n, replace=True)
code: データフレームdfのn行目からn2行目まで	df[n:n2]	df[n:n2]
code: データフレームdfのn行目からn2行目まで	df[n:n2]	df[n:n2]
code: dfのn行より後ろ	df[n:]	df[n:]
code: データフレームdfのn行より後ろ	df[n:]	df[n:]
code: データフレームdfのn行目より前を選択する	df[n:]	df[:n]
code: dfのn行までを取り出す	df[:n]	df[:n]
code: dfのcolを選択する	df[col].dt.hour	df[col]
code: dfのcolを抽出する	df[col].dt.hour	df[col]
code: 配列としてデータフレームdfのカラムcolを抽出する	df[col].values	df[col].values
code: 配列としてデータフレームdfのcolを選択する	df[col].values.tolist()	df[col].values
code: dfから列colを配列として取り出す	df[col].values.tolist()	df[col].values
code: dfのcolを配列に変換する	df[col].values	df[col].values
code: データフレームdfのcolを配列にする	df[col].values	df[col].values
code: データフレームdfからcolをリストとして選択する	df[col].values.tolist()	df[col].values.tolist()
code: データフレームdfの列colをリストとして取り出す	df[col].values.tolist()	df[col].values.tolist()
code: リストとしてデータフレームdfからcolを抽出する	df[col].values.tolist()	df[col].values.tolist()
code: データフレームdfのカラムcolをリストに変換する	df[col].values.tolist()	df[col].values.tolist()
code: データフレームdfのcolをリストに変換する	df[col].values.tolist()	df[col].values.tolist()
code: データフレームdfからcolとcol2のみだけ	df[[col, col2]	df[[col, col2]]
code: データフレームdfの列colとcol2をだけ	df[[[[[[[[col, col2]]	df[[col, col2]]
code: dfからcolカラム、カラムcol2col3列のみだけ	df[col, col2, col3]	df[[col, col2, col3]]
code: dfからcol列col2列、col3のみだけ	df[col, col2, col3]	df[[col, col2, col3]]
code: データフレームdfのリストalistで指定されたカラムのみだけ	df[alist]	df[alist]
code: dfからalistで与えられた列をだけ	df[alist]	df[alist]
code: dfのn番目の行を抽出する	df.loc[n]	df.loc[n]
code: dfのn行目を取り出す	df[n:]	df.loc[n]
code: dfの行がnの行を選ぶ	df.loc[n]	df.loc[n]
code: dfのインデックスがnの行を取り出す	df.loc[n]	df.loc[n]
code: dfの列一覧	df.columns	df.info()
code: データフレームdfの列一覧を確認する	df.columns	df.info()
code: データフレームdfのカラムの名前リストを見る	df.columns	df.columns
code: dfの列の名前一覧を使う	df.columns	df.columns
code: データフレームdfからカテゴリデータのカラムの名前の一覧	df.select_dtypes('object').columns	df.select_dtypes('object').columns
code: データフレームdfからカテゴリデータのカラムの名前リストを使う	df.select_dtypes('object').columns	df.select_dtypes('object').columns
code: データフレームdfからty型の列の名前の一覧を見る	df.select_dtypes('object').columns	df.select_dtypes(ty).columns
code: dfからtyの列名一覧	df.select_dtypes('number').columns	df.select_dtypes(ty).columns
code: dfの行名の一覧	df.index	df.index
code: dfのインデックスの名前一覧を求める	df.index	df.index
code: データフレームdfを配列にする	df.values	df.values
code: dfのデータ型一覧	df.dtypes	df.dtypes
code: dfのデータ型のリスト	df.dtypes	df.dtypes
code: データフレームdfからalistのデータ型のカラムを取り出す	df.select_dtypes('number')	df.select_dtypes(include=alist)
code: dfからリストalistのデータ型のカラムのみ選択する	df.select_dtypes(exclude=alist)	df.select_dtypes(include=alist)
code: dfからリストalistで与えられたデータ型の列だけ除外する	df.select_dtypes(exclude=alist)	df.select_dtypes(exclude=alist)
code: dfからalistのデータ型の列を除外する	df.select_dtypes(include=alist)	df.select_dtypes(exclude=alist)
code: dfからカテゴリデータの列を抽出する	df.select_dtypes('object').columns	df.select_dtypes('object')
code: dfからカテゴリデータの列だけ取り出す	df.select_dtypes('object')	df.select_dtypes('object')
code: dfから数値データの列のみ抽出する	df.select_dtypes('number')	df.select_dtypes('number')
code: データフレームdfから数値データのみ取り出す	df.select_dtypes('number')	df.select_dtypes('number')
code: dfからty型のみ取り出す	df.select_dtypes('number')	df.select_dtypes(ty)
code: データフレームdfからty型だけ取り出す	df.select_dtypes('number')	df.select_dtypes(ty)
code: データフレームdfのシェイプを見る	df.shape	df.shape
code: データフレームdfのシェイプ	df.shape	df.shape
code: dfを転置する	df.T	df.T
code: dfの行と列をひっくり返す	df.T	df.T
code: dfの相関行列を求める	df.corr()	df.corr()
code: dfの各列間の相関係数	df.corr()	df.corr()
code: データフレームdfのcolカラムとcol2列の相関行列を求める	df[[col, col2].corr()	df[[col, col2]].corr()
code: dfのcol列とcol2の相関行列	df[[[[col, col2].corr()	df[[col, col2]].corr()
code: dfのalistカラムの各列間の相関係数を求める	df[alist].corr()	df[alist].corr()
code: データフレームdfのalistで指定されたカラムの各列間の相関係数を算出する	df[alist].corr()	df[alist].corr()
code: ピアソン相関係数としてdfの相関行列を算出する	df.corr(method='pearson')	df.corr(method='pearson')
code: ピアソン相関係数を使ってdfの相関行列を算出する	df.corr(method='pearson')	df.corr(method='pearson')
code: dfの相関行列ピアソンとして	df.corr(method='pearson')	df.corr(method='pearson')
code: dfのcolカラムとcol2の相関行列ピアソン相関係数を用いてを求める	df[[[[[[[[[[[col, col2].corr(method='pearson')	df[[col, col2]].corr(method='pearson')
code: データフレームdfの列colと列col2の相関行列ピアソンを用いて	df[[[[[[[[[[[[[[[col, col2]].corr(method='pearson')	df[[col, col2]].corr(method='pearson')
code: ピアソンでdfのcolとcol2の相関行列	df[[[[[[[col, col2].corr(method='pearson')	df[[col, col2]].corr(method='pearson')
code: データフレームdfのリストalistで与えられたカラムの相関行列ピアソン相関係数を使ってを計算する	df[alist].corr(method='pearson')	df[alist].corr(method='pearson')
code: ピアソンでデータフレームdfのリストalistで指定された列の相関行列を求める	df[alist].corr(method='pearson')	df[alist].corr(method='pearson')
code: ピアソンとしてdfのalistで与えられた列の相関行列を算出する	df[alist].corr(method='pearson')	df[alist].corr(method='pearson')
code: ケンドール順位相関係数でdfの相関行列を計算する	df.corr(method='kendall')	df.corr(method='kendall')
code: データフレームdfの相関行列ケンドールとしてを求める	df.corr(method='kendall')	df.corr(method='kendall')
code: dfの相関行列ケンドール順位相関係数として	df.corr(method='kendall')	df.corr(method='kendall')
code: データフレームdfのcolカラムとcol2の相関行列ケンドール相関係数で	df[[[[col, col2].corr(method='kendall')	df[[col, col2]].corr(method='kendall')
code: ケンドール順位相関係数としてdfのcolとcol2の相関行列を算出する	df[[[col, col2]]]]].corr(method='kendall')	df[[col, col2]].corr(method='kendall')
code: データフレームdfのcolとcol2の相関行列ケンドール順位相関係数として	df[[col, col2].corr(method='kendall')	df[[col, col2]].corr(method='kendall')
code: dfのリストalist列の相関行列ケンドール相関係数を使って	df[alist].corr(method='kendall')	df[alist].corr(method='kendall')
code: ケンドール順位相関係数を使ってdfのリストalist列の相関行列	df[alist].corr(method='kendall')	df[alist].corr(method='kendall')
code: ケンドール順位相関係数を用いてデータフレームdfのリストalist列の相関行列	df[alist].corr(method='kendall')	df[alist].corr(method='kendall')
code: データフレームdfの相関行列スピアマンとしてを求める	df.corr(method='spearman')	df.corr(method='spearman')
code: スピアマン相関係数でデータフレームdfの相関行列	df.corr(method='spearman')	df.corr(method='spearman')
code: スピアマンとしてdfの相関行列を計算する	df.corr(method='spearman')	df.corr(method='spearman')
code: dfのカラムcolとカラムcol2の相関行列スピアマンを用いて	df[[col, col2]].corr(method='spearman')	df[[col, col2]].corr(method='spearman')
code: スピアマンでデータフレームdfのcolとcol2の相関行列	df[[[[[col, col2].corr(method='spearman')	df[[col, col2]].corr(method='spearman')
code: dfのカラムcolとカラムcol2の相関行列スピアマン相関係数でを計算する	df[[[[[col, col2]].corr(method='spearman')	df[[col, col2]].corr(method='spearman')
code: dfのリストalist列の相関行列スピアマンでを算出する	df[alist].corr(method='spearman')	df[alist].corr(method='spearman')
code: スピアマン順位相関係数としてデータフレームdfのalistカラムの相関行列	df[alist].corr(method='spearman')	df[alist].corr(method='spearman')
code: dfのalistで与えられたカラムの相関行列スピアマンとして	df[alist].corr(method='spearman')	df[alist].corr(method='spearman')
code: データフレームdfの相関行列をヒートマップとしてグラフ化する	sns.heatmap(df.corr()	sns.heatmap(df.corr())
code: ヒートマップでdfの相関行列をグラフ化する	sns.heatmap(df.corr()))	sns.heatmap(df.corr())
code: ヒートマップを使ってデータフレームdfの相関行列を描画する	sns.heatmap(df.corr()	sns.heatmap(df.corr())
code: データフレームdfのヒートマップを描画する	sns.heatmap(df.corr()))))	sns.heatmap(df.corr())
code: データフレームdfのcol列とcol2の相関行列をヒートマップを使ってグラフ化する	sns.heatmap(df[[[[[col, col2]].corr())))	sns.heatmap(df[[col, col2]].corr())
code: データフレームdfのcol列とカラムcol2の相関行列をヒートマップを用いて描画する	sns.heatmap(df[col, col2].corr()	sns.heatmap(df[[col, col2]].corr())
code: ヒートマップでdfのカラムcolとcol2の相関行列を描画する	sns.heatmap(df[col, col2]].corr()	sns.heatmap(df[[col, col2]].corr())
code: dfのcolとcol2列のヒートマップをグラフ化する	sns.heatmap(df[col, col2]]].corr())))))	sns.heatmap(df[[col, col2]].corr())
code: dfのcolとcol2のヒートマップをグラフ化する	sns.heatmap(df[col, col2]].corr())	sns.heatmap(df[[col, col2]].corr())
code: ヒートマップとしてdfのリストalistカラムの相関行列を描画する	sns.heatmap(df[alist].corr()	sns.heatmap(df[alist].corr())
code: データフレームdfのリストalistで指定された列の相関行列をヒートマップを用いて描画する	sns.heatmap(df[alist].corr())	sns.heatmap(df[alist].corr())
code: ヒートマップを用いてデータフレームdfのリストalistで与えられた列の相関行列をグラフ化する	sns.heatmap(df[alist].corr()	sns.heatmap(df[alist].corr())
code: dfのリストalistカラムのヒートマップを描画する	sns.heatmap(df[alist].corr())	sns.heatmap(df[alist].corr())
code: データフレームdfのalistカラムのヒートマップをグラフ化する	sns.heatmap(df[alist].corr()))	sns.heatmap(df[alist].corr())
code: dfのカテゴリデータの記述統計量を算出する	df.describe(include='O')	df.describe(include='O')
code: dfのカテゴリデータの要約統計量	df.describe(include='O')	df.describe(include='O')
code: dfを丸める	df.round()	df.round()
code: データフレームdfの数値を丸める	df.round()	df.round()
code: データフレームdfを一度に小数点以下n桁で四捨五入する	df.round(n)	df.round(n)
code: データフレームdfを一度に小数点以下n桁で丸める	df.round(n)	df.round(n)
code: dfの数値を整数に丸めて、更新する	df.round(inplace=True)	df.round(inplace=True)
code: データフレームdfをまとめて整数に丸めて、インプレイスする	df.round(inplace=True)	df.round(inplace=True)
code: データフレームdfの数値を一度に小数点以下n桁で四捨五入して、置き換える	df.round(n)	df.round(n, inplace=True)
code: データフレームdfを一度に小数点以下n桁で丸めて更新する	df.round(n, inplace=True)	df.round(n, inplace=True)
code: データフレームdfのカラム名を変更する	df.rename(columns={col: s})	df.rename(columns={col: s})
code: データフレームdfの列名を変更する	df.rename(columns={col: s})	df.rename(columns={col: s})
code: dfのカラム名を列colから文字列sに変更する	df.rename(columns={col: s})	df.rename(columns={col: s})
code: データフレームdfのカラム名をcolから文字列sに変更する	df.rename(columns={col: s})	df.rename(columns={col: s})
code: dfのcolをsに名前変更する	df.rename(columns={col: s})	df.rename(columns={col: s})
code: dfのcolをsにリネームする	df.rename(columns={col: s})	df.rename(columns={col: s})
code: dfの列の名前を文字列sを文字列s2に置換する	df.columns = [str(x).replace(s, s2) for x in df.columns]	df.columns = [str(x).replace(s, s2) for x in df.columns]
code: dfの列名を、文字列sを文字列s2に置換する	df.columns = [str(x).replace(s, s2) for x in df.columns]	df.columns = [str(x).replace(s, s2) for x in df.columns]
code: データフレームdfのインデックスの名前をまとめてsからs2に変更する	df.rename(index={s: s2})	df.rename(index={s: s2})
code: データフレームdfのインデックス名をまとめて文字列sからs2に変更する	df.rename(index={s: s2})	df.rename(index={s: s2})
code: データフレームdfのcolを行にセットする	df.set_index(col)	df.set_index(col)
code: データフレームdfの列colをインデックスにセットする	df.set_index(col, inplace=True)	df.set_index(col)
code: dfの行をリセットする	df.set_index()	df.reset_index()
code: データフレームdfのcolがxの行を抽出する	df[df[col] >= x]	df[df[col] == x]
code: dfのcol列がxのデータを取り出す	df[df[col] == x]	df[df[col] == x]
code: dfのcolカラムの値がxでないデータを取り除く	df[df[col] >= x]	df[df[col] == x]
code: dfのカラムcolの値がxでない行をフィルタする	df[df[col] == x]	df[df[col] == x]
code: dfのデータを条件で取り除くには	df[(df[col] == x) & (df[col2)] == x2)]	df[(df[col] == x) & (df[col2] == x2)]
code: データフレームdfのcol列の値がx、かつ列col2がx2であるデータを取り出す	df[(x <= df[col]) & (df[col] < x2)]	df[(df[col] == x) & (df[col2] == x2)]
code: dfのcolがx、かつcol2列がx2であるデータを取り出す	df[(x < df[col]) & (df[col] < x2)]	df[(df[col] == x) & (df[col2] == x2)]
code: dfのcolカラムの値がx未満のデータを抽出する	df[df[col] < x]	df[df[col] < x]
code: データフレームdfのカラムcolがxより少ないデータを取り出す	df[df[col] < x]	df[df[col] < x]
code: データフレームdfのcolがx以下の行を抽出する	df[df[col] <= x]	df[df[col] <= x]
code: dfのcolの値がx以下の行を抽出する	df[df[col] <= x]	df[df[col] <= x]
code: dfのcol列の値がxより大きい行を選ぶ	df[df[col] < x]	df[df[col] > x]
code: dfの列colの値がxより多い行を取り出す	df[df[col] >= x]	df[df[col] > x]
code: dfのcolがx以上の行を取り出す	df[df[col] == x]	df[df[col] >= x]
code: dfのcolカラムの値がx以上のデータを取り出す	df[df[col] >= x]	df[df[col] >= x]
code: dfのcol列の値がxより多くx2より少ないデータを取り出す	df[(x < df[col]) & (df[col] < x2)]	df[(x < df[col]) & (df[col] < x2)]
code: データフレームdfのcolがxより多くx2より少ない行を選ぶ	df[(x < df[col]) & (df[col] < x2)]	df[(x < df[col]) & (df[col] < x2)]
code: データフレームdfのcolがx以上かつx2未満のデータを抽出する	df[(df[col] == x) & (df[col2] == x2)]	df[(x <= df[col]) & (df[col] < x2)]
code: データフレームdfのcol列の値がx以上かつx2未満のデータを取り出す	df[(x < df[col]) & (df[col] < x2)]	df[(x <= df[col]) & (df[col] < x2)]
code: dfのcolがalistに含まれる行を取り出す	df[df[col].isin(alist)]	df[df[col].isin(alist)]
code: dfのcolがalistに含まれる行を取り出す	df[df[col].isin(alist)]	df[df[col].isin(alist)]
code: データフレームdfのcolの文字列でsが含まれる行を選択する	df[not df[col].str.contains(s)]	df[df[col].str.contains(s)]
code: データフレームdfのcolカラムがsが含まれる行を選択する	df[df[col].isin(s)]	df[df[col].str.contains(s)]
code: dfのcolでsが含まれない行を抽出する	df[df[col].str.contains(s)]	df[not df[col].str.contains(s)]
code: データフレームdfの列colでsが含まれないデータを選ぶ	df[df[col].str.startswith(s)]	df[not df[col].str.contains(s)]
code: dfのcolの文字列が正規表現sにマッチする行を選択する	df[not df[col].str.match(s)]	df[df[col].str.match(s)]
code: dfのcolが正規表現文字列sにマッチする行を抽出する	df[not df[col].str.match(s)]	df[df[col].str.match(s)]
code: dfのカラムcolの文字列が正規表現文字列sにマッチしないデータを選択する	df[not df[col].str.match(s)]	df[not df[col].str.match(s)]
code: データフレームdfのcolが正規表現文字列sにマッチしない行を選ぶ	df[not df[col].str.match(s)]	df[not df[col].str.match(s)]
code: dfのcolの文字列が文字列sで始まるデータを取り出す	df[df[col].str.startswith(s)]	df[df[col].str.startswith(s)]
code: データフレームdfのcolの文字列が文字列sで始まるデータを選択する	df[df[col].str.endswith(s)]	df[df[col].str.startswith(s)]
code: dfのカラムcolが文字列sで始まらないデータを抽出する	df[df[col].str.startswith(s)]	df[not df[col].str.startswith(s)]
code: dfのcolカラムの文字列が文字列sで始まらないデータを取り出す	df[df[col].str.contains(s)]	df[not df[col].str.startswith(s)]
code: dfの列colがsで終わる行を取り出す	df[df[col].str.endswith(s)]	df[df[col].str.endswith(s)]
code: データフレームdfのcolカラムの文字列が文字列sで終わる行を取り出す	df[df[col].str.endswith(s)]	df[df[col].str.endswith(s)]
code: データフレームdfのcolカラムの文字列が文字列sで終わらないデータを取り出す	df[not df[col].str.str.endswith(s)]	df[not df[col].str.endswith(s)]
code: dfの列colがsで終わらないデータを抽出する	df[df[col].str.endswith(s)]	df[not df[col].str.endswith(s)]
code: dfの欠損値がある箇所に	df.style.highlight_null()	df.style.highlight_null()
code: データフレームdfの欠損値がある箇所に	df.style.highlight_null()	df.style.highlight_null()
code: データフレームdfのn行目を消す	df.drop(n, axis=0)	df.drop(n, axis=0)
code: dfのn行目を削除する	df.drop(n, axis=0)	df.drop(n, axis=0)
code: インプレイスでdfのn行目を落とす	df.drop(n, axis=0, inplace=True)	df.drop(n, axis=0, inplace=True)
code: データフレームdfのn行目をインプレイスで削除する	df.drop(n, axis=0, inplace=True)	df.drop(n, axis=0, inplace=True)
code: インプレイスでデータフレームdfのn行目を消す	df.drop(n, axis=0, inplace=True)	df.drop(n, axis=0, inplace=True)
code: dfのn行目を取り除いて更新する	df.drop(n, axis=0)	df.drop(n, axis=0, inplace=True)
code: データフレームdfのn行目をドロップしてインプレイスする	df.drop(n, axis=0, inplace=True)	df.drop(n, axis=0, inplace=True)
code: データフレームdfのcolを消す	df.drop(col, axis=1)	df.drop(col, axis=1)
code: dfのcolをドロップする	df.drop(col, axis=1)	df.drop(col, axis=1)
code: dfのcolカラムをインプレイスでドロップする	df.drop(col, axis=1, inplace=True)	df.drop(col, axis=1, inplace=True)
code: dfのcolをインプレイスでドロップする	df.drop(col, axis=1, inplace=True)	df.drop(col, axis=1, inplace=True)
code: データフレームdfのcolカラムを破壊的に消す	df.drop(col, axis=1, inplace=True)	df.drop(col, axis=1, inplace=True)
code: データフレームdfのcolを削除して、更新する	df.drop(col, axis=1, inplace=True)	df.drop(col, axis=1, inplace=True)
code: データフレームdfのcolをドロップして更新する	df.drop(col, axis=1, inplace=True)	df.drop(col, axis=1, inplace=True)
code: データフレームdfのcolと列col2を削除する	df.drop([col, col2], axis=1)	df.drop([col, col2], axis=1)
code: dfの列colとカラムcol2を取り除く	df[col, col2]]]].uncend()	df.drop([col, col2], axis=1)
code: データフレームdfのリストalistで与えられた列を削除する	df.drop(alist, axis=1)	df.drop(alist, axis=1)
code: データフレームdfのリストalistで指定されたカラムを落とす	df.drop(alist, axis=1)	df.drop(alist, axis=1)
code: dfの未入力値を削除する	df.dropna()	df.dropna()
code: データフレームdfの未入力値を取り除く	df.dropna()	df.dropna()
code: データフレームdfの未入力値がある行を消す	df.dropna()	df.dropna()
code: df中のNaNが存在する行を消す	df.dropna()	df.dropna()
code: データフレームdfの重複を確認する	df.duplicated().sum()	df.duplicated()
code: データフレームdfに重複があるか見る	df.duplicated()	df.duplicated()
code: dfが重複しているかどうかテストする	df.duplicated()	df.duplicated()
code: データフレームdfが重複しているかどうか判定する	df.duplicated()	df.duplicated()
code: データフレームdfの重複する行をマスクする	df.duplicated()	df.duplicated()
code: データフレームdfの重複した行数のマスクを求める	df.duplicated().sum()	df.duplicated()
code: データフレームdfの重複した行数のマスクを求める	df.duplicated()	df.duplicated()
code: データフレームdfの重複する行を数える	df.duplicated().sum()	df.duplicated().sum()
code: dfので何行、重複するか確認する	df.duplicated().sum()	df.duplicated().sum()
code: dfので何行重複するか確認する	df.duplicated().sum()	df.duplicated().sum()
code: データフレームdfの重複した行	df.duplicated()	df[df.duplicated(keep=False)]
code: dfの重複した行を抽出する	df.duplicated().sum()	df[df.duplicated(keep=False)]
code: 重複していない行だけを選ぶ	df[not df.duplicated(keep=False)]	df[not df.duplicated(keep=False)]
code: 重複していない行のみ	df[not df.duplicated(keep=False)]	df[not df.duplicated(keep=False)]
code: dfの内で列colの重複を調べる	df.duplicated(subset=col)	df.duplicated(subset=col)
code: データフレームdfの内で、colカラムの重複を確認する	df.duplicated(subset=col)	df.duplicated(subset=col)
code: データフレームdfので、colに重複があるか調べる	df.duplicated(subset=col)	df.duplicated(subset=col)
code: dfので、colに重複があるか確認する	df.duplicated(subset=col)	df.duplicated(subset=col)
code: dfのcolに重複があればマスクする	df.duplicated(subset=col)	df.duplicated(subset=col)
code: dfのcolに重複があればマスクする	df.duplicated(subset=col)	df.duplicated(subset=col)
code: dfので、colとcol2の重複を見る	df.duplicated(subset=[col1, col2])	df.duplicated(subset=[col1, col2])
code: dfので、colとカラムcol2の重複を調べる	df.duplicated(subset=[col1, col2])	df.duplicated(subset=[col1, col2])
code: データフレームdfの内で列colとcol2に重複があるか見る	df.duplicated(subset=[col1, col2])	df.duplicated(subset=[col1, col2])
code: データフレームdfの中で列colとcol2列に重複があるか調べる	df.duplicated(subset=[col1, col2])	df.duplicated(subset=[col1, col2])
code: dfの中のcol列とcol2に重複があれば、マスクする	df.duplicated(subset=[col1, col2])	df.duplicated(subset=[col1, col2])
code: dfのカラムcolとcol2に重複があればマスクする	df.duplicated(subset=[col1, col2])	df.duplicated(subset=[col1, col2])
code: データフレームdfから重複を消す	df.drop_duplicates()	df.drop_duplicates()
code: dfから重複する行を落とす	df.drop_duplicates(keep=False)	df.drop_duplicates()
code: データフレームdfから重複するデータを取り除く	df.drop_duplicates(keep=False)	df.drop_duplicates()
code: 破壊的に重複をデータフレームdfから取り除く	df.drop_duplicates(inplace=True)	df.drop_duplicates(inplace=True)
code: 破壊的に重複をdfから消す	df.drop_duplicates(inplace=True)	df.drop_duplicates(inplace=True)
code: 破壊的に重複をデータフレームdfからドロップする	df.drop_duplicates(inplace=True)	df.drop_duplicates(inplace=True)
code: dfから重複したデータを削除し、、更新する	df.drop_duplicates(inplace=True)	df.drop_duplicates(inplace=True)
code: データフレームdfから重複したデータをドロップしてインプレイスする	df.drop_duplicates(inplace=True)	df.drop_duplicates(inplace=True)
code: 重複するデータをデータフレームdfから破壊的に消す	df.drop_duplicates(inplace=True)	df.drop_duplicates(inplace=True)
code: データフレームdfから破壊的に重複する行を落とす	df.drop_duplicates(inplace=True)	df.drop_duplicates(inplace=True)
code: dfから破壊的に重複した行を落とす	df.drop_duplicates(inplace=True)	df.drop_duplicates(inplace=True)
code: dfから重複を残さず、ドロップする	df.drop_duplicates(keep=False)	df.drop_duplicates(keep=False)
code: データフレームdfから重複を残さず削除する	df.drop_duplicates()	df.drop_duplicates(keep=False)
code: dfから重複するデータを残さずドロップする	df.drop_duplicates(keep=False)	df.drop_duplicates(keep=False)
code: データフレームdfから重複した行を残さず、消す	df.drop_duplicates(keep=False)	df.drop_duplicates(keep=False)
code: colとcol2の重複をドロップする	df.drop_duplicates(subset=[col, col2])	df.drop_duplicates(subset=col)
code: dfのの内で、colとcol2カラムの重複を削除する	df.drop_duplicates(subset=col)	df.drop_duplicates(subset=col)
code: データフレームdfの列colとcol2カラムに重複があれば、取り除く	df.drop_duplicates(subset=col)	df.drop_duplicates(subset=col)
code: dfの中のcolとcol2に重複があれば、削除する	df.drop_duplicates(subset=col)	df.drop_duplicates(subset=col)
code: colとcol2の重複を消す	df.drop_duplicates(subset=[col, col2])	df.drop_duplicates(subset=[col, col2])
code: データフレームdfの内でcolとカラムcol2の重複をドロップする	df.drop_duplicates(subset=col)	df.drop_duplicates(subset=[col, col2])
code: データフレームdfの内のcolカラムとcol2に重複があれば、ドロップする	df.drop_duplicates(subset=[col, col2])	df.drop_duplicates(subset=[col, col2])
code: データフレームdf中のcolとcol2に重複があれば削除する	df.drop_duplicates(subset=[col, col2])	df.drop_duplicates(subset=[col, col2])
code: 横方向にデータフレームdfとデータフレームdf2をマージする	pd.merge(df, df2)	pd.merge(df, df2)
code: データフレームdfとdf2を横向きに一つにまとめる	pd.merge(df, df2)	pd.merge(df, df2)
code: 横方向にデータフレームdfとデータフレームdf2をマージする	pd.merge(df, df2)	pd.merge(df, df2)
code: データフレームdfとデータフレームdf2をジョインする	pd.merge(df, df2)	pd.merge(df, df2)
code: データフレームdfとデータフレームdf2をcolをキーにしてジョインする	pd.merge(df, df2, on=col, how='outer')	pd.merge(df, df2, on=col)
code: データフレームdfとdf2を列colをキーにしてジョインする	pd.merge(df, df2, on=col, how='outer')	pd.merge(df, df2, on=col)
code: dfのcolカラムとデータフレームdf2の列col2をキーにしてジョインする	pd.merge(df, df2, left_on=col, right_on=col2, how='outer')	pd.merge(df, df2, left_on=col, right_on=col2)
code: dfのcolとデータフレームdf2のcol2をキーとして結合する	pd.merge(df, df2, on=col, how='outer')	pd.merge(df, df2, left_on=col, right_on=col2)
code: データフレームdfとデータフレームdf2をcolをキーとして全結合する	pd.merge(df, df2, on=col)	pd.merge(df, df2, on=col, how='outer')
code: dfとdf2を列colをキーにして外部ジョインする	pd.merge(df, df2, on=col, how='outer')	pd.merge(df, df2, on=col, how='outer')
code: データフレームdfとdf2をcolカラムをキーにして左結合する	pd.merge(df, df2, on=col, how='left')	pd.merge(df, df2, on=col, how='left')
code: データフレームdfとデータフレームdf2をcol列をキーにして左結合する	pd.merge(df, df2, on=col, how='left')	pd.merge(df, df2, on=col, how='left')
code: dfとデータフレームdf2を列colをキーにして右ジョインする	pd.merge(df, df2, on=col, how='right')	pd.merge(df, df2, on=col, how='right')
code: dfとデータフレームdf2をcol列をキーとして右ジョインする	pd.merge(df, df2, on=col, how='right')	pd.merge(df, df2, on=col, how='right')
code: dfとデータフレームdf2をcolをキーとして内部結合する	pd.merge(df, df2, on=col, how='inner')	pd.merge(df, df2, on=col, how='inner')
code: データフレームdfとデータフレームdf2をcolをキーにして内部ジョインする	pd.merge(df, df2, on=col, how='inner')	pd.merge(df, df2, on=col, how='inner')
code: dfのcolとデータフレームdf2のカラムcol2をキーにして全ジョインする	pd.merge(df, df2, left_on=col, right_on=col2, how='outer')	pd.merge(df, df2, left_on=col, right_on=col2, how='outer')
code: dfの列colとデータフレームdf2のcol2をキーにして外部結合する	pd.merge(df, df2, left_on=col, right_on=col2, how='outer')	pd.merge(df, df2, left_on=col, right_on=col2, how='outer')
code: データフレームdfのcolとデータフレームdf2の列col2をキーとして左ジョインする	pd.merge(df, df2, left_on=col, right_on=col2, how='left')	pd.merge(df, df2, left_on=col, right_on=col2, how='left')
code: データフレームdfの列colとdf2のカラムcol2をキーにして左ジョインする	pd.merge(df, df2, left_on=col, right_on=col2, how='left')	pd.merge(df, df2, left_on=col, right_on=col2, how='left')
code: dfのcolとdf2のcol2をキーにして右結合する	pd.merge(df, df2, left_on=col, right_on=col2, how='right')	pd.merge(df, df2, left_on=col, right_on=col2, how='right')
code: dfのcolカラムとdf2のcol2をキーにして右ジョインする	pd.merge(df, df2, left_on=col, right_on=col2, how='right')	pd.merge(df, df2, left_on=col, right_on=col2, how='right')
code: dfのcolとデータフレームdf2のcol2をキーにして内部結合する	pd.merge(df, df2, left_on=col, right_on=col2, how='inner')	pd.merge(df, df2, left_on=col, right_on=col2, how='inner')
code: データフレームdfのcolとデータフレームdf2の列col2をキーとして内部結合する	pd.merge(df, df2, left_on=col, right_on=col2, how='inner')	pd.merge(df, df2, left_on=col, right_on=col2, how='inner')
code: dfとdf2を縦に連結する	pd.concat([df, df2])	pd.concat([df, df2])
code: データフレームdfとdf2を縦に連結する	pd.concat([df, df2])	pd.concat([df, df2])
code: データフレームdfとdf2を縦に連結する	pd.concat([df, df2])	pd.concat([df, df2])
code: 縦方向にdfとdf2を繋ぐ	pd.concat([df, df2])	pd.concat([df, df2])
code: データフレームdfとdf2を縦方向に繋ぐ	pd.concat([df, df2])	pd.concat([df, df2])
code: データフレームdfとdf2を繋ぐ	pd.concat([df, df2])	pd.concat([df, df2])
code: dfのカテゴリデータをダミー変数に変換する	pd.get_dummies(df)	pd.get_dummies(df)
code: dfのカラムcolをダミー変数に変換する	pd.get_dummies(df[col])	pd.get_dummies(df[col])
code: データフレームdfのcolをダミー変数に変換する	pd.get_dummies(df[col])	pd.get_dummies(df[col])
code: iterableをダミー変数に変換する	pd.get_dummies(iterable)	pd.get_dummies(iterable)
code: イテラブルiterableをダミー変数にする	pd.get_dummies(iterable)	pd.get_dummies(iterable)
code: xを最初のカテゴリーを除外しダミー変数に変換する	pd.get_dummies(x, drop_first=True)	pd.get_dummies(x, drop_first=True)
code: xを最初のカテゴリーを除外しダミー変数にする	pd.get_dummies(x, drop_first=True)	pd.get_dummies(x, drop_first=True)
code: xを最初のカテゴリーを除外してダミー変数にする	pd.get_dummies(x, drop_first=True)	pd.get_dummies(x, drop_first=True)
code: NaNも加えてxをダミー変数に変換する	pd.get_dummies(x, dummy_na=True)	pd.get_dummies(x, dummy_na=True)
code: xをNaNも加えてダミー変数にする	pd.get_dummies(x, dummy_na=True)	pd.get_dummies(x, dummy_na=True)
code: __Y__でデータフレームdf全体を整列する	df.sort_values(by=col)	df.sort_values(by=col)
code: dfを__Y__によって並べる	df.sort_values(by=col)	df.sort_values(by=col)
code: __Y__を用いてデータフレームdfを並べ直す	df.sort_values(by=col)	df.sort_values(by=col)
code: データフレームdf全体をcolによって並べて更新する	df.sort_values(by=col, inplace=True)	df.sort_values(by=col, inplace=True)
code: データフレームdf全体をcolによって並べて入れ替える	df.sort_values(by=col, inplace=True)	df.sort_values(by=col, inplace=True)
code: データフレームdfをcolを用いて並べ直してインプレイスする	df.sort_values(by=col, inplace=True)	df.sort_values(by=col, inplace=True)
code: dfをcolでインプレイスで整列する	df.sort_values(by=col, inplace=True)	df.sort_values(by=col, inplace=True)
code: インプレイスでcolを用いてdfを並べる	df.sort_values(by=col, inplace=True)	df.sort_values(by=col, inplace=True)
code: colによってdfを破壊的に整列する	df.sort_values(by=col, inplace=True)	df.sort_values(by=col, inplace=True)
code: データフレームdf全体をcolカラムとcol2を用いて整列して、更新する	df.sort_values(by=[col,col2], inplace=True)	df.sort_values(by=[col,col2], inplace=True)
code: データフレームdfをcolカラムとcol2カラムを用いて並べ直してインプレイスする	df.sort_values(by=[col,col2], inplace=True)	df.sort_values(by=[col,col2], inplace=True)
code: データフレームdfをcolとcol2カラムを用いて並べて、更新する	df.sort_values(by=[col,col2], inplace=True)	df.sort_values(by=[col,col2], inplace=True)
code: colとcol2カラムを用いて破壊的にdf全体を並べ直す	df.sort_values(by=[col,col2], inplace=True)	df.sort_values(by=[col,col2], inplace=True)
code: 列colと列col2によってインプレイスでデータフレームdfを並べる	df.sort_values(by=[col,col2], inplace=True)	df.sort_values(by=[col,col2], inplace=True)
code: colとcol2を用いて破壊的にdfを並べ直す	df.sort_values(by=[col,col2], inplace=True)	df.sort_values(by=[col,col2], inplace=True)
code: リストalistで指定されたカラムを用いてデータフレームdf全体を並べ直して、インプレイスする	df.sort_values(by=alist, inplace=True)	df.sort_values(by=alist, inplace=True)
code: リストalistのカラムでデータフレームdfを並べて更新する	df.sort_values(by=alist, inplace=True)	df.sort_values(by=alist, inplace=True)
code: データフレームdf全体をalistで与えられたカラムで整列して、インプレイスする	df.sort_values(by=alist, inplace=True)	df.sort_values(by=alist, inplace=True)
code: インプレイスでリストalistの列でデータフレームdfを並べる	df.sort_values(by=alist, inplace=True)	df.sort_values(by=alist, inplace=True)
code: リストalistで与えられたカラムで破壊的にdf全体を並べる	df.sort_values(by=alist, inplace=True)	df.sort_values(by=alist, inplace=True)
code: リストalistの列によってインプレイスでdfをソートする	df.sort_values(by=alist, inplace=True)	df.sort_values(by=alist, inplace=True)
code: 昇順にデータフレームdfをcol列を用いて並べ直す	df.sort_values(by=col, ascending=True, inplace=True)	df.sort_values(by=col, ascending=True)
code: 小さい順にcol列を用いてdf全体をソートする	df.sort_values(by=col, ascending=True)	df.sort_values(by=col, ascending=True)
code: 小さい順にデータフレームdf全体をcolによって並べ直す	df.sort_values(by=col, ascending=True)	df.sort_values(by=col, ascending=True)
code: 昇順にデータフレームdf全体をcolとcol2によって並べ直す	df.sort_values(by=[col,col2], ascending=False)	df.sort_values(by=[col,col2], ascending=True)
code: 小さい順にcol列とcol2でデータフレームdf全体を並べ直す	df.sort_values(by=[col,col2], ascending=True)	df.sort_values(by=[col,col2], ascending=True)
code: 列colとcol2によってデータフレームdf全体を小さい順に並べ直す	df.sort_values(by=[col,col2], ascending=True)	df.sort_values(by=[col,col2], ascending=True)
code: データフレームdf全体を小さい順にリストalistのカラムによって並べ直す	df.sort_values(by=alist, ascending=False)	df.sort_values(by=alist, ascending=True)
code: データフレームdf全体をalistの列によって小さい順にソートする	df.sort_values(by=alist, ascending=True)	df.sort_values(by=alist, ascending=True)
code: データフレームdf全体をalistで指定された列によって小さい順に並べ直す	df.sort_values(by=alist, ascending=False)	df.sort_values(by=alist, ascending=True)
code: dfを列colで大きい順にソートする	df.sort_values(by=col, ascending=True)	df.sort_values(by=col, ascending=False)
code: データフレームdf全体をcolカラムで降順にソートする	df.sort_values(by=col, ascending=False)	df.sort_values(by=col, ascending=False)
code: dfを大きい順にcol列を用いて並べる	df.sort_values(by=col, ascending=True)	df.sort_values(by=col, ascending=False)
code: データフレームdfをcolと列col2で降順に整列する	df.sort_values(by=[col,col2], ascending=True)	df.sort_values(by=[col,col2], ascending=False)
code: colとcol2で大きい順にデータフレームdfを整列する	df.sort_values(by=[col,col2], ascending=True)	df.sort_values(by=[col,col2], ascending=False)
code: データフレームdf全体を大きい順にcol列とcol2カラムでソートする	df.sort_values(by=[col,col2], ascending=True)	df.sort_values(by=[col,col2], ascending=False)
code: alistで指定された列でデータフレームdfを大きい順に整列する	df.sort_values(by=alist, ascending=True)	df.sort_values(by=alist, ascending=False)
code: dfをalistのカラムで降順にソートする	df.sort_values(by=alist, ascending=False)	df.sort_values(by=alist, ascending=False)
code: alistで指定された列を用いてデータフレームdf全体を大きい順に整列する	df.sort_values(by=alist, ascending=True)	df.sort_values(by=alist, ascending=False)
code: 列colを用いて昇順にデータフレームdfをソートして更新する	df.sort_values(by=col, ascending=True, inplace=True)	df.sort_values(by=col, ascending=True, inplace=True)
code: データフレームdf全体をcolカラムによって昇順にソートして、入れ替える	df.sort_values(by=col, ascending=True, inplace=True)	df.sort_values(by=col, ascending=True, inplace=True)
code: colを用いてdf全体を昇順に並べて、更新する	df.sort_values(by=col, ascending=True, inplace=True)	df.sort_values(by=col, ascending=True, inplace=True)
code: 破壊的にdfを小さい順にcolを用いて並べる	df.sort_values(by=col, ascending=True, inplace=True)	df.sort_values(by=col, ascending=True, inplace=True)
code: df全体を小さい順にcolを用いてインプレイスでソートする	df.sort_values(by=col, ascending=True, inplace=True)	df.sort_values(by=col, ascending=True, inplace=True)
code: dfを昇順にcolでインプレイスで並べる	df.sort_values(by=col, ascending=True, inplace=True)	df.sort_values(by=col, ascending=True, inplace=True)
code: 昇順にdf全体をcolカラムとcol2を用いてソートして、更新する	df.sort_values(by=[col,col2], ascending=True, inplace=True)	df.sort_values(by=[col,col2], ascending=True, inplace=True)
code: dfをcolカラムとカラムcol2によって小さい順にソートして、入れ替える	df.sort_values(by=[col,col2], ascending=True, inplace=True)	df.sort_values(by=[col,col2], ascending=True, inplace=True)
code: データフレームdfを小さい順にcolと列col2で並べ直して、インプレイスする	df.sort_values(by=[col,col2], ascending=True, inplace=True)	df.sort_values(by=[col,col2], ascending=True, inplace=True)
code: データフレームdfをインプレイスでcolカラムとcol2で昇順に整列する	df.sort_values(by=[col,col2], ascending=True, inplace=True)	df.sort_values(by=[col,col2], ascending=True, inplace=True)
code: 破壊的に小さい順にcolとcol2カラムでdf全体を並べ直す	df.sort_values(by=[col,col2], ascending=True, inplace=True)	df.sort_values(by=[col,col2], ascending=True, inplace=True)
code: 昇順にcolとカラムcol2によってデータフレームdfを破壊的にソートする	df.sort_values(by=[col,col2], ascending=True, inplace=True)	df.sort_values(by=[col,col2], ascending=True, inplace=True)
code: 小さい順にデータフレームdfをリストalistの列でソートして、インプレイスする	df.sort_values(by=alist, ascending=True, inplace=True)	df.sort_values(by=alist, ascending=True, inplace=True)
code: alistのカラムによって小さい順にデータフレームdf全体を整列して、入れ替える	df.sort_values(by=alist, ascending=True, inplace=True)	df.sort_values(by=alist, ascending=True, inplace=True)
code: alistで与えられた列で小さい順にdf全体を並べ直して、入れ替える	df.sort_values(by=alist, ascending=True, inplace=True)	df.sort_values(by=alist, ascending=True, inplace=True)
code: df全体をインプレイスで小さい順にリストalistのカラムによって整列する	df.sort_values(by=alist, ascending=True, inplace=True)	df.sort_values(by=alist, ascending=True, inplace=True)
code: df全体をリストalistのカラムによってインプレイスで昇順に並べ直す	df.sort_values(by=alist, ascending=True, inplace=True)	df.sort_values(by=alist, ascending=True, inplace=True)
code: alistで指定された列で昇順にデータフレームdf全体をインプレイスで整列する	df.sort_values(by=alist, ascending=True, inplace=True)	df.sort_values(by=alist, ascending=True, inplace=True)
code: colカラムを用いてインプレイスで大きい順にdf全体を並べ直す	df.sort_values(by=col, ascending=True, inplace=True)	df.sort_values(by=col, ascending=False, inplace=True)
code: インプレイスで降順に列colを用いてデータフレームdf全体をソートする	df.sort_values(by=col, ascending=True, inplace=True)	df.sort_values(by=col, ascending=False, inplace=True)
code: 破壊的にcolによってdf全体を大きい順に整列する	df.sort_values(by=col, ascending=True, inplace=True)	df.sort_values(by=col, ascending=False, inplace=True)
code: 降順にdf全体を破壊的にcol列とcol2で並べる	df.sort_values(by=[col,col2], ascending=True, inplace=True)	df.sort_values(by=[col,col2], ascending=False, inplace=True)
code: 降順にdfを破壊的にcolと列col2によって並べる	df.sort_values(by=[col,col2], ascending=True, inplace=True)	df.sort_values(by=[col,col2], ascending=False, inplace=True)
code: dfを列colとカラムcol2によって破壊的に大きい順に並べる	df.sort_values(by=[col,col2], ascending=True, inplace=True)	df.sort_values(by=[col,col2], ascending=False, inplace=True)
code: リストalistのカラムでdfを大きい順に破壊的に並べる	df.sort_values(by=alist, ascending=True, inplace=True)	df.sort_values(by=alist, ascending=False, inplace=True)
code: 破壊的にデータフレームdf全体を降順にalistで与えられたカラムを用いて並べ直す	df.sort_values(by=alist, ascending=True, inplace=True)	df.sort_values(by=alist, ascending=False, inplace=True)
code: alistのカラムでインプレイスで降順にdf全体を整列する	df.sort_values(by=alist, ascending=True, inplace=True)	df.sort_values(by=alist, ascending=False, inplace=True)
code: データフレームdfをcolを用いて並べてNaNを先頭に来るようにする	df.sort_values(by=col, na_position='first')	df.sort_values(by=col, na_position='first')
code: 列colによってデータフレームdfをソートしてNaNを先頭にする	df.sort_values(by=col, na_position='first')	df.sort_values(by=col, na_position='first')
code: df全体をcol列を用いて並べて、NaNを先頭に来るようにする	df.sort_values(by=col, na_position='first')	df.sort_values(by=col, na_position='first')
code: データフレームdf全体をカラムcolとcol2カラムによってソートして、NaNを先頭に来るようにする	df.sort_values(by=[col,col2], na_position='first')	df.sort_values(by=[col,col2], na_position='first')
code: df全体をカラムcolとcol2を用いて整列して、NaNを先頭にする	df.sort_values(by=[col,col2], na_position='first')	df.sort_values(by=[col,col2], na_position='first')
code: データフレームdfをcol列とcol2を用いて並べて、NaNを先頭に来るようにする	df.sort_values(by=[col,col2], na_position='first')	df.sort_values(by=[col,col2], na_position='first')
code: alistで与えられたカラムでdf全体を整列してNaNを先頭にする	df.sort_values(by=alist, na_position='first')	df.sort_values(by=alist, na_position='first')
code: dfをalistの列によって並べ直してNaNを先頭にする	df.sort_values(by=alist, na_position='first')	df.sort_values(by=alist, na_position='first')
code: df全体をリストalistの列を用いて整列してNaNを先頭に来るようにする	df.sort_values(by=alist, na_position='first')	df.sort_values(by=alist, na_position='first')
code: オプションで、データ操作の結果を反映させる	inplace = True	inplace = True
code: オプションでインプレイスで操作する	inplace = True	inplace = True
code: オプションで未入力値を先頭にする	na_position = 'first'	na_position = 'first'
code: オプションで、大きい順にする	ascending = False	ascending = False
code: オプションで、小さい順にする	ascending = True	ascending = True
code: dfをインデックスによってソートする	df.sort_index()	df.sort_index()
code: データフレームdfを行を用いて並べ直す	df.sort_index()	df.sort_index()
code: データフレームdf全体を行によって並べ直す	df.sort_index()	df.sort_index()
code: データフレームdf全体をインデックスによって降順で整列する	df.sort_index(ascending=False)	df.sort_index(ascending=False)
code: データフレームdf全体をインデックスで降順で並べ直す	df.sort_index()	df.sort_index(ascending=False)
code: データフレームdf全体を行を用いて降順で並べ直す	df.sort_index(ascending=False)	df.sort_index(ascending=False)
code: dfを各カラムcol毎で集計する	df.groupby(col).size()	df.groupby(col)
code: データフレームdfを各colでグループ化する	df.groupby(col).size()	df.groupby(col)
code: 各colごとにデータフレームdfを集約する	df.groupby(col).count()	df.groupby(col)
code: データフレームdfをcol毎に未入力値を含めてまとめる	df.groupby(col, dropna=False)	df.groupby(col, dropna=False)
code: データフレームdfを欠損値を含めてcol毎でグループ化する	df.groupby(col, dropna=False)	df.groupby(col, dropna=False)
code: dfをcol毎に欠損値を含めてまとめる	df.groupby(col, dropna=False)	df.groupby(col, dropna=False)
code: データフレームdfをfuncを用いてまとめる	df.groupby(func)	df.groupby(func)
code: データフレームdfを関数funcを使って集約する	df.groupby(func)	df.groupby(func)
code: データフレームdfをcolでまとめて列挙する	[(name, group) for name, group in df.groupby(col)]	[(name, group) for name, group in df.groupby(col)]
code: データフレームdfを各colごとにまとめて列挙する	[(name, group) for name, group in df.groupby(col)]	[(name, group) for name, group in df.groupby(col)]
code: dfをcol列とカラムcol2の組み合わせ毎にまとめて列挙する	[(name, group) for name, group in df.groupby([col, col2])]	[(name, group) for name, group in df.groupby([col, col2])]
code: dfをcol列とカラムcol2の組み合わせ毎でグループ化して列挙する	df.groupby([col, col2], as_index=False).count()	[(name, group) for name, group in df.groupby([col, col2])]
code: データフレームdfをカラムcolでまとめてsという名前のグループを使う	df.groupby(col).get_group(s)	df.groupby(col).get_group(s)
code: データフレームdfを各colカラム毎に集約してsという名前のグループを見る	df.groupby(col).count()	df.groupby(col).get_group(s)
code: データフレームdfを各列colごとにグループ化して各グループの個数を確認する	df.groupby(col).count()	df.groupby(col).size()
code: dfを各colカラム毎に集約してグループの大きさを確認する	df.groupby(col).size()	df.groupby(col).size()
code: データフレームdfをcolカラム毎でまとめて、sというグループの大きさを求める	df.groupby(col).size()[s]	df.groupby(col).size()[s]
code: dfを各colカラムごとに集計して文字列sというグループの大きさを算出する	df.groupby(col).size()[s]	df.groupby(col).size()[s]
code: dfのcol毎の合計	df.groupby(col).sum()	df.groupby(col).sum()
code: dfのcol列毎の合計	df.groupby(col).sum()	df.groupby(col).sum()
code: データフレームdfをcolで集計した合計を確認する	df.groupby(col).sum()	df.groupby(col).sum()
code: dfをcol毎にまとめた合計を見る	df.groupby(col).sum()	df.groupby(col).sum()
code: dfのカラムcol毎の平均値	df.groupby(col).mean()	df.groupby(col).mean()
code: データフレームdfの各colカラム毎の平均値	df.groupby(col).mean()	df.groupby(col).mean()
code: dfを各col毎にグループ化して平均値を計算する	df.groupby(col).mean()	df.groupby(col).mean()
code: データフレームdfを各colでまとめて、平均値を確認する	df.groupby(col).mean()	df.groupby(col).mean()
code: dfのcolカラム毎の個数を確認する	df.groupby(col).count()	df.groupby(col).count()
code: データフレームdfの各カラムcol毎の個数	df.groupby(col).count()	df.groupby(col).count()
code: dfを各列col毎に集約して個数を求める	df.groupby(col).count()	df.groupby(col).count()
code: データフレームdfをcolでグループ化した個数を確認する	df.groupby(col).sum()	df.groupby(col).count()
code: データフレームdfの各col毎の最大値を求める	df.groupby(col).max()	df.groupby(col).max()
code: dfの列col毎の最大値	df.groupby(col).max()	df.groupby(col).max()
code: データフレームdfを各列col毎にまとめて最大値を確認する	df.groupby(col).max()	df.groupby(col).max()
code: データフレームdfをcolごとにグループ化した最大値を確認する	df.groupby(col).max()	df.groupby(col).max()
code: データフレームdfの各col毎の最小値	df.groupby(col).min()	df.groupby(col).min()
code: データフレームdfのcol毎の最小値を確認する	df.groupby(col).min()	df.groupby(col).min()
code: dfを各colごとにまとめた最小値を計算する	df.groupby(col).min()	df.groupby(col).min()
code: データフレームdfをcolでまとめた最小値を確認する	df.groupby(col).min()	df.groupby(col).min()
code: データフレームdfの各col毎の分散を計算する	df.groupby(col).var()	df.groupby(col).var()
code: dfの各列col毎の分散を求める	df.groupby(col).var()	df.groupby(col).var()
code: dfを各colで集計した分散を求める	df.groupby(col).var()	df.groupby(col).var()
code: データフレームdfを各col毎でまとめた分散を求める	df.groupby(col).var()	df.groupby(col).var()
code: dfの各col毎の標準偏差	df.groupby(col).std()	df.groupby(col).std()
code: dfのcol毎の標準偏差	df.groupby(col).std()	df.groupby(col).std()
code: dfをカラムcolで集約して、標準偏差を計算する	df.groupby(col).std()	df.groupby(col).std()
code: dfをcol毎でグループ化した標準偏差を求める	df.groupby(col).std()	df.groupby(col).std()
code: データフレームdfのcolカラム毎の関数適用した値を確認する	df.groupby(col).agg(func)	df.groupby(col).agg(func)
code: データフレームdfの各カラムcol毎の関数適用した値を求める	df.groupby(col).agg(func)	df.groupby(col).agg(func)
code: dfを各col列でグループ化した関数適用した値を求める	df.groupby(col).agg(func)	df.groupby(col).agg(func)
code: dfを各カラムcol毎でまとめた関数適用した値を計算する	df.groupby(col).agg(func)	df.groupby(col).agg(func)
code: データフレームdfの各カラムcolとcol2毎の合計を計算する	df.groupby([col, col2], as_index=False).sum()	df.groupby([col, col2], as_index=False).sum()
code: データフレームdfの各カラムcolとcol2毎の合計	df.groupby([col, col2], as_index=False).sum()	df.groupby([col, col2], as_index=False).sum()
code: データフレームdfを各colカラムとカラムcol2の組み合わせ毎で集計して、合計を求める	df.groupby([col, col2], as_index=False).sum()	df.groupby([col, col2], as_index=False).sum()
code: dfを各列colとcol2の組み合わせ毎にまとめて合計を算出する	df.groupby([col, col2], as_index=False).sum()	df.groupby([col, col2], as_index=False).sum()
code: データフレームdfのcolとcol2毎の平均値を求める	df.groupby([col, col2], as_index=False).mean()	df.groupby([col, col2], as_index=False).mean()
code: dfの列colとcol2毎の平均値を確認する	df.groupby([col, col2], as_index=False).mean()	df.groupby([col, col2], as_index=False).mean()
code: データフレームdfを各col列とカラムcol2の組み合わせ毎にまとめて平均値	df.groupby([col, col2], as_index=False).mean()	df.groupby([col, col2], as_index=False).mean()
code: データフレームdfを列colとカラムcol2の組み合わせ毎でまとめて、平均値	df.groupby([col, col2], as_index=False).mean()	df.groupby([col, col2], as_index=False).mean()
code: データフレームdfの各colとcol2列毎の個数	df.groupby([col, col2], as_index=False).count()	df.groupby([col, col2], as_index=False).count()
code: dfのcolとcol2列毎の個数	df.groupby([col, col2], as_index=False).count()	df.groupby([col, col2], as_index=False).count()
code: データフレームdfを列colとcol2カラムの組み合わせ毎で集計して個数を計算する	df.groupby([col, col2], as_index=False).count()	df.groupby([col, col2], as_index=False).count()
code: データフレームdfをcolとcol2の組み合わせ毎にまとめて、個数	df.groupby([col, col2], as_index=False).count()	df.groupby([col, col2], as_index=False).count()
code: データフレームdfの各列colとcol2カラム毎の最大値	df.groupby([col, col2], as_index=False).max()	df.groupby([col, col2], as_index=False).max()
code: dfの各colとcol2列毎の最大値を確認する	df.groupby([col, col2], as_index=False).max()	df.groupby([col, col2], as_index=False).max()
code: dfを各colカラムとcol2の組み合わせ毎に集約して、最大値を算出する	df.groupby([col, col2], as_index=False).max()	df.groupby([col, col2], as_index=False).max()
code: dfを各カラムcolとcol2カラムの組み合わせ毎にグループ化して、最大値	df.groupby([col, col2], as_index=False).max()	df.groupby([col, col2], as_index=False).max()
code: dfの各colとcol2列毎の最小値を確認する	df.groupby([col, col2], as_index=False).min()	df.groupby([col, col2], as_index=False).min()
code: データフレームdfのcolカラムとcol2毎の最小値を確認する	df.groupby([col, col2], as_index=False).min()	df.groupby([col, col2], as_index=False).min()
code: データフレームdfをcolカラムとcol2の組み合わせで集約して、最小値	df.groupby([col, col2], as_index=False).min()	df.groupby([col, col2], as_index=False).min()
code: データフレームdfをcolと列col2の組み合わせごとにまとめて最小値を求める	df.groupby([col, col2], as_index=False).min()	df.groupby([col, col2], as_index=False).min()
code: dfの各colカラムとcol2毎の分散	df.groupby([col, col2], as_index=False).var()	df.groupby([col, col2], as_index=False).var()
code: dfの列colとcol2毎の分散	df.groupby([col, col2], as_index=False).var()	df.groupby([col, col2], as_index=False).var()
code: dfを列colとcol2の組み合わせごとに集計して、分散	df.groupby([col, col2], as_index=False).var()	df.groupby([col, col2], as_index=False).var()
code: データフレームdfを列colとcol2列の組み合わせ毎にグループ化して、分散を調べる	df.groupby([col, col2], as_index=False).var()	df.groupby([col, col2], as_index=False).var()
code: データフレームdfのcolとcol2毎の標準偏差を計算する	df.groupby([col, col2], as_index=False).std()	df.groupby([col, col2], as_index=False).std()
code: dfの各colと列col2毎の標準偏差	df.groupby([col, col2], as_index=False).std()	df.groupby([col, col2], as_index=False).std()
code: dfをcolとcol2の組み合わせ毎にグループ化して、標準偏差を算出する	df.groupby([col, col2], as_index=False).std()	df.groupby([col, col2], as_index=False).std()
code: dfを各colとcol2カラムの組み合わせ毎で集約して標準偏差を確認する	df.groupby([col, col2], as_index=False).std()	df.groupby([col, col2], as_index=False).std()
code: データフレームdfのcolカラムとcol2列毎の関数適用した値	df.groupby([col, col2], as_index=False).agg(func)	df.groupby([col, col2], as_index=False).agg(func)
code: データフレームdfのcolとcol2毎の関数適用した値	df.groupby([col, col2], as_index=False).agg(func)	df.groupby([col, col2], as_index=False).agg(func)
code: dfを各カラムcolとcol2カラムの組み合わせごとに集計して、関数適用した値	df.groupby([col, col2], as_index=False).agg(func)	df.groupby([col, col2], as_index=False).agg(func)
code: dfを各colとcol2カラムの組み合わせでグループ化して、関数適用した値を求める	df.groupby([col, col2], as_index=False).agg(func)	df.groupby([col, col2], as_index=False).agg(func)
code: データフレームdfを各colカラム毎でまとめて、col2カラムの合計を確認する	df.groupby(col)[col2].sum()	df.groupby(col)[col2].sum()
code: 各カラムcol毎でdfを集計してcol2の合計を見る	df.groupby(col)[col2].sum()	df.groupby(col)[col2].sum()
code: データフレームdfをcolごとにグループ化してcol2の合計を確認する	df.groupby(col)[col2].sum()	df.groupby(col)[col2].sum()
code: 列col毎でデータフレームdfをグループ化してcol2カラムの平均値を確認する	df.groupby(col)[col2].mean()	df.groupby(col)[col2].mean()
code: 各colカラムごとにdfをグループ化してcol2列の平均値を求める	df.groupby(col)[col2].mean()	df.groupby(col)[col2].mean()
code: col列ごとにdfをグループ化してcol2の平均値を求める	df.groupby(col)[col2].mean()	df.groupby(col)[col2].mean()
code: データフレームdfを各カラムcolごとにまとめてcol2カラムの個数を確認する	df.groupby(col)[col2].count()	df.groupby(col)[col2].count()
code: データフレームdfを各列col毎でまとめて、列col2の個数を計算する	df.groupby(col)[col2].count()	df.groupby(col)[col2].count()
code: dfをcolごとにまとめて、列col2の個数を見る	df.groupby(col)[col2].count()	df.groupby(col)[col2].count()
code: 各カラムcolでデータフレームdfをグループ化して、カラムcol2の最大値を求める	df.groupby(col)[col2].max()	df.groupby(col)[col2].max()
code: dfを各colカラム毎で集約してカラムcol2の最大値を求める	df.groupby(col)[col2].max()	df.groupby(col)[col2].max()
code: 各col列毎にデータフレームdfをまとめて、列col2の最大値を求める	df.groupby(col)[col2].max()	df.groupby(col)[col2].max()
code: 各col毎にdfを集約してcol2の最小値を計算する	df.groupby(col)[col2].min()	df.groupby(col)[col2].min()
code: dfを各カラムcolでまとめてcol2の最小値を確認する	df.groupby(col)[col2].min()	df.groupby(col)[col2].min()
code: 各カラムcol毎にdfをグループ化してcol2の最小値を求める	df.groupby(col)[col2].min()	df.groupby(col)[col2].min()
code: dfを各col毎にグループ化してcol2の分散を確認する	df.groupby(col)[col2].var()	df.groupby(col)[col2].var()
code: カラムcol毎でdfをまとめてcol2の分散を求める	df.groupby(col)[col2].var()	df.groupby(col)[col2].var()
code: colでデータフレームdfをまとめて列col2の分散を確認する	df[col, col2]].var()	df.groupby(col)[col2].var()
code: データフレームdfを各col列毎でグループ化してcol2の標準偏差を求める	df.groupby(col)[col2].std()	df.groupby(col)[col2].std()
code: col毎でdfを集約して、列col2の標準偏差を求める	df.groupby(col)[col2].std()	df.groupby(col)[col2].std()
code: データフレームdfをcol毎でまとめて、col2の標準偏差を算出する	df.groupby(col)[col2].std()	df.groupby(col)[col2].std()
code: 各col毎でdfをグループ化して、列col2の関数適用した値を計算する	df.groupby(col)[col2].agg(func)	df.groupby(col)[col2].agg(func)
code: dfをcol毎に集計して、col2の関数適用した値を算出する	df.groupby(col)[col2].agg(func)	df.groupby(col)[col2].agg(func)
code: 各col毎にデータフレームdfを集計して、col2の関数適用した値を確認する	df.groupby(col)[col2].agg(func)	df.groupby(col)[col2].agg(func)
code: dfを各col列毎でグループ化してカラムcol2の要約統計量を計算する	df.groupby(col).describe()[col2]	df.groupby(col).describe()[col2]
code: 各col毎でdfをグループ化してcol2カラムの基本統計量を求める	df.groupby(col).describe()[col2]	df.groupby(col).describe()[col2]
code: col毎でdfをグループ化してcol2の基本統計量を求める	df.groupby(col).describe()[col2]	df.groupby(col).describe()[col2]
code: データ列を用いる	import pandas as pd	import pandas as pd
code: データ列をインポートする	import pandas as pd	import pandas as pd
code: Pandasでxを日付データに変換する	pd.to_datetime(x)	pd.to_datetime(x)
code: Pandasで、xをタイムスタンプにする	pd.to_datetime(x)	pd.to_datetime(x)
code: データフレームdfのcollをタイムスタンプにする	pd.to_datetime(df[col])	pd.to_datetime(df[col])
code: データフレームdfのcollをPandasの日付型にする	pd.to_datetime(df[col])	pd.to_datetime(df[col])
code: Pandasで、データ列dsをdatetime64型に変換する	pd.to_datetime(ds)	pd.to_datetime(ds)
code: dsを日付データにする	ds.dt.hour	pd.to_datetime(ds)
code: 文字列sをタイムスタンプにする	datetime.datetime.today() + datetime.timedelta(days=s)	pd.to_datetime(s)
code: 文字列sを日付データに変換する	pd.to_datetime(s)	pd.to_datetime(s)
code: データフレームdfのcollをフォーマットとしてPandasの日付型に変換する	pd.to_datetime(df[col], format='%Y-%m-%d')	pd.to_datetime(df[col], format='%Y-%m-%d')
code: dfのcollをフォーマットとしてPandasの日付型にする	pd.to_datetime(df[col], format='%Y-%m-%d')	pd.to_datetime(df[col], format='%Y-%m-%d')
code: 書式としてdfのcollをPandasの日付型にする	pd.to_datetime(df[col], format='%Y-%m-%d')	pd.to_datetime(df[col], format='%Y-%m-%d')
code: dsを書式でdatetime64型にする	pd.to_datetime(ds, format='%Y-%m-%d')	pd.to_datetime(ds, format='%Y-%m-%d')
code: フォーマットとしてデータ列dsをdatetime64型に変換する	pd.to_datetime(ds, format='%Y-%m-%d')	pd.to_datetime(ds, format='%Y-%m-%d')
code: Pandasで、データ列dsをフォーマットとしてPandasの日付型に変換する	pd.to_datetime(ds, format='%Y-%m-%d')	pd.to_datetime(ds, format='%Y-%m-%d')
code: Pandasで、書式を用いてsをPandasの日付型に変換する	pd.to_datetime(s, format=fmt)	pd.to_datetime(s, format='%Y-%m-%d')
code: フォーマットを用いて文字列sをdatetime64型にする	pd.to_datetime(s, format='%Y-%m-%d')	pd.to_datetime(s, format='%Y-%m-%d')
code: Pandasで、書式としてsをタイムスタンプ型に変換する	pd.to_datetime(s, format='%Y-%m-%d')	pd.to_datetime(s, format='%Y-%m-%d')
code: Pandasで、フォーマットfmtでデータフレームdfのcollをPandasの日付型に変換する	pd.to_datetime(df[col], format=fmt)	pd.to_datetime(df[col], format=fmt)
code: Pandasで書式fmtを用いてデータフレームdfのcollをdatetime64型に変換する	pd.to_datetime(df[col], format=fmt)	pd.to_datetime(df[col], format=fmt)
code: Pandasでdfのcollを書式fmtを用いてPandasの日付型に変換する	pd.to_datetime(df[col], format=fmt)	pd.to_datetime(df[col], format=fmt)
code: dsを書式fmtを用いて日付データに変換する	pd.to_datetime(ds, format=fmt)	pd.to_datetime(ds, format=fmt)
code: Pandasで、フォーマットfmtでデータ列dsをdatetime64型にする	pd.to_datetime(ds, format=fmt)	pd.to_datetime(ds, format=fmt)
code: Pandasでデータ列dsをフォーマットfmtとしてdatetime64型にする	pd.to_datetime(ds, format=fmt)	pd.to_datetime(ds, format=fmt)
code: Pandasで、sをフォーマットfmtを用いてPandasの日付型に変換する	pd.to_datetime(dfmt)	pd.to_datetime(s, format=fmt)
code: sを書式fmtで日付データに変換する	pd.to_datetime(s, format=fmt)	pd.to_datetime(s, format=fmt)
code: Pandasで、フォーマットfmtとしてsを日付データに変換する	pd.to_datetime(s, format=fmt)	pd.to_datetime(s, format=fmt)
code: UNIX秒のdfのcollからPandasの日付型にする	pd.to_datetime(df[col], unit='s', utc=True)	pd.to_datetime(df[col], unit='s', utc=True)
code: エポック秒のdfのcollから日付データにする	pd.to_datetime(df[col], unit='s', utc=True)	pd.to_datetime(df[col], unit='s', utc=True)
code: dfのcollのUNIX秒からPandasの日付型にする	pd.to_datetime(df[col], unit='s', utc=True)	pd.to_datetime(df[col], unit='s', utc=True)
code: dfのcollのUNIX時間からdatetime64型にする	pd.to_datetime(df[col], unit='s', utc=True)	pd.to_datetime(df[col], unit='s', utc=True)
code: Pandasで、エポック秒のデータ列dsからタイムスタンプに変換する	pd.to_datetime(ds, unit='s', utc=True)	pd.to_datetime(ds, unit='s', utc=True)
code: エポック秒のdsから日付データにする	pd.to_datetime(ds, unit='s', utc=True)	pd.to_datetime(ds, unit='s', utc=True)
code: Pandasで、データ列dsの数値時刻からタイムスタンプにする	pd.to_datetime(ds, unit='s', utc=True)	pd.to_datetime(ds, unit='s', utc=True)
code: dsのUNIX時間からPandasの日付型にする	pd.to_datetime(ds, unit='s', utc=True)	pd.to_datetime(ds, unit='s', utc=True)
code: エポック秒のsからPandasの日付型に変換する	pd.to_datetime(s, unit='s', utc=True)	pd.to_datetime(s, unit='s', utc=True)
code: PandasでUNIX秒の文字列sからdatetime64型に変換する	pd.to_datetime(s, unit='s', utc=True)	pd.to_datetime(s, unit='s', utc=True)
code: sのUNIX秒から日付データにする	pd.to_datetime(s, unit='s', utc=True)	pd.to_datetime(s, unit='s', utc=True)
code: Pandasで、文字列sのUNIX秒からPandasの日付型に変換する	pd.to_datetime(s, unit='s', utc=True)	pd.to_datetime(s, unit='s', utc=True)
code: dfのcolカラムのタイムゾーンを東京に変更する	df[col].tz_convert('Asia/Tokyo')	df[col].tz_convert('Asia/Tokyo')
code: データフレームdfのcolカラムのタイムゾーンを東京に指定する	df[col].tz_convert('Asia/Tokyo')	df[col].tz_convert('Asia/Tokyo')
code: dsのタイムゾーンを日本に変更する	ds.tz_convert('Asia/Tokyo')	ds.tz_convert('Asia/Tokyo')
code: データ列dsのタイムゾーンを日本に指定する	ds.tz_convert('Asia/Tokyo')	ds.tz_convert('Asia/Tokyo')
code: データフレームdfのcolのタイムゾーンをsにする	df[col].tz_convert(s)	df[col].tz_convert(s)
code: データフレームdfのcolのタイムゾーンを文字列sに設定する	df[col].tz_convert(s)	df[col].tz_convert(s)
code: dsのタイムゾーンを文字列sに設定する	ds.tz_convert(s)	ds.tz_convert(s)
code: データ列dsのタイムゾーンをsに変更する	ds.tz_convert(s)	ds.tz_convert(s)
code: Pandasで、データフレームdfのcolカラムをインデックスにする	df.set_index(col, inplace=True)	df.set_index(col, inplace=True)
code: Pandasでデータフレームdfのcolカラムをインデックスにする	df.set_index(col)	df.set_index(col, inplace=True)
code: Pandasで、日付データのデータフレームdfのカラムcolをインデックスにする	df.index = pd.DatetimeIndex(df[col])	df.index = pd.DatetimeIndex(df[col])
code: Pandasで、日付データのデータフレームdfのカラムcolをインデックスにする	df.index = pd.DatetimeIndex(d.to_datetime(df[col])	df.index = pd.DatetimeIndex(df[col])
code: Pandasでdatetime64型のdsをdfのインデックスにする	df.index = pd.DatetimeIndex(ds)	df.index = pd.DatetimeIndex(ds)
code: datetime64型のdsをインデックスにする	df.index = pd.DatetimeIndex(ds)	df.index = pd.DatetimeIndex(ds)
code: Pandasで、データフレームdfのcolカラムをPandasの日付型に変換し、dfのインデックスにする	df.index = pd.to_datetime(df[col], unit='s', utc=True)	df.index = pd.DatetimeIndex(pd.to_datetime(df[col]))
code: Pandasでdfのcolカラムを日付データに変換し、インデックスにする	df.index = pd.DatetimeIndex(pd.to_datetime(datetime(datetime(df[col])))	df.index = pd.DatetimeIndex(pd.to_datetime(df[col]))
code: Pandasで、dsを日付データに変換し、インデックスにする	df.index = pd.to_datetime(ds)	df.index = pd.DatetimeIndex(pd.to_datetime(ds))
code: Pandasでデータ列dsをdatetime64型に変換しインデックスにする	df.index = pd.DatetimeIndex(pd.to_datetime(ds))))	df.index = pd.DatetimeIndex(pd.to_datetime(ds))
code: データフレームdfのカラムcolの年を求める	df[col].dt.year	df[col].dt.year
code: dfのcolの年	df[col].dt.year	df[col].dt.year
code: データフレームdfのcolカラムは何年か見る	df[col].dt.year	df[col].dt.year
code: dfのカラムcolが何年か調べる	df[col].dt.year	df[col].dt.year
code: データ列dsの年	ds.dt.year	ds.dt.year
code: データ列dsが何年か調べる	ds.dt.year	ds.dt.year
code: データフレームdfのcolの月	df[col].dt.month	df[col].dt.month
code: dfのcolの月を求める	df[col].dt.month	df[col].dt.month
code: dfのcolカラムは何月か調べる	df[col].dt.month	df[col].dt.month
code: dfのcolカラムは何月か調べる	df[col].dt.month	df[col].dt.month
code: データ列dsの月	ds.dt.month	ds.dt.month
code: データ列dsが何月か見る	ds.dt.month	ds.dt.month
code: データフレームdfのcolカラムの日にちを見る	df[col].dt.day	df[col].dt.day
code: dfのcolの日	df[col].dt.day	df[col].dt.day
code: データフレームdfのcolが何日か見る	df[col].dt.day	df[col].dt.day
code: データフレームdfのカラムcolは何日か調べる	df[col].dt.day	df[col].dt.day
code: データ列dsの日にち	ds.dt.dayofweek	ds.dt.day
code: dsの日を使う	ds.dt.day	ds.dt.day
code: データ列dsは何日か確認する	ds.dt.day	ds.dt.day
code: dfのcolの時刻	df[col].dt.hour	df[col].dt.hour
code: dfのカラムcolの時を求める	df[col].dt.hour	df[col].dt.hour
code: データフレームdfのcolが何時か見る	df[col].dt.hour	df[col].dt.hour
code: dfのカラムcolが何時か見る	df[col].dt.hour	df[col].dt.hour
code: データ列dsの時	ds.dt.hour	ds.dt.hour
code: dsの時刻	ds.dt.hour	ds.dt.hour
code: データ列dsは何時か見る	ds.dt.hour	ds.dt.hour
code: dfのcolカラムの分	df[col].dt.minute	df[col].dt.minute
code: dfのcolの分を求める	df[col].dt.minute	df[col].dt.minute
code: dfのカラムcolは何分か見る	df[col].dt.minute	df[col].dt.minute
code: データフレームdfのcolが何分か確認する	df[col].dt.minute	df[col].dt.minute
code: データ列dsの分を使う	ds.dt.minute	ds.dt.minute
code: dsが何分か確認する	ds.dt.minute	ds.dt.minute
code: dfのcolカラムの秒	df[col].dt.second	df[col].dt.second
code: データフレームdfのカラムcolの秒を見る	df[col].dt.second	df[col].dt.second
code: dfのcolは何秒か確認する	df[col].dt.second	df[col].dt.second
code: dfのカラムcolが何秒か調べる	df[col].dt.second	df[col].dt.second
code: データ列dsの秒	ds.dt.second	ds.dt.second
code: データ列dsが何秒か確認する	ds.dt.second	ds.dt.second
code: dfのcolの曜日	df[col].dt.weekday_name	df[col].dt.weekday_name
code: データフレームdfのcolの曜日名	df[col].dt.weekday_name	df[col].dt.weekday_name
code: データフレームdfのカラムcolが何曜日か調べる	df[col].dt.weekday_name	df[col].dt.weekday_name
code: dfのcolカラムは何曜日か見る	df[col].dt.dayofweek	df[col].dt.weekday_name
code: データ列dsの曜日の名前	ds.dt.dayofweek	ds.dt.weekday_name
code: dsの曜日	ds.dt.weekday_name	ds.dt.weekday_name
code: dsが何曜日か確認する	ds.dt.weekday()	ds.dt.weekday_name
code: dfのcolの曜日数	df[col].dt.weekday_name	df[col].dt.dayofweek
code: データフレームdfのカラムcolの曜日数	df[col].dt.weekday_name	df[col].dt.dayofweek
code: データフレームdfのcolの曜日が何日目か調べる	df[col].dt.weekday_name	df[col].dt.dayofweek
code: データフレームdfのcolの曜日は何日目か調べる	df[col].dt.weekday_name	df[col].dt.dayofweek
code: データ列dsの曜日数	ds.dt.weekday_name	ds.dt.dayofweek
code: データ列dsの曜日が何日目か調べる	ds.dt.weekday_name	ds.dt.dayofweek
code: データフレームを使用する	import pandas as pd	import pandas as pd
code: 表データをインポートする	import time	import pandas as pd
code: Pandasのバージョンをプリントする	print(pd.___version__)	print(pd.__version__)
code: Pandasのバージョンを調べる	print(pd._________version__)	print(pd.__version__)
code: 表示可能な列数を増やす	pd.set_option('display.max_columns', n)	pd.set_option('display.max_columns', n)
code: 表示可能な列数を増やす	pd.set_option('display.max_columns', n)	pd.set_option('display.max_columns', n)
code: 表示される列数の最大値をnに設定する	pd.set_option('display.max_columns', n)	pd.set_option('display.max_columns', n)
code: 表示できる列数の最大値をnに設定する	pd.set_option('display.max_columns', n)	pd.set_option('display.max_columns', n)
code: データフレームを表示するときデータフレームをn列まで表示可能なようにする	pd.set_option('display.max_columns', n)	pd.set_option('display.max_columns', n)
code: n列までデータフレームを表示されるようにする	pd.set_option('display.max_columns', n)	pd.set_option('display.max_columns', n)
code: データフレームを表示するときn列までデータフレームを表示可能なようにする	pd.set_option('display.max_columns', n)	pd.set_option('display.max_columns', n)
code: データフレームを表示するとき、表示可能な行数を減らす	pd.set_option('display.max_rows', n)	pd.set_option('display.max_rows', n)
code: データフレームを表示するとき最大行数を変更する	pd.set_option('display.max_rows', n)	pd.set_option('display.max_rows', n)
code: 行数をnにする	pd.set_option('display.max_rows', n)	pd.set_option('display.max_rows', n)
code: データフレームを表示するとき最大行数をnに増やす	pd.set_option('display.max_rows', n)	pd.set_option('display.max_rows', n)
code: データフレームを表示するときデータフレームをn行まで表示できるようにする	pd.set_option('display.max_rows', n)	pd.set_option('display.max_rows', n)
code: データフレームを表示するとき、データフレームをn行まで表示できるようにする	pd.set_option('display.max_rows', n)	pd.set_option('display.max_rows', n)
code: データフレームを表示するとき小数点以下の表示精度を設定する	pd.set_option('precision', n)	pd.set_option('precision', n)
code: 小数点以下をn桁に減らす	pd.set_option('precision', n)	pd.set_option('precision', n)
code: 小数点以下をn桁に増やす	pd.set_option('precision', n)	pd.set_option('precision', n)
code: 小数点以下n桁まで表示可能なようにする	pd.set_option('precision', n)	pd.set_option('precision', n)
code: 小数点以下n桁まで表示可能なようにする	pd.set_option('precision', n)	pd.set_option('precision', n)
code: 折り返しをしない	pd.set_option('expand_frame_repr', False)	pd.set_option('expand_frame_repr', False)
code: 折り返しを無効に増やす	pd.set_option('expand_frame_repr', False)	pd.set_option('expand_frame_repr', False)
code: データフレームを表示するとき、折り返しをオフに設定する	pd.set_option('expand_frame_repr', False)	pd.set_option('expand_frame_repr', False)
code: カラムの最大幅をnに変更する	pd.set_option('max_colwidth', n)	pd.set_option('max_colwidth', n)
code: 列の最大幅をnにする	pd.set_option('max_colwidth', n)	pd.set_option('max_colwidth', n)
code: ヘッダー行を右寄せにする	pd.set_option('colheader_justify', 'right')	pd.set_option('colheader_justify', 'right')
code: ヘッダー行を右寄せに変更する	pd.set_option('colheader_justify', 'right')	pd.set_option('colheader_justify', 'right')
code: ヘッダー行を左寄せに増やす	pd.set_option('colheader_justify', 'left')	pd.set_option('colheader_justify', 'left')
code: ヘッダー行を左寄せに増やす	pd.set_option('colheader_justify', 'left')	pd.set_option('colheader_justify', 'left')
code: Pandasとしてエクセルデータからデータフレームを読み込む	pd.read_excel(excelfile)	pd.read_excel(excelfile)
code: データフレームをから読み込む	pd.read_csv(tsvfile, sep='\t', encoding='utf-8')	pd.read_excel(excelfile)
code: データフレームをエクセルデータから読み込む	pd.read_excel(excelfile)	pd.read_excel(excelfile)
code: Pandasでファイルexcelfileを読み込む	pd.read_excel(excelfile, sheet_name=None)	pd.read_excel(excelfile)
code: Pandasを使ってデータフレームとしてエクセルファイルファイルexcelfileを読み込む	pd.read_excel(excelfile)	pd.read_excel(excelfile)
code: Pandasとしてexcelfileを読む	pd.read_excel(excelfile)	pd.read_excel(excelfile)
code: {ファイルexcelfileからを読み込む	pd.read_excel(excelfile)	pd.read_excel(excelfile)
code: {excelfileからを読み込む	pd.read_excel(excelfile)	pd.read_excel(excelfile)
code: Pandasとして{excelfileからエクセルファイルを読む	pd.read_excel(excelfile)	pd.read_excel(excelfile)
code: Pandasでexcelfileからn番目のシートをデータフレームとして読む	pd.read_excel(excelfile, sheet_name=n)	pd.read_excel(excelfile, sheet_name=n)
code: Pandasとしてエクセルデータファイルexcelfileからn番目のシートをデータフレームとして読む	pd.read_excel(excelfile, sheet_name=n)	pd.read_excel(excelfile, sheet_name=n)
code: n番目のシートをexcelfileからデータフレームとして読む	pd.read_excel(excelfile, sheet_name=n)	pd.read_excel(excelfile, sheet_name=n)
code: Pandasを用いてnというシートをエクセルデータファイルexcelfileからデータフレームとして読み込む	pd.read_excel(excelfile, sheet_name=n)	pd.read_excel(excelfile, sheet_name=n)
code: Pandasでexcelfileからnというシートをデータフレームとして読み込む	pd.read_excel(excelfile, sheet_name=n)	pd.read_excel(excelfile, sheet_name=n)
code: Pandasとしてnという名前のシートをファイルexcelfileから読む	pd.read_excel(excelfile, sheet_name=n)	pd.read_excel(excelfile, sheet_name=n)
code: Pandasを用いてexcelfileのn番目のシートをデータフレームとして読む	pd.read_excel(excelfile, sheet_name=n)	pd.read_excel(excelfile, sheet_name=n)
code: Pandasとしてn番目のシートをエクセルファイルファイルexcelfileのデータフレームとして読み込む	pd.read_excel(excelfile, sheet_name=n)	pd.read_excel(excelfile, sheet_name=n)
code: Pandasでexcelfileのn番目のシートを読み込む	pd.read_excel(excelfile, sheet_name=n)	pd.read_excel(excelfile, sheet_name=n)
code: ファイルexcelfileから複数のシートを読み込む	pd.read_excel(excelfile, sheet_name=[n, n2])	pd.read_excel(excelfile, sheet_name=[n, n2])
code: 複数のシートをexcelfileから読み込む	pd.read_excel(excelfile, sheet_name=[n, n2])	pd.read_excel(excelfile, sheet_name=[n, n2])
code: 複数のシートをエクセルデータファイルexcelfileから読み込む	pd.read_excel(excelfile, sheet_name=[n, n2])	pd.read_excel(excelfile, sheet_name=[n, n2])
code: excelfileからnとn2のシートを読み込む	pd.read_excel(excelfile, sheet_name=[n, n2])	pd.read_excel(excelfile, sheet_name=[n, n2])
code: nとn2のシートをエクセルファイルファイルexcelfileから読み込む	pd.read_excel(excelfile, sheet_name=[n, n2])	pd.read_excel(excelfile, sheet_name=[n, n2])
code: Pandasを用いてexcelfileからnとn2のシートを読み込む	pd.read_excel(excelfile, sheet_name=[n, n2])	pd.read_excel(excelfile, sheet_name=[n, n2])
code: Pandasとしてexcelfileから全てのシートを読む	pd.read_excel(excelfile, sheet_name=None)	pd.read_excel(excelfile, sheet_name=None)
code: Pandasですべてのシートをexcelfileから読む	pd.read_excel(excelfile, sheet_name=None)	pd.read_excel(excelfile, sheet_name=None)
code: Pandasで全シートをファイルexcelfileから読む	pd.read_excel(excelfile, sheet_name=None)	pd.read_excel(excelfile, sheet_name=None)
code: データフレームをカンマ区切りのファイルから読む	pd.read_csv(csvfile, sep=',')	pd.read_csv(csvfile, sep=',')
code: Pandasを用いてデータフレームをCSVファイルから読む	pd.read_csv(tsvfile, sep='\t', encoding='shift_jis')	pd.read_csv(csvfile, sep=',')
code: Pandasを使ってデータフレームをカンマ区切りのファイルから読み込む	pd.read_csv(csvfile, sep=',')	pd.read_csv(csvfile, sep=',')
code: Pandasとしてcsvfileからデータフレームを読み込む	pd.read_csv(csvfile, sep=',')	pd.read_csv(csvfile, sep=',')
code: Pandasを使ってデータフレームをcsvfileから読む	pd.read_csv(csvfile, sep=',')	pd.read_csv(csvfile, sep=',')
code: PandasでCSVcsvfileからデータフレームを読む	pd.read_csv(csvfile, sep=',')	pd.read_csv(csvfile, sep=',')
code: CSVcsvfileを読む	pd.read_csv(csvfile, sep=',')	pd.read_csv(csvfile, sep=',')
code: CSVファイルcsvfileをデータフレームとして読む	pd.read_csv(csvfile, sep=',')	pd.read_csv(csvfile, sep=',')
code: PandasでCSVファイルcsvfileをデータフレームとして読む	pd.read_csv(csvfile, sep=',')	pd.read_csv(csvfile, sep=',')
code: データフレームをTSVから読む	pd.read_csv(tsvfile, sep='\t', encoding='utf-8')	pd.read_csv(tsvfile, sep='\t')
code: データフレームをTSVから読み込む	pd.read_csv(tsvfile, sep='\t', encoding='utf-8')	pd.read_csv(tsvfile, sep='\t')
code: Pandasを用いてデータフレームをTSVファイルから読み込む	pd.read_csv(tsvfile, sep='\t', encoding='shift_jis')	pd.read_csv(tsvfile, sep='\t')
code: PandasでTSVファイルtsvfileからデータフレームを読む	pd.read_csv(tsvfile, sep='\t', encoding='utf-8')	pd.read_csv(tsvfile, sep='\t')
code: Pandasでtsvfileからデータフレームを読む	pd.read_csv(tsvfile, sep='\t', encoding='utf-8')	pd.read_csv(tsvfile, sep='\t')
code: データフレームをTSVファイルtsvfileから読む	pd.read_csv(tsvfile, sep='\t', encoding='shift_jis')	pd.read_csv(tsvfile, sep='\t')
code: Pandasを使ってTSVファイルtsvfileをデータフレームとして読む	pd.read_csv(tsvfile, sep='\t', encoding='utf-8')	pd.read_csv(tsvfile, sep='\t')
code: データフレームとしてtsvfileを読む	pd.read_csv(tsvfile, sep='\t', encoding='shift_jis')	pd.read_csv(tsvfile, sep='\t')
code: TSVファイルtsvfileをデータフレームとして読み込む	pd.read_csv(tsvfile, sep='\t', encoding='shift_jis')	pd.read_csv(tsvfile, sep='\t')
code: オプションでシートの名前をalistに設定する	sheet_name = alist	sheet_name = alist
code: オプションで、のシート名をリストalistにする	sheet_name = alist	sheet_name = alist
code: オプションで、先頭のカラムを行に設定する	header = 0	index_col = 0
code: オプションで、先頭カラムをインデックスに変更する	index_col = None	index_col = 0
code: オプションで、n番目のカラムをインデックスに設定する	index_col = n	index_col = n
code: オプションでn番目の列をインデックスに設定する	index_col = n	index_col = n
code: オプションで、行を連番にセットする	index_col = None	index_col = None
code: オプションで、インデックスを自動的な連番に設定する	index_col = None	index_col = None
code: オプションで、どの列もインデックスに設定しない	index_col = None	index_col = None
code: オプションでどの列も行に設定しない	index_col = 0	index_col = None
code: オプションで、先頭の行をカラムの名前に変更する	header = 0	header = 0
code: オプションで最初の行をカラムの名前にする	header = 0	header = 0
code: オプションでヘッダを自動的な連番にする	header = None	header = None
code: オプションで、ヘッダを連番に指定する	header = None	header = None
code: オプションで、どの行もヘッダにしない	header = None	header = None
code: オプションで、ヘッダをalistに増やす	header = alist	header = alist
code: オプションでヘッダをリストalistにする	names = alist	header = alist
code: オプションでリストalistをカラムの名前にする	header = alist	names = alist
code: オプションでalistを列名にする	names = alist	names = alist
code: オプションで読む行番号をリストalistで指定する	usecols = alist	usecols = alist
code: オプションで、スキップする列番号をalistで指定する	names = alist	skiprows = alist
code: オプションで、読み込まないフッタをnにする	skipfooter = n	skipfooter = n
code: オプションで、無視するフッタをnにする	skipfooter = n	skipfooter = n
code: Pandasとしてcsvfileをカラムの名前を指定せず読む	pd.read_csv(csvfile, header=None)	pd.read_csv(csvfile, header=None)
code: csvfileをヘッダなしで読み込む	pd.read_csv(csvfile, header=None)	pd.read_csv(csvfile, header=None)
code: ヘッダなしでカンマ区切りのファイルcsvfileを読む	pd.read_csv(csvfile, header=None)	pd.read_csv(csvfile, header=None)
code: CSVcsvfileをn番目のカラムをインデックスにして読む	pd.read_csv(csvfile, index_col=n)	pd.read_csv(csvfile, index_col=n)
code: Pandasを使ってCSVファイルCSVcsvfileをn番目の列を行にして読む	pd.read_csv(csvfile, index_col=n)	pd.read_csv(csvfile, index_col=n)
code: n番目の列をインデックスにしてCSVCSVファイルcsvfileを読み込む	pd.read_csv(csvfile, index_col=n)	pd.read_csv(csvfile, index_col=n)
code: 文字列カンマ区切りのファイルcsvfileからCSVをn番目の列を行にして読み込む	pd.read_csv(csvfile, index_col=n)	pd.read_csv(csvfile, index_col=n)
code: Pandasで文字列csvfileからn番目のカラムを行としてCSVファイルを読む	pd.read_csv(csvfile, index_col=n)	pd.read_csv(csvfile, index_col=n)
code: 文字列csvfileからn番目のカラムをインデックスとしてCSVを読む	pd.read_csv(csvfile, index_col=n)	pd.read_csv(csvfile, index_col=n)
code: CSVファイルcsvfileをSJISで読み込む	pd.read_csv(csvfile, encoding='shift_jis')	pd.read_csv(csvfile, encoding='shift_jis')
code: 文字化けしないようにCSVcsvfileを読み込む	pd.read_csv(csvfile, encoding='shift_jis')	pd.read_csv(csvfile, encoding='shift_jis')
code: 文字化けしないようにカンマ区切りのファイルcsvfileを読む	pd.read_csv(csvfile, encoding='shift_jis')	pd.read_csv(csvfile, encoding='shift_jis')
code: カンマ区切りのファイルcsvfileから文字化けしないようにCSVファイルを読む	pd.read_csv(csvfile, encoding='shift_jis')	pd.read_csv(csvfile, encoding='shift_jis')
code: Pandasとしてカンマ区切りのファイルcsvfileからCSVファイルを文字化けしないように読む	pd.read_csv(csvfile, encoding='shift_jis')	pd.read_csv(csvfile, encoding='shift_jis')
code: PandasとしてCSVcsvfileからCSVファイルをSJISで読む	pd.read_csv(csvfile, encoding='shift_jis')	pd.read_csv(csvfile, encoding='shift_jis')
code: TSV形式のファイルからデータフレームを読み込む	pd.read_csv(tsvfile, sep='\t', encoding='shift_jis')	pd.read_csv(tsvfile, sep='\t', encoding='utf-8')
code: Pandasを使ってデータフレームをTSV形式のファイルから読み込む	pd.read_csv(tsvfile, sep='\t', encoding='utf-8')	pd.read_csv(tsvfile, sep='\t', encoding='utf-8')
code: TSVファイルからデータフレームを読み込む	pd.read_csv(tsvfile, sep='\t', encoding='utf-8')	pd.read_csv(tsvfile, sep='\t', encoding='utf-8')
code: Pandasを用いてデータフレームをtsvfileから読む	pd.read_csv(tsvfile, sep='\t', encoding='utf-8')	pd.read_csv(tsvfile, sep='\t', encoding='utf-8')
code: PandasでデータフレームをTSVファイルtsvfileから読む	pd.read_csv(tsvfile, sep='\t', encoding='utf-8')	pd.read_csv(tsvfile, sep='\t', encoding='utf-8')
code: データフレームをtsvfileから読み込む	pd.read_csv(tsvfile, sep='\t', encoding='utf-8')	pd.read_csv(tsvfile, sep='\t', encoding='utf-8')
code: Pandasとしてtsvfileをデータフレームとして読み込む	pd.read_csv(tsvfile, sep='\t', encoding='utf-8')	pd.read_csv(tsvfile, sep='\t', encoding='utf-8')
code: Pandasを用いてタブ区切りのファイルtsvfileを読み込む	pd.read_csv(tsvfile, sep='\t', encoding='utf-8')	pd.read_csv(tsvfile, sep='\t', encoding='utf-8')
code: データフレームとしてtsvfileを読む	pd.read_csv(tsvfile, sep='\t', encoding='shift_jis')	pd.read_csv(tsvfile, sep='\t', encoding='utf-8')
code: PandasでデータフレームをTSVファイルから読む	pd.read_csv(tsvfile, sep='\t', encoding='utf-8')	pd.read_csv(tsvfile, sep='\t', encoding='shift_jis')
code: PandasでデータフレームをTSV形式のファイルから読む	pd.read_csv(tsvfile, sep='\t', encoding='shift_jis')	pd.read_csv(tsvfile, sep='\t', encoding='shift_jis')
code: TSV形式のファイルからデータフレームを読む	pd.read_csv(tsvfile, sep='\t', encoding='shift_jis')	pd.read_csv(tsvfile, sep='\t', encoding='shift_jis')
code: PandasでデータフレームをTSVtsvfileから読み込む	pd.read_csv(tsvfile, sep='\t', encoding='utf-8')	pd.read_csv(tsvfile, sep='\t', encoding='shift_jis')
code: Pandasでデータフレームをtsvfileから読む	pd.read_csv(tsvfile, sep='\t', encoding='utf-8')	pd.read_csv(tsvfile, sep='\t', encoding='shift_jis')
code: Pandasを使ってtsvfileからデータフレームを読む	pd.read_csv(tsvfile, sep='\t', encoding='shift_jis')	pd.read_csv(tsvfile, sep='\t', encoding='shift_jis')
code: Pandasとしてタブ区切りのファイルtsvfileを読む	pd.read_csv(tsvfile, sep='\t', encoding='utf-8')	pd.read_csv(tsvfile, sep='\t', encoding='shift_jis')
code: タブ区切りのファイルtsvfileを読む	pd.read_csv(tsvfile, sep='\t')	pd.read_csv(tsvfile, sep='\t', encoding='shift_jis')
code: Pandasでタブ区切りのファイルtsvfileをデータフレームとして読む	pd.read_csv(tsvfile, sep='\t', encoding='utf-8')	pd.read_csv(tsvfile, sep='\t', encoding='shift_jis')
code: JSONL形式のファイルからデータフレームを読み込む	pd.read_json(jsonlfile, orient='records', lines=True)	pd.read_json(jsonlfile, orient='records', lines=True)
code: PandasでJSONL形式のファイルからデータフレームを読み込む	pd.read_json(jsonlfile, orient='records', lines=True)	pd.read_json(jsonlfile, orient='records', lines=True)
code: JSONL形式のファイルからデータフレームを読む	pd.read_json(jsonlfile, orient='records', lines=True)	pd.read_json(jsonlfile, orient='records', lines=True)
code: Pandasを使ってデータフレームをJSONLファイルjsonlfileから読み込む	pd.read_json(jsonlfile, orient='records', lines=True)	pd.read_json(jsonlfile, orient='records', lines=True)
code: Pandasを用いてJSONLファイルjsonlfileからデータフレームを読む	pd.read_json(jsonlfile, orient='records', lines=True)	pd.read_json(jsonlfile, orient='records', lines=True)
code: Pandasを使ってJSONLファイルjsonlfileからデータフレームを読む	pd.read_json(jsonlfile, orient='records', lines=True)	pd.read_json(jsonlfile, orient='records', lines=True)
code: jsonlfileを読み込む	pd.read_json(jsonlfile, orient='records', lines=True)	pd.read_json(jsonlfile, orient='records', lines=True)
code: jsonlfileをデータフレームとして読む	pd.read_json(jsonlfile, orient='records', lines=True)	pd.read_json(jsonlfile, orient='records', lines=True)
code: Pandasとしてデータフレームとしてjsonlfileを読み込む	pd.read_json(jsonlfile, orient='records', lines=True)	pd.read_json(jsonlfile, orient='records', lines=True)
code: エクセルファイルファイルexcelfileにdfを保存する	df.to_excel(excelfile)	df.to_excel(excelfile)
code: excelfileにデータフレームdfを保存する	df.to_excel(excelfile)	df.to_excel(excelfile)
code: dfをファイルexcelfileに保存する	df.to_excel(excelfile)	df.to_excel(excelfile)
code: データフレームdfをファイルでエクセルデータファイルexcelfileに保存する	df.to_excel(excelfile)	df.to_excel(excelfile)
code: エクセルファイルとしてdfをエクセルファイルファイルexcelfileに書き込む	df.to_excsv(tsvfile)	df.to_excel(excelfile)
code: ファイルexcelfileにファイルを使ってdfを書き込む	df.to_excel(excelfile)	df.to_excel(excelfile)
code: データフレームdfをCSVファイルcsvfileに保存する	df.to_csv(csvfile, sep='\t')	df.to_csv(csvfile)
code: CSVcsvfileにdfを書き込む	df.to_csv(csvfile)	df.to_csv(csvfile)
code: データフレームdfをCSVファイルcsvfileに書き込む	df.to_csv(csvfile)	df.to_csv(csvfile)
code: csvfileにCSV形式を用いてdfを書き込む	df.to_csv(csvfile, encoding='utf_8_sig')	df.to_csv(csvfile)
code: CSV形式を用いてカンマ区切りのファイルcsvfileにdfを保存する	df.to_csv(csvfile, encoding='utf_8_sig')	df.to_csv(csvfile)
code: CSVcsvfileにデータフレームdfをCSV形式として書き込む	df.to_csv(csvfile, sep='\t')	df.to_csv(csvfile)
code: tsvfileにデータフレームdfを保存する	df.to_csv(tsvfile, sep='\t')	df.to_csv(tsvfile, sep='\t')
code: tsvfileにデータフレームdfを書き込む	df.to_csv(tsvfile, sep='\t')	df.to_csv(tsvfile, sep='\t')
code: データフレームdfをtsvfileに書き込む	df.to_csv(tsvfile, sep='\t')	df.to_csv(tsvfile, sep='\t')
code: tsvfileにタブ区切りでdfを書き込む	df.to_csv(tsvfile, sep='\t')	df.to_csv(tsvfile, sep='\t')
code: データフレームdfをtsvfileにタブ区切りを用いて保存する	df.to_csv(tsvfile, sep='\t')	df.to_csv(tsvfile, sep='\t')
code: タブ区切りでtsvfileにdfを保存する	df.to_csv(tsvfile, sep='\t')	df.to_csv(tsvfile, sep='\t')
code: TSVを使ってデータフレームdfをカンマ区切りのファイルcsvfileに書き込む	df.to_csv(csvfile, header=None)	df.to_csv(tsvfile, sep='\t')
code: CSVファイルcsvfileにTSV形式としてdfを書き込む	df.to_csv(csvfile, index=None)	df.to_csv(tsvfile, sep='\t')
code: csvfileにTSV形式を使ってデータフレームdfを書き込む	df.to_csv(csvfile, encoding='utf_8_sig')	df.to_csv(tsvfile, sep='\t')
code: データフレームdfをカラムの名前を付けずにCSVcsvfileに保存する	df.to_csv(csvfile, header=None)	df.to_csv(csvfile, header=None)
code: CSVcsvfileにヘッダを付けずにdfを書き込む	df.to_csv(csvfile, header=None)	df.to_csv(csvfile, header=None)
code: ヘッダを付けずにデータフレームdfをカンマ区切りのファイルcsvfileに保存する	df.to_csv(csvfile, header=None)	df.to_csv(csvfile, header=None)
code: 行を付けずにcsvfileにデータフレームdfを保存する	df.to_csv(csvfile, index=None)	df.to_csv(csvfile, index=None)
code: 行を付けずにカンマ区切りのファイルcsvfileにデータフレームdfを保存する	df.to_csv(csvfile, index=None)	df.to_csv(csvfile, index=None)
code: 行を付けずにデータフレームdfをCSVファイルcsvfileに書き込む	df.to_csv(csvfile, index=None)	df.to_csv(csvfile, index=None)
code: データフレームdfをカンマ区切りのファイルcsvfileに文字化けしないように保存する	df.to_csv(csvfile, encoding='shift_jis')	df.to_csv(csvfile, encoding='utf_8_sig')
code: BOMを付けてデータフレームdfをcsvfileに書き込む	df.to_csv(csvfile, encoding='utf_8_sig')	df.to_csv(csvfile, encoding='utf_8_sig')
code: csvfileにデータフレームdfをBOM付きで保存する	df.to_csv(csvfile, encoding='utf_8_sig')	df.to_csv(csvfile, encoding='utf_8_sig')
code: データフレームdfをカンマ区切りのファイルcsvfileにSJISで書き込む	df.to_csv(csvfile, encoding='shift_jis')	df.to_csv(csvfile, encoding='shift_jis')
code: データフレームdfをSJISでcsvfileに保存する	df.to_csv(csvfile, encoding='shift_jis')	df.to_csv(csvfile, encoding='shift_jis')
code: データフレームdfをカンマ区切りのファイルcsvfileにSJISで書き込む	df.to_csv(csvfile, encoding='shift_jis')	df.to_csv(csvfile, encoding='shift_jis')
code: 保存するCSVの小数点以下の桁数を設定する	df.to_csv(csvfile, float_format='%.3f')	df.to_csv(csvfile, float_format='%.3f')
code: csvfileにデータフレームdfを小数点以下3桁まで保存する	df.to_csv(csvfile, float_format='%.3f')	df.to_csv(csvfile, float_format='%.3f')
code: データフレームdfをCSVファイルcsvfileに小数点以下3桁まで保存する	df.to_csv(csvfile, float_format='%.3f')	df.to_csv(csvfile, float_format='%.3f')
code: カンマ区切りのファイルcsvfileに小数点以下3桁までデータフレームdfを書き込む	df.to_csv(csvfile, float_format='%.3f')	df.to_csv(csvfile, float_format='%.3f')
code: データ列を使用する	import pandas as pd	import pandas as pd
code: データ列をインポートする	import pandas as pd	import pandas as pd
code: dsの各データ値の出現回数	ds.value_counts()	ds.value_counts()
code: データ列dsの各データ値の出現回数	ds.value_counts()	ds.value_counts()
code: ds列の各値は何回出現するか確認する	ds.value_counts()	ds.value_counts()
code: dsの各値が何回出現するか見る	ds.value_counts()	ds.value_counts()
code: dfのcolカラムの各値の出現数を計算する	df[col].value_counts()	df[col].value_counts()
code: データフレームdfのcol列の各データ値の出現数	df[col].value_counts()	df[col].value_counts()
code: dfのcol列の各値が何回出現するか見る	df[col].value_counts()	df[col].value_counts()
code: データフレームdfのcolの各データは何回出現するか見る	df[col].value_counts()	df[col].value_counts()
code: dsカラムのユニークな要素	ds.unique()	ds.unique()
code: dsカラムの一意な要素	ds.unique()	ds.unique()
code: dfのcolの一意な要素を見る	df[col].unique()	df[col].unique()
code: dfのcolのユニークな要素	df[col].nunique()	df[col].unique()
code: dsのユニークな値の個数	ds.nunique()	ds.nunique()
code: dsの一意な値の個数	ds.nunique()	ds.nunique()
code: データフレームdfのcolのユニークな値の個数	df[col].nunique()	df[col].nunique()
code: dfのcolの一意な値の個数	df[col].nunique()	df[col].nunique()
code: データフレームdfの列colをカテゴリデータにする	df[col].astype(object)	df[col].astype(object)
code: データフレームdfのcolをカテゴリデータにする	df[col].astype(object)	df[col].astype(object)
code: データ列dsをカテゴリデータに変換する	ds.astype(object)	ds.astype(object)
code: データ列dsをカテゴリデータに変換する	ds.astype(object)	ds.astype(object)
code: dfのcol列の文字列長を列として求める	df[col].str.len()	df[col].str.len()
code: データフレームdfのcol列の文字列長を列として見る	df[col].str.len()	df[col].str.len()
code: dsの文字列長を列として見る	ds.str.len()	ds.str.len()
code: dsの文字列長を列として使う	ds.str.len()	ds.str.len()
code: データフレームdfのcolを1と0にマップする	df[col].map({s: 1, s2: 0})	df[col].map({s: 1, s2: 0})
code: データフレームdfのcolを0と1にマップする	df[col].map({s: 1, s2: 0})	df[col].map({s: 1, s2: 0})
code: dsを1と0にマップする	ds.map({s: 1, s2: 0})	ds.map({s: 1, s2: 0})
code: ds列を0と1に変換する	ds.map({s: 1, s2: 0})	ds.map({s: 1, s2: 0})
code: dfのcolからユニークな要素を抽出し、リスト化する	df[col].unique().tolist()	df[col].unique().tolist()
code: データフレームdfのカラムcolからユニークな値を抽出し、リスト化する	df[col].unique().tolist()	df[col].unique().tolist()
code: dsカラムからユニークな値を抽出しリスト化する	ds.unique().tolist()	ds.unique().tolist()
code: ds列からユニークな値を抽出しリスト化する	ds.unique().tolist()	ds.unique().tolist()
code: dsカラムとds2から重複を取り除く	set(ds.unique().tolist()+ds2.tolist()	set(ds.unique().tolist()+ds2.unique().tolist())
code: データ列dsとds2カラムから重複を取り除く	set(ds.unique).tolist()))+ds2.tolist()))	set(ds.unique().tolist()+ds2.unique().tolist())
code: データフレームdfのcol2をty型に変換しカラムcolに代入する	df[col] = df[col2].astype(ty)	df[col] = df[col2].astype(ty)
code: データフレームdfのcol2をtyに変換し、colカラムとする	df[col] = df[col2].astype(ty)	df[col] = df[col2].astype(ty)
code: ビン数nを用いてdsを分割する	pd.cut(ds, n)	pd.cut(ds, n)
code: ビン数nとしてdsをビニングする	pd.cut(ds, n)	pd.cut(ds, n)
code: dsを分割数nを用いてビンニングする	pd.cut(ds, n)	pd.cut(ds, n)
code: 等間隔でn個にdsを分割する	pd.cut(ds, n)	pd.cut(ds, n)
code: n個にdsを等間隔で分割する	pd.cut(ds, n)	pd.cut(ds, n)
code: dsをn個に等間隔でビン分割する	pd.cut(ds, n)	pd.cut(ds, n)
code: 分割数nを用いてデータフレームdfの中のcolを分割する	pd.cut(df[col], n)	pd.cut(df[col], n)
code: dfの中のcolをビン数nでビン分割する	pd.cut(df[col], n)	pd.cut(df[col], n)
code: データフレームdfのcolを分割数nとして分割する	pd.cut(df[col], n)	pd.cut(df[col], n)
code: データフレームdfのcolカラムを等間隔でn個にビン分割する	pd.cut(df[col], n)	pd.cut(df[col], n)
code: n個に等間隔でデータフレームdfの内のcol列をビニングする	pd.cut(df[col], n)	pd.cut(df[col], n)
code: データフレームdf内のcolをn個にビン分割する	pd.cut(df[col], n)	pd.cut(df[col], n)
code: ビン数nを用いてリストalistをビニングする	pd.cut(alist, n)	pd.cut(alist, n)
code: ビン数nとしてalistをビニングする	pd.cut(alist, n)	pd.cut(alist, n)
code: 分割数nを用いてalistを分割する	pd.cut(alist, n)	pd.cut(alist, n)
code: alistをn個に等間隔でビンニングする	pd.cut(alist, n)	pd.cut(alist, n)
code: n個にalistを分割する	pd.cut(alist, n)	pd.cut(alist, n)
code: n個にalistをビンニングする	pd.cut(alist, n)	pd.cut(alist, n)
code: arrayを分割数nでビンニングする	pd.cut(array, n)	pd.cut(array, n)
code: ビン数nとしてarrayをビンニングする	pd.cut(array, n)	pd.cut(array, n)
code: 分割数nでarrayをビン分割する	pd.cut(array, n)	pd.cut(array, n)
code: arrayを等間隔でn個にビン分割する	pd.cut(array, n)	pd.cut(array, n)
code: arrayをn個にビン分割する	pd.cut(array, n)	pd.cut(array, n)
code: arrayをn個にビン分割する	pd.cut(array, n)	pd.cut(array, n)
code: データ列dsを分割する	pd.cut(ds, alist)	pd.cut(ds, alist)
code: dsを分割する	pd.cut(ds, alist)	pd.cut(ds, alist)
code: alistを境界値としてds列をビンニングする	pd.cut(ds, alist)	pd.cut(ds, alist)
code: alistを境界値としてdsカラムをビン分割する	pd.cut(ds, alist)	pd.cut(ds, alist)
code: リストalistを境界値としてdsカラムをビン分割する	pd.cut(ds, alist)	pd.cut(ds, alist)
code: データフレームdfの中のcol列を分割する	pd.cut(df[col], alist)	pd.cut(df[col], alist)
code: データフレームdf内のcolをビン分割する	pd.cut(df[col], alist)	pd.cut(df[col], alist)
code: dfの内のカラムcolをリストalistを境界値として分割する	pd.cut(df[col], alist)	pd.cut(df[col], alist)
code: データフレームdfのcol列をリストalistを境界値としてビニングする	pd.cut(df[col], alist)	pd.cut(df[col], alist)
code: リストalistを境界値としてデータフレームdfの中のcolをビン分割する	pd.cut(df[col], alist)	pd.cut(df[col], alist)
code: alistを分割する	pd.cut(alist, alist)	pd.cut(alist, alist)
code: alistをリストalistを境界値としてビン分割する	pd.cut(alist, alist)	pd.cut(alist, alist)
code: リストalistを境界値としてリストalistをビン分割する	pd.cut(alist, alist)	pd.cut(alist, alist)
code: リストalistを境界値としてリストalistを分割する	pd.cut(alist, alist)	pd.cut(alist, alist)
code: arrayを分割する	pd.cut(array, alist)	pd.cut(array, alist)
code: arrayをalistを境界値としてビンニングする	pd.cut(array, alist)	pd.cut(array, alist)
code: alistを境界値としてarrayをビン分割する	pd.cut(array, alist)	pd.cut(array, alist)
code: alistを境界値としてarrayをビニングする	pd.cut(array, alist)	pd.cut(array, alist)
code: dsをビン数nでビン分割して、namesのラベルをつける	pd.cut(ds, n, labels=names)	pd.cut(ds, n, labels=names)
code: 分割数nを用いてdsをビン分割して、namesのラベルをつける	pd.cut(ds, n, labels=names)	pd.cut(ds, n, labels=names)
code: dsをビン数nを用いてビン分割して、namesのラベルをつける	pd.cut(ds, n, labels=names)	pd.cut(ds, n, labels=names)
code: dsカラムをn個にビン分割して、namesのラベルをつける	pd.cut(ds, n, labels=names)	pd.cut(ds, n, labels=names)
code: n個に等間隔でデータ列dsをビン分割して、namesのラベルをつける	pd.cut(ds, n, labels=names)	pd.cut(ds, n, labels=names)
code: n個にデータ列dsをビン分割してnamesのラベルをつける	pd.cut(ds, n, labels=names)	pd.cut(ds, n, labels=names)
code: データフレームdfのcol列をビン数nとしてビン分割して、namesのラベルをつける	pd.cut(df[col], n, labels=names)	pd.cut(df[col], n, labels=names)
code: ビン数nとしてdfのcolをビン分割してnamesのラベルをつける	pd.cut(df[col], n, labels=names)	pd.cut(df[col], n, labels=names)
code: dfのcolを分割数nを用いてビン分割して、namesのラベルをつける	pd.cut(df[col], n, labels=names)	pd.cut(df[col], n, labels=names)
code: n個にdfのcolをビン分割してnamesのラベルをつける	pd.cut(df[col], n, labels=names)	pd.cut(df[col], n, labels=names)
code: データフレームdfの中のcol列をn個にビン分割してnamesのラベルをつける	pd.cut(df[col], n, labels=names)	pd.cut(df[col], n, labels=names)
code: 等間隔でn個にデータフレームdf内のcolをビン分割して、namesのラベルをつける	pd.cut(df[col], n, labels=names)	pd.cut(df[col], n, labels=names)
code: リストalistを分割数nでビン分割して、namesのラベルをつける	pd.cut(alist, n, labels=names)	pd.cut(alist, n, labels=names)
code: リストalistを分割数nとしてビン分割してnamesのラベルをつける	pd.cut(alist, n, labels=names)	pd.cut(alist, n, labels=names)
code: リストalistをビン数nを用いてビン分割して、namesのラベルをつける	pd.cut(alist, n, labels=names)	pd.cut(alist, n, labels=names)
code: リストalistをn個にビン分割してnamesのラベルをつける	pd.cut(alist, n, labels=names)	pd.cut(alist, n, labels=names)
code: alistをn個にビン分割して、namesのラベルをつける	pd.cut(alist, n, labels=names)	pd.cut(alist, n, labels=names)
code: alistをn個にビン分割してnamesのラベルをつける	pd.cut(alist, n, labels=names)	pd.cut(alist, n, labels=names)
code: 分割数nでarrayをビン分割して、namesのラベルをつける	pd.cut(array, n, labels=names)	pd.cut(array, n, labels=names)
code: ビン数nでarrayをビン分割してnamesのラベルをつける	pd.cut(array, n, labels=names)	pd.cut(array, n, labels=names)
code: arrayを分割数nでビン分割して、namesのラベルをつける	pd.cut(array, n, labels=names)	pd.cut(array, n, labels=names)
code: arrayを等間隔でn個にビン分割してnamesのラベルをつける	pd.cut(array, n, labels=names)	pd.cut(array, n, labels=names)
code: arrayをn個にビン分割して、namesのラベルをつける	pd.cut(array, n, labels=names)	pd.cut(array, n, labels=names)
code: arrayをn個にビン分割してnamesのラベルをつける	pd.cut(array, n, labels=names)	pd.cut(array, n, labels=names)
code: 等量でビン数nとしてdsを分割する	pd.qcut(ds, n)	pd.qcut(ds, n)
code: 等しい量になるようにdsをビン数nでビニングする	pd.qcut(ds, n)	pd.qcut(ds, n)
code: 等量でdsをビン数nで分割する	pd.qcut(ds, n)	pd.qcut(ds, n)
code: n個にdsを等しい量になるように分割する	pd.qcut(ds, n)	pd.qcut(ds, n)
code: dsをn個に等量でビン分割する	pd.qcut(ds, n)	pd.qcut(ds, n)
code: n個に等量でデータ列dsを分割する	pd.qcut(ds, n)	pd.qcut(ds, n)
code: 等量でdf内のcol列を分割数nとして分割する	pd.qcut(df[col], n)	pd.qcut(df[col], n)
code: dfの内のcolを等量で分割数nでビン分割する	pd.qcut(df[col], n)	pd.qcut(df[col], n)
code: データフレームdf内の列colを等しい量になるように分割数nを使ってビニングする	pd.qcut(df[col], n)	pd.qcut(df[col], n)
code: n個に等しい量になるようにdf内のcolを分割する	pd.qcut(df[col], n)	pd.qcut(df[col], n)
code: データフレームdfのcolをn個に等量で分割する	pd.qcut(df[col], n)	pd.qcut(df[col], n)
code: dfのカラムcolをn個に等しい量になるようにビニングする	pd.qcut(df[col], n)	pd.qcut(df[col], n)
code: alistを等量で分割数nとして分割する	pd.qcut(alist, n)	pd.qcut(alist, n)
code: 等量でビン数nとしてリストalistをビン分割する	pd.qcut(alist, n)	pd.qcut(alist, n)
code: 等しい量になるようにリストalistを分割数nとしてビニングする	pd.qcut(alist, n)	pd.qcut(alist, n)
code: 等しい量になるようにalistをn個にビンニングする	pd.qcut(alist, n)	pd.qcut(alist, n)
code: 等量でn個にリストalistをビニングする	pd.qcut(alist, n)	pd.qcut(alist, n)
code: 等量でリストalistをn個にビン分割する	pd.qcut(alist, n)	pd.qcut(alist, n)
code: arrayを等しい量になるようにビン数nとしてビンニングする	pd.qcut(array, n)	pd.qcut(array, n)
code: arrayを等しい量になるように分割数nでビニングする	pd.qcut(array, n)	pd.qcut(array, n)
code: arrayを等しい量になるように分割数nを用いてビニングする	pd.qcut(array, n)	pd.qcut(array, n)
code: arrayをn個に等しい量になるようにビニングする	pd.qcut(array, n)	pd.qcut(array, n)
code: 等しい量になるようにarrayをn個にビンニングする	pd.qcut(array, n)	pd.qcut(array, n)
code: 等しい量になるようにn個にarrayをビン分割する	pd.qcut(array, n)	pd.qcut(array, n)
code: dsを中央値でビンニングする	pd.qcut(ds, 2)	pd.qcut(ds, 2)
code: dsを中央値でビンニングする	pd.qcut(ds, 2)	pd.qcut(ds, 2)
code: dsを中央値で分割する	pd.qcut(ds, 2)	pd.qcut(ds, 2)
code: 中央値でデータフレームdfの内のcolをビニングする	pd.qcut(df[col], 2)	pd.qcut(df[col], 2)
code: df中のcolカラムを中央値で分割する	pd.qcut(df[col], 2)	pd.qcut(df[col], 2)
code: dfの内のcol列を中央値で分割する	pd.qcut(df[col], 2)	pd.qcut(df[col], 2)
code: alistを中央値でビン分割する	pd.qcut(alist, 2)	pd.qcut(alist, 2)
code: リストalistを中央値でビン分割する	pd.qcut(alist, 2)	pd.qcut(alist, 2)
code: arrayを中央値で分割する	pd.qcut(array, 2)	pd.qcut(array, 2)
code: 中央値でarrayをビン分割する	pd.qcut(array, 2)	pd.qcut(array, 2)
code: 四分位数でdsカラムを分割する	pd.qcut(ds, 4)	pd.qcut(ds, 4)
code: dsを四分位数でビン分割する	pd.qcut(ds, 4)	pd.qcut(ds, 4)
code: dsカラムを四分位数ごとにビン分割する	pd.qcut(ds, 4)	pd.qcut(ds, 4)
code: dfのcolを四分位数でビニングする	pd.qcut(df[col], 4)	pd.qcut(df[col], 4)
code: df内のcol列を四分位数ごとにビン分割する	pd.qcut(df[col], 4)	pd.qcut(df[col], 4)
code: 四分位数でdfのcolを分割する	pd.qcut(df[col], 4)	pd.qcut(df[col], 4)
code: alistを四分位数ごとに分割する	pd.qcut(alist, 4)	pd.qcut(alist, 4)
code: 四分位数でalistをビン分割する	pd.qcut(alist, 4)	pd.qcut(alist, 4)
code: 四分位数でalistをビンニングする	pd.qcut(alist, 4)	pd.qcut(alist, 4)
code: arrayを四分位数でビン分割する	pd.qcut(array, 4)	pd.qcut(array, 4)
code: arrayを四分位数ごとにビニングする	pd.qcut(array, 4)	pd.qcut(array, 4)
code: 四分位数ごとにarrayをビニングする	pd.qcut(array, 4)	pd.qcut(array, 4)
code: シードを初期化する	int(time.time()	random.seed()
code: 毎回異なるように乱数を初期化する	random.seed()	random.seed()
code: nでシードを初期化する	random.seed(n)	random.seed(n)
code: nでシードを初期化する	random.seed(n)	random.seed(n)
code: 乱数シードをnで固定化する	random.seed(n)	random.seed(n)
code: シードをnで固定化する	random.seed(n)	random.seed(n)
code: サイコロを振る	random.randint(1, 6)	random.randint(1, 6)
code: サイコロと同じ乱数を得る	random.randint(1, 6)	random.randint(1, 6)
code: 	import collections	random.randint(1, 6)
code: nからn2までのランダムな整数値	random.randrange(n, n2)	random.randint(n, n2)
code: nからn2までの整数乱数を計算する	random.randrange(n, n2)	random.randint(n, n2)
code: n〜n2の範囲の整数乱数を求める	random.randint(n, n2)	random.randint(n, n2)
code: n〜n2の範囲の整数乱数	random.randint(n, n2)	random.randint(n, n2)
code: n未満までの整数乱数を得る	random.randint(n)	random.randrange(n)
code: nまでの整数乱数を発生させる	random.randrange(n)	random.randrange(n)
code: nからn2までの整数乱数を発生させる	random.randrange(n, n2)	random.randrange(n, n2)
code: nからn2未満までの整数乱数を算出する	random.randrange(n, n2)	random.randrange(n, n2)
code: nからn2未満の間でn3ステップの整数群からランダムな整数を求める	random.randrange(n, n2, n3)	random.randrange(n, n2, n3)
code: nからn2未満の間でn3ステップの整数群からランダムな整数値	random.randrange(n, n2, n3)	random.randrange(n, n2, n3)
code: 疑似乱数を算出する	random.random()	random.random()
code: 乱数を発生させる	random.randint(1, 6)	random.random()
code: xからx2の間の一様な乱数を生成する	random.uniform(x, x2)	random.uniform(x, x2)
code: xからx2の間の一様な乱数を求める	random.uniform(x, x2)	random.uniform(x, x2)
code: 正規分布で乱数を求める	random.normalvariate(mu=0.5, sigma=0.2)	random.normalvariate(mu=0.5, sigma=0.2)
code: 正規分布で乱数を算出する	random.normalvariate(mu=0.5, sigma=0.2)	random.normalvariate(mu=0.5, sigma=0.2)
code: 乱数を正規分布で得る	random.normalvariate(mu=0.5, sigma=0.2)	random.normalvariate(mu=0.5, sigma=0.2)
code: 平均x、標準偏差x2の正規分布で疑似乱数	random.normalvariate(x, x2)	random.normalvariate(x, x2)
code: 平均x標準偏差x2の正規分布で疑似乱数	random.normalvariate(x, x2)	random.normalvariate(x, x2)
code: イテラブルiterableから1個ランダムに選ぶ	random.choice(iterable)	random.choice(iterable)
code: イテラブルiterableから1個ランダムに選ぶ	random.choice(iterable)	random.choice(iterable)
code: アルファベットから一つランダムに選ぶ	random.choice(string.ascii_uppercase)	random.choice(string.ascii_uppercase)
code: 英文字から１文字ランダムに選ぶ	random.choice(string.ascii_uppercase)	random.choice(string.ascii_uppercase)
code: イテラブルiterableからn個、ランダムに選ぶ	random.sample(iterable, k=n)	random.choices(iterable, k=n)
code: 列iterableからn個、ランダムに選ぶ	random.choices(iterable, k=n)	random.choices(iterable, k=n)
code: 配列iterableからサンプリングする	random.sample(iterable)	random.sample(iterable)
code: イテラブルiterableからサンプリングする	random.sample(iterable)	random.sample(iterable)
code: iterableからn個ランダムに選ぶ	random.choices(iterable, k=n)	random.sample(iterable, k=n)
code: タプルiterableからn要素サンプリングする	random.sample(iterable, k=n)	random.sample(iterable, k=n)
code: イテラブルiterableから重複なくn個ランダムに選ぶ	random.sample(iterable, k=n)	random.sample(iterable, k=n)
code: 配列iterableから重複なく、n要素ランダムに選ぶ	random.sample(iterable, k=n)	random.sample(iterable, k=n)
code: リストalistをランダムにシャッフルする	random.shuffle(alist)	random.shuffle(alist)
code: 正規表現を用いる	import re	import re
code: 正規表現をインポートする	import re	import re
code: 正規表現で正規表現patternをコンパイルする	re.compile(pattern)	re.compile(pattern)
code: 正規表現でpatternパターンをあらかじめコンパイルする	re.compile(pattern)	re.compile(pattern)
code: 事前にpatternパターンをコンパイルする	re.compile(pattern)	re.compile(pattern)
code: patternをASCII限定としてあらかじめコンパイルする	re.compile(pattern, flag=re.ASCI)	re.compile(pattern, flag=re.ASCI)
code: 事前にASCII限定としてpatternをコンパイルする	re.compile(pattern, flag=re.ASCI)	re.compile(pattern, flag=re.ASCI)
code: 正規表現でパターンpatternをASCII限定としてコンパイルする	re.compile(pattern, flag=re.ASCI)	re.compile(pattern, flag=re.ASCI)
code: 正規表現で、patternをケースを無視してコンパイルする	re.compile(pattern, flag=re.IGNORECASE)	re.compile(pattern, flag=re.IGNORECASE)
code: 大文字・小文字を無視してpatternパターンをコンパイルする	re.compile(pattern, flag=re.IGNORECASE)	re.compile(pattern, flag=re.IGNORECASE)
code: ケースを無視してpatternパターンをコンパイルする	re.compile(pattern, flag=re.IGNORECASE)	re.compile(pattern, flag=re.IGNORECASE)
code: 複数行対応としてpatternをコンパイルする	re.compile(pattern, flag=re.MULTILINE)	re.compile(pattern, flag=re.MULTILINE)
code: 正規表現でpatternパターンを複数行対応としてコンパイルする	re.compile(pattern, flag=re.MULTILINE)	re.compile(pattern, flag=re.MULTILINE)
code: 正規表現patternを複数行対応としてコンパイルする	re.compile(pattern, flag=re.MULTILINE)	re.compile(pattern, flag=re.MULTILINE)
code: 文字列sの中からパターンpatternにマッチする位置を探す	re.search(pattern, s)	re.search(pattern, s)
code: 正規表現で文字列sの中からpatternにマッチする文字列を探す	re.search(pattern, s)	re.search(pattern, s)
code: 正規表現で、文字列sを走査し正規表現patternにマッチするか見る	re.search(pattern, s)	re.search(pattern, s)
code: 文字列sを走査しpatternにマッチするか見る	re.search(pattern, s)	re.search(pattern, s)
code: sの中からパターンpatternにASCII限定としてマッチする文字列を探す	re.search(pattern, s, flags=re.ASCI)	re.search(pattern, s, flags=re.ASCI)
code: 文字列sの中からパターンpatternにASCII限定としてマッチする文字列を探す	re.search(pattern, s, flags=re.ASCI)	re.search(pattern, s, flags=re.ASCI)
code: 正規表現で、文字列sを走査しpatternにASCII限定としてマッチするか確認する	re.search(pattern, s, flags=re.ASCI)	re.search(pattern, s, flags=re.ASCI)
code: sを走査し正規表現patternにASCII限定としてマッチするか調べる	re.search(pattern, s, flags=re.ASCI)	re.search(pattern, s, flags=re.ASCI)
code: 正規表現で文字列sの中からpatternパターンにケースを無視してマッチする文字列を探す	re.search(pattern, s, flags=re.IGNORECASE)	re.search(pattern, s, flags=re.IGNORECASE)
code: 正規表現で、sの中からpatternパターンにケースを無視してマッチする文字列を探す	re.search(pattern, s, flags=re.IGNORECASE)	re.search(pattern, s, flags=re.IGNORECASE)
code: 正規表現でsを走査しpatternに大文字・小文字を無視してマッチするか調べる	re.search(pattern, s, flags=re.IGNORECASE)	re.search(pattern, s, flags=re.IGNORECASE)
code: 正規表現で、文字列sを走査し、正規表現patternにケースを無視してマッチするか確認する	re.search(pattern, s, flags=re.IGNORECASE)	re.search(pattern, s, flags=re.IGNORECASE)
code: sの中からパターンpatternに複数行対応としてマッチする文字列を探す	re.search(pattern, s, flags=re.MULTILINE)	re.search(pattern, s, flags=re.MULTILINE)
code: sの中から正規表現patternに複数行対応としてマッチする文字列を探す	re.search(pattern, s, flags=re.MULTILINE)	re.search(pattern, s, flags=re.MULTILINE)
code: sを走査し、正規表現patternに複数行対応としてマッチするか調べる	re.search(pattern, s, flags=re.MULTILINE)	re.search(pattern, s, flags=re.MULTILINE)
code: 正規表現で、sを走査し、正規表現patternに複数行対応としてマッチするか見る	re.search(pattern, s, flags=re.MULTILINE)	re.search(pattern, s, flags=re.MULTILINE)
code: 正規表現で、正規表現patternに文字列sの先頭でマッチさせる	re.match(pattern, s)	re.match(pattern, s)
code: sの先頭で正規表現patternにマッチさせる	re.match(pattern, s)	re.match(pattern, s)
code: パターンpatternにsの先頭でマッチさせる	re.match(pattern, s)	re.match(pattern, s)
code: 文字列sの先頭でpatternパターンにマッチするか調べる	re.match(pattern, s)	re.match(pattern, s)
code: sの先頭で正規表現patternにマッチするか調べる	re.match(pattern, s)	re.match(pattern, s)
code: 正規表現で、文字列sの先頭でASCII限定としてpatternパターンにマッチさせる	re.match(pattern, s, flags=re.ASCI)	re.match(pattern, s, flags=re.ASCI)
code: 文字列sの先頭で正規表現patternにASCII限定としてマッチさせる	re.match(pattern, s, flags=re.ASCI)	re.match(pattern, s, flags=re.ASCI)
code: 正規表現で、ASCII限定として文字列sの先頭でpatternパターンにマッチさせる	re.match(pattern, s, flags=re.ASCI)	re.match(pattern, s, flags=re.ASCI)
code: sの先頭でpatternにASCII限定としてマッチするか見る	re.match(pattern, s, flags=re.ASCI)	re.match(pattern, s, flags=re.ASCI)
code: 正規表現で文字列sの先頭でpatternにASCII限定としてマッチするか見る	re.match(pattern, s, flags=re.ASCI)	re.match(pattern, s, flags=re.ASCI)
code: 文字列sの先頭でpatternに大文字・小文字を無視してマッチさせる	re.match(pattern, s, flags=re.IGNORECASE)	re.match(pattern, s, flags=re.IGNORECASE)
code: パターンpatternに文字列sの先頭でケースを無視してマッチさせる	re.match(pattern, s, flags=re.IGNORECASE)	re.match(pattern, s, flags=re.IGNORECASE)
code: ケースを無視してsの先頭で正規表現patternにマッチさせる	re.match(pattern, s, flags=re.IGNORECASE)	re.match(pattern, s, flags=re.IGNORECASE)
code: sの先頭でpatternパターンにケースを無視してマッチするか確認する	re.match(pattern, s, flags=re.IGNORECASE)	re.match(pattern, s, flags=re.IGNORECASE)
code: 正規表現で文字列sの先頭でpatternにケースを無視してマッチするか見る	re.match(pattern, s, flags=re.IGNORECASE)	re.match(pattern, s, flags=re.IGNORECASE)
code: 正規表現で、パターンpatternにsの先頭で複数行対応としてマッチさせる	re.match(pattern, s, flags=re.MULTILINE)	re.match(pattern, s, flags=re.MULTILINE)
code: パターンpatternに複数行対応としてsの先頭でマッチさせる	re.match(pattern, s, flags=re.MULTILINE)	re.match(pattern, s, flags=re.MULTILINE)
code: 正規表現patternに複数行対応として文字列sの先頭でマッチさせる	re.match(pattern, s, flags=re.MULTILINE)	re.match(pattern, s, flags=re.MULTILINE)
code: 正規表現で、sの先頭でパターンpatternに複数行対応としてマッチするか見る	re.match(pattern, s, flags=re.MULTILINE)	re.match(pattern, s, flags=re.MULTILINE)
code: 正規表現で、文字列sの先頭でパターンpatternに複数行対応としてマッチするか確認する	re.match(pattern, s, flags=re.MULTILINE)	re.match(pattern, s, flags=re.MULTILINE)
code: 文字列s全体をpatternパターンにマッチさせる	re.fullmatch(pattern, s)	re.fullmatch(pattern, s)
code: 正規表現で、文字列s全体をパターンpatternにマッチさせる	re.fullmatch(pattern, s)	re.fullmatch(pattern, s)
code: s全体をpatternにマッチさせる	re.fullmatch(pattern, s)	re.fullmatch(pattern, s)
code: s全体がpatternにマッチするか確認する	re.fullmatch(pattern, s)	re.fullmatch(pattern, s)
code: 正規表現でs全体がpatternパターンにマッチするか見る	re.fullmatch(pattern, s)	re.fullmatch(pattern, s)
code: patternにASCII限定としてs全体をマッチさせる	re.fullmatch(pattern, s, flags=re.ASCI)	re.fullmatch(pattern, s, flags=re.ASCI)
code: 正規表現で文字列s全体を正規表現patternにASCII限定としてマッチさせる	re.fullmatch(pattern, s, flags=re.ASCI)	re.fullmatch(pattern, s, flags=re.ASCI)
code: 文字列s全体をASCII限定として正規表現patternにマッチさせる	re.fullmatch(pattern, s, flags=re.ASCI)	re.fullmatch(pattern, s, flags=re.ASCI)
code: 正規表現で、s全体がpatternパターンにASCII限定としてマッチするか調べる	re.fullmatch(pattern, s, flags=re.ASCI)	re.fullmatch(pattern, s, flags=re.ASCI)
code: s全体がパターンpatternにASCII限定としてマッチするか調べる	re.fullmatch(pattern, s, flags=re.ASCI)	re.fullmatch(pattern, s, flags=re.ASCI)
code: 正規表現で、大文字・小文字を無視して正規表現patternにs全体をマッチさせる	re.fullmatch(pattern, s, flags=re.IGNORECASE)	re.fullmatch(pattern, s, flags=re.IGNORECASE)
code: 正規表現で大文字・小文字を無視してs全体をpatternにマッチさせる	re.fullmatch(pattern, s, flags=re.IGNORECASE)	re.fullmatch(pattern, s, flags=re.IGNORECASE)
code: 正規表現patternに大文字・小文字を無視してs全体をマッチさせる	re.fullmatch(pattern, s, flags=re.IGNORECASE)	re.fullmatch(pattern, s, flags=re.IGNORECASE)
code: 文字列s全体がpatternにケースを無視してマッチするか調べる	re.fullmatch(pattern, s, flags=re.IGNORECASE)	re.fullmatch(pattern, s, flags=re.IGNORECASE)
code: s全体がpatternに大文字・小文字を無視してマッチするか調べる	re.fullmatch(pattern, s, flags=re.IGNORECASE)	re.fullmatch(pattern, s, flags=re.IGNORECASE)
code: 複数行対応としてパターンpatternにs全体をマッチさせる	re.fullmatch(pattern, s, flags=re.MULTILINE)	re.fullmatch(pattern, s, flags=re.MULTILINE)
code: patternパターンにs全体を複数行対応としてマッチさせる	re.fullmatch(pattern, s, flags=re.MULTILINE)	re.fullmatch(pattern, s, flags=re.MULTILINE)
code: s全体をpatternに複数行対応としてマッチさせる	re.fullmatch(pattern, s, flags=re.MULTILINE)	re.fullmatch(pattern, s, flags=re.MULTILINE)
code: 正規表現で、s全体がpatternに複数行対応としてマッチするか調べる	re.fullmatch(pattern, s, flags=re.MULTILINE)	re.fullmatch(pattern, s, flags=re.MULTILINE)
code: 正規表現でs全体がパターンpatternに複数行対応としてマッチするか見る	re.fullmatch(pattern, s, flags=re.MULTILINE)	re.fullmatch(pattern, s, flags=re.MULTILINE)
code: 正規表現で、出現したpatternで文字列sを分割する	re.split(pattern, s)	re.split(pattern, s)
code: 正規表現で、出現した正規表現patternでsを区切る	re.split(pattern, s)	re.split(pattern, s)
code: 正規表現で、文字列sを出現したpatternパターンで区切る	re.split(pattern, s)	re.split(pattern, s)
code: sをASCII限定のパターンで分ける	re.split(pattern, s, flags=re.ASCI)	re.split(pattern, s, flags=re.ASCI)
code: 正規表現で、sをASCII限定のパターンで分ける	re.split(pattern, s, flags=re.ASCI)	re.split(pattern, s, flags=re.ASCI)
code: 正規表現で、文字列sをASCII限定のパターンpatternで区切る	re.split(pattern, s, flags=re.ASCI)	re.split(pattern, s, flags=re.ASCI)
code: 正規表現で、sを大文字・小文字を無視したパターンで分ける	re.split(pattern, s, flags=re.IGNORECASE)	re.split(pattern, s, flags=re.IGNORECASE)
code: ケースを無視したパターンでsを区切る	re.split(pattern, s, flags=re.IGNORECASE)	re.split(pattern, s, flags=re.IGNORECASE)
code: 正規表現で、文字列sを大文字・小文字を無視した正規表現patternで分ける	re.split(pattern, s, flags=re.IGNORECASE)	re.split(pattern, s, flags=re.IGNORECASE)
code: 正規表現で、複数行対応のパターンpatternで文字列sを分ける	re.split(pattern, s, flags=re.MULTILINE)	re.split(pattern, s, flags=re.MULTILINE)
code: 正規表現で、文字列sを複数行対応のpatternパターンで分割する	re.split(pattern, s, flags=re.MULTILINE)	re.split(pattern, s, flags=re.MULTILINE)
code: 複数行対応のパターンで文字列sを分ける	re.split(pattern, s, flags=re.MULTILINE)	re.split(pattern, s, flags=re.MULTILINE)
code: 正規表現でsの内のpatternパターンによる全てのマッチを求める	re.findall(pattern, s)	re.findall(pattern, s)
code: 文字列sの正規表現patternによるマッチを見る	re.findall(pattern, s)	re.findall(pattern, s)
code: 文字列sのの内でパターンpatternにマッチしたすべての文字列をリストにする	re.findall(pattern, s)	re.findall(pattern, s)
code: 文字列sので正規表現patternにマッチしたすべての文字列をリストにする	re.findall(pattern, s)	re.findall(pattern, s)
code: 正規表現で、s内のASCII限定のパターンによるすべてのマッチを使う	re.findall(pattern, s, flags=re.ASCI)	re.findall(pattern, s, flags=re.ASCI)
code: 正規表現でsのASCII限定の正規表現patternによるすべてのマッチを見る	re.findall(pattern, s, flags=re.ASCI)	re.findall(pattern, s, flags=re.ASCI)
code: 正規表現でsのでASCII限定のpatternパターンにマッチしたすべての文字列をリストにする	re.findall(pattern, s, flags=re.ASCI)	re.findall(pattern, s, flags=re.ASCI)
code: 文字列sのでASCII限定のパターンにマッチした全ての文字列をリストに変換する	re.findall(pattern, s, flags=re.ASCI)	re.findall(pattern, s, flags=re.ASCI)
code: 文字列sのケースを無視したpatternパターンによる全てのマッチを見る	re.findall(pattern, s, flags=re.IGNORECASE)	re.findall(pattern, s, flags=re.IGNORECASE)
code: 文字列sのケースを無視したpatternパターンによるすべてのマッチを求める	re.findall(pattern, s, flags=re.IGNORECASE)	re.findall(pattern, s, flags=re.IGNORECASE)
code: 正規表現でsの中で大文字・小文字を無視したパターンにマッチしたすべての文字列をリストに変換する	re.findall(pattern, s, flags=re.IGNORECASE)	re.findall(pattern, s, flags=re.IGNORECASE)
code: sのでケースを無視したpatternパターンにマッチした文字列をリストにする	re.findall(pattern, s, flags=re.IGNORECASE)	re.findall(pattern, s, flags=re.IGNORECASE)
code: 正規表現で文字列sの中の複数行対応のパターンpatternによる全マッチを求める	re.findall(pattern, s, flags=re.MULTILINE)	re.findall(pattern, s, flags=re.MULTILINE)
code: 正規表現で文字列sの複数行対応のパターンpatternによる全マッチを使う	re.findall(pattern, s, flags=re.MULTILINE)	re.findall(pattern, s, flags=re.MULTILINE)
code: 文字列sので複数行対応の正規表現patternにマッチした全ての文字列をリストに変換する	re.findall(pattern, s, flags=re.MULTILINE)	re.findall(pattern, s, flags=re.MULTILINE)
code: 正規表現で、文字列sの内で複数行対応のpatternにマッチした全ての文字列をリストに変換する	re.findall(pattern, s, flags=re.MULTILINE)	re.findall(pattern, s, flags=re.MULTILINE)
code: 正規表現として、文字列sのpatternによるで置換する	re.sub(pattern, repl, s)	re.sub(pattern, repl, s)
code: 正規表現でsの内の正規表現patternによるで置換する	re.sub(pattern, repl, s)	re.sub(pattern, repl, s)
code: sのでpatternパターンにマッチした文字列をreplで置き換える	re.sub(pattern, repl, s)	re.sub(pattern, repl, s)
code: 正規表現を用いてsの中で正規表現patternにマッチした文字列をreplで置換する	re.sub(pattern, repl, s)	re.sub(pattern, repl, s)
code: sのASCII限定のパターンよって置換する	re.sub(pattern, repl, s, flags=re.ASCI)	re.sub(pattern, repl, s, flags=re.ASCI)
code: s中のASCII限定のパターンpatternよって置換する	re.sub(pattern, repl, s, flags=re.ASCI)	re.sub(pattern, repl, s, flags=re.ASCI)
code: sの内でASCII限定のパターンpatternにマッチした文字列をreplで置換する	re.sub(pattern, repl, s, flags=re.ASCI)	re.sub(pattern, repl, s, flags=re.ASCI)
code: sのでASCII限定のpatternパターンにマッチした文字列をreplで置換する	re.sub(pattern, repl, s, flags=re.ASCI)	re.sub(pattern, repl, s, flags=re.ASCI)
code: 正規表現として、s中の大文字・小文字を無視した正規表現patternよって置換する	re.sub(pattern, repl, s, flags=re.IGNORECASE)	re.sub(pattern, repl, s, flags=re.IGNORECASE)
code: sの大文字・小文字を無視したパターンよって置換する	re.sub(pattern, repl, s, flags=re.IGNORECASE)	re.sub(pattern, repl, s, flags=re.IGNORECASE)
code: 正規表現を使って、文字列sのの内で大文字・小文字を無視したパターンにマッチした文字列をreplで置換する	re.sub(pattern, repl, s, flags=re.IGNORECASE)	re.sub(pattern, repl, s, flags=re.IGNORECASE)
code: sの中で大文字・小文字を無視したパターンにマッチした文字列をreplで置換する	re.sub(pattern, repl, s, flags=re.IGNORECASE)	re.sub(pattern, repl, s, flags=re.IGNORECASE)
code: 文字列sの中の複数行対応のパターンよって置き換える	re.sub(pattern, repl, s, flags=re.MULTILINE)	re.sub(pattern, repl, s, flags=re.MULTILINE)
code: 正規表現で文字列sの複数行対応のパターンpatternよって置き換える	re.sub(pattern, repl, s, flags=re.MULTILINE)	re.sub(pattern, repl, s, flags=re.MULTILINE)
code: sの内で複数行対応のパターンにマッチした文字列をreplで置換する	re.sub(pattern, repl, s, flags=re.MULTILINE)	re.sub(pattern, repl, s, flags=re.MULTILINE)
code: 文字列sのの内で複数行対応のパターンpatternにマッチした文字列をreplで置換する	re.sub(pattern, repl, s, flags=re.MULTILINE)	re.sub(pattern, repl, s, flags=re.MULTILINE)
code: 空のセットを新規生成する	set()	set()
code: 空の集合	set()	set()
code: iterableから集合	set(iterable)	set(iterable)
code: 列iterableの集合	set(iterable)	set(iterable)
code: 配列iterableから重複を取り除く	set(iterable)	set(iterable)
code: イテラブルiterableを集合にする	set(iterable)	set(iterable)
code: iterableをセットにする	set(iterable)	set(iterable)
code: stにelementを追加する	st.add(element)	st.add(element)
code: 文字列elementをセットstに追加する	st.add(element)	st.add(element)
code: stにiterableの要素を全て追加する	st.update(iterable)	st.update(iterable)
code: stに配列iterableの要素を全て追加する	st.update(iterable)	st.update(iterable)
code: セットstに列iterableの要素を全て追加する	st.update(iterable)	st.update(iterable)
code: iterableをstに追加更新する	st.update(iterable)	st.update(iterable)
code: 列iterableをセットstに追加する	st.update(iterable)	st.update(iterable)
code: セットstにiterableを追加する	st.update(iterable)	st.update(iterable)
code: セットstから文字列elementを除去する	st.remove(element)	st.remove(element)
code: セットstからオブジェクトelementを除く	st.discard(element)	st.remove(element)
code: elementをセットstから取り除く	st.remove(element)	st.remove(element)
code: エラーなくstからelementを取り除く	st.remove(element)	st.discard(element)
code: stからエラーなく文字列elementを取り除く	st.discard(element)	st.discard(element)
code: エラーなくセットstからオブジェクトelementを除去する	st.discard(element)	st.discard(element)
code: stから要素を全て消す	st.clear()	st.clear()
code: セットstから要素を全て消す	st.clear()	st.clear()
code: セットstを空にする	st.clear()	st.clear()
code: セットstをst2との共通要素のみに更新する	st.intersection_update(st2)	st.intersection_update(st2)
code: stをセットst2との共通要素のみに更新する	st.intersection_update(st2)	st.intersection_update(st2)
code: セットstからセットst2の要素を全て除去する	st.difference_update(st2)	st.difference_update(st2)
code: stからst2の要素を全て除く	st.difference(st2)	st.difference_update(st2)
code: stからセットst2との共通要素を除去する	st.symmetric_difference_update(st2)	st.symmetric_difference_update(st2)
code: セットstからst2との共通要素を全て取り除く	st.symmetric_difference_update(st2)	st.symmetric_difference_update(st2)
code: stから何でもいいから一つ除去する	st.pop()	st.pop()
code: stから何でもいいからひとつ取り除く	st.clear()	st.pop()
code: セットstとst2のユニオン	st.intersection(st2)	st.union(st2)
code: セットstとst2の和集合を使う	st.symmetric_difference(st2)	st.union(st2)
code: st ∪ セットst2	st.issubset(st2)	st.union(st2)
code: セットstとst2の交差を求める	st.intersection(st2)	st.intersection(st2)
code: セットstとst2の共通部分を見る	st.intersection(st2)	st.intersection(st2)
code: stとst2に共通する要素からなる集合	st.intersection(st2)	st.intersection(st2)
code: セットstとセットst2に共通する要素からなる集合	st.intersection(st2)	st.intersection(st2)
code: st ∩ セットst2	st.difference(st2)	st.intersection(st2)
code: リストalistとリストalist2の積集合	alist.extend(alist2)	list(set(alist) & set(alist2))
code: リストalistとリストalist2の共通りスト	list(set(alist) & set(alist2)	list(set(alist) & set(alist2))
code: stとst2の差集合	st.difference(st2)	st.difference(st2)
code: セットstとセットst2の差集合を見る	st.difference(st2)	st.difference(st2)
code: stに含まれst2に含まれない集合	st.difference(st2)	st.difference(st2)
code: セットstに含まれ、セットst2に含まれない集合を計算する	st.difference(st2)	st.difference(st2)
code: stからセットst2を引いた差	st.difference(st2)	st.difference(st2)
code: stからセットst2を引いた差集合を使う	st.difference_update(st2)	st.difference(st2)
code: セットstにおけるセットst2の補集合を算出する	st.intersection(st2)	st.difference(st2)
code: stにおけるセットst2の補集合を見る	st.difference(st2)	st.difference(st2)
code: st ＼ st2	st.difference(st2)	st.difference(st2)
code: セットstとst2の対称差集合を求める	st.intersection(st2)	st.symmetric_difference(st2)
code: stとst2の対称差を見る	st.symmetric_difference(st2)	st.symmetric_difference(st2)
code: stとast2のいずれか一方だけの集合を算出する	st.symmetric_difference(st2)	st.symmetric_difference(st2)
code: セットstとast2のいずれか一方だけの集合	st.symmetric_difference(st2)	st.symmetric_difference(st2)
code: elementがセットstのメンバーに含まれる	element in st	element in st
code: elementがstの要素	element not in st	element in st
code: elementがセットstに含まれるか	element in st	element in st
code: オブジェクトelementはstに含まれる	element not in st	element in st
code: 文字列element ∈ st	element in st	element in st
code: オブジェクトelementはstの要素に含まれないか	element not in st	element not in st
code: elementはstのメンバーに含まれない	element in st	element not in st
code: オブジェクトelementはセットstに含まれない	element not in st	element not in st
code: オブジェクトelementがセットstに含まれない	element in st	element not in st
code: element ∉ st	element not in st	element not in st
code: セットstはst2の下位集合	st.issubset(st2)	st.issubset(st2)
code: セットstはセットst2の下位集合か調べる	st.issubset(st2)	st.issubset(st2)
code: セットstの全要素がセットst2に含まれるかどうか判定する	st.issubset(st2)	st.issubset(st2)
code: セットstの要素がst2に含まれる	st.issubset(st2)	st.issubset(st2)
code: セットst ⊆ st2	st.issubset(st2)	st.issubset(st2)
code: セットstがst2の真部分集合	st < st2	st < st2
code: セットstはst2の真部分集合か調べる	st.issubset(st2)	st < st2
code: st ⊂ st2	st.issuperset(st2)	st < st2
code: stはst2のスーパーセットかどうか判定する	st.issuperset(st2)	st.issuperset(st2)
code: stがst2のスーパーセット	st.issubset(st2)	st.issuperset(st2)
code: st ⊇ st2	st.union(st2)	st.issuperset(st2)
code: セットstがセットst2の真スーパーセットかどうか判定する	st.issubset(st2)	st > st2
code: セットstがセットst2の真上位集合かどうか	st.issubset(st2)	st > st2
code: セットst ⊃ st2	st.issubset(st2)	st > st2
code: stがst2と共通の要素を持たない	st.isdisjoint(st2)	st.isdisjoint(st2)
code: stがst2と共通の要素を持たない	st.isdisjoint(st2)	st.isdisjoint(st2)
code: セットstがst2と交わりを持たないか	st.isdisjoint(st2)	st.isdisjoint(st2)
code: stがセットst2と交わりを持たない	st.isdisjoint(st2)	st.isdisjoint(st2)
code: セットstがセットst2と互いに素	st.isdisjoint(st2)	st.isdisjoint(st2)
code: セットstはセットst2と互いに素	st.isdisjoint(st2)	st.isdisjoint(st2)
code: セットstとセットst2が互いに素か	st.isdisjoint(st2)	st.isdisjoint(st2)
code: stとセットst2は互いに素かどうか判定する	st.isdisjoint(st2)	st.isdisjoint(st2)
code: stの濃度を計算する	len(st)	len(st)
code: セットstの要素数	len(st)	len(st)
code: stが空	len(st) == 0	len(st) == 0
code: セットstが空	len(st) == 0	len(st) == 0
code: stが空集合でないか確認する	len(st) == 0	len(st) != 0
code: セットstが空集合でないかどうか	st.issubset(st2)	len(st) != 0
code: stの浅いコピーを準備する	st.copy()	st.copy()
code: セットstの浅いコピー	st.copy()	st.copy()
code: 列iterableのイミュータブルな集合	frozenset(iterable)	frozenset(iterable)
code: 列iterableのイミュータブルなセット	frozenset(iterable)	frozenset(iterable)
code: イテラブルiterableを変更不能な集合にする	frozenset(iterable)	frozenset(iterable)
code: イテラブルiterableを変更不能なセットにする	frozenset(iterable)	frozenset(iterable)
code: stの変更不能版	frozenset(st)	frozenset(st)
code: セットstをイミュータブルなセットに変換する	frozenset(st)	frozenset(st)
code: セットstを変更不能な集合にする	frozenset(st)	frozenset(st)
code: セットstを変更不能に変換する	frozenset(st)	frozenset(st)
code: stをリストに変換する	list(st)	list(st)
code: stを組にする	tuple(st)	tuple(st)
code: リストalistから重複を取り除く	sorted(set(alist)	sorted(set(alist), key=alist.index)
code: 空文字	''	''
code: 改行	'\n'	'\n'
code: タブ文字	'\t'	'\t'
code: 空白文字を使う	'	' '
code: 全てのアルファベットを使う	string.ascii_letters	string.ascii_letters
code: 全ての英字を求める	string.ascii_letters	string.ascii_letters
code: 全小文字を用いる	string.ascii_lowercase	string.ascii_lowercase
code: 全小文字	string.ascii_lowercase	string.ascii_lowercase
code: 全ての大文字を求める	string.ascii_uppercase	string.ascii_uppercase
code: 全ての大文字	string.ascii_uppercase	string.ascii_uppercase
code: 全数字	string.digits	string.digits
code: 全ての数字	string.digits	string.digits
code: 全十六進数字	string.hexdigits	string.hexdigits
code: 全十六進数字	string.hexdigits	string.hexdigits
code: 全八進数字	string.octdigits	string.octdigits
code: 全ての八進数字	string.octdigits	string.octdigits
code: 全句読点文字	string.punctuation	string.punctuation
code: 全句読点文字を使う	string.punctuation	string.punctuation
code: 全ての印字可能な文字を使う	string.printable	string.printable
code: 全ての印字文字を使う	string.printable	string.printable
code: 全ての空白文字を使用する	string.whitespace	string.whitespace
code: 全ての空白文字	string.whitespace	string.whitespace
code: 文字コードnを文字にする	chr(n)	chr(n)
code: ASCIIコードnの文字を使う	chr(n)	chr(n)
code: 文字コードnの文字を使う	chr(n)	chr(n)
code: 文字列s2の文字コードを求める	ord(s2)	ord(s2)
code: 文字列sを全てにする	s.upper()	s.upper()
code: 文字列sを英大文字にする	s.upper()	s.upper()
code: sの小文字を英大文字にする	s.upper()	s.upper()
code: 文字列s中の小文字を英大文字に変換する	s.upper()	s.upper()
code: sを全て英小文字に変換する	s.upper()	s.lower()
code: 文字列sを英小文字に変換する	s.lower()	s.lower()
code: 文字列s内のを英小文字に変換する	s.lower()	s.lower()
code: 文字列sの英大文字をに変換する	s.upper()	s.lower()
code: sを全て英小文字に変換する	s.casefold()	s.casefold()
code: 文字列sを全てにする	s.lower()	s.casefold()
code: sを特殊文字も含めに変換する	s.upper()	s.casefold()
code: 文字列sを特殊文字も含め英小文字に変換する	s.upper()	s.casefold()
code: sを文字のリストにする	list(s)	list(s)
code: 文字列sの文字のリスト	list(s)	list(s)
code: 文字列sの文字のリスト	list(s)	list(s)
code: 文字列sを空白で区切って文字列リストにする	s.split()	s.split()
code: 空白で文字列sを分割してリストに変換する	map(int, s.split()	s.split()
code: 文字列sを空白で分割してリストに変換する	s.split()	s.split()
code: 空白によって文字列sを分割する	s.split()	s.split()
code: 空白によって文字列sを区切る	s.split()	s.split()
code: 文字列sを空白によって区切る	s.split()	s.split()
code: 空白によってsを分割し、整数のリストにする	map(int, s.split()))))))))))))))))))))	map(int, s.split())
code: 文字列sを空白によって分割して整数のリストにする	map(int, s.split()	map(int, s.split())
code: 文字列sを空白によって区切って数列に変換する	map(int, s.split()	map(int, s.split())
code: s2で文字列sを分割して文字列リストにする	s.split(s2)	s.split(s2)
code: s2でsを区切って文字列リストにする	s.split(s2)	s.split(s2)
code: 文字列sを文字列s2で分割し、文字列リストにする	s.split(s2)	s.split(s2)
code: s2を使ってsを分割する	s.split(s2)	s.split(s2)
code: 文字列sをs2によって区切る	s.split(s2)	s.split(s2)
code: 文字列sを文字列s2を使って分割する	s.split(s2)	s.split(s2)
code: カンマで文字列sを区切りリストにする	s.split(',')	s.split(',')
code: sをカンマで分割しリストに変換する	s.split(',')	s.split(',')
code: sをカンマで区切り文字列のリストに変換する	s.split(',')	s.split(',')
code: 文字列sをカンマを使って区切る	s.split(',')	s.split(',')
code: 文字列sをカンマによって区切る	s.split(',')	s.split(',')
code: sをカンマによって区切る	s.split(',')	s.split(',')
code: 文字列sをコロンで区切り、リストにする	s.split(':')	s.split(':')
code: コロンでsを分割し、文字列のリストにする	s.split(':')	s.split(':')
code: sをコロンで区切り、リストに変換する	s.split(':')	s.split(':')
code: sをコロンを使って分割する	s.split(':')	s.split(':')
code: 文字列sをコロンによって区切る	s.split(':')	s.split(':')
code: 文字列sをコロンを使って分割する	s.split(':')	s.split(':')
code: 改行でsを区切りリストにする	s.splitlines()	s.splitlines()
code: 改行でsを区切り、文字列リストに変換する	s.splitlines()	s.splitlines()
code: sを改行で分割し文字列リストに変換する	s.splitlines()	s.splitlines()
code: 文字列sを改行によって分割する	s.splitlines()	s.splitlines()
code: 改行によって文字列sを区切る	s.splitlines()	s.splitlines()
code: 改行を用いてsを分割する	s.splitlines()	s.splitlines()
code: sを空白で末尾から区切る	s.rsplit()	s.rsplit()
code: 空白で文字列sを右から区切る	s.rsplit()	s.rsplit()
code: 最後からsを空白で分割する	s.rsplit()	s.rsplit()
code: 文字列sを文字列s2で末尾から区切る	s.rsplit(s2)	s.rsplit(s2)
code: sを文字列s2で最後から分割する	s.rsplit(s2)	s.rsplit(s2)
code: s2で最後から文字列sを分割する	s.rsplit(s2)	s.rsplit(s2)
code: 最初のs2でsを分割する	s.partition(s2)	s.partition(s2)
code: sをs2で二つに分ける	s.partition(s2)[-1]	s.partition(s2)
code: sを最初の文字列s2で二つに分ける	s.partition(s2)[-1]	s.partition(s2)
code: 文字列sを最後の文字列s2で二つに分ける	s.rpartition(s2)[0]	s.rpartition(s2)
code: 最後のs2で文字列sを二つに分ける	s.rpartition(s2)	s.rpartition(s2)
code: sを最後の文字列s2で二つに分ける	s.rpartition(s2)[-1]	s.rpartition(s2)
code: 最初の文字列s2でsを二分し、最初の文字列を求める	s.partition(s2)[0]	s.partition(s2)[0]
code: 文字列sを最初の文字列s2で二分し最初の文字列を求める	s.partition(s2)[0]	s.partition(s2)[0]
code: 文字列s2で文字列sを二分し最初の文字列を見る	s.partition(s2)[0]	s.partition(s2)[0]
code: 文字列sをs2で分けた時の先頭の文字列を取り出す	s.partition(s2)[0]	s.partition(s2)[0]
code: sを最初の文字列s2でに分割したときの前半の文字列	s.partition(s2)[-1]	s.partition(s2)[0]
code: 文字列sを文字列s2でに分割した時の先頭の文字列を使う	s.split(s2)	s.partition(s2)[0]
code: sをs2で二つに区切って、残りの文字列を求める	s.partition(s2)[-1]	s.partition(s2)[-1]
code: sを文字列s2で二つに区切って、、後半の文字列を求める	s.partition(s2)[-1]	s.partition(s2)[-1]
code: 文字列sを最初のs2で二つに区切って、、後半の文字列を見る	s.partition(s2)[0]	s.partition(s2)[-1]
code: s2でsを分けた時の残りの文字列	s.partition(s2)[-1]	s.partition(s2)[-1]
code: 文字列sを最初の文字列s2でに分割したときの後半の文字列を使う	s.partition(s2)[-1]	s.partition(s2)[-1]
code: 文字列sを文字列s2で分けた時の後半の文字列	s.partition(s2)[0]	s.partition(s2)[-1]
code: sを最後のs2で二つに区切って先頭の文字列を使う	s.rpartition(s2)[-1]	s.rpartition(s2)[0]
code: 最後のs2でsを二つに区切って前半の文字列を使う	s.rpartition(s2)[0]	s.rpartition(s2)[0]
code: 最後のs2でsを二分し先頭の文字列を使う	s.rpartition(s2)[0]	s.rpartition(s2)[0]
code: 文字列sを最後のs2で分けた時の最初の文字列を求める	s.rpartition(s2)[0]	s.rpartition(s2)[0]
code: 最後の文字列s2で文字列sを分けたときの前半の文字列を使う	s.rpartition(s2)[0]	s.rpartition(s2)[0]
code: 最後の文字列s2で文字列sをに分割した時の先頭の文字列を求める	s.rpartition(s2)[0]	s.rpartition(s2)[0]
code: 文字列sを最後のs2で二つに区切って、、残りの文字列を求める	s.rpartition(s2)[-1]	s.rpartition(s2)[-1]
code: sを最後のs2で二つに区切って、後半の文字列を求める	s.rpartition(s2)[-1]	s.rpartition(s2)[-1]
code: 文字列sを最後の文字列s2で二つに区切って、後半の文字列を求める	s.rpartition(s2)[-1]	s.rpartition(s2)[-1]
code: sを最後の文字列s2で分けた場合の残りの文字列を取り出す	s.rpartition(s2)[-1]	s.rpartition(s2)[-1]
code: sを最後のs2でに分割したときの後半の文字列を求める	s.rpartition(s2)[-1]	s.rpartition(s2)[-1]
code: 文字列sを最後の文字列s2で分けた時の残りの文字列を求める	s.rpartition(s2)[-1]	s.rpartition(s2)[-1]
code: s3にsのs2を置換する	s.replace(s2, s3, s3)	s.replace(s2, s3)
code: 文字列sのs2をs3に全て置き換える	s.replace(s2, s3)	s.replace(s2, s3)
code: sの文字列s2を文字列s3に全て置換する	s.replace(s2, s3)	s.replace(s2, s3)
code: 文字列sにおいてs3に文字列s2を置き換える	s.replace(s2, s3)	s.replace(s2, s3)
code: sにおいて文字列s2を文字列s3に置き換える	s.replace(s2, s3)	s.replace(s2, s3)
code: 文字列sにおいてs2を文字列s3に全て置き換える	s.replace(s2, s3)	s.replace(s2, s3)
code: n回だけs3にs内の文字列s2を置き換える	s.replace(s2, s3, n)	s.replace(s2, s3, n)
code: s中のs2を最大n回だけs3に置換する	s.replace(s2, s3, n)	s.replace(s2, s3, n)
code: 最大n回だけs中の文字列s2をs3に置き換える	s.replace(s2, s3, n)	s.replace(s2, s3, n)
code: 文字列sから文字列s2を除く	s.replace(s2, '')	s.replace(s2, '')
code: 文字列sからs2を全て除く	s.removeprefix(s2)	s.replace(s2, '')
code: sのタブ文字をn個の空白に置き換える	s.expand(tabs)	s.expandtabs(tabsize=n)
code: s内のタブ文字をn個の空白に置き換える	s.expandtabs(tabsize=n)	s.expandtabs(tabsize=n)
code: sの両端から改行を除去する	s.strip('\n')	s.strip()
code: 文字列sの両端から改行を消す	s.strip()	s.strip()
code: sをトリムする	s.strip()	s.strip()
code: sの両端から文字列s2を消す	s.removeprefix(s2)	s.strip(s2)
code: 文字列sの両端から改行を消す	s.strip('\n')	s.strip('\n')
code: 文字列sの左側から余分な空白を消す	s.lstrip()	s.lstrip()
code: 文字列sの左端から空白を除去する	s.lstrip()	s.lstrip()
code: sを左トリムする	s.lstrip()	s.lstrip()
code: 文字列sの先頭からs2を消す	s.removesuffix(s2)	s.lstrip(s2)
code: sの左側からs2を消す	s.rfind(s2)	s.lstrip(s2)
code: sの右側から不要な空白を取り除く	s.strip()	s.rstrip()
code: 文字列sの右側から不要な改行を取り除く	s.strip()	s.rstrip()
code: sの末尾からs2を除く	s.removesuffix(s2)	s.rstrip(s2)
code: 文字列sの右端からs2を除去する	s.rstrip(s2)	s.rstrip(s2)
code: 文字列sを右トリムする	s.rstrip(s2)	s.rstrip(s2)
code: sを長さnでゼロ埋めする	s.zfill(n)	s.zfill(n)
code: sを文字数nでゼロ埋めする	s.zfill(n)	s.zfill(n)
code: 文字列sを文字数nでパディングする	s.zfill(n)	s.zfill(n)
code: 整数nをゼロ埋めによってn2桁の文字列に変換する	str(n).zfill(n2)	str(n).zfill(n2)
code: ゼロ埋めによって整数nをn2桁の文字列に変換する	str(n).zfill(n2)	str(n).zfill(n2)
code: ゼロパディングで整数nをn2桁の文字列に変換する	str(n).zfill(n2)	str(n).zfill(n2)
code: sを幅nでセンタリングにする	s.center(n)	s.center(n)
code: sを文字数nで中央寄せする	s.center(n)	s.center(n)
code: sを幅nでセンタリングする	s.center(n)	s.center(n)
code: 長さnで文字列sを左寄せにする	s.ljust(n)	s.ljust(n)
code: sを幅nで左寄せにする	s.ljust(n)	s.ljust(n)
code: 幅nで文字列sを左寄せにする	s.ljust(n)	s.ljust(n)
code: sを長さnで右寄せにする	s.rjust(n)	s.rjust(n)
code: 文字列sを文字数nで右寄せする	s.rjust(n)	s.rjust(n)
code: 長さnで文字列sを右寄せにする	s.rjust(n)	s.rjust(n)
code: sをキャピタライズする	s.capitalize()	s.capitalize()
code: 文字列sの先頭だけ化する	s.capitalize()	s.capitalize()
code: 文字列sの英大文字と英小文字を逆にする	s.swapcase()	s.swapcase()
code: 文字列sの英大文字とを交換する	s.swapcase()	s.swapcase()
code: sがリストalist内のいづれ	s in alist	s in alist
code: 文字列sがalist内のいづれ	s in alist	s in alist
code: s2が文字列sの内に含まれるかどうか判定する	s2 in s	s2 in s
code: 文字列s2が文字列sに存在するかどうか	s2 in s	s2 in s
code: sに文字列s2が存在するかどうか	s2 in s	s2 in s
code: s2がsに含まれないかどうか調べる	s2 not in s	s2 not in s
code: 文字列sの中にs2が存在しない	s2 in s	s2 not in s
code: 文字列s2が文字列s内に含まれないかテストする	any(s2)	s2 not in s
code: s2を文字列sから見つける	s.find(s2)	s.find(s2)
code: 文字列s2を文字列sの中から探す	s.find(s2)	s.find(s2)
code: s内から文字列s2を見つける	s.find(s2)	s.find(s2)
code: 文字列s2をsの左端から見つける	s.find(s2)	s.find(s2)
code: 文字列sの最初からs2を探す	s.find(s2)	s.find(s2)
code: 文字列s2をsの先頭から見つける	s.find(s2)	s.find(s2)
code: sのn以降に文字列s2があるか	s.find(s2, end=n)!= -1	s.find(s2, start=n) != -1
code: 文字列s2が文字列sのnから先にあるかどうか調べる	s.find(s2, start=n)!= -1	s.find(s2, start=n) != -1
code: 文字列s2がsのn以降に存在するか調べる	s.find(s2, start=n)!= -1	s.find(s2, start=n) != -1
code: s2が文字列sのn番目より後に存在しないかどうか調べる	s.find(s2, end=n)!= -1	s.find(s2, start=n) == -1
code: sのn番目より後に文字列s2がない	s.find(s2, start=n)!= -1	s.find(s2, start=n) == -1
code: sのn番目以降にs2が含まれないか調べる	s.find(s2, end=n) == -1	s.find(s2, start=n) == -1
code: s2がsのn番目より前にあるかどうか調べる	s.find(s2, end=n) == -1	s.find(s2, end=n) != -1
code: s2が文字列sのn番目以前にある	s.find(s2, start=n) == -1	s.find(s2, end=n) != -1
code: 文字列s2がsのn番目より前に存在するかどうか	s.find(s2, start=n)!= -1	s.find(s2, end=n) != -1
code: s2が文字列sのn番目以前にないかテストする	s.find(s2, start=n)!= -1	s.find(s2, end=n) == -1
code: 文字列sのn番目以前に文字列s2が含まれないかどうか判定する	s.find(s2, start=n) == -1	s.find(s2, end=n) == -1
code: sのn番目以前に文字列s2が存在しないかテストする	s.find(s2, start=n) == -1	s.find(s2, end=n) == -1
code: s2がsのn番目とn2番目の間にある	s.find(s2, start=n, end=n2) == -1	s.find(s2, start=n, end=n2) != -1
code: s2が文字列sのn番目とn2番目の間に含まれる	s.find(s2, start=n)!= -1	s.find(s2, start=n, end=n2) != -1
code: 文字列s2がsのn番目とn2番目の間にある	s.find(s2, start=n, end=n2)!= -1	s.find(s2, start=n, end=n2) != -1
code: s2が文字列sのnからとn2までの範囲に含まれるかどうか判定する	s.find(s2, start=n, end=n2)!= -1	s.find(s2, start=n, end=n2) != -1
code: 文字列s2がsのnからとn2番目までの範囲にあるかどうか	s.find(s2, start=n, end=n2)!= -1	s.find(s2, start=n, end=n2) != -1
code: 文字列s2が文字列sのn番目からとn2番目までの範囲に存在するか調べる	s.find(s2, start=n, end=n2) == -1	s.find(s2, start=n, end=n2) != -1
code: sのn番目とn2番目の間に文字列s2がないか調べる	s.find(s2, start=n, end=n2)!= -1	s.find(s2, start=n, end=n2) == -1
code: sのn番目とn2番目の間に文字列s2が含まれない	s.find(s2, start=n, end=n2) == -1	s.find(s2, start=n, end=n2) == -1
code: sのnからとn2までの間にs2が存在しない	s.find(s2, start=n, end=n2)	s.find(s2, start=n, end=n2) == -1
code: sのnからとn2までの範囲に文字列s2が含まれないかどうか確認する	s.find(s2, start=n, end=n2) == -1	s.find(s2, start=n, end=n2) == -1
code: sのnからとn2までの範囲にs2がない	s.find(s2, start=n, end=n2)	s.find(s2, start=n, end=n2) == -1
code: 文字列sのnからs2を探す	s.find(s2, start=n, end=n2)	s.find(s2, start=n)
code: s2を文字列sのnから探す	s.find(s2, start=n, end=n2)	s.find(s2, start=n)
code: s2をsのn番目から探す	s.find(s2, start=n, end=n2)	s.find(s2, start=n)
code: 文字列s2を文字列sのnからn2の範囲で探す	s.find(s2, start=n, end=n2)	s.find(s2, start=n, end=n2)
code: sのnからn2までの範囲で文字列s2を探す	s.find(s2, start=n, end=n2)	s.find(s2, start=n, end=n2)
code: sのnからn2までの範囲でs2を探す	s.find(s2, start=n, end=n2)	s.find(s2, start=n, end=n2)
code: sの最後から文字列s2を見つける	s.rfind(s2)	s.rfind(s2)
code: 文字列sの最後からs2を見つける	s.rfind(s2)	s.rfind(s2)
code: 文字列s2をsの最後から探す	s.rfind(s2)	s.rfind(s2)
code: ssを結合する	s.join(s)	''.join(ss)
code: イテラブルiterableを文字列に変換して繋げる	''.join(map(str, iterable)))	''.join(map(str, iterable))
code: 文字列としてイテラブルiterableを結合する	itertools.accumulate(iterable, operator.mul)	''.join(map(str, iterable))
code: 列iterableを文字列に変換して連結する	''.join(map(str, iterable)))))))))))))))))))))))))	''.join(map(str, iterable))
code: iterableをカンマ区切りで繋げる	','.join(map(str, iterable)))	','.join(map(str, iterable))
code: 列iterableをカンマ区切りで結合する	','.join(map(str, iterable)	','.join(map(str, iterable))
code: 列iterableをカンマ区切りで繋げる	','.join(map(str, iterable)	','.join(map(str, iterable))
code: iterableをsで結合する	s.join(map(str, iterable))	s.join(map(str, iterable))
code: イテラブルiterableを文字列sで結合する	s.join(map(str, iterable)	s.join(map(str, iterable))
code: 文字列sでリストiterableを結合する	s.join(map(str, iterable))))))))))))))))	s.join(map(str, iterable))
code: s中のs2の出現回数	s.count(s2)	s.count(s2)
code: sのs2の登場回数を数える	s.count(s2)	s.count(s2)
code: sの文字列s2を数える	s.count(s2)	s.count(s2)
code: 文字列sの文字列s2をカウントする	s.count(s2)	s.count(s2)
code: sのnからn2までの範囲でs2の登場回数	s.count(s2, start=n, end=n2)	s.count(s2, start=n, end=n2)
code: sのnからn2の範囲で文字列s2の登場回数	s.count(s2, start=n, end=n2)	s.count(s2, start=n, end=n2)
code: 文字列sのnからn2までの範囲で文字列s2をカウントする	s.find(s2, start=n, end=n2)	s.count(s2, start=n, end=n2)
code: 文字列sのnからn2までの範囲で文字列s2をカウントする	s.count(s2, start=n, end=n2)	s.count(s2, start=n, end=n2)
code: 文字列sが文字列s2で開始するか調べる	s.startswith(s2)	s.startswith(s2)
code: 文字列s2で文字列sが始まるかテストする	s.startswith(s2)	s.startswith(s2)
code: 文字列sが文字列s2で開始するか確認する	s.startswith(s2)	s.startswith(s2)
code: 文字列sのプレフィックスが文字列s2かどうか調べる	s.endswith(s2)	s.startswith(s2)
code: 文字列sの接頭辞はs2か調べる	s.find(s2)	s.startswith(s2)
code: sのn番目がs2で始まるか確認する	s.startswith(s2, n)	s.startswith(s2, n)
code: sのn番目が文字列s2で開始する	s.startswith(s2, n)	s.startswith(s2, n)
code: sのn番目が文字列s2で開始する	s.startswith(s2, n)	s.startswith(s2, n)
code: s2で文字列sが終了する	s.endswith(s2)	s.endswith(s2)
code: 文字列s2で文字列sが終了する	s.startswith(s2)	s.endswith(s2)
code: 文字列s2でsが終了するかテストする	s.endswith(s2)	s.endswith(s2)
code: sの接尾辞がs2か	s.issubset(s2)	s.endswith(s2)
code: sの接尾辞は文字列s2	s.startswith(s2)	s.endswith(s2)
code: エラーなく文字列s2をsの接頭辞から除く	s.replace(s2, '')	s.removeprefix(s2)
code: 文字列sの左端からs2を安全に除く	s.removeprefix(s2)	s.removeprefix(s2)
code: 安全に文字列s2を文字列sの左端から取り除く	s.removeprefix(s2)	s.removeprefix(s2)
code: 文字列s2をsの接尾辞から取り除く	s.removesuffix(s2)	s.removesuffix(s2)
code: 文字列s2を文字列sの右側から除去する	s.removesuffix(s2)	s.removesuffix(s2)
code: s2を文字列sの接尾辞から除去する	s.removesuffix(s2)	s.removesuffix(s2)
code: CSVファイルファイル名filenameがかどうか	filename.endswith('.csv')	filename.endswith('.csv')
code: ファイル名filenameがCSVファイル	filename.endswith('.csv')	filename.endswith('.csv')
code: ファイル名filenameがCSVファイルかどうか確認する	filename.endswith('.csv')	filename.endswith('.csv')
code: 文字列sが全て	s.islower()	s.isupper()
code: 文字列sが英大文字	s.isupper()	s.isupper()
code: 文字列sが全て英小文字か調べる	s.islower()	s.islower()
code: sが全て英小文字か調べる	s.islower()	s.islower()
code: 文字列sが数字かどうか調べる	s.isdigit()	s.isdigit()
code: sが全て数字	s.isdigit()	s.isdigit()
code: 文字列sが英字	s.isalpha()	s.isalpha()
code: 文字列sが全てアルファベット	s.isalpha()	s.isalpha()
code: 文字列sが全て英数字かどうか	s.isalnum()	s.isalnum()
code: 文字列sが英数字	s.isalnum()	s.isalnum()
code: sがASCII文字	s.isascii()	s.isascii()
code: sがアスキー文字かどうか	s.isascii()	s.isascii()
code: 文字列sが空白かどうか判定する	any(c.isspace() for c in s)	s.isspace()
code: sが空白文字からなるか	s.isspace()	s.isspace()
code: 文字列sが全て十進数字か	s.isdecimal()	s.isdecimal()
code: sは十進数字かどうかテストする	s.isdecimal()	s.isdecimal()
code: 文字列sが数値	s.isidentifier()	s.isnumeric()
code: 文字列sが全て数値	s.islower()	s.isnumeric()
code: 英大文字がs内に含まれるかどうか	any(c.isupper() for c in s)	any(c.isupper() for c in s)
code: 文字列s内にひとつでもが含まれるか確認する	any(c.isupper() for c in s)	any(c.isupper() for c in s)
code: s内にひとつでもがあるか判定する	any(c.isupper() for c in s)	any(c.isupper() for c in s)
code: 英小文字が文字列s内にあるかどうか調べる	any(c.islower() for c in s)	any(c.islower() for c in s)
code: 英小文字が文字列s内にあるか	any(c.islower() for c in s)	any(c.islower() for c in s)
code: 文字列s内に英小文字がある	any(c.islower() for c in s)	any(c.islower() for c in s)
code: 数字がs内に含まれる	any(c.isdigit() for c in s)	any(c.isdigit() for c in s)
code: 文字列s内に数字がある	any(c.isdigit() for c in s)	any(c.isdigit() for c in s)
code: ひとつでも数字が文字列s内にある	any(c.isdigit() for c in s)	any(c.isdigit() for c in s)
code: アルファベットが文字列s内に含まれる	any(c.isalpha() for c in s)	any(c.isalpha() for c in s)
code: 文字列s内にアルファベットが含まれるかどうか	any(c.isalpha() for c in s)	any(c.isalpha() for c in s)
code: ひとつでもアルファベットが文字列s内にあるかどうか調べる	any(c.isalpha() for c in s)	any(c.isalpha() for c in s)
code: ひとつでも英数字が文字列s内にある	any(c.isalnum() for c in s)	any(c.isalnum() for c in s)
code: 英数字が文字列s内に含まれる	any(c.isalnum() for c in s)	any(c.isalnum() for c in s)
code: s内に英数字が含まれる	any(c.isalnum() for c in s)	any(c.isalnum() for c in s)
code: s内に空白があるかどうか	any(c.isspace() for c in s)	any(c.isspace() for c in s)
code: 空白が文字列s内に含まれる	any(c.isspace() for c in s)	any(c.isspace() for c in s)
code: 文字列s内にひとつでも空白があるか	any(c.isspace() for c in s)	any(c.isspace() for c in s)
code: 文字列s内にisasciiがあるか確認する	any(c.アスキー文字() for c in s)	any(c.アスキー文字() for c in s)
code: 文字列s内にひとつでもisasciiがある	any(c.アスキー文字() for c in s)	any(c.アスキー文字() for c in s)
code: isasciiがs内にある	any(c.アスキー文字() for c in s)	any(c.アスキー文字() for c in s)
code: 文字列s内に非アスキー文字があるかどうか	any(not c.isascii() for c in s)	any(not c.isascii() for c in s)
code: 文字列s内に非ASCII文字が含まれる	any(not c.isascii() for c in s)	any(not c.isascii() for c in s)
code: s内にひとつでも非ASCII文字が含まれる	any(not c.isascii() for c in s)	any(not c.isascii() for c in s)
code: 文字列sが全て識別子名か調べる	s.isidentifier()	s.isidentifier()
code: 文字列sは識別子名	s.isidentifier()	s.isidentifier()
code: sがキーワードかどうか	('一' <= s <= '')	keyword.iskeyword(s)
code: sはキーワードかテストする	keyword.iskeyword(s)	keyword.iskeyword(s)
code: sは印字できるかどうか	s.isprintable()	s.isprintable()
code: 文字列sは印字できるかどうか	s.isprintable()	s.isprintable()
code: sはタイトルケース	s.istitle()	s.istitle()
code: 文字列sはタイトルケース	s.istitle()	s.istitle()
code: 文字列sをバイト列に変換する	bytes(s)	s.encode(encoding='utf-8', errors='strict')
code: sをSJISのバイト列にする	s.encode(encoding='sjis', errors='ignore')	s.encode(encoding='sjis', errors='ignore')
code: ユニコードエスケープでsをバイト列にする	s.encode(encoding='unicode_escape')	s.encode(encoding='unicode_escape')
code: ユニコードエスケープで文字列sをバイト列にする	s.encode(encoding='unicode_escape')	s.encode(encoding='unicode_escape')
code: 文字列sを文字コードnameでバイト列にする	s.encode(encoding=name)	s.encode(encoding=name)
code: エンコーディングnameでsをバイト列にする	s.encode(encoding=name)	s.encode(encoding=name)
code: 文字コードnameで文字列sをバイト列にする	s.encode(encoding='utf-8', errors='utf-8')	s.encode(encoding=name)
code: sをエラーを無視してバイト列にする	s.encode(errors='ignore')	s.encode(errors='ignore')
code: エラーを無視してsをバイト列に変換する	s.encode(errors='ignore')	s.encode(errors='ignore')
code: 書式textを引数としてリストalistを文字列整形する	text.format(*alist)	text.format(*alist)
code: 書式textをリストalistを引数として文字列整形する	text.format(*alist)	text.format(*alist)
code: 書式textをmappingでフォーマットする	text.format_map(mapping)	text.format_map(mapping)
code: sの文字数を使う	len(s)	len(s)
code: sの大きさ	s.casefold()	len(s)
code: sの最初の文字	s[0]	s[0]
code: 文字列sの最初	s[0]	s[0]
code: sの後ろの文字	s[-1]	s[-1]
code: sの右端を求める	s[0]	s[-1]
code: sのn番目の文字を見る	(n + n2 - 1) // n	s[n]
code: sのn番目の文字	s[n]	s[n]
code: sとs2を比較する	s == s2	s == s2
code: 文字列sと文字列s2が等しいか	s == s2	s == s2
code: sとs2が等しいかどうか	s == s2	s == s2
code: sは文字列s2と等しいか比較する	s == s2	s == s2
code: sが文字列s2と同じか比較する	s == s2	s == s2
code: sとs2を英小文字を無視して比較する	s.casefold() == s2.casefold()	s.casefold() == s2.casefold()
code: sと文字列s2をを無視して比較する	s.casefold() == s2.casefold()	s.casefold() == s2.casefold()
code: 文字列sが片仮名かどうか調べる	('一' <= s <= '')	('ァ' <= s <= 'ン')
code: sがカタカナ	('ぁ' <= s <= '')	('ァ' <= s <= 'ン')
code: 文字列sが平仮名かどうか	('ァ' <= s <= 'ン')	('ぁ' <= s <= 'ん')
code: sがひらがなかどうか調べる	''.join([chr(ord(ord(ch) - 96) 96) if ('ぁ' <= 'ん') else ch in s])	('ぁ' <= s <= 'ん')
code: 文字列sが漢字かテストする	('一' <= s <= '')	('一' <= s <= '鿐')
code: sが漢字かどうか確認する	s.isnumeric()	('一' <= s <= '鿐')
code: s中に漢字が使われているか判定する	re.search('[\u4E00-\u9FD0]', s)	re.search('[\u4E00-\u9FD0]', s)
code: sに漢字がある	s.isupper()	re.search('[\u4E00-\u9FD0]', s)
code: 文字列s中に漢字があるかどうか調べる	re.search('[\u4E00-\u9FD0]', s)	re.search('[\u4E00-\u9FD0]', s)
code: 文字列s中に日本語が含まれるかどうか判定する	re.search('[あ-んア-ン一-]', s)	re.search('[あ-んア-ン一-鿐]', s)
code: sに日本語が含まれるかどうか調べる	s.islower()	re.search('[あ-んア-ン一-鿐]', s)
code: 文字列sに日本語がある	re.search('[あ-んア-ン一-]', s)	re.search('[あ-んア-ン一-鿐]', s)
code: sの片仮名を平仮名にする	''.join([chr(ord(ord(ch) - 96) if ('ァ' <= ch <= 'ン') else ch for ch for ch in s])	''.join([chr(ord(ch) - 96) if ('ァ' <= ch <= 'ン') else ch for ch in s])
code: 文字列sの片仮名を平仮名にする	''.join([chr(ord(ch) + 96) if ('ァ' <= ch <= 'ン') else ch in s])	''.join([chr(ord(ch) - 96) if ('ァ' <= ch <= 'ン') else ch for ch in s])
code: sの平仮名をカタカナに変換する	''.join([chr(ord(ch) + 96) if ('ぁ' <= ch <= 'ン') else ch for ch for ch in s])	''.join([chr(ord(ch) + 96) if ('ぁ' <= ch <= 'ん') else ch for ch in s])
code: sの平仮名をカタカナに変換する	''.join([chr(ord(ch) + if ('ぁ' <= ch <= 'ん') else ch for ch for ch in s])	''.join([chr(ord(ch) + 96) if ('ぁ' <= ch <= 'ん') else ch for ch in s])
code: 文字列sの全角数字を半角数字に変換する	s.translate(str.maketrans('0123456789', '0123456789')))	s.translate(str.maketrans('０１２３４５６７８９', '0123456789'))
code: 数式処理ライブラリを使用する	sympy.sqrt()	import sympy
code: 代数計算を使用する	import sympy	import sympy
code: 数式としてsを変数にする	sympy.symbol(s)	sympy.symbol(s)
code: 数式としてsを記号にする	sympy.symbol(s)	sympy.symbol(s)
code: 数式としてsをシンボル化して変数zにする	z = sympy.symbol(s)	z = sympy.symbol(s)
code: 数式としてsを記号化して、式zにする	z = sympy.symbol(s)	z = sympy.symbol(s)
code: 数式として、式eの変数zにnを代入する	e.subs(z, n)	e.subs(z, n)
code: 数式として、式eの変数zにnを代入する	e.subs(z, n)	e.subs(z, n)
code: 数式として式eの変数zに式e2を代入する	e.subs(z, e2)	e.subs(z, e2)
code: 数式としてeの式zに式e2を代入する	e.subs(z, e2)	e.subs(z, e2)
code: 数式として、式eの式zをe2で置き換える	e.subs(z, e2)	e.subs(z, e2)
code: 数式として、式eの変数zをe2で置き換える	e.subs(z, e2)	e.subs(z, e2)
code: 数式として、式eを展開する	sympy.expand(e)	sympy.expand(e)
code: 数式として、eの展開を行う	sympy.expand(e)	sympy.expand(e)
code: 数式として、eを因数分解する	sympy.factor(e)	sympy.factor(e)
code: 数式として、eの因数分解を行う	sympy.factor(e)	sympy.factor(e)
code: 数式として、eを簡単化する	sympy.sympify(e)	sympy.sympify(e)
code: 数式として式eを簡略化する	sympy.sympify(e)	sympy.sympify(e)
code: 数式として式eの簡略化を行う	sympy.sympify(e)	sympy.sympify(e)
code: 数式として、式eを部分分数として展開する	sympy.apart(e)	sympy.apart(e)
code: 数式として、eの部分分数化を行う	sympy.apart(e)	sympy.apart(e)
code: 数式として方程eを解く	sympy.sympify(e)	sympy.solve(e)
code: 数式として方程e=0の解を求める	sympy.solve(e)	sympy.solve(e)
code: 数式として、方程式eの変数zの解を計算する	sympy.solve(e, z)	sympy.solve(e, z)
code: 数式として、方程式eの変数zの解を求める	sympy.solve(e, z)	sympy.solve(e, z)
code: 数式として、連立方程e, 式e2の解を計算する	sympy.solve([e, e2])	sympy.solve([e, e2])
code: 数式として、連立方程式e=0, 式e2=0の解を算出する	sympy.solve([e, e2])	sympy.solve([e, e2])
code: 変数zが0に近づくときの式eの極限値を算出する	sympy.limit(e, z, 0)	sympy.limit(e, z, 0)
code: 変数zが0に近づくときのeの極限値を計算する	sympy.limit(e, z, 0)	sympy.limit(e, z, 0)
code: 式zが無限大に近づく時、eの極限値を計算する	sympy.limit(e, z, -oo)	sympy.limit(e, z, oo)
code: 式zが無限大に近づくときのeの極限値を算出する	sympy.limit(e, z, 0)	sympy.limit(e, z, oo)
code: 式zがマイナス無限大に近づく際の式eの極限値を求める	sympy.limit(e, z, oo)	sympy.limit(e, z, -oo)
code: 式zがマイナス無限大に近づく際のeの極限値を算出する	sympy.limit(e, z, oo)	sympy.limit(e, z, -oo)
code: 数式として、式eを微分する	sympy.diff(e)	sympy.diff(e)
code: 数式として式eの微分を求める	sympy.diff(e)	sympy.diff(e)
code: 数式として式zについて式eの微分を求める	sympy.diff(e, z)	sympy.diff(e, z)
code: 数式として変数zについてeの微分を行う	sympy.diff(e, z)	sympy.diff(e, z)
code: 数式として、式eの変数zを微分する	sympy.diff(e, z)	sympy.diff(e, z)
code: 数式として変数zについてeをn階微分する	sympy.diff(e, z, n)	sympy.diff(e, z, n)
code: 数式としてeを式zについてn階微分する	sympy.diff(e, z, n)	sympy.diff(e, z, n)
code: 数式として式eを変数zについてn階微分する	sympy.diff(e, z, n)	sympy.diff(e, z, n)
code: 数式として、eの式zについてのn階微分を計算する	sympy.diff(e, z, n)	sympy.diff(e, z, n)
code: 数式としてeのn階微分を行う	sympy.diff(e, z, n)	sympy.diff(e, z, n)
code: 数式として、eを積分する	sympy.integrate(e)	sympy.integrate(e)
code: 数式として、式eのインテグラルを行う	sympy.integrate(e)	sympy.integrate(e)
code: 数式として式eの積分を行う	sympy.integrate(e)	sympy.integrate(e)
code: 数式として式zについて式eを積分する	sympy.integrate(e, z)	sympy.integrate(e, z)
code: 数式として式zについてeのインテグラルを行う	sympy.integrate(e, z)	sympy.integrate(e, z)
code: 数式として式zについてeの積分を求める	sympy.integrate(e, z)	sympy.integrate(e, z)
code: 数式として、式eの数値を算出する	float(e)	float(e)
code: 数式として、eの数値	float(e)	float(e)
code: 数式として式eを数値計算する	float(e)	float(e)
code: 数式として、式eを浮動小数点数にする	float(e)	float(e)
code: 数式としてeを数値にする	float(e)	float(e)
code: 数式として、eの平方根を計算する	sympy.sqrt(e)	sympy.sqrt(e)
code: 数式として式zの平方根を求める	sympy.sqrt(z)	sympy.sqrt(z)
code: エンディアン	sys.byteorder	sys.byteorder
code: プラットホームのエンディアンを調べる	sys.byteorder	sys.byteorder
code: デフォルトのエンコーディングを知る	sys.getdefaultencoding()	sys.getdefaultencoding()
code: デフォルトのエンコーディングを調べる	sys.getdefaultencoding()	sys.getdefaultencoding()
code: objの参照カウントを調べる	sys.getrefcount(obj)-1	sys.getrefcount(obj)-1
code: オブジェクトobjの参照カウントを確認する	sys.getrefcount(obj)-1	sys.getrefcount(obj)-1
code: オブジェクトobjのバイト長	sys.getsizeof(obj)	sys.getsizeof(obj)
code: objの大きさを調べる	type(obj)	sys.getsizeof(obj)
code: 現在のスタックの最大の深さを知る	sys.getrecursionlimit()	sys.getrecursionlimit()
code: 現在のスタックの最大長	sys.maxunicode	sys.getrecursionlimit()
code: 再帰が何回までできるか調べる	sys.getrecursionlimit()	sys.getrecursionlimit()
code: 何回まで再帰ができるか確める	sys.getrecursionlimit()	sys.getrecursionlimit()
code: 再帰エラーを防ぐ	sys.setrecursionlimit(1000000)	sys.setrecursionlimit(1000000)
code: 再帰数の最大を上げる	sys.setrecursionlimit(1000000)	sys.setrecursionlimit(1000000)
code: スタックの最大長をnに変更する	sys.setrecursionlimit(n)	sys.setrecursionlimit(n)
code: 最大の再帰数をnにセットする	sys.setrecursionlimit(n)	sys.setrecursionlimit(n)
code: 再帰エラーを防ぐため上限をnに変更する	sys.setrecursionlimit(n)	sys.setrecursionlimit(n)
code: 再帰エラーを防ぐために上限をnに変更する	sys.setrecursionlimit(n)	sys.setrecursionlimit(n)
code: sを隔離する	sys.setrecursionlimit(s)	sys.intern(s)
code: 最大整数値	sys.maxsize	sys.maxsize
code: プラットフォームの符号付きの最大整数値を調べる	sys.maxsize	sys.maxsize
code: プラットフォームのユニコードの最大文字コード	sys.maxunicode	sys.maxunicode
code: プラットフォームのユニコードの最大文字コード	sys.maxunicode	sys.maxunicode
code: 環境	sys.platform	sys.platform
code: プラットホームを確認する	sys.platform	sys.platform
code: スクリプト名を知る	sys.argv[0]	sys.argv[0]
code: スクリプトファイル名を用いる	sys.argv[0]	sys.argv[0]
code: プログラムの名前を調べる	import pandas as pd	sys.argv[0]
code: スクリプトの名前を調べる	sys.argv[0]	sys.argv[0]
code: 最初のコマンド引数を	sys.argv[1]	sys.argv[1]
code: 第一コマンド引数	sys.argv[1]	sys.argv[1]
code: コマンドの第一引数を	sys.argv[1]	sys.argv[1]
code: コマンドの第一引数	sys.argv[1]	sys.argv[1]
code: 第nコマンド引数を確める	sys.argv[n]	sys.argv[n]
code: 第nコマンド引数を用いる	sys.argv[n]	sys.argv[n]
code: コマンド引数のn番目	sys.argv[n]	sys.argv[n]
code: コマンド引数のn番目	sys.argv[n]	sys.argv[n]
code: コマンドのn番目の引数	sys.argv[n]	sys.argv[n]
code: コマンドのn番目の引数を	sys.argv[n]	sys.argv[n]
code: コマンドの一覧を使う	sys.argv[1:]	sys.argv[1:]
code: コマンドの一覧を用いる	sys.argv[1:]	sys.argv[1:]
code: コマンド引数を一案として[得る]	sys.argv[1:]	sys.argv[1:]
code: Pythonパスを用いる	sys.path	sys.path
code: Pythonパスを調べる	sys.path	sys.path
code: Pythonパスに文字列sを追加する	sys.path.append(s)	sys.path.append(s)
code: Pythonパスにsというサブディレクトリを加える	sys.path.append(os.path.join(os.dirname(___________________________________file_______), s)	sys.path.append(os.path.join(os.path.dirname(__file__), s))
code: sというサブディレクトリをPythonパスに加える	sys.path.append(os.path.join(os.dirname(____file_), s)	sys.path.append(os.path.join(os.path.dirname(__file__), s))
code: 標準入力	sys.stdin	sys.stdin
code: 標準入力を用いる	sys.stdin	sys.stdin
code: オプションで、出力先を標準出力に設定する	file = sys.stdout	file = sys.stdout
code: オプションで、標準出力に出力する	file = sys.stdout	file = sys.stdout
code: オプションで標準出力を用いる	file = sys.stdout	file = sys.stdout
code: オプションで標準出力を出力先にする	file = sys.stdout	file = sys.stdout
code: オプションで出力先を標準エラーに設定する	file = sys.stderr	file = sys.stderr
code: オプションで標準エラーに出力する	file = sys.stderr	file = sys.stderr
code: オプションで標準エラーを使う	file = sys.stderr	file = sys.stderr
code: オプションで、標準エラーを出力にする	file = sys.stderr	file = sys.stderr
code: オプションで、出力先をファイルにする	file = sys.open(filename, 'w')	file = sys.open(filename, 'w')
code: オプションでファイルに出力する	file = sys.open(filename, 'w')	file = sys.open(filename, 'w')
code: オプションで、ファイルを使う	file = sys.open(filename, 'w')	file = sys.open(filename, 'w')
code: オプションでファイルを出力にする	file = sys.open(filename, 'w')	file = sys.open(filename, 'w')
code: 標準出力を得る	sys.stdout	sys.stdout
code: 標準出力	sys.stdout	sys.stdout
code: 標準エラー	sys.stderr	sys.stderr
code: 標準エラーを使用する	sys.stderr	sys.stderr
code: エラーを出力する	sys.stderr	sys.stderr
code: 標準入力から1文字分読み込む	sys.stdin.read(1)	sys.stdin.read(1)
code: 1文字分標準入力から読む	sys.stdin.read(1)	sys.stdin.read(1)
code: 1行標準入力から読み込む	sys.stdin.readline()	sys.stdin.readline()
code: 1行分標準入力から読み込む	sys.stdin.readline()	sys.stdin.readline()
code: 標準入力から改行を除いて1行分読む	sys.stdin.readline().rstrip()	sys.stdin.readline().rstrip()
code: 標準入力から1行分改行を除いて読み込む	sys.stdin.readline().rstrip()	sys.stdin.readline().rstrip()
code: 改行なしに標準入力から1行読み込む	sys.stdin.readline().rstrip()	sys.stdin.readline().rstrip()
code: 標準入力から1行だけ読み込んで改行を取り除く	sys.stdin.readline().rstrip()	sys.stdin.readline().rstrip()
code: 1行分標準入力から読み込んで改行を取り除く	sys.stdin.readline().rstrip()	sys.stdin.readline().rstrip()
code: 標準出力のバッファを即時表示する	sys.stdout.flush()	sys.stdout.flush()
code: プログラムを強制的に終える	sys.exit(0)	sys.exit()
code: プログラムを即座に終える	sys.exit(0)	sys.exit()
code: プログラムの実行を適切に終了する	sys.exit(0)	sys.exit(0)
code: プログラムの実行を正しく停止する	sys.exit(0)	sys.exit(0)
code: 実行を異常終える	sys.exit(1)	sys.exit(1)
code: プログラムの実行をエラーとして止める	sys.exit(1)	sys.exit(1)
